//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _IDEDataMatrixColumnDescriptor {
    char *_field1;
};

struct _IDEDataMatrixDescriptor {
    char *_field1;
    unsigned char _field2;
    unsigned char _field3;
    struct _IDEDataMatrixColumnDescriptor _field4[0];
};

struct _IDEDataMatrixRowOp {
    int _field1;
    struct _NSRange _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>;

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct timespec {
    long long _field1;
    long long _field2;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<__NStatSource *, SourceInfo, std::__1::hash<__NStatSource *>, std::__1::equal_to<__NStatSource *>, std::__1::allocator<std::__1::pair<__NStatSource *const, SourceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::hash<__NStatSource *>, true>, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::equal_to<__NStatSource *>, true>, std::__1::allocator<std::__1::__hash_value_type<__NStatSource *, SourceInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<__NStatSource *, SourceInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::hash<__NStatSource *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<__NStatSource *, std::__1::__hash_value_type<__NStatSource *, SourceInfo>, std::__1::equal_to<__NStatSource *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ProcessInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<int, ProcessInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, ProcessInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, ProcessInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, ProcessInfo>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1[3];
} CDStruct_3c4b7cd8;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
} CDStruct_9b0a347d;

typedef struct {
    int _field1;
    void *_field2[2];
} CDStruct_9b248d9b;

typedef struct {
    int _field1;
    int _field2;
    void *_field3[3];
} CDStruct_a94d320b;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Frameworks/IDEFoundation.framework/Versions/A/IDEFoundation
// UUID: AC094DBA-08BD-37FA-A1FC-148424935EBD
//
//                           Arch: x86_64
//                Current version: 6604.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6604.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//                               = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//                       Run path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//                               = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//

@protocol DTXAllowedRPC <NSObject>
@end

@protocol DVTCancellable <NSObject>
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;
@end

@protocol DVTCustomDataStoring <NSObject>
@property(readonly) NSString *displayName;
- (BOOL)supportsCustomDataForOwnership:(DVTCustomDataOwnership *)arg1;
- (void)moveCustomDataWithSpecifier:(DVTCustomDataSpecifier *)arg1 toSpecifier:(DVTCustomDataSpecifier *)arg2 completionQueue:(NSOperationQueue *)arg3 completionBlock:(void (^)(BOOL, NSError *))arg4;
- (void)removeCustomDataWithSpecifier:(DVTCustomDataSpecifier *)arg1 completionQueue:(NSOperationQueue *)arg2 completionBlock:(void (^)(BOOL, NSError *))arg3;
- (void)writeCustomData:(NSData *)arg1 withSpecifier:(DVTCustomDataSpecifier *)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
- (NSData *)readCustomDataWithSpecifier:(DVTCustomDataSpecifier *)arg1 error:(id *)arg2;
- (NSArray *)customDataOwnershipsForGrouping:(NSString *)arg1;
- (NSArray *)customDataSpecifiersForGrouping:(NSString *)arg1 ownership:(DVTCustomDataOwnership *)arg2;
@end

@protocol DVTDeveloperProfileAccountProvider <NSObject>
@property(readonly) NSString *typeIdentifier;
- (BOOL)importAccountsFromKeychain:(struct OpaqueSecKeychainRef *)arg1 propertyList:(NSDictionary *)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
- (BOOL)exportAccountsToKeychain:(struct OpaqueSecKeychainRef *)arg1 propertyList:(id *)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
@end

@protocol DVTDirectoryBasedCustomDataStoreDelegate <NSObject>

@optional
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 removeItemAtFilePath:(DVTFilePath *)arg2 completionQueue:(NSOperationQueue *)arg3 completionBlock:(void (^)(BOOL, NSError *))arg4;
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 moveItemAtFilePath:(DVTFilePath *)arg2 toFilePath:(DVTFilePath *)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 writeData:(NSData *)arg2 toFilePath:(DVTFilePath *)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
- (void)customDataStore:(DVTDirectoryBasedCustomDataStore *)arg1 makeFilePathsWritable:(NSSet *)arg2 completionQueue:(NSOperationQueue *)arg3 completionBlock:(void (^)(BOOL, NSError *))arg4;
@end

@protocol DVTEncodableIndexDelegate <NSObject>
- (void)encodableIndex:(DVTEncodableIndex *)arg1 didRemoveItemForIdentifier:(NSString *)arg2;
- (void)encodableIndex:(DVTEncodableIndex *)arg1 didAddItemForIdentifier:(NSString *)arg2;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTPerformanceTestParser
- (BOOL)performanceTestOutput:(id *)arg1 forInputString:(NSString *)arg2;
@end

@protocol DVTProgressReporting <NSObject>
@property(readonly) long long progress;
@end

@protocol DVTReferenceResolverClient
- (void)resolverStrategiesDidChange:(DVTReferenceResolver *)arg1;
@end

@protocol DVTSimpleSerialization
- (void)dvt_writeToSerializer:(DVTSimpleSerializer *)arg1;
- (id)dvt_initFromDeserializer:(DVTSimpleDeserializer *)arg1;
@end

@protocol DVTSysmonBridgeDelegate
- (void)bridgeHasNewProcessInformation:(DVTSysmonBridge *)arg1;
@end

@protocol DVTTextFindable <NSObject>
- (DVTFindResult *)findStringMatchingDescriptor:(DVTFindDescriptor *)arg1 backwards:(BOOL)arg2 from:(DVTDocumentLocation *)arg3 to:(DVTDocumentLocation *)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
- (long long)compareFindableLocation:(DVTDocumentLocation *)arg1 withLocation:(DVTDocumentLocation *)arg2;
@end

@protocol DVTXMLUnarchiverDelegate <NSObject>

@optional
- (void)XMLUnarchiver:(DVTXMLUnarchiver *)arg1 didReadToPosition:(long long)arg2 ofTotal:(long long)arg3;
@end

@protocol DVTXMLUnarchiving <NSObject>
- (id)initFromXMLUnarchiver:(DVTXMLUnarchiver *)arg1 archiveVersion:(float)arg2;
@end

@protocol IDEAutoImportable <NSObject>
@property(readonly, nonatomic) IDEIndexCollection *definitions;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport;
@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject;
@property(readonly, nonatomic) NSString *completionString;
@property(readonly, nonatomic) NSString *name;
@end

@protocol IDEBlueprint <NSObject, IDEIntegrityLogDataSource>
@property(readonly, copy) NSString *blueprintIdentifier;
@property(readonly) NSString *name;
- (DVTFilePath *)entitlementsFilePathForBuildConfiguration:(NSString *)arg1;
- (void)addFileReference:(IDEFileReference *)arg1 toBuildablesContainingFileReference:(IDEFileReference *)arg2;
- (BOOL)containsFilePath:(DVTFilePath *)arg1;
- (BOOL)containsFileReference:(IDEFileReference *)arg1;
- (NSArray *)buildableProducts;
- (NSArray *)buildables;
- (id <IDEBuildable>)primaryBuildable;
- (id <IDEBuildable>)buildableForIdentifier:(NSString *)arg1;
- (NSString *)localizedDescription;
- (IDEContainer<IDECustomDataStoring> *)customDataStore;
- (IDEContainer<IDEBlueprintProvider> *)blueprintProvider;

@optional
@property(copy) NSString *developmentTeam;
@property(readonly, getter=isUnitTest) BOOL unitTest;
@property(retain) IDETestBlueprintHostSettings *testBlueprintHostSettings;
- (DVTFilePath *)bundleBaselineRecordFilePathWithError:(id *)arg1;
- (NSArray<DVTMacroExpansion> *)additionalOverridingCompilerArgumentsForSourceCodeBuildFileReference:(IDEFileReference *)arg1;
- (void)setOverridingAdditionalCompilerArguments:(NSArray<DVTMacroExpansion> *)arg1 forSourceCodeBuildFileReference:(IDEFileReference *)arg2;
- (NSArray<DVTMacroExpansion> *)additionalCompilerArgumentsForSourceCodeBuildFileReference:(IDEFileReference *)arg1;
- (void)setAdditionalCompilerArguments:(NSArray<DVTMacroExpansion> *)arg1 forSourceCodeBuildFileReference:(IDEFileReference *)arg2;
- (NSSet *)linkedBinaries;
- (NSSet *)allProjectHeaderFiles;
- (NSSet *)allPrivateHeaderFiles;
- (NSSet *)allPublicHeaderFiles;
- (NSArray *)allBuildFileReferences;
- (NSArray *)sourceCodeBuildFileReferences;
- (DVTSourceCodeLanguage *)predominantSourceCodeLanguage;
- (BOOL)configureToBuildMixedTargetWithDestinationGroup:(IDEGroup *)arg1 configureBridgingHeader:(BOOL)arg2 returningErrorString:(id *)arg3;
- (BOOL)isConfiguredToBuildMixedTarget;
- (BOOL)wouldBecomeMixedTargetAfterAddingTypes:(NSArray *)arg1;
- (BOOL)wouldBecomeMixedTargetAfterAddingFiles:(NSArray *)arg1;
- (BOOL)canUseBridgingHeader;
- (BOOL)isMixedTarget;
- (BOOL)configureToBuildWithOptimizationProfileReturningErrorString:(id *)arg1;
- (BOOL)isConfiguredToBuildWithOptimizationProfile;
- (void)convertToUseModernUnitTests;
- (void)convertToUseModernObjCSyntax;
- (void)convertToUseARC;
- (BOOL)canConvertToUseARC;
- (void)convertToBuild64bitOnly;
- (void)convertToUseClang;
- (NSString *)deviceSDKFor:(NSString *)arg1 SDKs:(NSSet *)arg2;
- (NSString *)simulatorSDKFor:(NSString *)arg1 SDKs:(NSSet *)arg2;
- (DVTSDK *)specifiedBaseSDKForBuildConfigurationName:(NSString *)arg1;
- (DVTSDK *)baseSDKForBuildConfigurationName:(NSString *)arg1;
- (NSSet *)supportedPlatformsForConfiguration:(NSString *)arg1 workspaceArenaSnapshot:(IDEWorkspaceArenaSnapshot *)arg2;
- (NSSet *)supportedPlatformsForBuildParameters:(IDEBuildParameters *)arg1;
- (id)compilerSpecificationIdentifier;
- (NSArray *)availableArchitecturesForConfiguration:(NSString *)arg1 workspaceArenaSnapshot:(IDEWorkspaceArenaSnapshot *)arg2;
- (NSArray *)availableArchitecturesForBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)defaultConfigurationName;
- (NSArray *)availableConfigurationNames;
@end

@protocol IDEBlueprintProvider <NSObject>
- (id <IDETestableProvider>)testableProvider;
- (id <IDEBlueprint>)blueprintForName:(NSString *)arg1;
- (id <IDEBlueprint>)blueprintForIdentifier:(NSString *)arg1;
- (NSString *)classPrefix;
- (NSString *)organizationName;
- (NSString *)name;
- (NSArray *)blueprints;
@end

@protocol IDEBuildSettingsProvider <NSObject>
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString<DVTMacroExpansion> *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString<DVTMacroExpansion> *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;
@end

@protocol IDEBuildStatisticsData
@property(readonly) long long numberOfVMPageouts;
@property(readonly) long long numberOfVMPageins;
@property(readonly) double elapsedSystemTime;
@property(readonly) double elapsedUserTime;
@property(readonly) double elapsedWallClockTime;
@property(readonly) double endWallClockTime;
@property(readonly) double startWallClockTime;
@property(readonly) unsigned long long ordinal;
@property(readonly, copy) NSString *title;
- (void)emitContentsForAspect:(DVTLogAspect *)arg1 logLevel:(int)arg2 indentLevel:(unsigned long long)arg3 withBlock:(void (^)(id <IDEBuildStatisticsData>, DVTLogAspect *, int, unsigned long long, char *, char *))arg4;
- (NSString *)defaultEmissionStringWithIndentLevel:(unsigned long long)arg1;
@end

@protocol IDEBuildable <IDEBuildSettingsProvider, DVTInvalidation, NSObject>
@property(readonly, copy) NSString *legacyIdentifier;
@property(readonly) NSSet *pathsOfFilesInCopyFilesBuildPhases;
@property(readonly) NSSet *pathsOfFilesInLinkedBinariesPhase;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) BOOL hasRecursiveDependencyCycle;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly, copy) IDEEntityIdentifier *entityIdentifier;
@property(readonly, copy) NSString *buildableIdentifier;
- (IDEBuilder *)createBuilderForBuildCommand:(int)arg1 withBuildTaskQueueSet:(IDEBuildOperationQueueSet *)arg2 parameters:(IDEBuildParameters *)arg3 buildOnlyTheseFiles:(NSArray *)arg4 restorePersistedBuildResults:(BOOL)arg5 withManager:(id <IDEBuildableOperationManager>)arg6;
- (NSArray *)implicitDependenciesForBuildParameters:(IDEBuildParameters *)arg1 executionEnvironment:(IDEExecutionEnvironment *)arg2 returningMessages:(id *)arg3;
- (NSArray *)directDependencies;
- (NSArray *)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(NSMutableSet *)arg2;
- (NSArray *)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (DVTSearchPath *)toolSearchPathWithBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;

@optional
- (Class)buildOperationManagerClass;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) NSDictionary *copiedFilePathsMap;
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *iconPath;
@property(readonly, copy) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (DVTFilePath *)filePathForBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)productTypeIdentifier;
@end

@protocol IDEClientTracking <NSObject>
- (void)cancelTrackedClients;
- (NSArray *)clientsNotSupportingCancellation;
- (NSArray *)clientsRequiringCancellationPrompt;
- (id <IDEClientTrackingToken>)registerUncancellableClientWithName:(NSString *)arg1;
- (id <IDEClientTrackingToken>)registerClientWithName:(NSString *)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(void (^)(void))arg3;
@end

@protocol IDEClientTrackingToken <NSObject>
@property(readonly) NSString *clientName;
- (void)unregisterClient;
@end

@protocol IDEConsoleAdaptorDelegateProtocol

@optional
- (NSString *)parseConsoleOutputFromOriginalOutput:(NSString *)arg1;
- (NSString *)parseConsoleInputFromOriginalInput:(NSString *)arg1;
@end

@protocol IDEContainerCore <NSObject, DVTInvalidation>
+ (NSArray *)containerDataFilePathsForFilePath:(DVTFilePath *)arg1;
+ (BOOL)supportsFilePersistence;
+ (DVTFileDataType *)containerFileType;
- (int)currentActivity;
- (DVTExtension *)containerExtension;
- (DVTFilePath *)filePath;
- (id <IDEContainerGroupCore>)rootGroup;
- (void)releaseContainerCore;
- (void)retainContainerCore;
- (id)initWithFilePath:(DVTFilePath *)arg1 extension:(DVTExtension *)arg2 error:(id *)arg3;
@end

@protocol IDEContainerDelegate <NSObject>

@optional
- (void)_container:(IDEContainer *)arg1 didChangeFromFilePath:(DVTFilePath *)arg2 toFilePath:(DVTFilePath *)arg3;
@end

@protocol IDEContainerErrorPresenter
- (BOOL)presentError:(NSError *)arg1;
- (int)handleSaveError:(NSError *)arg1 forContainer:(IDEContainer *)arg2 withAction:(int)arg3;
@end

@protocol IDEContainerItemCore <NSObject>
@property(readonly) id <IDEContainerCore> parentContainer;
@property(copy) NSString *path;
@property(retain) id <IDEGroupCore> parentGroup;
@end

@protocol IDEContainerReloadingDelegate
- (int)responseToExternalChangesToBackingFileForContainer:(IDEContainer *)arg1 fileWasRemoved:(BOOL)arg2;
@end

@protocol IDEContainerUnlockingDelegate
- (void)container:(IDEContainer *)arg1 attemptToUnlockItems:(NSSet *)arg2 workspace:(IDEWorkspace *)arg3 completionQueue:(NSOperationQueue *)arg4 completionBlock:(void (^)(BOOL, NSError *))arg5;
@end

@protocol IDECustomDataStoring <DVTCustomDataStoring>
- (void)addSpecifier:(DVTCustomDataSpecifier *)arg1 inWorkspace:(IDEWorkspace *)arg2 toSCMWithCompletionBlock:(void (^)(BOOL, NSError *))arg3;
- (void)scmStatusForSpecifier:(DVTCustomDataSpecifier *)arg1 completionBlock:(void (^)(int, NSError *))arg2;
@end

@protocol IDEDebugNavigableModel <NSObject>
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@end

@protocol IDEDebugProcess <IDEDebugNavigableModel>
@property(copy, nonatomic) NSString *name;
- (NSString *)contentDelegateUIExtensionIdentifier;

@optional
@property(readonly, nonatomic) NSArray *loadedCodeModules;
@end

@protocol IDEDebugSession <NSObject>
@property BOOL isDetached;
@property(getter=isProfilingSupported) BOOL profilingSupported;
@property(readonly, copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocation;
@property BOOL hasCrashed;
@property long long exitCode;
@property BOOL hasExitCode;
@property(readonly) id <IDEDebugProcess> process;
@property(readonly) int coalescedState;
@property int state;
- (void)requestLoadDylibAtPath:(NSString *)arg1 completionBlock:(void (^)(NSError *))arg2;
- (struct _NSRange)rangeOfExpressionForFullTextAtPrompt:(NSString *)arg1;
- (BOOL)canContinueToLocation:(DVTTextDocumentLocation *)arg1 withinBlockAtRange:(struct _NSRange)arg2;
- (BOOL)consoleShouldTrackInputHistory;
- (BOOL)shouldAcceptFromDebugSession:(id <IDEDebugSession>)arg1 error:(id *)arg2;
- (BOOL)shouldRelinquishToDebugSession:(id <IDEDebugSession>)arg1 error:(id *)arg2;
- (void)evaluateExpression:(NSString *)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(NSObject<OS_dispatch_queue> *)arg4 completionHandler:(void (^)(NSString *, NSString *))arg5;
- (void)evaluateExpression:(NSString *)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(NSObject<OS_dispatch_queue> *)arg4 resultHandler:(void (^)(NSString *))arg5;
- (void)executeDebuggerCommand:(NSString *)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3;
- (void)requestFetchEvent;
- (void)requestDetach;
- (void)requestStop;
- (void)requestContinueToLocation:(DVTTextDocumentLocation *)arg1;
- (void)requestContinue;
- (void)requestPause;
- (void)requestStepOverSuspendOtherThreads;
- (void)requestStepInSuspendOtherThreads;
- (void)requestStepOverInstruction;
- (void)requestStepIntoInstruction;
- (void)requestStepOut;
- (void)requestStepOverLine;
- (void)requestStepIn;
@end

@protocol IDEDebuggingAddition <NSObject, DVTInvalidation>
@property(readonly) NSString *identifier;
@property(readonly, nonatomic) IDELaunchSession *launchSession;
- (id)initInLaunchSession:(IDELaunchSession *)arg1 withAppDisplayName:(NSString *)arg2 runDestination:(IDERunDestination *)arg3 fromExtension:(DVTExtension *)arg4;

@optional
+ (BOOL)shouldInstantiateInLaunchSession:(IDELaunchSession *)arg1;
- (void)processFinalLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
- (IDELaunchParametersSnapshot *)adjustedLaunchParametersForLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
@end

@protocol IDEDeferredInitialization
+ (BOOL)ide_deferredInitializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEDiagnosticItemDelegate <NSObject>

@optional
- (void)diagnosticItemWasFixed:(IDEDiagnosticActivityLogMessage *)arg1;
@end

@protocol IDEDistributionProcessingPipelineContext <NSObject>
@property(readonly) DVTLogAspect *logAspect;
- (void)setObject:(id)arg1 forKey:(id <NSCopying>)arg2 inDictionaryForKey:(NSString *)arg3;
- (void)removeObjectForKey:(NSString *)arg1;
- (void)setObject:(id)arg1 forKey:(NSString *)arg2;
- (id)objectForKey:(NSString *)arg1;
@end

@protocol IDEExecutingOperationTrackable <NSObject>
- (void)registerTracker:(IDEExecutionOperationTracker *)arg1;
@end

@protocol IDEFileReferenceCore <IDEContainerItemCore>
@property(copy) DVTFileDataType *assignedDataType;
@end

@protocol IDEFolderCore <IDEContainerCore>
@end

@protocol IDEFrameworkCore <IDEContainerCore>
@end

@protocol IDEGroupCore <IDEContainerItemCore>
@property(copy) NSArray *subitems;
@property(copy) NSString *name;
@property(retain) id <IDEContainerCore> parentContainer;
@end

@protocol IDEIndexDatabaseDelegate

@optional
- (void)database:(IDEIndexDatabase *)arg1 reportAutoQueryProgress:(double)arg2;
- (void)clearPCHFailuresForDatabase:(IDEIndexDatabase *)arg1;
- (void)database:(IDEIndexDatabase *)arg1 didForgetFiles:(NSArray *)arg2;
- (NSDictionary *)databaseProvidersAndVersions:(IDEIndexDatabase *)arg1;
- (void)databaseDidReportError:(IDEIndexDatabase *)arg1;
- (void)database:(IDEIndexDatabase *)arg1 didEndImportSession:(IDEIndexImportSession *)arg2;
- (void)databaseDidSave:(IDEIndexDatabase *)arg1;
- (void)databaseDidIndexHotFile:(IDEIndexDatabase *)arg1;
- (void)databaseDidLoad:(IDEIndexDatabase *)arg1;
- (void)databaseDidOpen:(IDEIndexDatabase *)arg1;
@end

@protocol IDEIndexNewFileBase
- (IDEIndexNewSymbol *)newSymbolWithName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 role:(int)arg3 language:(DVTSourceCodeLanguage *)arg4 resolution:(NSString *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(NSString *)arg8 receiver:(NSString *)arg9 completionString:(void *)arg10 container:(IDEIndexNewSymbol *)arg11;
- (void)addSymbolWithName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 role:(int)arg3 language:(DVTSourceCodeLanguage *)arg4 resolution:(NSString *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(NSString *)arg8 receiver:(NSString *)arg9 completionString:(void *)arg10 container:(IDEIndexNewSymbol *)arg11;
@end

@protocol IDEIndexQueryProvider <NSObject>
+ (BOOL)supportsSymbolColoring;
+ (DVTDocumentLocation *)locationForURL:(NSURL *)arg1 locator:(NSString *)arg2;
@property(readonly, nonatomic) NSDictionary *settings;
@property(readonly, nonatomic) IDEIndexDatabase *database;
- (IDEIndexCollection *)definitionsForSymbolWithResolutionOffset:(long long)arg1;
- (IDEIndexCollection *)allAutoImportCompletionItemsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 symbolLanguage:(DVTSourceCodeLanguage *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allAutoImportCompletionItemsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 forIndex:(IDEIndex *)arg2;
- (NSString *)completionStringForSymbol:(IDEIndexSymbol *)arg1;
- (BOOL)isProjectSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)calleesForSymbolOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (DVTDocumentLocation *)locationForSymbolOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (IDEIndexSymbol *)containingSymbolForOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (IDEIndexSymbol *)correspondingSymbolForOccurrence:(IDEIndexSymbolOccurrence *)arg1;
- (IDEIndexClassSymbol *)relatedClassForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)propertiesForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)instanceVariablesForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)instanceMethodsForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)classMethodsForCategory:(IDEIndexCategorySymbol *)arg1;
- (IDEIndexCollection *)allImplementingClassesForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)implementingClassesForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)subProtocolsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)allSuperProtocolsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)superProtocolsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)propertiesForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)instanceMethodsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)classMethodsForProtocol:(IDEIndexProtocolSymbol *)arg1;
- (IDEIndexCollection *)allInterfacesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)interfacesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)allProtocolsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)protocolsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)allOccurrencesOfMembers:(NSObject<NSFastEnumeration> *)arg1 forClass:(IDEIndexClassSymbol *)arg2;
- (IDEIndexCollection *)allSubClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)subClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)allSuperClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)superClassesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)categoriesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletCollectionPropertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletCollectionVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletCollectionsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletPropertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibOutletsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)ibActionMethodsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)propertiesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)instanceVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)classVariablesForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)instanceMethodsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)classMethodsForClass:(IDEIndexClassSymbol *)arg1;
- (IDEIndexCollection *)childrenForContainer:(IDEIndexContainerSymbol *)arg1;
- (IDEIndexCallableSymbol *)getterForProperty:(IDEIndexPropertySymbol *)arg1;
- (IDEIndexCallableSymbol *)setterForProperty:(IDEIndexPropertySymbol *)arg1;
- (IDEIndexCollection *)callsForCallable:(IDEIndexCallableSymbol *)arg1 cancelWhen:(BOOL (^)(void))arg2;
- (IDEIndexSymbol *)typeOfArgument:(unsigned long long)arg1 forCallable:(IDEIndexCallableSymbol *)arg2;
- (unsigned long long)numArgumentsForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexSymbol *)returnTypeForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexPropertySymbol *)propertyForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexCollection *)overridingSymbolsForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexCollection *)overriddenSymbolsForCallable:(IDEIndexCallableSymbol *)arg1;
- (IDEIndexCollection *)referencesForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)referencingFilesForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexContainerSymbol *)containerSymbolForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)containerSymbolsForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)definitionsForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)declarationsForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)occurrencesForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexSymbolOccurrence *)modelOccurrenceForSymbol:(IDEIndexSymbol *)arg1;
- (IDEIndexCollection *)filesWithSymbolOccurrencesMatchingName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)classesWithReferencesToSymbols:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allClassesWithMembers:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)classesWithMembers:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allMethodsMatchingMethod:(IDEIndexCallableSymbol *)arg1 forReceiver:(IDEIndexSymbol *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)membersMatchingName:(NSString *)arg1 kinds:(NSObject<NSFastEnumeration> *)arg2 forInterfaces:(NSObject<NSFastEnumeration> *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)membersMatchingKinds:(NSObject<NSFastEnumeration> *)arg1 forInterfaces:(NSObject<NSFastEnumeration> *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)symbolsForResolutions:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 workspaceOnly:(BOOL)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allSymbolsMatchingKind:(DVTSourceCodeSymbolKind *)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(BOOL (^)(void))arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)testMethodsForClasses:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allSubClassesForClasses:(NSObject<NSFastEnumeration> *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allSymbolsMatchingNames:(NSObject<NSFastEnumeration> *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allSymbolsMatchingName:(NSString *)arg1 kind:(DVTSourceCodeSymbolKind *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)allProtocolsMatchingName:(NSString *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)allClassesMatchingName:(NSString *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)symbolsContaining:(NSString *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(BOOL (^)(void))arg6 forIndex:(IDEIndex *)arg7;
- (IDEIndexCollection *)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(BOOL (^)(void))arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(BOOL (^)(void))arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)filesContaining:(NSString *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(BOOL (^)(void))arg6 forIndex:(IDEIndex *)arg7;
- (IDEIndexCollection *)filesIncludedByFile:(DVTFilePath *)arg1 forIndex:(IDEIndex *)arg2;
- (IDEIndexCollection *)filesIncludingFile:(DVTFilePath *)arg1 forIndex:(IDEIndex *)arg2;
- (NSString *)parsedCodeCommentAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (NSArray *)impliedHeadersForModuleImportLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (DVTFilePath *)importedFileAtDocumentLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (NSArray *)importedFilesAtDocument:(NSURL *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexSymbol *)collectionElementTypeSymbolForSymbol:(IDEIndexSymbol *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexSymbol *)typeSymbolForSymbol:(IDEIndexSymbol *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexSymbol *)messageReceiverInContext:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)referencesToSymbolMatchingName:(NSString *)arg1 inContext:(DVTDocumentLocation *)arg2 withCurrentFileContentDictionary:(NSDictionary *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)referencesToSymbol:(IDEIndexSymbol *)arg1 inContext:(DVTDocumentLocation *)arg2 withCurrentFileContentDictionary:(NSDictionary *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)symbolsUsedInContext:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)symbolsOccurrencesInContext:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)codeDiagnosticsAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)codeCompletionsAtLocation:(DVTDocumentLocation *)arg1 withCurrentFileContentDictionary:(NSDictionary *)arg2 completionContext:(id *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)allParentsOfSymbols:(NSObject<NSFastEnumeration> *)arg1 cancelWhen:(BOOL (^)(void))arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)symbolsMatchingName:(NSString *)arg1 inContext:(DVTDocumentLocation *)arg2 withCurrentFileContentDictionary:(NSDictionary *)arg3 forIndex:(IDEIndex *)arg4;
- (IDEIndexCollection *)symbolsMatchingName:(NSString *)arg1 inContext:(DVTDocumentLocation *)arg2 forIndex:(IDEIndex *)arg3;
- (IDEIndexCollection *)topLevelSymbolsInFile:(NSString *)arg1 forIndex:(IDEIndex *)arg2;
- (void)purgeCaches;
- (id)initWithSettings:(NSDictionary *)arg1 database:(IDEIndexDatabase *)arg2;
@end

@protocol IDEIndexSymbolFormatter <NSObject>
- (NSString *)qualifiedDisplayNameForSymbol:(IDEIndexSymbol *)arg1;
- (NSString *)displayNameForSymbol:(IDEIndexSymbol *)arg1;
@end

@protocol IDEIndexable <NSObject, NSCopying>
- (IDERefactoringBuildSettings *)buildSettingsForMainFile:(DVTFilePath *)arg1 workspace:(IDEWorkspace *)arg2;
- (NSString *)localizedIndexableDescription;
- (void)languageOfMainFile:(DVTFilePath *)arg1 workspace:(IDEWorkspace *)arg2 completionBlock:(void (^)(DVTSourceCodeLanguage *))arg3;
- (BOOL)requiresMainThread;
- (BOOL)writeProductHeaders:(NSDictionary *)arg1 toFile:(DVTFilePath *)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(IDEWorkspace *)arg1 withCompletionBlock:(void (^)(NSDictionary *))arg2;
- (IDEContainer *)containerForIndexables:(NSMutableSet *)arg1 rootPaths:(NSMutableSet *)arg2;
- (NSArray *)indexableFiles;
- (NSString *)indexName;
- (NSString *)identifier;

@optional
@property(nonatomic) __weak id <IDEIndexable> proxy;
- (BOOL)isUnitTest;
- (NSString *)productType;
- (NSString *)productNameWithBuildSetting:(NSString *)arg1 workspace:(IDEWorkspace *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearCachedBuildSettings;
- (NSDictionary *)settingsForFile:(DVTFilePath *)arg1;
- (void)settingsForFilesInWorkspace:(IDEWorkspace *)arg1 shouldWriteAuxiliaryFiles:(BOOL)arg2 withCompletionBlock:(void (^)(NSDictionary *))arg3;
@end

@protocol IDEIndexableProvider <NSObject>
- (NSArray *)indexables;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEIntegrityLogDataSource
@property(readonly) IDEActivityLogSection *integrityLog;
- (void)analyzeModelIntegrity;
@end

@protocol IDEInternalBreakpointDelegate <NSObject>

@optional
- (void)internal_breakpointLocationsAdded:(NSArray *)arg1 removed:(NSArray *)arg2;
- (void)internal_breakpointEnablementChanged:(IDEBreakpoint *)arg1;
@end

@protocol IDELocalizationStreamConsumer <NSObject>
- (void)onCompleted;
- (void)onError:(NSError *)arg1;
- (void)onNext:(id)arg1;
@end

@protocol IDELocalizationStreamPublisher <NSObject>
- (id <DVTCancellable>)subscribe:(id <IDELocalizationStreamConsumer>)arg1;
@end

@protocol IDELocalizationWorkProgress
@property(readonly) NSString *workTitle;
@property(readonly) NSString *phase;
@property(readonly) long long progress;
@property(readonly) BOOL complete;
@end

@protocol IDELocalizationWorkReadStrings
@property(retain) NSDictionary *IDELocalizationWork_comments;
@property(retain) NSDictionary *IDELocalizationWork_strings;
@property(retain) DVTFilePath *IDELocalizationWork_path;
@end

@protocol IDELocalizationWorkSystemTask
@property(retain) NSNumber *IDELocalizationWork_exitStatus;
@property(retain) NSArray *IDELocalizationWork_arguments;
@property(retain) DVTFilePath *IDELocalizationWork_launchPath;
@end

@protocol IDELocalizationWorkWriteData
@property(retain) NSURL *IDELocalizationWork_url;
@property(retain) NSData *IDELocalizationWork_data;
@end

@protocol IDELocalizationWorkWriteStrings
@property(retain) DVTFilePath *IDELocalizationWork_path;
@property BOOL IDELocalizationWork_createdNewSubitem;
@property(retain) DVTLocale *IDELocalizationWork_language;
@property(retain) IDEGroup<IDELocalizedGroup> *IDELocalizationWork_group;
@property(retain) IDEContainer<IDELocalizedContainer> *IDELocalizationWork_container;
@property(retain) NSDictionary *IDELocalizationWork_comments;
@property(retain) NSDictionary *IDELocalizationWork_strings;
@end

@protocol IDELocalizedGroup <NSObject>
- (void)addNewReferenceForLocale:(DVTLocale *)arg1 filePath:(DVTFilePath *)arg2 completionBlock:(void (^)(BOOL, NSError *))arg3;
- (DVTFilePath *)proposedFilePathForLocalization:(DVTLocale *)arg1 fileType:(DVTFileDataType *)arg2;
- (IDEFileReference *)subitemForLocale:(DVTLocale *)arg1;
- (IDEContainer<IDELocalizedContainer> *)localizedContainer;
- (NSArray *)subitems;
@end

@protocol IDEOCUnitTestOutputParserDelegate <NSObject>
- (void)testDidOutput:(NSString *)arg1;
- (void)testCaseDidProducePerformanceOutput:(DVTPerformanceTestOutput *)arg1 rawOutput:(NSString *)arg2;
- (void)testCaseDidFailForTestClass:(NSString *)arg1 method:(NSString *)arg2 withMessage:(NSString *)arg3 file:(NSString *)arg4 line:(long long)arg5 rawOutput:(NSString *)arg6;
- (void)testCaseDidFinishForTestClass:(NSString *)arg1 method:(NSString *)arg2 withStatus:(NSString *)arg3 duration:(double)arg4 rawOutput:(NSString *)arg5;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(NSString *)arg1 method:(NSString *)arg2 performanceMetric:(DVTTestPerformanceMetricOutput *)arg3 rawOutput:(NSString *)arg4;
- (void)testCaseDidStartForTestClass:(NSString *)arg1 method:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(NSString *)arg6;
- (void)testSuite:(NSString *)arg1 willFinishAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testSuite:(NSString *)arg1 didStartAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
@end

@protocol IDEPrimitiveSchemeCommand <NSObject>
@end

@protocol IDEProductTypeProvider <NSObject>
+ (IDEProductType *)productTypeForIdentifier:(NSString *)arg1 platform:(DVTPlatform *)arg2;
@end

@protocol IDEReadOnlyItem <NSObject>
@property(readonly) NSURL *readOnlyItemURL;
@property(readonly) int readOnlyStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@end

@protocol IDERunDestinationFallbackSelectorDeviceInfo <NSObject>
@property(readonly, nonatomic) BOOL ide_fallbackSelectorDeviceIsResizable;
@property(readonly, nonatomic) NSString *ide_fallbackSelectorDeviceGroupingFamily;
@end

@protocol IDERunOperationWorkerDelegate <NSObject>
- (void)workerDidComplete:(IDERunOperationWorker *)arg1 withError:(NSError *)arg2;
@end

@protocol IDERunOperationWorkerTracker <NSObject>
- (void)runningDidFinish:(IDERunOperationWorker *)arg1 withError:(NSError *)arg2;
@end

@protocol IDESchemeActionTestSummaryContainer <NSObject>
@property(readonly) NSMutableArray *mutableContainedTestSummaries;
@property(readonly) NSArray *containedTestSummaries;
@end

@protocol IDESchemeActionsInvocationRecordUpdateDelegate
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteTestSummaryForSchemeActionResult:(IDESchemeActionResult *)arg2 withOriginalRemoteTestSummaryIdentifier:(id)arg3 newRemoteTestSummaryIdentifier:(id)arg4;
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteTestSummaryWithOriginalRemoteTestSummaryIdentifier:(id)arg2 newRemoteTestSummaryIdentifier:(id)arg3;
- (BOOL)shouldActionsInvocationRecord:(IDESchemeActionsInvocationRecord *)arg1 refetchRemoteLogForSchemeActionResult:(IDESchemeActionResult *)arg2 withOriginalRemoteLogIdentifier:(id)arg3 newRemoteLogIdentifier:(id)arg4;
- (void)fetchTestSummariesAndUpdateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
- (void)fetchLogsAndUpdateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
- (void)updateRecord:(IDESchemeActionsInvocationRecord *)arg1 withCompletionBlock:(void (^)(BOOL, BOOL, NSError *))arg2;
@end

@protocol IDESnapshotConfirmationDelegate <DVTInvalidation>
- (void)cleanup;
- (void)requestSnapshotConfirmationForOperationName:(NSString *)arg1 inWorkspace:(IDEWorkspace *)arg2 completionBlock:(void (^)(BOOL))arg3;
@end

@protocol IDESourceControlPatchNode <NSObject>
- (id)representedObject;
- (NSArray *)children;
- (BOOL)resolved;
- (NSArray *)modifiedItems;
- (DVTFileWrapper *)fileWrapper;
- (NSDictionary *)indexInfo;
@end

@protocol IDESourceTreeProvider <NSObject>
+ (NSString *)stringByExpandingSourceTreeReferencesInString:(NSString *)arg1;
@end

@protocol IDEStructureEditing
- (BOOL)allowRemovingContainerGroup;
- (BOOL)structureEditSetName:(NSString *)arg1 inContext:(id <IDEStructureEditingContext>)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(NSIndexSet *)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(NSIndexSet *)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(NSIndexSet *)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(NSIndexSet *)arg1 byNameOrByType:(BOOL)arg2;
- (NSArray *)structureEditInsertFileURLs:(NSArray *)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(NSArray *)arg1 atIndex:(unsigned long long)arg2;
- (NSArray *)structureEditInsertSubitems:(NSArray *)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(NSArray *)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
@end

@protocol IDETestContainer <NSObject>
@property(readonly, copy) NSArray *arrangedSubtests;
@property(readonly) BOOL canHaveSubtests;
@property(readonly, copy) NSSet *subtests;
@end

@protocol IDETestObserver <NSObject, IDEWorkspaceReferencedTestablesObserver>
- (void)testsChanged:(NSSet *)arg1;
@end

@protocol IDETestable <IDETestContainer, DVTInvalidation, NSObject>
@property(readonly) BOOL isSearchingForTests;
@property(readonly) BOOL usesXCTest;
@property(readonly) NSSet *testFiles;
@property(readonly) NSString *name;
@property(readonly) id <IDETestableProvider> testableProvider;
- (void)removeSubtest:(IDETest *)arg1;
- (BOOL)canHaveSubtestsForTestWithIdentifier:(NSString *)arg1;
- (IDETest *)supertestForTestWithIdentifier:(NSString *)arg1;
- (NSString *)nameForTestWithIdentifier:(NSString *)arg1;
- (NSSet *)testsInFile:(NSURL *)arg1;
- (IDETest *)testForIdentifier:(NSString *)arg1 createIfNeeded:(BOOL)arg2;
- (IDETest *)testForIdentifier:(NSString *)arg1;
- (id <IDEBuildable>)parentBuildableInWorkspace:(IDEWorkspace *)arg1;
- (id <IDEBuildableProduct>)testHostBuildableInWorkspace:(IDEWorkspace *)arg1;
- (id <IDEBuildable>)primaryBuildable;
- (void)waitUntilTestSearchIsFinished;
- (void)searchForTestsInWorkspace:(IDEWorkspace *)arg1;
- (IDETestRunner *)newTestRunner;
@end

@protocol IDETestableProvider <NSObject>
@property(readonly) NSString *name;
@property(readonly, copy) NSArray *testables;
- (id <IDETestable>)testableForBlueprint:(id <IDEBlueprint>)arg1;
@end

@protocol IDETestingSpecifier <NSObject>
@property(readonly) NSMutableArray *mutableSkippedTests;
@property(copy) NSArray *skippedTests;
@property BOOL skipped;
@property(retain) IDELocationScenarioReference *locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference;
- (id <IDETestable>)testable;
@end

@protocol IDETestsInTestableObserver <IDETestObserver>
- (void)testablesChanged:(NSSet *)arg1;
@end

@protocol IDEUnitTestsObserver <NSObject>
- (NSString *)identifierForTestClass:(NSString *)arg1 method:(NSString *)arg2;
- (void)testOperationGroupDidFinish;
- (void)testOperation:(IDERunOperation *)arg1 willFinishWithSuccess:(BOOL)arg2 withError:(NSError *)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(NSString *)arg6;
- (void)testSuite:(NSString *)arg1 willFinishAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testDidOutput:(NSString *)arg1;
- (void)testCaseDidProducePerformanceOutput:(DVTPerformanceTestOutput *)arg1 rawOutput:(NSString *)arg2;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(NSString *)arg1 method:(NSString *)arg2 performanceMetric:(DVTTestPerformanceMetricOutput *)arg3 rawOutput:(NSString *)arg4;
- (void)testCaseDidFailForTestClass:(NSString *)arg1 method:(NSString *)arg2 withMessage:(NSString *)arg3 file:(NSString *)arg4 line:(long long)arg5 rawOutput:(NSString *)arg6;
- (void)testCaseDidFinishForTestClass:(NSString *)arg1 method:(NSString *)arg2 withStatus:(NSString *)arg3 duration:(double)arg4 rawOutput:(NSString *)arg5;
- (void)testCaseDidStartForTestClass:(NSString *)arg1 method:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testSuite:(NSString *)arg1 didStartAt:(NSString *)arg2 rawOutput:(NSString *)arg3;
- (void)testOperationDidStartExecution:(IDERunOperation *)arg1;
@end

@protocol IDEUpgradeableItem
- (void)enumerateUpgradeTasksWithBlock:(void (^)(IDECustomUpgradeTask *))arg1;
@end

@protocol IDEWorkspaceDelegate <IDEContainerDelegate>
- (void)_workspace:(IDEWorkspace *)arg1 failedToResolveContainerForProjectFile:(IDEFileReference *)arg2;

@optional
- (void)_workspace:(IDEWorkspace *)arg1 didChangeSimpleFilesFocusedTo:(BOOL)arg2;
- (void)_workspace:(IDEWorkspace *)arg1 didChangeFinishedLoadingTo:(BOOL)arg2;
@end

@protocol IDEWorkspaceReferencedTestablesObserver <NSObject>
- (void)workspaceReferencedTestablesChanged;
@end

@protocol IDEWorkspaceWrappingContainer
- (void)becomeWorkspaceWrappingContainer;
@end

@protocol IDEXMLPackageContainerCore <IDEContainerCore>
- (BOOL)writeToFile:(DVTFilePath *)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(DVTFilePath *)arg1 error:(id *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol UIAInstrumentAuthorizedAPI <DTXAllowedRPC>
- (void)notifyMonitoredPidIsDead:(NSNumber *)arg1;
- (NSDictionary *)performTaskOnHost:(NSString *)arg1 withArguments:(NSArray *)arg2 timeout:(NSNumber *)arg3;
- (void)scriptDidThrowException:(NSDictionary *)arg1;
- (void)agentIsGone:(NSException *)arg1;
- (void)stopPlayingWithException:(NSException *)arg1;
- (void)updateBundleStatus:(NSNumber *)arg1;
- (void)updateScriptStatus:(NSNumber *)arg1;
- (void)agentIsReady;
@end

@protocol XCTestDriverInterface
- (id)_IDE_startExecutingTestPlanWithProtocolVersion:(NSNumber *)arg1;
- (id)_IDE_startExecutingTestPlanWhenReady;
@end

@protocol XCTestManager_DaemonConnectionInterface
- (id)_IDE_beginSessionWithIdentifier:(NSUUID *)arg1 forClient:(NSString *)arg2 atPath:(NSString *)arg3;
- (id)_IDE_requestSessionWithIdentifier:(NSUUID *)arg1;
@end

@protocol XCTestManager_IDEInterface
- (id)_XCT_logMessage:(NSString *)arg1;
- (id)_XCT_testMethod:(NSString *)arg1 ofClass:(NSString *)arg2 didMeasureMetric:(NSDictionary *)arg3 file:(NSString *)arg4 line:(NSNumber *)arg5;
- (id)_XCT_testMethod:(NSString *)arg1 ofClass:(NSString *)arg2 didMeasureValues:(NSArray *)arg3 forPerformanceMetricID:(NSString *)arg4 name:(NSString *)arg5 withUnits:(NSString *)arg6 baselineName:(NSString *)arg7 baselineAverage:(NSNumber *)arg8 maxPercentRegression:(NSNumber *)arg9 maxPercentRelativeStandardDeviation:(NSNumber *)arg10 file:(NSString *)arg11 line:(NSNumber *)arg12;
- (id)_XCT_testCase:(NSString *)arg1 method:(NSString *)arg2 didStallOnMainThreadInFile:(NSString *)arg3 line:(NSNumber *)arg4;
- (id)_XCT_testCaseDidFinishForTestClass:(NSString *)arg1 method:(NSString *)arg2 withStatus:(NSString *)arg3 duration:(NSNumber *)arg4;
- (id)_XCT_testCaseDidFailForTestClass:(NSString *)arg1 method:(NSString *)arg2 withMessage:(NSString *)arg3 file:(NSString *)arg4 line:(NSNumber *)arg5;
- (id)_XCT_testCaseDidStartForTestClass:(NSString *)arg1 method:(NSString *)arg2;
- (id)_XCT_testSuite:(NSString *)arg1 didFinishAt:(NSString *)arg2 runCount:(NSNumber *)arg3 withFailures:(NSNumber *)arg4 unexpected:(NSNumber *)arg5 testDuration:(NSNumber *)arg6 totalDuration:(NSNumber *)arg7;
- (id)_XCT_testSuite:(NSString *)arg1 didStartAt:(NSString *)arg2;
- (id)_XCT_didFinishExecutingTestPlan;
- (id)_XCT_didBeginExecutingTestPlan;
- (id)_XCT_testBundleReadyWithProtocolVersion:(NSNumber *)arg1 minimumVersion:(NSNumber *)arg2;
- (id)_XCT_testBundleReady;
@end

@protocol _IDETestResultsProcessorDelegate
- (void)handleTestOperationsCompletionIfAppropriate;
- (void)willFinishWithError:(NSError *)arg1 didCancel:(BOOL)arg2 sessionState:(_IDETestResultsProcessor *)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(NSString *)arg6 sessionState:(_IDETestResultsProcessor *)arg7;
- (void)testSuite:(NSString *)arg1 willFinishAt:(NSString *)arg2 rawOutput:(NSString *)arg3 sessionState:(_IDETestResultsProcessor *)arg4;
- (void)testCaseDidFinishForTestClass:(NSString *)arg1 method:(NSString *)arg2 withStatus:(NSString *)arg3 duration:(double)arg4 rawOutput:(NSString *)arg5 sessionState:(_IDETestResultsProcessor *)arg6;
- (void)testCaseDidProducePerformanceOutput:(DVTPerformanceTestOutput *)arg1 rawOutput:(NSString *)arg2 sessionState:(_IDETestResultsProcessor *)arg3;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(NSString *)arg1 method:(NSString *)arg2 performanceMetric:(DVTTestPerformanceMetricOutput *)arg3 rawOutput:(NSString *)arg4 sessionState:(_IDETestResultsProcessor *)arg5;
- (void)testCaseDidFailForTestClass:(NSString *)arg1 method:(NSString *)arg2 withMessage:(NSString *)arg3 file:(NSString *)arg4 line:(long long)arg5 rawOutput:(NSString *)arg6 sessionState:(_IDETestResultsProcessor *)arg7;
- (void)testCaseDidStartForTestClass:(NSString *)arg1 method:(NSString *)arg2 rawOutput:(NSString *)arg3 sessionState:(_IDETestResultsProcessor *)arg4;
- (void)testSuite:(NSString *)arg1 didStartAt:(NSString *)arg2 rawOutput:(NSString *)arg3 sessionState:(_IDETestResultsProcessor *)arg4;
- (void)testDidOutput:(NSString *)arg1 sessionState:(_IDETestResultsProcessor *)arg2;
- (void)launchSessionStarted:(_IDETestResultsProcessor *)arg1;
@end

@interface IDEIssueLogRecordsGroup : NSObject
{
    NSMutableArray *_logRecords;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)removeLogsForIssues:(id)arg1;
- (void)addLogsForIssues:(id)arg1;
- (id)init;

// Remaining properties
@property(copy) NSArray *logRecords; // @dynamic logRecords;
@property(readonly, copy) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;

@end

@interface IDEXcodeServerUseConfiguration : NSObject
{
    BOOL _testInstallShouldCopyEntireBuiltProductsDir;
    DVTFilePath *_controlPath;
    NSString *_testUserName;
    DVTFilePath *_testUserPath;
}

+ (id)sharedServerUseConfiguration;
+ (void)initialize;
@property(readonly) BOOL testInstallShouldCopyEntireBuiltProductsDir; // @synthesize testInstallShouldCopyEntireBuiltProductsDir=_testInstallShouldCopyEntireBuiltProductsDir;
@property(readonly, copy) DVTFilePath *testUserPath; // @synthesize testUserPath=_testUserPath;
@property(readonly, copy) NSString *testUserName; // @synthesize testUserName=_testUserName;
@property(readonly, copy) DVTFilePath *controlPath; // @synthesize controlPath=_controlPath;
- (void).cxx_destruct;
- (id)initWithControlPath:(id)arg1 testUserName:(id)arg2 testUserPath:(id)arg3;

@end

@interface IDEProductType : NSObject
{
}

+ (id)productTypeForIdentifier:(id)arg1 platform:(id)arg2;
- (BOOL)isAppExtension;
- (BOOL)isApplication;
@property(readonly) IDEProductType *superType;
@property(readonly) DVTPlatform *platform;
@property(readonly) NSString *localizedDescription;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;

@end

@interface IDEWatchpoint : IDEBreakpoint
{
    NSString *_expression;
    NSString *_variableName;
    unsigned long long _address;
    NSString *_hexAddress;
}

+ (id)_displayStringForAddress:(unsigned long long)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingHexAddress;
@property unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *variableName; // @synthesize variableName=_variableName;
@property(readonly) NSString *expression; // @synthesize expression=_expression;
- (void).cxx_destruct;
- (id)displayName;
@property(readonly) NSString *hexAddress;
- (id)initWithExpression:(id)arg1 variableName:(id)arg2;

@end

@interface IDEWatchpointNotificationInfo : NSObject
{
    IDEWatchpoint *_watchpoint;
    NSString *_watchpointID;
    NSString *_expression;
    NSString *_oldValue;
    NSString *_newValue;
    NSString *_thread;
}

@property(readonly) NSString *thread; // @synthesize thread=_thread;
@property(readonly) NSString *newValue; // @synthesize newValue=_newValue;
@property(readonly) NSString *oldValue; // @synthesize oldValue=_oldValue;
@property(readonly) NSString *expression; // @synthesize expression=_expression;
@property(readonly) NSString *watchpointID; // @synthesize watchpointID=_watchpointID;
@property(readonly) IDEWatchpoint *watchpoint; // @synthesize watchpoint=_watchpoint;
- (void).cxx_destruct;
- (id)consoleOutputStyleDisplayString;
- (id)titleStyleDisplayString;
- (id)initWithWatchpoint:(id)arg1 watchpointID:(id)arg2 expression:(id)arg3 oldValue:(id)arg4 newValue:(id)arg5 thread:(id)arg6;

@end

@interface IDEDeviceAppDataReference : NSObject <DVTXMLUnarchiving>
{
    NSString *_resolvedPath;
    NSString *_appDataBundleId;
    NSString *_appDataDownloadDate;
}

@property(copy) NSString *appDataDownloadDate; // @synthesize appDataDownloadDate=_appDataDownloadDate;
@property(copy) NSString *appDataBundleId; // @synthesize appDataBundleId=_appDataBundleId;
@property(copy) NSString *resolvedPath; // @synthesize resolvedPath=_resolvedPath;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setAppDataDownloadDateFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAppDataBundleIdFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setResolvedPathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBreakpointBucket : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    int _type;
    IDEContainer<DVTCustomDataStoring> *_archivingContainer;
    DVTCustomDataSpecifier *_archivingDataSpecifier;
    NSString *_archivingContainerItemBaseStandardizedPathString;
    NSString *_displayName;
    NSMutableArray *_breakpoints;
    BOOL _currentlyDecoding;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingShared;
+ (id)userGlobalBucket:(id *)arg1;
+ (void)initialize;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) IDEContainer<DVTCustomDataStoring> *archivingContainer; // @synthesize archivingContainer=_archivingContainer;
@property(readonly) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)addBreakpoints:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (id)_breakpointArchivingProxiesArray;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_displayNameForWorkspace;
- (id)archivingContainerItemBaseStandardizedPathString;
- (void)_persistBreakpoints;
- (void)notifyPersistencyStateChanged;
- (BOOL)removeBreakpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
@property(readonly, getter=isShared) BOOL shared;
- (BOOL)containsBreakpoint:(id)arg1;
- (id)initWithType:(int)arg1 archivingContainer:(id)arg2 error:(id *)arg3;
- (BOOL)_isErrorNoSuchFileError:(id)arg1;
- (BOOL)_decodeFromContainer:(id *)arg1;
- (void)_encodeToContainer;
- (BOOL)_shouldEncodeDecode;
- (id)_archivingDataSpecifierWithName:(id)arg1;
@property(readonly) DVTCustomDataSpecifier *archivingDataSpecifier;
- (id)_archivingDataStore;
- (id)init;

// Remaining properties
@property(readonly) NSArray *breakpoints; // @dynamic breakpoints;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (id)synthesizedOverridingBuildPropertiesWithEnvironment:(id)arg1;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEActivityLogSectionRecorder : NSObject
{
    DVTPointerArray *_parentRecorders;
    NSMutableArray *_childRecorders;
    IDEActivityLogSection *_section;
    NSMutableArray *_observations;
    NSMutableArray *_changesToPost;
    BOOL _hasScheduledChangePosting;
    DVTMapTable *_rememberedMessagesByKey;
    struct _NSRange _mostRecentTextRange;
    CDUnknownBlockType _completionBlock;
    NSMutableDictionary *_severityToLimitTable;
    NSMutableDictionary *_severityToCountTable;
    int _lock;
    BOOL _hasAddedAnyErrorMessages;
    int _hasRequestedStop;
}

@property BOOL hasAddedAnyErrorMessages; // @synthesize hasAddedAnyErrorMessages=_hasAddedAnyErrorMessages;
- (void).cxx_destruct;
- (id)addObserverUsingBlock:(CDUnknownBlockType)arg1;
- (void)setCommandDetailDescription:(id)arg1;
- (void)addContextInfoMessageWithTitle:(id)arg1;
- (void)addAnalyzerResultStepMessageWithTitle:(id)arg1;
- (void)addAnalyzerResultMessageWithTitle:(id)arg1;
- (void)addNoticeMessageWithTitle:(id)arg1;
- (void)addWarningMessageWithTitle:(id)arg1;
- (void)addErrorMessageWithTitle:(id)arg1;
- (void)addTestFailureMessageWithTitle:(id)arg1;
- (void)stopRecordingWithInfo:(id)arg1;
- (void)stopRecordingWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_stopRecordingWithInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)childRecorderDidStopRecording:(id)arg1;
- (void)addSubmessage:(id)arg1 toMessage:(id)arg2;
- (void)addMessage:(id)arg1 ignoreMessageLimit:(BOOL)arg2;
- (void)addMessage:(id)arg1;
- (struct _NSRange)mostRecentlyAppendedTextRange;
- (struct _NSRange)appendTextUTF8Bytes:(const char *)arg1 length:(unsigned long long)arg2;
- (struct _NSRange)appendTextFormat:(id)arg1;
- (struct _NSRange)appendText:(id)arg1;
- (void)addSubsection:(id)arg1;
- (BOOL)_attachToParentRecorderIfStillRecording:(id)arg1;
- (BOOL)hasReachedAllMessageLimits;
- (BOOL)hasReachedMessageLimitForSeverity:(unsigned long long)arg1;
- (void)setMessageLimit:(unsigned long long)arg1 forSeverity:(unsigned long long)arg2;
- (void)setLocalizedResultString:(id)arg1;
- (void)setWasFetchedFromCache:(BOOL)arg1;
- (void)setIsQuiet:(BOOL)arg1;
- (id)addUnitTestSectionWithTitle:(id)arg1 location:(id)arg2;
- (id)addCommandSectionWithTitle:(id)arg1 detailDescription:(id)arg2;
- (id)addCommandSectionWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3;
- (void)noteDescendantLogSectionDidClose:(id)arg1 inSupersection:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAppendText:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)handleChangeEvent:(id)arg1;
- (void)setRememberedMessage:(id)arg1 forKey:(id)arg2;
- (id)rememberedMessageForKey:(id)arg1;
- (void)addCompletionBlock:(CDUnknownBlockType)arg1;
- (id)section;
- (id)initWithLogSection:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface IDEActivityLogSectionObservation : NSObject <DVTCancellable>
{
    CDUnknownBlockType _block;
}

+ (id)sharedNullObservation;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (CDUnknownBlockType)block;
- (id)init;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionMethodInAppPurchaseContent : IDEDistributionMethodAppStore
{
}

- (id)packagingStepIdentifier;
- (id)installerCertificateKind;
- (id)certificateKind;
- (BOOL)wantsProvisioningProfiles;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodInAppPurchaseContentSubmit : IDEDistributionMethodInAppPurchaseContent
{
}

- (id)orderedDistributionStepClassNames;
- (id)shortTitle;
- (id)subtitle;
- (id)title;
- (int)supportedTask;

@end

@interface IDEDistributionMethodInAppPurchaseContentValidate : IDEDistributionMethodInAppPurchaseContent
{
}

- (id)orderedDistributionStepClassNames;
- (id)shortTitle;
- (id)subtitle;
- (id)title;
- (int)supportedTask;

@end

@interface IDEDistributionMethodInAppPurchaseContentPackage : IDEDistributionMethodExport
{
}

- (id)packagingStepIdentifier;
- (id)installerCertificateKind;
- (id)certificateKind;
- (BOOL)wantsProvisioningProfiles;
- (id)exportStepName;
- (id)orderedDistributionStepClassNames;
- (id)shortTitle;
- (id)subtitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEFolderCore : IDEContainerCore <IDEFolderCore>
{
}


// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEExceptionBreakpoint : IDEBreakpoint
{
    int _scope;
    int _stopOnStyle;
    NSString *_exceptionName;
}

+ (BOOL)isAllObjectiveCExceptionsBreakpoint:(id)arg1;
+ (BOOL)isAllExceptionsBreakpoint:(id)arg1;
+ (BOOL)isCPPOrAllExceptionBreakpoint:(id)arg1;
+ (BOOL)isCPPExceptionBreakpoint:(id)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *exceptionName; // @synthesize exceptionName=_exceptionName;
@property int stopOnStyle; // @synthesize stopOnStyle=_stopOnStyle;
@property int scope; // @synthesize scope=_scope;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)locationsProvideAdditionalInformation;
- (BOOL)matchesAllExceptionsInScope;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)init;

@end

@interface IDEBuildIssueProvider : IDEIssueProvider
{
    DVTMapTable *_blueprintToLatestLogSectionObserverMap;
    DVTMapTable *_buildLogToLogNotificationObserverMap;
    DVTMapTable *_blueprintToLatestBuildLogSectionMap;
    DVTMapTable *_blueprintToLogRecordsMap;
    DVTMapTable *_blueprintToIssuesForFileMap;
    DVTMapTable *_blueprintToAuxiliaryFilesForFileMap;
    DVTMapTable *_haveRemovedIssuesForFileInBlueprintMap;
    DVTObservingToken *_activeBuildOperationStateObserverToken;
    IDEBuildOperation *_activeBuildOperation;
    NSMutableSet *_pendingLogSections;
    IDELogStore *_logStore;
    BOOL _changeNotificationPending;
    NSMutableArray *_pendingChanges;
}

+ (int)providerType;
+ (id)_backgroundScanningQueue;
+ (id)_backgroundLoadingQueue;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_buildLogDidUpdateItems:(id)arg1 blueprint:(id)arg2;
- (void)_scanIssuesInLog:(id)arg1 forBlueprint:(id)arg2 intoArray:(id)arg3 usingSeenMessages:(id)arg4 withFileToIssuesMap:(id)arg5 fileToAuxFilesMap:(id)arg6;
- (void)_addIssueForMessage:(id)arg1 blueprint:(id)arg2 intoArray:(id)arg3 usingSeenMessages:(id)arg4 withFileToIssuesMap:(id)arg5 fileToAuxFilesMap:(id)arg6 wasFetchedFromCache:(BOOL)arg7;
- (void)startProviderSession;
- (void)_postBuildIssueChange:(id)arg1;
- (void)_asyncPostBuildIssueChanges:(CDUnknownBlockType)arg1;
- (void)_observeLogSection:(id)arg1 forBlueprint:(id)arg2 loadedFromLogStore:(BOOL)arg3;
- (void)_currentBuildOperationDidChange;
- (void)_blueprintsDidChange;
- (void)_reactToCleanBuildFolder;
- (void)_forgetBlueprint:(id)arg1;
- (void)_latestBuildLogDidChange;
- (void)_workspaceFinishedLoading;
- (void)primitiveInvalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (BOOL)allowsExistingIssuesToBeCoalesced;
- (void)removeBlueprintFromIssuesCache:(id)arg1;
- (BOOL)shouldRemoveIssuesFromCacheForFile:(id)arg1 inBlueprint:(id)arg2;
- (id)removeIssuesFromCacheForFile:(id)arg1 inBlueprint:(id)arg2;
- (void)addAuxiliaryFiles:(id)arg1 toCacheForFile:(id)arg2 inBlueprint:(id)arg3;
- (void)addIssues:(id)arg1 toCacheForFile:(id)arg2 inBlueprint:(id)arg3;
- (id)latestLogRecordForBlueprint:(id)arg1;
- (void)removeAllLogRecordsForBlueprint:(id)arg1;
- (void)addLogRecord:(id)arg1 forBlueprint:(id)arg2;
- (id)logRecordsForBlueprint:(id)arg1;

@end

@interface IDEBuildIssueChange : NSObject
{
    int _type;
    NSArray *_issues;
    id _providerContext;
    IDEContainer *_container;
    id <IDEBlueprint> _blueprint;
}

+ (id)setChangeWithIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
+ (id)removeChangeWithIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
+ (id)additionChangeWithIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
@property(retain, nonatomic) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(retain, nonatomic) IDEContainer *container; // @synthesize container=_container;
@property(retain, nonatomic) id providerContext; // @synthesize providerContext=_providerContext;
@property(retain, nonatomic) NSArray *issues; // @synthesize issues=_issues;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithType:(int)arg1 issues:(id)arg2 forProviderContext:(id)arg3 container:(id)arg4 blueprint:(id)arg5;

@end

@interface IDEDistributionIssue : NSObject
{
    int _severity;
    NSError *_error;
}

+ (id)issuesFromErrors:(id)arg1 withSeverity:(int)arg2;
+ (id)issuesFromITunesResponse:(id)arg1;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(readonly) int severity; // @synthesize severity=_severity;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSeverity:(int)arg1 error:(id)arg2;

@end

@interface IDESourceControlTree : DVTModelTree
{
    IDESourceControlManager *_sourceControlManager;
    IDESourceControlExtension *_sourceControlExtension;
    NSString *_location;
    NSString *_name;
    unsigned long long _state;
    BOOL _disallowLoadingChildren;
    NSString *_identifier;
    NSString *_cachedFirstRevision;
}

+ (void)initialize;
+ (id)treeLoadingModelObjectGraph;
@property(copy) NSString *cachedFirstRevision; // @synthesize cachedFirstRevision=_cachedFirstRevision;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property BOOL disallowLoadingChildren; // @synthesize disallowLoadingChildren=_disallowLoadingChildren;
@property unsigned long long state; // @synthesize state=_state;
@property(copy) NSString *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
@property(readonly) IDESourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
- (void).cxx_destruct;
- (id)copyRepository;
- (id)description;
- (BOOL)containsItemAtLocation:(id)arg1;
- (id)firstRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)subclass_createRootNode;
- (void)primitiveInvalidate;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlExtension:(id)arg2 sourceControlManager:(id)arg3;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

// Remaining properties
@property(readonly) IDESourceControlTreeGroup *rootGroup; // @dynamic rootGroup;

@end

@interface IDESourceControlRepository : IDESourceControlTree <NSURLConnectionDelegate>
{
    NSURL *_URL;
    NSString *_user;
    NSString *_password;
    NSString *_keychainName;
    BOOL _authenticated;
    BOOL _shouldRetryAuthentication;
    BOOL _representsGitSVNBridge;
    BOOL _representsXcodeServiceHostedRepository;
    BOOL _enabled;
    NSString *_remoteName;
    NSString *_root;
    BOOL _passwordIsBeingLoaded;
    BOOL _ignoreKeychain;
    IDESourceControlCredentialsValidator *_authenticator;
}

+ (id)_keychainNameWithSubversionHTTPProtectionSpace:(id)arg1;
+ (id)keyPathsForValuesAffectingConnectionAddress;
@property BOOL ignoreKeychain; // @synthesize ignoreKeychain=_ignoreKeychain;
@property(readonly) IDESourceControlCredentialsValidator *authenticator; // @synthesize authenticator=_authenticator;
@property(readonly) NSString *root; // @synthesize root=_root;
@property BOOL representsGitSVNBridge; // @synthesize representsGitSVNBridge=_representsGitSVNBridge;
@property BOOL shouldRetryAuthentication; // @synthesize shouldRetryAuthentication=_shouldRetryAuthentication;
@property(nonatomic) BOOL authenticated; // @synthesize authenticated=_authenticated;
- (void).cxx_destruct;
- (BOOL)removePasswordFromKeychain:(struct OpaqueSecKeychainRef *)arg1 error:(id *)arg2;
- (void)maybeRemovePasswordFromKeychain;
- (BOOL)canRemovePasswordFromKeychain;
- (BOOL)savePasswordToKeychain:(struct OpaqueSecKeychainRef *)arg1 error:(id *)arg2;
- (void)maybeSavePasswordToKeychain;
- (BOOL)savePasswordToKeychain:(struct OpaqueSecKeychainRef *)arg1 forSubversionHTTPWithError:(id *)arg2;
- (void)setSubversionHTTPProtectionSpace:(id)arg1;
- (void)setKeychainName:(id)arg1;
@property(copy) NSString *password; // @synthesize password=_password;
@property(readonly) BOOL canSavePasswordToKeychain;
- (id)passwordFromKeychain:(void *)arg1 error:(id *)arg2;
@property(readonly) BOOL useSubversionHTTP;
- (id)subversionHTTPPasswordFromKeychain:(void *)arg1 error:(id *)arg2;
- (id)internetPasswordFromKeychain:(void *)arg1 error:(id *)arg2;
@property(readonly) BOOL canLoadPasswordFromKeychain;
- (void)_checkAndSetupKeychainName;
- (void)primitiveInvalidate;
- (id)children;
@property(readonly) BOOL isRemoteDistributedRepository;
- (id)ideModelObjectTypeIdentifier;
- (BOOL)containsItemAtLocation:(id)arg1;
- (id)itemAtURL:(id)arg1 isGroup:(BOOL)arg2;
@property(copy) NSString *remoteName;
- (BOOL)isEqual:(id)arg1;
@property(copy) NSString *user; // @synthesize user=_user;
@property(retain) NSURL *URL; // @synthesize URL=_URL;
- (void)setLocation:(id)arg1;
- (void)setSourceControlExtension:(id)arg1;
@property BOOL representsXcodeServiceHostedRepository; // @synthesize representsXcodeServiceHostedRepository=_representsXcodeServiceHostedRepository;
@property BOOL enabled; // @synthesize enabled=_enabled;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 sourceControlManager:(id)arg2 error:(id *)arg3;
- (id)initWithDictionary:(id)arg1 sourceControlExtension:(id)arg2 sourceControlManager:(id)arg3;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceControlWorkingCopyConfiguration : NSObject
{
    NSString *_relativeTrunkLocation;
    NSString *_relativeBranchesLocation;
    NSString *_relativeTagsLocation;
    NSMutableArray *_branches;
    DVTDispatchLock *_branchesLock;
    NSDate *_branchesInvalidationDate;
    IDESourceControlRepository *_repository;
    NSString *_name;
    NSString *_uniqueIdentifier;
    IDESourceControlExtension *_sourceControlExtension;
    NSString *_remoteDistributedOrigin;
}

@property(copy) NSString *remoteDistributedOrigin; // @synthesize remoteDistributedOrigin=_remoteDistributedOrigin;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
@property(readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain) IDESourceControlRepository *repository; // @synthesize repository=_repository;
- (void).cxx_destruct;
- (id)removeBranchWithName:(id)arg1 message:(id)arg2 force:(BOOL)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)newBranchWithName:(id)arg1 source:(id)arg2 message:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)branchesForRemote:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)branchesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_branchesWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)defaultBranchStartingPoint;
- (void)setBranches:(id)arg1;
@property(readonly) NSMutableArray *branches;
- (id)automaticallyConfigureSVNLocationsForOrigin:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_automaticallyConfigureSVNLocationsForOrigin:(id)arg1 withToken:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_searchRelativeLocation:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(copy) NSString *relativeTagsLocation; // @synthesize relativeTagsLocation=_relativeTagsLocation;
@property(copy) NSString *relativeTrunkLocation; // @synthesize relativeTrunkLocation=_relativeTrunkLocation;
@property(copy) NSString *relativeBranchesLocation; // @synthesize relativeBranchesLocation=_relativeBranchesLocation;
- (id)_stripBaseURLOrStartingSlash:(id)arg1;
- (id)tagsLocation;
- (id)trunkLocation;
- (id)branchesLocation;
- (id)_createBranchingURLWithRelativePath:(id)arg1;
- (id)removeRemoteWithName:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)newRemoteWithName:(id)arg1 location:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)remotesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)description;
@property(readonly) BOOL needsConfiguring;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlManager:(id)arg2;
- (id)initWithName:(id)arg1 identifier:(id)arg2 sourceControlExtension:(id)arg3 relativeBranchesLocation:(id)arg4 relativeTrunkLocation:(id)arg5 relativeTagsLocation:(id)arg6 sourceControlManager:(id)arg7;
- (id)init;

@end

@interface IDESourceControlWorkingTree : IDESourceControlTree
{
    IDESourceControlWorkingCopyConfiguration *_wcc;
    IDESourceControlBranch *_currentBranch;
    NSMutableArray *_itemsWithStatus;
    NSOperationQueue *_status_processing_queue;
    DVTFilePath *_filePath;
    NSString *_origin;
    BOOL _representsGitSVNBridge;
    NSMutableDictionary *_localStatusRequests;
    NSMutableDictionary *_serverStatusRequests;
    BOOL _initialLocalStatusUpdateIsComplete;
    BOOL _initialServerStatusUpdateIsComplete;
    NSMutableSet *_delayedLocalStatusUpdateForDirectories;
    DVTDispatchLock *_delayedLocalStatusUpdateForDirectoriesLock;
    BOOL _needsUpgrade;
    BOOL _checkedForUpgrade;
}

+ (id)_fileReferenceStatusProcessingQueue;
@property BOOL checkedForUpgrade; // @synthesize checkedForUpgrade=_checkedForUpgrade;
@property BOOL needsUpgrade; // @synthesize needsUpgrade=_needsUpgrade;
@property BOOL representsGitSVNBridge; // @synthesize representsGitSVNBridge=_representsGitSVNBridge;
@property(readonly) BOOL initialServerStatusUpdateIsComplete; // @synthesize initialServerStatusUpdateIsComplete=_initialServerStatusUpdateIsComplete;
@property(readonly) BOOL initialLocalStatusUpdateIsComplete; // @synthesize initialLocalStatusUpdateIsComplete=_initialLocalStatusUpdateIsComplete;
@property(retain) IDESourceControlWorkingCopyConfiguration *wcc; // @synthesize wcc=_wcc;
@property(readonly) NSString *origin; // @synthesize origin=_origin;
@property(copy) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)invalidateServerStatus;
- (void)clearServerStatus;
- (void)invalidateLocalStatus;
- (void)clearLocalAndServerStatus;
- (void)clearStatusForItem:(id)arg1;
- (void)addItemWithStatus:(id)arg1;
- (void)mergeStatusOperationResults:(id)arg1 forLocalStatusOnly:(BOOL)arg2;
- (void)addNewItemsWithStatusWithResults:(id)arg1;
- (id)updateLocalStatusForDirectory:(id)arg1 cancelable:(BOOL)arg2 withWorkspace:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)updateLocalStatusForDirectory:(id)arg1 withWorkspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setBatchedUpdateLocalStatusForDirectory:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)emptyBatchedUpdateLocalStatus;
- (id)updateServerStatusForDirectory:(id)arg1 cancelable:(BOOL)arg2 withWorkspace:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)updateServerStatusForDirectory:(id)arg1 withWorkspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly) NSArray *itemsWithStatus; // @synthesize itemsWithStatus=_itemsWithStatus;
- (void)addUpdateFileReferenceStatueseBlock:(CDUnknownBlockType)arg1;
- (void)updateFileReferenceStatusesAndWaitForFinish:(BOOL)arg1;
- (void)blockUpdatingFileReferenceStatuses;
- (id)trackRemoteBranch:(id)arg1 withLocalBranchName:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)invalidateCurrentBranch;
- (id)switchToBranch:(id)arg1 inWorkspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)switchToBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)currentDetailedBranchWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)currentBranchWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)currentBranchWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_processBranches:(id)arg1 error:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)automaticallyConfigureSVNLocations:(CDUnknownBlockType)arg1;
- (void)automaticallyConfigureSVNLocationsWithToken:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly) BOOL isConfiguredForBranching;
- (id)itemForFilePath:(id)arg1;
- (BOOL)containsItemAtLocation:(id)arg1;
- (BOOL)containsItemAtFilePath:(id)arg1;
- (id)subclass_createRootNode;
@property(readonly) NSDate *dataModificationDate;
@property(readonly) DVTFilePath *dataDirectory;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentation;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) IDESourceControlBranch *currentBranch; // @synthesize currentBranch=_currentBranch;
@property(readonly) IDESourceControlRepository *repository;
- (void)setLocation:(id)arg1;
- (void)primitiveInvalidate;
- (void)_setOrigin:(id)arg1;
- (void)_updateWorkingTreeOrigin;
- (id)initWithDictionary:(id)arg1 repository:(id)arg2 sourceControlExtension:(id)arg3 sourceControlManager:(id)arg4;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

@end

@interface IDEDocumentIssueSummary : NSObject
{
    NSMutableArray *_vendedIssuesBySeqNum;
    NSMutableDictionary *_issuesIndexedByLineNumber;
    DVTHashTable *_observers;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    unsigned long long _fixItCount;
    unsigned long long _maxSeverity;
}

+ (id)keyPathsForValuesAffectingMaxSeverity;
@property(readonly) unsigned long long fixItCount; // @synthesize fixItCount=_fixItCount;
@property(readonly) unsigned long long analyzerResultCount; // @synthesize analyzerResultCount=_analyzerResultCount;
@property(readonly) unsigned long long noticeCount; // @synthesize noticeCount=_noticeCount;
@property(readonly) unsigned long long warningCount; // @synthesize warningCount=_warningCount;
@property(readonly) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(readonly) unsigned long long testFailureCount; // @synthesize testFailureCount=_testFailureCount;
@property(retain) DVTHashTable *observers; // @synthesize observers=_observers;
@property(retain) NSMutableDictionary *issuesIndexedByLineNumber; // @synthesize issuesIndexedByLineNumber=_issuesIndexedByLineNumber;
@property(copy, nonatomic) NSArray *vendedIssuesBySeqNum; // @synthesize vendedIssuesBySeqNum=_vendedIssuesBySeqNum;
- (void).cxx_destruct;
@property(readonly) unsigned long long maxSeverity;
- (void)removeVendedIssuesBySeqNumAtIndexes:(id)arg1;
- (void)insertVendedIssuesBySeqNum:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromVendedIssuesBySeqNumAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inVendedIssuesBySeqNumAtIndex:(unsigned long long)arg2;
- (id)init;

@end

@interface IDEIssueManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableArray *_issueProviders;
    DVTMapTable *_providerContextToProvisionInfoMap;
    DVTMapTable *_issueToProviderContextMap;
    NSMutableArray *_issueGroups;
    DVTMapTable *_identifierToGroupIndex;
    DVTMapTable *_issueToGroupsIndex;
    NSMutableSet *_issuesThatWillBeRemoved;
    NSMutableArray *_vendedIssuesWithNoDocument;
    NSMutableSet *_issuesWithNoDocument;
    NSMutableArray *_documentURLsWithVendedIssues;
    NSMutableDictionary *_documentURLToIssueSummaryDict;
    DVTHashTable *_allDocumentURLObservers;
    unsigned long long _nextIssueSequenceNumber;
    DVTMapTable *_providerToSessionObservationToken;
    unsigned long long _nextGroupSequenceNumber;
    DVTMapTable *_identifierToGroupSequenceNumberIndex;
    IDEIssueProviderSession *_lastSchemeActionSession;
    NSMutableSet *_lastSchemeActionIssues;
    id _issueFixedObserver;
    BOOL _liveIssuesEnabled;
    id _liveIssuesEnabledObserver;
    IDEIssueLogRecordsGroup *_issueLogRecordsGroup;
    DVTHashTable *_cachedBlueprintsForActiveScheme;
    DVTHashTable *_cachedContainersForActiveScheme;
    int _currentIssueFilterStyle;
    id _issueFilterStyleObserver;
    id _schemeBuildablesObserver;
    DVTObservingToken *_activeSchemeObserver;
    DVTObservingToken *_runDestinationObserver;
    DVTObservingToken *_implicitDependenciesObserver;
}

+ (id)issueManagerLogAspect;
+ (id)_issueProviderInfo;
+ (void)_useDebugProviderExtensionPointWithIdentifier:(id)arg1;
+ (void)initialize;
@property(readonly) IDEIssueLogRecordsGroup *issueLogRecordsGroup; // @synthesize issueLogRecordsGroup=_issueLogRecordsGroup;
@property(readonly, getter=areLiveIssuesEnabled) BOOL liveIssuesEnabled; // @synthesize liveIssuesEnabled=_liveIssuesEnabled;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)_containersOrBlueprintsUpdated;
- (id)_issuesForProviderContext:(id)arg1;
- (id)_providerContextToProvisionInfoMapForIssues:(id)arg1;
- (id)_unitTestIssueProvidersAccessor;
- (void)_validateGroupIdentifiers;
- (void)_delayedValidateGroupIdentifiers;
- (void)_updateVendedIssues;
- (void)_updateContainersAndBlueprintsForActiveScheme;
- (void)_updateIssueFilterStyle;
- (void)_needsUpdateInResponseToFilterChanges;
- (void)_coalescedUpdateInResponseToFilterChanges;
- (void)_hideIssues:(id)arg1;
- (void)_setIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4 session:(id)arg5;
- (void)_removeIssues:(id)arg1 forProviderContext:(id)arg2 session:(id)arg3;
- (void)_addIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4 session:(id)arg5 tryToCoalesce:(BOOL)arg6;
- (BOOL)_vendOnlyActiveSchemeIssues;
- (void)_retractIssues:(id)arg1;
- (void)_vendIssues:(id)arg1 container:(id)arg2 blueprint:(id)arg3 issueToGroupingObjectMap:(id)arg4 session:(id)arg5;
- (id)_similarExistingIssueForIssue:(id)arg1;
- (id)_similarExistingIssueForIssue:(id)arg1 container:(id)arg2 blueprint:(id)arg3;
- (_Bool)_doesIssue:(id)arg1 fromContainer:(id)arg2 andBlueprint:(id)arg3 coalesceWithIssue:(id)arg4;
- (_Bool)_doesIssue:(id)arg1 coalesceWithIssue:(id)arg2;
- (id)_identifierForGroupWithBlueprint:(id)arg1 container:(id)arg2;
- (id)_groupingObjectsForIssue:(id)arg1;
- (void)_rescindObserverToken:(id)arg1;
- (id)newIssueObserverForDocumentURL:(id)arg1 options:(unsigned long long)arg2 withHandlerBlock:(CDUnknownBlockType)arg3;
- (void)_notifyAllObserversOfDocumentURL:(id)arg1 isPrior:(BOOL)arg2;
- (void)_notifyObserver:(id)arg1 forURL:(id)arg2 isPrior:(BOOL)arg3;
- (id)issuesWithNoDocument;
- (id)issuesForDocumentURL:(id)arg1;
- (unsigned long long)maxSeverityOfDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfFixableDiagnosticItemsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfAnalyzerResultsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfNoticesInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfWarningsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfErrorsInDocumentAtURL:(id)arg1;
- (unsigned long long)numberOfTestFailuresInDocumentAtURL:(id)arg1;
- (id)_documentIssueSummaryForURL:(id)arg1;
@property(readonly) NSArray *documentURLsWithIssues;
@property(readonly) NSArray *issueGroups; // @synthesize issueGroups=_issueGroups;
- (void)_updateIssueProviders;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSSet *lastSchemeActionIssues; // @dynamic lastSchemeActionIssues;
@property(readonly) NSMutableSet *mutableLastSchemeActionIssues; // @dynamic mutableLastSchemeActionIssues;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIssueManager_ByFileObserverToken : NSObject <DVTCancellable>
{
    IDEIssueManager *_issueManager;
    NSURL *_documentURL;
    unsigned long long _observingOptions;
    CDUnknownBlockType _observerBlock;
}

@property(readonly) unsigned long long observingOptions; // @synthesize observingOptions=_observingOptions;
@property(readonly, copy) CDUnknownBlockType observerBlock; // @synthesize observerBlock=_observerBlock;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (void).cxx_destruct;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)initWithIssueManager:(id)arg1 documentURL:(id)arg2 options:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _IDEIssueProvisionInfo : NSObject
{
    id <IDEBlueprint> _blueprint;
    IDEContainer *_container;
    NSMutableArray *_issues;
    DVTMapTable *_issueToGroupingObjectsMap;
    IDEIssueProviderSession *_session;
}

@property(readonly) NSMutableArray *_mutableIssues; // @synthesize _mutableIssues=_issues;
@property(readonly) IDEIssueProviderSession *session; // @synthesize session=_session;
@property(copy) DVTMapTable *issueToGroupingObjectsMap; // @synthesize issueToGroupingObjectsMap=_issueToGroupingObjectsMap;
@property(readonly) __weak IDEContainer *container; // @synthesize container=_container;
@property(readonly) __weak id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
- (void).cxx_destruct;
- (void)removeIssues:(id)arg1;
- (void)addIssues:(id)arg1;
@property(readonly) NSArray *issues;
@property(readonly) IDEIssueProvider *issueProvider;
- (id)initWithBlueprint:(id)arg1 container:(id)arg2 issues:(id)arg3 session:(id)arg4;

@end

@interface IDEIndexDBConnection : IDEIndexDBSQLStream
{
    IDEIndexDatabase *_database;
    NSObject<OS_dispatch_queue> *_runQueue;
    struct sqlite3 *_dbHandle;
    CDUnknownBlockType _cancelCallback;
    long long _tempTableCount;
    NSMutableSet *_tempTables;
    BOOL _closing;
    void *_checkpointInfo;
    int _inUseCount;
    int _collectionCount;
}

+ (void)initialize;
- (id)database;
- (void).cxx_destruct;
- (void)dealloc;
- (void)close;
- (void)wait;
- (void)reportSQLiteError:(int)arg1 function:(id)arg2 message:(const char *)arg3 info:(id)arg4;
- (void)finalizeSQLiteStmt:(struct sqlite3_stmt **)arg1;
- (void)runSQLiteStmt:(struct sqlite3_stmt **)arg1 sql:(id)arg2 bindings:(CDUnknownBlockType)arg3 forEachRow:(CDUnknownBlockType)arg4 whenDone:(CDUnknownBlockType)arg5;
- (void)cancelWhen:(CDUnknownBlockType)arg1;
- (BOOL)shouldCancel;
- (void)shutdown;
- (void)runSQLite:(id)arg1;
- (void)willSubmitTransaction:(id)arg1;
- (void)explainQueryPlan:(id)arg1;
- (int)doSQLChanges:(id)arg1 withBindings:(CDUnknownBlockType)arg2;
- (void)doSQLQuery:(id)arg1 withBindings:(CDUnknownBlockType)arg2 forEachRow:(CDUnknownBlockType)arg3;
- (void)didDropTempTable:(id)arg1;
- (void)didCreateTempTable:(id)arg1;
- (id)newTempTableWithName:(id)arg1 schema:(id)arg2;
- (id)newTempTableWithSchema:(id)arg1;
- (id)newTempTableName;
- (void)doBlock:(CDUnknownBlockType)arg1;
- (id)dbConnection;
- (void)setAutoCheckpointThreshold:(int)arg1;
- (id)initWithDatabase:(id)arg1 create:(BOOL)arg2 backgroundPriority:(BOOL)arg3;

@end

@interface IDEIndexSymbolWithOccurrenceCollection : IDEIndexSymbolCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDELogManager : NSObject <DVTInvalidation>
{
    id _domainItem;
    NSString *_domainName;
    NSArray *_logProviders;
    NSMutableArray *_logRecords;
    DVTMapTable *_logProviderToRecordsIndex;
    NSSet *_cachedRecentLogRecords;
    NSMutableDictionary *_navigatorRootItems;
}

+ (void)initialize;
@property(readonly) NSMutableDictionary *navigatorRootItems; // @synthesize navigatorRootItems=_navigatorRootItems;
@property(copy) NSString *domainName; // @synthesize domainName=_domainName;
@property(retain) id domainItem; // @synthesize domainItem=_domainItem;
@property(readonly) NSArray *logProviders; // @synthesize logProviders=_logProviders;
- (void).cxx_destruct;
@property(readonly) NSSet *mostRecentLogRecordForEachType;
- (void)_handleLogRecordChangesForProvider:(id)arg1;
- (id)_findLogProviders;
- (id)extensionsFromExtensionPointIdentifier:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithDomainItem:(id)arg1 domain:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexImportSession : NSObject
{
    IDEIndexDatabase *_database;
    BOOL _wasSaved;
    BOOL _hasEnded;
    void *_cxIndex;
    void *_cxIndexAction;
    void *_resolvedPathMap;
    NSObject<OS_dispatch_queue> *_resolvedPathQueue;
    NSDate *_startTime;
    long long _nUnits_C;
    long long _nUnits_ObjC;
    long long _nUnits_CXX;
    long long _nUnits_ObjCXX;
    long long _nUnits_Other;
    long long _nPCHs;
    long long _nSymbols;
    long long _nReferences;
}

@property(readonly, nonatomic) void *cxIndexAction; // @synthesize cxIndexAction=_cxIndexAction;
@property(readonly, nonatomic) void *cxIndex; // @synthesize cxIndex=_cxIndex;
@property(readonly, nonatomic) BOOL hasEnded; // @synthesize hasEnded=_hasEnded;
@property(readonly, nonatomic) BOOL wasSaved; // @synthesize wasSaved=_wasSaved;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)didEnd;
- (void)recordSymbols:(long long)arg1 references:(long long)arg2;
- (void)recordUnitWithLanguage:(id)arg1 pch:(BOOL)arg2;
- (void)endSession;
- (void)didSave;
- (id)newMainFileWithPath:(id)arg1 target:(id)arg2 source:(id)arg3 modified:(id)arg4;
- (id)initWithDatabase:(id)arg1;
- (void)deletePathMap;
- (void)setResolvedPath:(id)arg1 forFileID:(CDStruct_3c4b7cd8)arg2;
- (id)resolvedPathForFileID:(CDStruct_3c4b7cd8)arg1;
- (void)withPathMapDo:(CDUnknownBlockType)arg1;
- (void)createPathMap;

@end

@interface IDEArchiveSchemeAction : IDESchemeAction
{
    BOOL _includeSnapshotInArchive;
    BOOL _revealArchiveInOrganizer;
    NSString *_customArchiveName;
    NSString *_buildConfiguration;
    NSString *_packagerIdentifier;
}

+ (id)keyPathsForValuesAffectingDefaultArchiveName;
+ (id)keyPathsForValuesAffectingSubtitle;
@property(copy) NSString *packagerIdentifier; // @synthesize packagerIdentifier=_packagerIdentifier;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(copy) NSString *customArchiveName; // @synthesize customArchiveName=_customArchiveName;
@property BOOL revealArchiveInOrganizer; // @synthesize revealArchiveInOrganizer=_revealArchiveInOrganizer;
@property BOOL includeSnapshotInArchive; // @synthesize includeSnapshotInArchive=_includeSnapshotInArchive;
- (void).cxx_destruct;
- (void)addArchivingStrategy:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setRevealArchiveInOrganizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIncludeSnapshotInArchiveFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPackagerIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomArchiveNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)archivingOperationGroupForExecutionEnvironment:(id)arg1 buildLog:(id)arg2 buildParameters:(id)arg3 schemeActionRecord:(id)arg4 error:(id *)arg5 actionCallbackBlock:(CDUnknownBlockType)arg6;
- (id)overridingMacrosForArchiveBuildWithSchemeName:(id)arg1 workspaceArena:(id)arg2;
@property(readonly) NSString *defaultArchiveName;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)init;

@end

@interface IDETestProgressNotificationsObserver : NSObject <IDEUnitTestsObserver>
{
    IDETestRunSession *_testRunSession;
    NSString *_currentSuite;
    NSString *_currentTestClass;
    NSString *_currentTestMethod;
}

@property(copy, nonatomic) NSString *currentTestMethod; // @synthesize currentTestMethod=_currentTestMethod;
@property(copy, nonatomic) NSString *currentTestClass; // @synthesize currentTestClass=_currentTestClass;
@property(copy, nonatomic) NSString *currentSuite; // @synthesize currentSuite=_currentSuite;
@property(retain, nonatomic) IDETestRunSession *testRunSession; // @synthesize testRunSession=_testRunSession;
- (void).cxx_destruct;
- (void)_postDistributedProgressNotification;
- (id)identifierForTestClass:(id)arg1 method:(id)arg2;
- (void)testOperationGroupDidFinish;
- (void)testOperation:(id)arg1 willFinishWithSuccess:(BOOL)arg2 withError:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(id)arg1 method:(id)arg2 performanceMetric:(id)arg3 rawOutput:(id)arg4;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testOperationDidStartExecution:(id)arg1;
- (id)initWithTestRunSession:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionCopyItemStep : IDEDistributionProcessingStep
{
}

+ (id)destinationPathForItem:(id)arg1 inDestinationRoot:(id)arg2;
+ (id)processingStepWithDistributionItem:(id)arg1;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;
- (id)initWithExtension:(id)arg1 andDistributionItem:(id)arg2;

@end

@interface IDEBuildableProductRunnable : IDERunnable <DVTXMLUnarchiving>
{
    id <IDEBuildableProduct> _buildableProduct;
    IDESchemeBuildableReference *_buildableReference;
}

+ (id)keyPathsForValuesAffectingBuildableProduct;
+ (id)keyPathsForValuesAffectingHasRunnablePath;
+ (id)keyPathsForValuesAffectingDisplayName;
@property(retain) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)addBuildableProductReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)resolveBuildableFromImport;
- (void)setScheme:(id)arg1;
@property(readonly) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
- (int)runnableType;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (BOOL)isBlueprint;
- (id)toolTip;
- (id)bundleIdentifier;
- (id)displayName;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildableProduct:(id)arg1 scheme:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionMethodExport : IDEDistributionMethod
{
}

- (BOOL)isAppStoreBound;
- (int)supportedTask;

@end

@interface IDERunGeneratesOutputAlertEvent : IDEAlertEvent
{
}

- (void)runInWorkspace:(id)arg1 context:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface IDEDistributionItemSigningInfo : NSObject
{
    DVTCodesignParameterSnapshot *_codesignParameterSnapshot;
}

@property(readonly) DVTCodesignParameterSnapshot *codesignParameterSnapshot; // @synthesize codesignParameterSnapshot=_codesignParameterSnapshot;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCodesignParameterSnapshot:(id)arg1;

@end

@interface IDEIndexClangTranslationUnit : NSObject
{
    NSString *_path;
    int _argc;
    const char **_argv;
    BOOL _isPCHFile;
    BOOL _shouldCreate;
    unsigned int _tuOptions;
    IDEIndexImportSession *_session;
    void *_cxIndex;
    struct CXTranslationUnitImpl *_cxTranslationUnit;
}

+ (void *)createCXIndexForSession:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (void)dealloc;
- (void)discard;
- (void)discardTU;
- (void)discardArgs;
- (void)logMemoryUsage;
- (void)logFailure;
- (void)logInvocation;
- (void)indexUsingDataSource:(id)arg1;
@property(readonly, nonatomic) struct CXTranslationUnitImpl *cxTranslationUnit;
- (void)resetArguments:(id)arg1;
- (id)initPCHWithPath:(id)arg1 arguments:(id)arg2 session:(id)arg3 shouldCreate:(BOOL)arg4;
- (id)initWithPath:(id)arg1 arguments:(id)arg2 session:(id)arg3;

@end

@interface IDELogProvider : NSObject <DVTInvalidation>
{
    id _domainItem;
}

+ (void)initialize;
@property(readonly) id domainItem; // @synthesize domainItem=_domainItem;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSArray *logRecords;
- (void)primitiveInvalidate;
- (id)initWithDomainItem:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEOverridingBuildProperties : NSObject
{
    NSMutableDictionary *_macros;
    NSArray *_arrayRepresentation;
    unsigned long long _hash;
}

- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEmpty;
- (id)macroDefinitionTables;
@property(readonly, copy) DVTMacroDefinitionTable *macrosFromEnvironmentXcconfigFile;
@property(readonly, copy) DVTMacroDefinitionTable *macrosFromCommandLineXcconfigFile;
@property(readonly, copy) DVTMacroDefinitionTable *macrosFromCommandLine;
@property(readonly, copy) DVTMacroDefinitionTable *synthesizedMacros;
- (void)_setMacroDefinitionTable:(id)arg1 forLevel:(int)arg2;
- (id)macroDefinitionTableForLevel:(int)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copyUsingOverridingPropertiesClass:(Class)arg1;
- (id)initWithMacroDefinitionTable:(id)arg1;
- (id)init;

@end

@interface IDEMutableOverridingBuildProperties : IDEOverridingBuildProperties
{
}

@property(copy) DVTMacroDefinitionTable *macrosFromEnvironmentXcconfigFile;
@property(copy) DVTMacroDefinitionTable *macrosFromCommandLineXcconfigFile;
@property(copy) DVTMacroDefinitionTable *macrosFromCommandLine;
@property(copy) DVTMacroDefinitionTable *synthesizedMacros;
- (void)setMacroDefinitionTable:(id)arg1 forLevel:(int)arg2;

@end

@interface IDELaunchSession : NSObject
{
    NSMutableArray *_debugSessions;
    NSMutableArray *_debuggingAdditions;
    NSMutableSet *_shellXPCLaunchSessions;
    NSMutableSet *_xpcLaunchSessions;
    DVTPerformanceMetric *_xpcDebuggingMetric;
    NSArray *_frameworkNamesIncludingExtensionsLinkedByExecutable;
    NSArray *_frameworkNamesIncludingExtensionsLinkedByExecutableForAllSlices;
    BOOL _allConsoleAdaptorsTerminated;
    NSMutableArray *_prioritizedGaugeLocations;
    NSMutableArray *_nonPrioritizedGaugeLocations;
    NSMutableDictionary *_gaugeLocationsToSortCharacteristic;
    DVTFuture *_appExtensionInstallFuture;
    BOOL _iconChanged;
    BOOL _representsAnXPCService;
    int _state;
    int _runnablePID;
    int _parentPID;
    int _simulatorPID;
    int _targetOutputState;
    IDEExecutionEnvironment *_executionEnvironment;
    IDESchemeActionRecord *_schemeActionRecord;
    IDEExecutionTracker *_executionTracker;
    id <IDEDebugSession> _currentDebugSession;
    id <IDETraceInferiorSession> _currentTraceInferiorSession;
    NSArray *_gaugeLocations;
    IDELaunchParametersSnapshot *_launchParameters;
    DVTFileDataType *_runnableType;
    IDESchemeCommand *_schemeCommand;
    IDERunDestination *_runDestination;
    NSString *_runnableDisplayName;
    IDELocationSimulator *_locationSimulator;
    NSError *_alertError;
    NSString *_explicitActivityViewTitle;
    NSArray *_xpcServices;
    NSMutableSet *_consoleAdaptors;
    DVTMapTable *_targetConsoleAdaptorToTerminationToken;
    DVTObservingToken *_codeModulesObserver;
}

+ (BOOL)automaticallyNotifiesObserversOfTargetOutputState;
+ (void)terminateLaunchSession:(id)arg1 inWorkspace:(id)arg2;
+ (id)createLaunchSessionForDebuggingAddition:(id)arg1 inWorkspace:(id)arg2 launchParameters:(id)arg3 runnableDisplayName:(id)arg4 runDestination:(id)arg5;
+ (id)launchSessionForReference:(id)arg1;
+ (void)_setLaunchSession:(id)arg1 forReference:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) DVTObservingToken *codeModulesObserver; // @synthesize codeModulesObserver=_codeModulesObserver;
@property(retain, nonatomic) DVTMapTable *targetConsoleAdaptorToTerminationToken; // @synthesize targetConsoleAdaptorToTerminationToken=_targetConsoleAdaptorToTerminationToken;
@property(retain, nonatomic) NSMutableSet *consoleAdaptors; // @synthesize consoleAdaptors=_consoleAdaptors;
@property(copy) NSArray *xpcServices; // @synthesize xpcServices=_xpcServices;
@property BOOL representsAnXPCService; // @synthesize representsAnXPCService=_representsAnXPCService;
@property(copy) NSString *explicitActivityViewTitle; // @synthesize explicitActivityViewTitle=_explicitActivityViewTitle;
@property(copy) NSError *alertError; // @synthesize alertError=_alertError;
@property(readonly) IDELocationSimulator *locationSimulator; // @synthesize locationSimulator=_locationSimulator;
@property(readonly, nonatomic) int targetOutputState; // @synthesize targetOutputState=_targetOutputState;
@property(readonly, copy) NSString *runnableDisplayName; // @synthesize runnableDisplayName=_runnableDisplayName;
@property(retain) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
@property(retain) IDESchemeCommand *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property BOOL iconChanged; // @synthesize iconChanged=_iconChanged;
@property int simulatorPID; // @synthesize simulatorPID=_simulatorPID;
@property int parentPID; // @synthesize parentPID=_parentPID;
@property(nonatomic) int runnablePID; // @synthesize runnablePID=_runnablePID;
@property(readonly) DVTFileDataType *runnableType; // @synthesize runnableType=_runnableType;
@property(retain) IDELaunchParametersSnapshot *launchParameters; // @synthesize launchParameters=_launchParameters;
@property(copy) NSArray *gaugeLocations; // @synthesize gaugeLocations=_gaugeLocations;
@property(readonly, copy) NSArray *debuggingAdditions; // @synthesize debuggingAdditions=_debuggingAdditions;
@property(retain) id <IDETraceInferiorSession> currentTraceInferiorSession; // @synthesize currentTraceInferiorSession=_currentTraceInferiorSession;
@property(retain, nonatomic) id <IDEDebugSession> currentDebugSession; // @synthesize currentDebugSession=_currentDebugSession;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain) IDEExecutionTracker *executionTracker; // @synthesize executionTracker=_executionTracker;
@property(retain) IDESchemeActionRecord *schemeActionRecord; // @synthesize schemeActionRecord=_schemeActionRecord;
@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
- (void).cxx_destruct;
- (void)performanceMetric_xpcDebuggingCheckpointWithLabel:(id)arg1;
- (void)performanceMetric_xpcDebuggingCompleted;
- (void)performanceMetric_xpcDebuggingStarted;
- (id)performanceMetric_xpcIdentifierForLaunchSession;
- (void)_handleXPCServiceObservation:(id)arg1;
- (id)_findShellXPCLaunchSessionForServiceName:(id)arg1;
- (id)xpcLaunchSessions;
- (void)_startObservingXPCServicesAndAppExtensionsStage2;
- (void)_startObservingXPCServicesAndAppExtensions;
- (id)_environmentVariablesWithTestingFilteredOut:(id)arg1;
- (id)_createLaunchSessionForXPCServiceName:(id)arg1 withLaunchParameters:(id)arg2;
- (void)_cancelXPCLaunchSessions;
@property(readonly) NSArray *frameworkNamesIncludingExtensionsLinkedByExecutableForAllSlices;
@property(readonly) NSArray *frameworkNamesIncludingExtensionsLinkedByExecutable;
- (id)_frameworkNamesIncludingExtensionsLinkedByExecutableForCpuType:(int)arg1;
- (id)debuggingAdditionMatchingID:(id)arg1;
@property(readonly, copy) NSMutableArray *mutableGaugeLocations;
- (void)_removeAllGaugeLocations;
- (void)removeGaugeLocation:(id)arg1;
- (void)addNewGaugeLocation:(id)arg1 withPriority:(unsigned long long)arg2;
- (void)addNewGaugeLocation:(id)arg1;
- (id)existingGaugeLocationForURL:(id)arg1;
- (id)referenceWhenAlive;
- (BOOL)isAlive;
@property(readonly) BOOL supportsDebugSession;
@property(readonly) BOOL isCurrentlyTracing;
- (void)_willExpire;
- (void)_invalidateExecutionEnvironment;
- (id)_frameworkNamesIncludingExtensionsFromLoadedCodeModules;
- (id)_createDebuggingAdditionForExtension:(id)arg1 availableBinariesNames:(id)arg2 anyMatchCriteriaFailuresDueToAvailableBinaries:(char *)arg3;
- (BOOL)_extensionHasLinkedFrameworkNameMatchCriteria:(id)arg1;
- (void)_didStart;
- (void)_removeConsoleAdaptorObservations:(id)arg1;
- (void)_handleConsoleAdaptorOutputTerminated:(id)arg1;
- (void)_handleConsoleItemAdded:(id)arg1;
- (void)removeConsoleAdaptor:(id)arg1;
- (void)addConsoleAdaptor:(id)arg1;
@property(readonly, copy) NSMutableSet *kvoConsoleAdaptors;
- (void)setTargetOutputState:(int)arg1;
@property(readonly) int CPUType;
- (id)initWithExecutionEnvironment:(id)arg1 launchParameters:(id)arg2 runnableDisplayName:(id)arg3 runnableType:(id)arg4 runDestination:(id)arg5;

// Remaining properties
@property(copy) NSArray *debugSessions; // @dynamic debugSessions;
@property(readonly, copy) NSMutableArray *mutableDebugSessions; // @dynamic mutableDebugSessions;
@property(retain, nonatomic) NSMutableArray *mutableDebuggingAdditions; // @dynamic mutableDebuggingAdditions;

@end

@interface IDESyntheticLaunchSession : IDELaunchSession
{
    NSString *_debuggingAdditionIdentifier;
}

@property(copy) NSString *debuggingAdditionIdentifier; // @synthesize debuggingAdditionIdentifier=_debuggingAdditionIdentifier;
- (void).cxx_destruct;
- (void)_didStart;
- (BOOL)supportsDebugSession;

@end

@interface IDEBreakpointArchivingProxy : NSObject
{
    NSString *_breakpointExtensionID;
    IDEBreakpoint *_proxiedBreakpoint;
    BOOL _wasSuccessfullyUnarchived;
}

+ (id)_breakpointExtensions;
+ (id)_extensionIDForBreakpoint:(id)arg1;
+ (id)breakpointProxyForBreakpoint:(id)arg1;
@property(readonly) BOOL wasSuccessfullyUnarchived; // @synthesize wasSuccessfullyUnarchived=_wasSuccessfullyUnarchived;
@property(readonly) IDEBreakpoint *proxiedBreakpoint; // @synthesize proxiedBreakpoint=_proxiedBreakpoint;
- (void).cxx_destruct;
- (void)addBreakpointContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBreakpointExtensionIDFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;

@end

@interface IDELocationScenarioReference : IDESchemeOptionReference
{
    int _referenceType;
}

@property int referenceType; // @synthesize referenceType=_referenceType;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

@end

@interface IDESourceControlDocumentLocation : DVTDocumentLocation
{
    NSString *_branchName;
    NSString *_revisionName;
}

@property(readonly) NSString *revisionName; // @synthesize revisionName=_revisionName;
@property(readonly) NSString *branchName; // @synthesize branchName=_branchName;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isEqualDisregardingTimestamp:(id)arg1;
- (id)workingTreeItem;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentLocation:(id)arg1 branchName:(id)arg2 revisionName:(id)arg3;
- (id)initWithDocumentURL:(id)arg1 branchName:(id)arg2 revisionName:(id)arg3;

@end

@interface IDELocation : NSObject
{
    NSNumber *_latitude;
    NSNumber *_longitude;
    IDELocationScenario *_scenario;
}

@property(readonly) IDELocationScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly) NSNumber *longitude; // @synthesize longitude=_longitude;
@property(readonly) NSNumber *latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
- (id)description;
- (id)initWithLatitude:(id)arg1 longitude:(id)arg2;

@end

@interface IDEArchiveCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEIndexNewMainFile : IDEIndexNewFile
{
    IDEIndexImportSession *_session;
    NSString *_target;
    NSString *_source;
    DVTFilePath *_pchPath;
    NSMutableArray *_files;
    NSSet *_dirtyFiles;
    long long _unitId;
    BOOL _deferred;
}

@property(nonatomic, getter=isDeferred) BOOL deferred; // @synthesize deferred=_deferred;
@property(nonatomic) long long unitId; // @synthesize unitId=_unitId;
@property(retain, nonatomic) NSSet *dirtyFiles; // @synthesize dirtyFiles=_dirtyFiles;
@property(readonly, nonatomic) NSArray *files; // @synthesize files=_files;
@property(retain, nonatomic) DVTFilePath *pchPath; // @synthesize pchPath=_pchPath;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(retain, nonatomic) IDEIndexImportSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (void)didSubmit;
- (void)submit;
- (long long)realGroupIdForId:(long long)arg1;
- (long long)realFileIdForId:(long long)arg1;
@property(readonly, nonatomic) long long realUnitId;
- (id)importer;
- (void)addFile:(id)arg1;
- (id)initWithPath:(id)arg1 modified:(id)arg2;

@end

@interface IDESourceTrees : NSObject
{
}

+ (BOOL)stringContainsSourceTreeReference:(id)arg1;
+ (id)stringByExpandingSourceTreeReferencesInString:(id)arg1;
+ (Class)sourceTreeProviderClass;

@end

@interface IDELocalizationWorkContext : NSObject <DVTInvalidation>
{
    NSMutableSet *_toInvalidate;
    id _intermediateResults;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)setIntermediateResults:(id)arg1;
- (id)intermediateResults;
- (void)primitiveInvalidate;
- (void)invalidateLater:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDELocalizationWriteStringsContext : IDELocalizationWorkContext <IDELocalizationWorkWriteData>
{
    NSURL *IDELocalizationWork_url;
    NSData *IDELocalizationWork_data;
}

@property(retain) NSData *IDELocalizationWork_data; // @synthesize IDELocalizationWork_data;
@property(retain) NSURL *IDELocalizationWork_url; // @synthesize IDELocalizationWork_url;
- (void).cxx_destruct;

@end

@interface _IDELocalizationAddFileReferenceContext : IDELocalizationWorkContext
{
    IDEContainer<IDELocalizedContainer> *_container;
    IDEGroup<IDELocalizedGroup> *_group;
    DVTLocale *_locale;
    DVTFilePath *_filePath;
}

@property(retain) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(retain) DVTLocale *locale; // @synthesize locale=_locale;
@property(retain) IDEGroup<IDELocalizedGroup> *group; // @synthesize group=_group;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizationWork : NSObject
{
}

+ (id)readStringsWorkForContext:(id)arg1;
+ (id)writeStringsWorkForContext:(id)arg1;
+ (id)groupStreamFromFileReference:(id)arg1 language:(id)arg2;
+ (id)fileReferenceStreamForName:(id)arg1 directoryPath:(id)arg2 superitem:(id)arg3 target:(id)arg4;
+ (id)_addFileReferenceWorkForAddFileReferenceContext:(id)arg1;
+ (id)_addItemAtFilePathToSCM:(id)arg1 workspace:(id)arg2;

@end

@interface IDEBuildLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDELocalizationXLIFFComparisonContext : IDELocalizationWorkContext
{
    NSURL *_destinationURL;
    NSArray *_issues;
    NSArray *_filesWithChanges;
}

@property(retain) NSArray *filesWithChanges; // @synthesize filesWithChanges=_filesWithChanges;
@property(retain) NSArray *issues; // @synthesize issues=_issues;
@property(retain) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
- (void).cxx_destruct;
- (void)recordFileChangeForImportUrl:(id)arg1 exportUrl:(id)arg2 original:(id)arg3 foundInProject:(BOOL)arg4;
- (void)recordExtraTranslationUnit:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordMissingTranslationUnit:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordMissingFile:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordExtraFile:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordEmptyTarget:(id)arg1 appendedIncomingRange:(struct _NSRange)arg2 appendedProjectRange:(struct _NSRange)arg3 importUrl:(id)arg4 exportUrl:(id)arg5;
- (void)recordMismatchedSource:(id)arg1 projectStringValue:(id)arg2 appendedIncomingRange:(struct _NSRange)arg3 appendedProjectRange:(struct _NSRange)arg4 importUrl:(id)arg5 exportUrl:(id)arg6;
- (void)recordIssue:(int)arg1 message:(id)arg2 appendedIncomingRange:(struct _NSRange)arg3 appendedProjectRange:(struct _NSRange)arg4 importUrl:(id)arg5 exportUrl:(id)arg6;

@end

@interface IDELocalizationXLIFFComparisonIssueLocation : DVTComparisonDocumentLocation
{
}

- (long long)compare:(id)arg1;
- (id)newLocation;
- (id)oldLocation;

@end

@interface IDELocalizationXLIFFComparisonIssue : NSObject
{
    int _category;
    NSString *_message;
    IDELocalizationXLIFFComparisonIssueLocation *_location;
}

@property(readonly) IDELocalizationXLIFFComparisonIssueLocation *location; // @synthesize location=_location;
@property(readonly) int category; // @synthesize category=_category;
@property(readonly) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)description;
- (id)initWithMessage:(id)arg1 category:(int)arg2 oldLocation:(id)arg3 newLocation:(id)arg4;

@end

@interface IDELocalizationXLIFFComparisonFile : NSObject
{
    BOOL _foundInProject;
    NSString *_original;
    IDELocalizationXLIFFComparisonIssueLocation *_location;
}

@property BOOL foundInProject; // @synthesize foundInProject=_foundInProject;
@property(readonly) IDELocalizationXLIFFComparisonIssueLocation *location; // @synthesize location=_location;
@property(readonly) NSString *original; // @synthesize original=_original;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)initWithOriginal:(id)arg1 oldLocation:(id)arg2 newLocation:(id)arg3 foundInProject:(BOOL)arg4;

@end

@interface IDELocalizationXLIFFTextualRepresentation : NSObject
{
    NSMutableString *_representation;
}

@property(retain) NSMutableString *representation; // @synthesize representation=_representation;
- (void).cxx_destruct;
- (unsigned long long)length;
- (BOOL)createDirectoryAndWriteToURL:(id)arg1 error:(id *)arg2;
- (struct _NSRange)appendResource:(id)arg1 translationUnits:(id)arg2;
- (void)appendResourceEnd:(id)arg1;
- (void)appendResourceStart:(id)arg1;
- (struct _NSRange)appendGap;
- (struct _NSRange)appendTranslationUnit:(id)arg1;
- (id)init;

@end

@interface IDEArchivePathsSnapshot : NSObject <NSCopying>
{
    DVTFilePath *_archivePath;
    DVTFilePath *_archiveProductsPath;
    DVTFilePath *_archiveDSYMsPath;
}

@property(retain) DVTFilePath *archiveDSYMsPath; // @synthesize archiveDSYMsPath=_archiveDSYMsPath;
@property(retain) DVTFilePath *archiveProductsPath; // @synthesize archiveProductsPath=_archiveProductsPath;
@property(retain) DVTFilePath *archivePath; // @synthesize archivePath=_archivePath;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEArchiveManager : NSObject
{
    DVTDispatchLock *_archiveManagerLock;
    NSFileManager *_fileManager;
    NSMutableArray *_archives;
    _Bool _hasScanned;
    DVTObservingToken *_distributionArchivesLocationObservingToken;
}

+ (void)initialize;
+ (id)sharedArchiveManager;
- (void).cxx_destruct;
- (BOOL)installArchiveAtPath:(id)arg1 revealInstalledArchive:(BOOL)arg2;
- (id)_installedArchiveAtPath:(id)arg1;
- (void)deleteArchives:(id)arg1;
- (void)deleteArchive:(id)arg1;
@property(copy) NSArray *archives; // @dynamic archives;
- (void)_populateArchivesIfNeeded;
- (void)_refreshArchives;
- (id)_allPotentialArchivePathsWithin:(id)arg1;
- (void)_checkPathForArchive:(id)arg1 andAddToArray:(id)arg2;
- (BOOL)_couldBeArchivePath:(id)arg1;
- (void)_revealArchiveAtPath:(id)arg1;
- (void)archiveInstalledProductsDirectoryWithPath:(id)arg1 auxiliaryFilesDirectoryPath:(id)arg2 schemeName:(id)arg3 archiveName:(id)arg4 platform:(id)arg5 revealNewArchive:(BOOL)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableArchives; // @dynamic mutableArchives;

@end

@interface IDERunDeviceService : DVTDeviceService
{
}

- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEDisassemblyStorageSupport : NSObject
{
}

+ (unsigned long long)_integerFromHexString:(id)arg1;
+ (unsigned long long)_integerAddressFromLineOfDisassembly:(id)arg1;
+ (id)hexAddressFromLineOfDisassembly:(id)arg1;
+ (id)addressForLineNumber:(unsigned long long)arg1 inDisassembly:(id)arg2;
+ (unsigned long long)_lineNumberForAddress:(id)arg1 inLinesOfDisassembly:(id)arg2;
+ (unsigned long long)lineNumberForAddress:(id)arg1 inDisassembly:(id)arg2;
+ (BOOL)isDisassemblyStorageURL:(id)arg1;

@end

@interface IDETestBundleDeviceRecord : NSObject
{
    NSString *_platformIdentifier;
    NSString *_modelCode;
    NSString *_cpuKind;
    NSNumber *_cpuCount;
    NSNumber *_cpuSpeedInMHz;
    NSNumber *_busSpeedInMHz;
    NSNumber *_physicalCPUCoresPerPackage;
    NSNumber *_logicalCPUCoresPerPackage;
}

@property(copy) NSNumber *logicalCPUCoresPerPackage; // @synthesize logicalCPUCoresPerPackage=_logicalCPUCoresPerPackage;
@property(copy) NSNumber *physicalCPUCoresPerPackage; // @synthesize physicalCPUCoresPerPackage=_physicalCPUCoresPerPackage;
@property(copy) NSNumber *busSpeedInMHz; // @synthesize busSpeedInMHz=_busSpeedInMHz;
@property(copy) NSNumber *cpuSpeedInMHz; // @synthesize cpuSpeedInMHz=_cpuSpeedInMHz;
@property(copy) NSNumber *cpuCount; // @synthesize cpuCount=_cpuCount;
@property(copy) NSString *cpuKind; // @synthesize cpuKind=_cpuKind;
@property(copy) NSString *modelCode; // @synthesize modelCode=_modelCode;
@property(copy) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDeviceRecord:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (id)initWithPlatformIdentifier:(id)arg1 modelCode:(id)arg2 cpuKind:(id)arg3 cpuCount:(id)arg4 cpuSpeedInMHz:(id)arg5 busSpeedInMHz:(id)arg6 physicalCPUCoresPerPackage:(id)arg7 logicalCPUCoresPerPackage:(id)arg8;

@end

@interface IDETestBundleRunDestinationRecord : NSObject
{
    NSString *_targetArchitecture;
    IDETestBundleDeviceRecord *_targetDevice;
    IDETestBundleDeviceRecord *_localComputer;
}

@property(retain) IDETestBundleDeviceRecord *localComputer; // @synthesize localComputer=_localComputer;
@property(retain) IDETestBundleDeviceRecord *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (id)initWithRunDestinationRecord:(id)arg1;
- (id)initWithTargetArchitecture:(id)arg1 targetDeviceRecord:(id)arg2 localComputerRecord:(id)arg3;

@end

@interface IDELocalizationLanguageImportContext : IDELocalizationWorkContext
{
    NSURL *_sourceUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSXMLDocument *_importXLIFF;
}

@property(retain) NSXMLDocument *importXLIFF; // @synthesize importXLIFF=_importXLIFF;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *sourceUrl; // @synthesize sourceUrl=_sourceUrl;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizationImporterContext : IDELocalizationWorkContext
{
    BOOL _resolved;
    NSURL *_sourceUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSString *_sourceLanguage;
    NSString *_targetLanguage;
    CDUnknownBlockType _onNeedsResolutions;
    IDELocalizationLanguageExportContext *_languageExportContext;
    IDELocalizationLanguageImportContext *_languageImportContext;
    IDELocalizationXLIFFComparisonContext *_comparison;
}

@property BOOL resolved; // @synthesize resolved=_resolved;
@property(retain) IDELocalizationXLIFFComparisonContext *comparison; // @synthesize comparison=_comparison;
@property(retain) IDELocalizationLanguageImportContext *languageImportContext; // @synthesize languageImportContext=_languageImportContext;
@property(retain) IDELocalizationLanguageExportContext *languageExportContext; // @synthesize languageExportContext=_languageExportContext;
@property(copy) CDUnknownBlockType onNeedsResolutions; // @synthesize onNeedsResolutions=_onNeedsResolutions;
@property(retain) NSString *targetLanguage; // @synthesize targetLanguage=_targetLanguage;
@property(retain) NSString *sourceLanguage; // @synthesize sourceLanguage=_sourceLanguage;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *sourceUrl; // @synthesize sourceUrl=_sourceUrl;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizationImporter : NSObject <IDELocalizationWorkProgress, DVTInvalidation>
{
    IDELocalizationStream *_importWork;
    IDELocalizationImporterContext *_importContext;
    long long _workDone;
    long long _workOutstanding;
    DVTNotificationToken *_localizationPhaseObserver;
    DVTNotificationToken *_localizationWorkItemIncrementObserver;
    DVTNotificationToken *_localizationWorkItemDecrementObserver;
    id <DVTCancellable> _workToken;
    BOOL _complete;
    long long _progress;
    NSString *_phase;
    NSString *_workTitle;
    CDUnknownBlockType _onErrorBlock;
    CDUnknownBlockType _onCompletedBlock;
}

+ (void)initialize;
+ (id)importerFromURL:(id)arg1 container:(id)arg2 sourceLanguage:(id)arg3 onNeedsResolutions:(CDUnknownBlockType)arg4;
+ (id)importWorkForContext:(id)arg1;
@property(copy) CDUnknownBlockType onCompletedBlock; // @synthesize onCompletedBlock=_onCompletedBlock;
@property(copy) CDUnknownBlockType onErrorBlock; // @synthesize onErrorBlock=_onErrorBlock;
@property(readonly) NSString *workTitle; // @synthesize workTitle=_workTitle;
@property(retain) NSString *phase; // @synthesize phase=_phase;
@property BOOL complete; // @synthesize complete=_complete;
@property long long progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (void)primitiveInvalidate;
- (id)initWithImportWork:(id)arg1 withContext:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECertificateUtilitiesUIInitializer : NSObject <IDEInitialization>
{
}

+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;

@end

@interface IDEWorkspaceIntegrityIssueProvider : IDEIssueProvider
{
    id _modelObjectDidChangeObserver;
    DVTObservingToken *_referencedContainersObserverToken;
    DVTMapTable *_referencedContainersToIssueObserverTokensMapTable;
    DVTMapTable *_referencedContainersToProviderContextsMapTable;
    DVTObservingToken *_blueprintsObserverToken;
    DVTMapTable *_blueprintsToIssueObserverTokensMapTable;
    DVTMapTable *_blueprintsToProviderContextsMapTable;
}

+ (int)providerType;
+ (void)initialize;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_blueprintsDidChange;
- (void)_referencedContainersDidChange;
- (id)_integrityIssuesForDataSource:(id)arg1;
- (id)_issueForMessage:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDEWorkspaceIntegrityIssueProviderContext : NSObject
{
    IDEIssueProvider *_issueProvider;
    id <IDEIntegrityLogDataSource> _dataSource;
    unsigned long long _hash;
}

@property(readonly) id <IDEIntegrityLogDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIssueManager:(id)arg1 dataSource:(id)arg2;

@end

@interface IDEUnitTestsSummariesBuilder : NSObject <IDEUnitTestsObserver>
{
    IDESchemeActionTestableSummary *_currentTestable;
    IDESchemeActionTestSummaryGroup *_currentTestGroup;
    NSMutableArray *_testSuiteStack;
    NSMutableArray *_performanceMetricSummaries;
    NSMutableArray *_failureSummaries;
    IDESchemeActionResult *_actionResult;
}

@property(retain, nonatomic) IDESchemeActionResult *actionResult; // @synthesize actionResult=_actionResult;
- (void).cxx_destruct;
- (id)identifierForTestClass:(id)arg1 method:(id)arg2;
- (void)testOperationGroupDidFinish;
- (void)testOperation:(id)arg1 willFinishWithSuccess:(BOOL)arg2 withError:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(id)arg1 method:(id)arg2 performanceMetric:(id)arg3 rawOutput:(id)arg4;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testOperationDidStartExecution:(id)arg1;
- (void)_popSuite;
- (void)_pushSuite:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionMethodSaveBuiltProducts : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEIssueProvider : NSObject <DVTInvalidation>
{
    IDEIssueManager *_issueManager;
    DVTExtension *_extension;
    IDEIssueProviderSession *_session;
}

+ (int)providerType;
+ (void)initialize;
@property(retain) IDEIssueProviderSession *_session; // @synthesize _session;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(retain) IDEIssueManager *issueManager; // @synthesize issueManager=_issueManager;
- (void).cxx_destruct;
- (BOOL)allowsExistingIssuesToBeCoalesced;
- (BOOL)allowsNewIssuesToBeCoalesced;
@property(readonly) BOOL _filterIssuesByActiveScheme;
- (id)logDocumentLocationForIssue:(id)arg1;
- (id)activityLogRecordForIssue:(id)arg1;
- (void)endProviderSession;
- (void)startProviderSession;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)removeIssues:(id)arg1 forProviderContext:(id)arg2;
- (void)addIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
- (void)setIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIssueProviderSession : NSObject
{
    double _timestamp;
}

@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
- (id)init;

@end

@interface IDESchemeOptionReference : NSObject <DVTXMLUnarchiving>
{
    NSString *_identifier;
    NSString *resolvedReference;
}

@property(copy) NSString *resolvedReference; // @synthesize resolvedReference;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)resolvedReferenceForWorkspace:(id)arg1;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceControlArchiveWrapper : NSObject
{
    BOOL _unarchived;
    DVTFilePath *_unarchivedLocation;
    DVTFilePath *_filePath;
    NSString *_comment;
    DVTFileWrapper *_wrapper;
}

+ (id)commentForArchiveAtPath:(id)arg1;
+ (id)archiveDataType;
@property(retain) DVTFileWrapper *wrapper; // @synthesize wrapper=_wrapper;
@property(retain) NSString *comment; // @synthesize comment=_comment;
@property(retain) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (BOOL)archiveFromFilePath:(id)arg1 toFilePath:(id)arg2 withError:(id *)arg3;
- (BOOL)unarchiveFromFilePath:(id)arg1 withError:(id *)arg2;
- (id)temporaryLocationForFilePath:(id)arg1;
- (BOOL)isArchive:(id)arg1;
- (BOOL)isDirectory;
- (BOOL)writeToURL:(id)arg1 options:(unsigned long long)arg2 originalContentsURL:(id)arg3 error:(id *)arg4;
- (id)initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)init;
- (id)initWithPath:(id)arg1;

@end

@interface IDEXMLPackageContainer : IDEContainer <DVTXMLUnarchiverDelegate, DVTXMLUnarchiving, IDECustomDataStoring>
{
    IDEGroup *_unarchivingGroup;
    NSMutableDictionary *_unarchivingProperties;
    IDEDirectoryBasedCustomDataStore *_customDataStore;
    DVTMapTable *_unsavedXMLDataForCustomDataStoreSpecifier;
    BOOL _hasUnhandledArchiveData;
}

+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (id)xmlArchiveFileName;
+ (id)rootElementName;
+ (BOOL)supportsFilePersistence;
@property(readonly) BOOL hasUnhandledArchiveData; // @synthesize hasUnhandledArchiveData=_hasUnhandledArchiveData;
@property(retain) IDEDirectoryBasedCustomDataStore *customDataStore; // @synthesize customDataStore=_customDataStore;
- (void).cxx_destruct;
@property(readonly) float maxSupportedArchiveVersion;
@property(readonly) float archiveVersion;
@property(readonly) NSString *displayName;
- (BOOL)supportsCustomDataForOwnership:(id)arg1;
- (void)moveCustomDataWithSpecifier:(id)arg1 toSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)removeCustomDataWithSpecifier:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)writeCustomData:(id)arg1 withSpecifier:(id)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)readCustomDataWithSpecifier:(id)arg1 error:(id *)arg2;
- (id)customDataOwnershipsForGrouping:(id)arg1;
- (id)customDataSpecifiersForGrouping:(id)arg1 ownership:(id)arg2;
- (void)primitiveInvalidate;
- (void)addSpecifier:(id)arg1 inWorkspace:(id)arg2 toSCMWithCompletionBlock:(CDUnknownBlockType)arg3;
- (void)scmStatusForSpecifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_handleFilePathDidChange:(id)arg1;
- (BOOL)writeToFilePath:(id)arg1 forceWrite:(BOOL)arg2 error:(id *)arg3;
- (id)_xmlData;
- (BOOL)didReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)willReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)customDataStoreClosing:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_createCustomDataStore:(id)arg1;
- (id)_archiveFilePathForFilePath:(id)arg1;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_addObject:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_setProperty:(id)arg1 fromUTF8String:(const char *)arg2 fromXMLUnarchiver:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildTask : DVTOperation
{
    NSString *_identifier;
    NSDictionary *_properties;
    IDEActivityLogSection *_activityLogSection;
    CDUnknownBlockType _didStartExecutingBlock;
    CDUnknownBlockType _activityLogSectionDidChangeBlock;
    CDUnknownBlockType _exitCodeWasSetBlock;
    CDUnknownBlockType _updateBuildStatusForBuildTaskBlock;
    BOOL _restorePersistedBuildResults;
    BOOL _dontActuallyRun;
    int _exitCode;
    CDUnknownBlockType _addPostprocessingBlocks;
}

+ (id)defaultProperties;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;
+ (void)initialize;
@property(copy) CDUnknownBlockType addPostprocessingBlocks; // @synthesize addPostprocessingBlocks=_addPostprocessingBlocks;
@property BOOL dontActuallyRun; // @synthesize dontActuallyRun=_dontActuallyRun;
@property(copy) CDUnknownBlockType updateBuildStatusForBuildTask; // @synthesize updateBuildStatusForBuildTask=_updateBuildStatusForBuildTaskBlock;
@property(copy) CDUnknownBlockType exitCodeWasSet; // @synthesize exitCodeWasSet=_exitCodeWasSetBlock;
@property(copy) CDUnknownBlockType activityLogSectionDidChange; // @synthesize activityLogSectionDidChange=_activityLogSectionDidChangeBlock;
@property(copy) CDUnknownBlockType didStartExecuting; // @synthesize didStartExecuting=_didStartExecutingBlock;
@property(nonatomic) int exitCode; // @synthesize exitCode=_exitCode;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) NSDictionary *properties; // @synthesize properties=_properties;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)longDescription;
- (id)description;
- (void)main;
- (void)addStatisticsDataToStatisticsSection:(id)arg1;
- (BOOL)isWrapperForCommand:(id)arg1;
- (id)init;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDEDistributionSkipPackagingStep : IDEDistributionProcessingStep
{
}

+ (id)processingStep;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;

@end

@interface IDEXMLPackageContainerCore : IDEContainerCore <IDEXMLPackageContainerCore>
{
}

- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceControlPatchBuilder : NSObject
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_treeNodes;
    NSMutableDictionary *_itemNodes;
    NSOperationQueue *_queue;
    BOOL _resolved;
    NSString *_message;
    NSString *_name;
}

+ (id)patchWithLocation:(id)arg1 workspace:(id)arg2 error:(id *)arg3;
@property BOOL resolved; // @synthesize resolved=_resolved;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (id)filePath;
- (id)buildAtFilePath:(id)arg1 withError:(id *)arg2;
- (id)buildWithError:(id *)arg1;
- (void)_processInfoForItems:(id)arg1 inTree:(id)arg2;
- (void)addDiffDescriptors:(id)arg1 forLocation:(id)arg2;
- (void)addItems:(id)arg1 forTree:(id)arg2;
- (id)nodeForTree:(id)arg1;
- (id)nodeForItem:(id)arg1;
- (id)_itemNodeFromWrapper:(id)arg1 withInfo:(id)arg2 parent:(id)arg3;
- (id)_treeNodeFromWrapper:(id)arg1 forTree:(id)arg2 withInfo:(id)arg3;
- (id)_scanRelativeItemFilePathsFromWrapper:(id)arg1;
- (id)_bestTreeInWorkspaceForFileWrapper:(id)arg1;
- (id)_patchWithWrapper:(id)arg1 error:(id *)arg2;
- (id)init;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEAppClientTracker : NSObject <IDEClientTracking>
{
    IDEConcreteClientTracker *_clientTracker;
}

+ (id)sharedAppClientTracker;
- (void).cxx_destruct;
- (void)cancelTrackedClients;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerUncancellableClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEConcreteClientTracker : NSObject <IDEClientTracking>
{
    NSMutableSet *_clientTrackingTokensRequiringCancellation;
    NSMutableSet *_clientTrackingTokensRequiringCancellationPrompt;
    NSMutableSet *_clientTrackingTokensNotSupportingCancellation;
    BOOL _isCancelling;
}

- (void).cxx_destruct;
- (void)_clientCancellationTimeout;
- (void)cancelTrackedClients;
- (void)unregisterClient:(id)arg1;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerUncancellableClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEConcreteClientTrackingToken : NSObject <IDEClientTrackingToken>
{
    NSString *_clientName;
    CDUnknownBlockType _cancellationBlock;
    BOOL _hasUnregistered;
    IDEConcreteClientTracker *_clientTracker;
    DVTSystemActivityToken *_systemActivityToken;
}

@property(retain) DVTSystemActivityToken *systemActivityToken; // @synthesize systemActivityToken=_systemActivityToken;
@property(readonly) NSString *clientName; // @synthesize clientName=_clientName;
- (void).cxx_destruct;
- (void)cancelClient;
- (id)initWithClientName:(id)arg1 clientTracker:(id)arg2 cancellationBlock:(CDUnknownBlockType)arg3;
@property(readonly, copy) NSString *description;
- (void)unregisterClient;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildableSnapshot : NSObject
{
    id <IDEBuildable> _buildable;
    NSString *_name;
    IDEBuildParameters *_buildParameters;
    IDEActivityLogSection *_activityLogSection;
    BOOL _cleanupDidRun;
    DVTDispatchLock *_syncLock;
    NSMutableArray *_postprocessingBlocks;
    NSArray *_currentBuildTasks;
    NSMutableArray *_readyBuildCommands;
    NSMutableArray *_startedBuildTasks;
}

+ (id)_enqueue_semaphore;
+ (void)initialize;
@property(retain) NSMutableArray *startedBuildTasks; // @synthesize startedBuildTasks=_startedBuildTasks;
@property(retain) NSMutableArray *readyBuildCommands; // @synthesize readyBuildCommands=_readyBuildCommands;
@property(retain) NSArray *currentBuildTasks; // @synthesize currentBuildTasks=_currentBuildTasks;
@property(retain) NSMutableArray *postprocessingBlocks; // @synthesize postprocessingBlocks=_postprocessingBlocks;
@property(retain) DVTDispatchLock *syncLock; // @synthesize syncLock=_syncLock;
@property(retain) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(readonly) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) id <IDEBuildable> buildable; // @synthesize buildable=_buildable;
- (void).cxx_destruct;
- (id)description;
- (void)cleanupForBuilder:(id)arg1;
- (void)_cleanupOnlyOnceForBuilder:(id)arg1;
- (void)builderWasCancelled:(id)arg1;
- (void)buildForBuilderDidFinish:(id)arg1;
- (void)buildDidFinishForBuilder:(id)arg1 buildPlan:(id)arg2;
- (id)buildTaskForBuildCommand:(id)arg1 builder:(id)arg2;
- (BOOL)prepareForBuildingWithBuildPlan:(id)arg1;
- (id)buildPlanForBuilder:(id)arg1 buildCommand:(int)arg2 buildOnlyTheseFiles:(id)arg3;
- (id)nextBuildCommandsToRunForBuilder:(id)arg1 buildCommand:(int)arg2 buildOnlyTheseFiles:(id)arg3;
- (id)nextBuildTasksToRunForBuilder:(id)arg1 buildCommand:(int)arg2 buildOnlyTheseFiles:(id)arg3;
- (BOOL)buildForBuilderWillStart:(id)arg1;
- (int)performBuildForBuilder:(id)arg1 buildCommand:(int)arg2 buildOnlyTheseFiles:(id)arg3;
- (BOOL)prepareForBuildingForBuilder:(id)arg1;
- (void)_buildCommandDidRestoreCachedOutputs:(id)arg1;
- (void)_updateBuildOperationStatusForBuilder:(id)arg1 buildTask:(id)arg2;
- (void)_buildTaskDidStartForBuilder:(id)arg1 buildTask:(id)arg2;
- (void)addPostprocessingBlocks:(id)arg1;
- (id)initFromBuildable:(id)arg1 withBuildParameters:(id)arg2;

@end

@interface IDEConcretePrimitiveSchemeCommand : IDESchemeCommand <IDEPrimitiveSchemeCommand>
{
}


// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface IDESchemeCommand : NSObject
{
    BOOL _appleInternalOnly;
    BOOL _supportsSingleFileProcessing;
    BOOL _shouldLaunch;
    BOOL _shouldTest;
    BOOL _shouldProfile;
    BOOL _shouldArchive;
    BOOL _shouldInstall;
    BOOL _shouldGenerateOptimizationProfile;
    NSString *_commandName;
    NSString *_commandNameGerund;
}

+ (id)availablePrimitiveSchemeCommands;
+ (id)allNonAppleInternalPrimitiveSchemeCommands;
+ (id)allPrimitiveSchemeCommands;
+ (id)availableSchemeCommands;
+ (id)allNonAppleInternalSchemeCommands;
+ (id)allSchemeCommands;
+ (id)installSchemeCommand;
+ (id)integrateSchemeCommand;
+ (id)testForPGOSchemeCommand;
+ (id)launchForPGOSchemeCommand;
+ (id)analyzeSchemeCommand;
+ (id)archiveSchemeCommand;
+ (id)profileSchemeCommand;
+ (id)testSchemeCommand;
+ (id)launchSchemeCommand;
@property(readonly, nonatomic) BOOL shouldGenerateOptimizationProfile; // @synthesize shouldGenerateOptimizationProfile=_shouldGenerateOptimizationProfile;
@property(readonly, nonatomic) BOOL shouldInstall; // @synthesize shouldInstall=_shouldInstall;
@property(readonly, nonatomic) BOOL shouldArchive; // @synthesize shouldArchive=_shouldArchive;
@property(readonly, nonatomic) BOOL shouldProfile; // @synthesize shouldProfile=_shouldProfile;
@property(readonly, nonatomic) BOOL shouldTest; // @synthesize shouldTest=_shouldTest;
@property(readonly, nonatomic) BOOL shouldLaunch; // @synthesize shouldLaunch=_shouldLaunch;
@property(readonly, nonatomic) BOOL supportsSingleFileProcessing; // @synthesize supportsSingleFileProcessing=_supportsSingleFileProcessing;
@property(readonly, nonatomic, getter=isAppleInternalOnly) BOOL appleInternalOnly; // @synthesize appleInternalOnly=_appleInternalOnly;
@property(readonly, copy, nonatomic) NSString *commandNameGerund; // @synthesize commandNameGerund=_commandNameGerund;
@property(readonly, copy, nonatomic) NSString *commandName; // @synthesize commandName=_commandName;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCommandName:(id)arg1 gerund:(id)arg2 appleInternalOnly:(BOOL)arg3;
- (id)init;

@end

@interface IDEClangDiagnosticActivityLogMessage : IDEDiagnosticActivityLogMessage
{
    int _diagnosticSeverity;
}

+ (void)initialize;
- (int)diagnosticSeverity;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 workingDirectory:(id)arg4 documentURL:(id)arg5;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 workingDirectory:(id)arg4;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 documentURL:(id)arg4;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 documentURL:(id)arg3;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2;

@end

@interface IDEArchivedContent : NSObject
{
    IDEArchive *_archive;
}

+ (BOOL)fillInfoDictionary:(id)arg1 forContentAtPath:(id)arg2 inArchiveProductsDirectory:(id)arg3;
+ (id)soleArchivedContentRelativePathInDirectory:(id)arg1;
+ (id)archivedContentPathPlistKey;
+ (id)archivedContentPropertiesPlistKey;
+ (id)keyPathsForValuesAffectingContentPath;
+ (id)_archivedContentPathForArchive:(id)arg1;
+ (id)_archivedContentShortBundleVersionStringForArchive:(id)arg1;
+ (id)_archivedContentBundleVersionForArchive:(id)arg1;
+ (id)_archivedContentBundleIdentifierForArchive:(id)arg1;
+ (id)archivedContentInfoDictForArchive:(id)arg1;
+ (BOOL)validArchivedContentInfoInArchive:(id)arg1;
+ (id)archivedContentWithArchive:(id)arg1;
+ (BOOL)fillArchivedContentInfoInArchiveInfoDictionary:(id)arg1 forContentInArchiveProductsDirectory:(id)arg2;
+ (id)contentClasses;
@property(readonly) IDEArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (long long)autodetectedFormatForPackaging;
- (BOOL)supportsPackagingAsFormat:(long long)arg1;
@property(readonly) IDEArchivePackager *packager;
@property(readonly) NSString *shortBundleVersionString;
@property(readonly) NSString *bundleVersion;
@property(readonly) NSString *bundleIdentifier;
@property(readonly) DVTFilePath *contentPath;
- (id)initWithArchive:(id)arg1;

@end

@interface IDEXcodeServerManager : NSObject
{
    NSMutableSet *_servers;
    NSString *_computerName;
}

+ (id)sharedServerManager;
@property(retain, nonatomic) NSString *computerName; // @synthesize computerName=_computerName;
@property(retain, nonatomic) NSSet *servers; // @synthesize servers=_servers;
- (void).cxx_destruct;
- (id)typeIdentifier;
- (id)_botsFilePath;
- (void)removeLegacyServer:(id)arg1;
- (id)_readServersFromUserDefaults;
- (void)refresh;
- (void)dealloc;
- (id)init;

@end

@interface IDEXcodeServer : NSObject
{
    NSString *_name;
    NSString *_netServiceDomain;
    NSString *_netServiceType;
    NSString *_netServiceName;
    NSString *_GUID;
    NSString *_userName;
    BOOL _enabled;
    BOOL _attemptGuestAuthentication;
    unsigned long long _portNumber;
    NSString *_connectionAddress;
    NSString *_password;
    unsigned long long _reachability;
    NSError *_connectionError;
    NSString *_connectionErrorFullDescription;
    NSString *_serverCompatibilityErrorText;
}

+ (id)xcodeServerWithPropertyListRepresentation:(id)arg1;
@property(readonly, copy, nonatomic) NSString *serverCompatibilityErrorText; // @synthesize serverCompatibilityErrorText=_serverCompatibilityErrorText;
@property(readonly, copy, nonatomic) NSString *connectionErrorFullDescription; // @synthesize connectionErrorFullDescription=_connectionErrorFullDescription;
@property(readonly, nonatomic) NSError *connectionError; // @synthesize connectionError=_connectionError;
@property(readonly, nonatomic) unsigned long long reachability; // @synthesize reachability=_reachability;
@property(readonly, nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly, copy, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
@property(readonly, copy, nonatomic) NSString *connectionAddress; // @synthesize connectionAddress=_connectionAddress;
@property(readonly, copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithPropertyListRepresentation:(id)arg1;

@end

@interface IDENetServiceXcodeServer : IDEXcodeServer
{
}

- (id)initWithPropertyListRepresentation:(id)arg1;

@end

@interface IDEConnectionAddressXcodeServer : IDEXcodeServer
{
}

- (id)initWithPropertyListRepresentation:(id)arg1;
- (id)initWithConnectionAddress:(id)arg1 portNumber:(unsigned long long)arg2;
- (id)_nameFromConnectionAddress:(id)arg1;

@end

@interface IDETestRunner : NSObject
{
    NSMutableArray *_skippedTests;
    NSMutableArray *_testResults;
    NSMutableSet *_runningTests;
    id <IDETestable> _testable;
    IDERunnable *_host;
    id <IDETestingSpecifier> _testingSpecifier;
}

+ (void)initialize;
@property(retain) IDERunnable *host; // @synthesize host=_host;
@property(retain) id <IDETestingSpecifier> testingSpecifier; // @synthesize testingSpecifier=_testingSpecifier;
@property(retain) id <IDETestable> testable; // @synthesize testable=_testable;
- (void).cxx_destruct;
- (void)willRunTest:(id)arg1;
- (void)didRunTest:(id)arg1 withResult:(id)arg2;
- (id)defaultTestArgumentsOperationForBuildParameters:(id)arg1 launchParameters:(id)arg2 runDestination:(id)arg3 workspace:(id)arg4 error:(id *)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)defaultTestEnvironmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (id)testOperationsForExecutionEnvironment:(id)arg1 buildParameters:(id)arg2 runDestination:(id)arg3 workspace:(id)arg4 testOperationErrorBlock:(CDUnknownBlockType)arg5 error:(id *)arg6 launchParametersBlock:(CDUnknownBlockType)arg7;
- (id)testOperationsForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 workspace:(id)arg5 error:(id *)arg6 launchParametersBlock:(CDUnknownBlockType)arg7;
- (id)testHostRunnableForRunDestination:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableRunningTests; // @dynamic mutableRunningTests;
@property(readonly) NSMutableArray *mutableSkippedTests; // @dynamic mutableSkippedTests;
@property(readonly) NSMutableArray *mutableTestResults; // @dynamic mutableTestResults;
@property(copy) NSSet *runningTests; // @dynamic runningTests;
@property(copy) NSArray *skippedTests; // @dynamic skippedTests;
@property(copy) NSArray *testResults; // @dynamic testResults;

@end

@interface IDEDistributionCopyFileStep : IDEDistributionProcessingStep
{
    DVTFilePath *_sourcePath;
    NSString *_destinationPath;
}

+ (id)processingStepWithSourcePath:(id)arg1 distributionItem:(id)arg2 andRelativeDestinationPath:(id)arg3;
+ (id)processingStepWithSourcePath:(id)arg1 andRelativeDestinationPath:(id)arg2;
- (void).cxx_destruct;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;

@end

@interface IDEIndexAutoImportItemCollection : IDEIndexCollection
{
    DVTSourceCodeSymbolKind *_symbolKind;
}

@property(retain, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
- (void).cxx_destruct;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexAutoImportItem : NSObject <IDEAutoImportable>
{
    IDEIndexDatabase *_database;
    BOOL _checkedAutoImportability;
    long long _resolutionOffset;
    BOOL _inProject;
    BOOL _autoImportable;
    NSString *_name;
    NSString *_completionString;
    DVTFilePath *_filePathToHeaderToImport;
    NSString *_resolution;
    DVTSourceCodeSymbolKind *_symbolKind;
}

@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(readonly, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject; // @synthesize inProject=_inProject;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport; // @synthesize filePathToHeaderToImport=_filePathToHeaderToImport;
@property(readonly, nonatomic) NSString *completionString; // @synthesize completionString=_completionString;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) IDEIndexCollection *definitions;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable; // @synthesize autoImportable=_autoImportable;
- (id)initWithName:(id)arg1 completionString:(id)arg2 resolution:(id)arg3 file:(id)arg4 inProject:(BOOL)arg5 symbolKind:(id)arg6 database:(id)arg7 resolutionOffset:(long long)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IDEEntitlementsProcessor : NSObject
{
    IDEDistributionMethod *_distributionMethod;
    IDEDistributionItem *_distributionItem;
    IDEEntitlementsDictionary *_profileEntitlements;
    IDEEntitlementsDictionary *_itemEntitlements;
}

@property(readonly, nonatomic) IDEEntitlementsDictionary *itemEntitlements; // @synthesize itemEntitlements=_itemEntitlements;
@property(readonly, nonatomic) IDEEntitlementsDictionary *profileEntitlements; // @synthesize profileEntitlements=_profileEntitlements;
@property(readonly, nonatomic) IDEDistributionItem *distributionItem; // @synthesize distributionItem=_distributionItem;
@property(readonly, nonatomic) IDEDistributionMethod *distributionMethod; // @synthesize distributionMethod=_distributionMethod;
- (void).cxx_destruct;
- (BOOL)runWithError:(id *)arg1;
@property(readonly, nonatomic) BOOL needsInteraction;
- (id)initWithDistributionMethod:(id)arg1 distributionItem:(id)arg2 profileEntitlements:(id)arg3 itemEntitlements:(id)arg4;

@end

@interface IDEInitializationErrorRecoveryAttempter : NSObject
{
}

- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;

@end

@interface IDEFoundationTestInitializer : NSObject
{
}

+ (BOOL)initializeTestabilityWithUI:(BOOL)arg1 error:(id *)arg2;

@end

@interface IDEShellCommandBreakpointAction : IDEBreakpointAction
{
    BOOL _waitUntilDone;
    NSString *_command;
    NSString *_arguments;
}

+ (id)propertiesAffectingPersistenceState;
@property BOOL waitUntilDone; // @synthesize waitUntilDone=_waitUntilDone;
@property(copy, nonatomic) NSString *arguments; // @synthesize arguments=_arguments;
@property(copy, nonatomic) NSString *command; // @synthesize command=_command;
- (void).cxx_destruct;
- (void)setWaitUntilDoneFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)_stringForFileHandleData:(id)arg1;
- (id)_taskWithLaunchPath:(id)arg1 arguments:(id)arg2 consoleAdaptor:(id)arg3;
- (id)_errorMessageForShellCommandValidity:(int)arg1 shellCommand:(id)arg2;
- (int)_commandValidity:(id)arg1;
- (id)_fullPathOfCommand:(int *)arg1;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (id)_argumentsArrayForBreakpoint:(id)arg1;
- (void)_extractExpressionsAndMacrosFromCommandAndArguments;
- (void)_shellCommandActionCommonInit;
- (id)init;

@end

@interface IDEExecutionActionArchivingProxy : NSObject
{
    NSString *_actionExtensionID;
    IDEExecutionAction *_proxiedAction;
}

+ (id)actionProxyForAction:(id)arg1;
@property(readonly) IDEExecutionAction *proxiedAction; // @synthesize proxiedAction=_proxiedAction;
@property(readonly) NSString *actionExtensionID; // @synthesize actionExtensionID=_actionExtensionID;
- (void).cxx_destruct;
- (void)addActionContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setActionTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;

@end

@interface IDEProfileOperation : DVTOperation
{
    IDELaunchParametersSnapshot *_launchParameters;
}

+ (id)operationWithLaunchParametersSnapshot:(id)arg1 block:(CDUnknownBlockType)arg2;
@property(retain) IDELaunchParametersSnapshot *launchParameters; // @synthesize launchParameters=_launchParameters;
- (void).cxx_destruct;

@end

@interface IDECompilationBuildTask : IDECommandLineBuildTask
{
}

- (id)description;
- (void)main;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDELocalizationStream : NSObject <IDELocalizationStreamPublisher, IDELocalizationStreamConsumer>
{
    BOOL _wasStarted;
    id <IDELocalizationStreamConsumer> _consumer;
    id <DVTCancellable> _subscription;
}

+ (void)initialize;
+ (id)streamForError:(id)arg1;
+ (id)streamForValues:(id)arg1;
+ (id)withOnNextBlock:(CDUnknownBlockType)arg1 onErrorBlock:(CDUnknownBlockType)arg2 onCompletedBlock:(CDUnknownBlockType)arg3;
@property BOOL wasStarted; // @synthesize wasStarted=_wasStarted;
@property(retain) id <DVTCancellable> subscription; // @synthesize subscription=_subscription;
@property(retain) id <IDELocalizationStreamConsumer> consumer; // @synthesize consumer=_consumer;
- (void).cxx_destruct;
- (id)subscribe:(id)arg1;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (id)deleteItemsWorkForPathStrings;
- (id)createDirectoriesWorkForPathStrings;
- (id)systemTaskWorkForContexts;
- (id)writeDataWorkForContexts;
- (id)collectInWorkContext:(id)arg1;
- (id)join;
- (id)asyncMap:(CDUnknownBlockType)arg1;
- (id)map:(CDUnknownBlockType)arg1;
- (id)disperse;
- (id)collectInContext:(id)arg1 forKey:(id)arg2;
- (id)collect;
- (id)collectIn:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)filter:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _IDELocalizationStreamMap : IDELocalizationStream
{
    BOOL _shouldComplete;
    id <IDELocalizationStreamPublisher> _publisher;
    CDUnknownBlockType _work;
    unsigned long long _outstandingWork;
}

+ (id)withPublisher:(id)arg1 withWork:(CDUnknownBlockType)arg2;
@property BOOL shouldComplete; // @synthesize shouldComplete=_shouldComplete;
@property unsigned long long outstandingWork; // @synthesize outstandingWork=_outstandingWork;
@property(copy) CDUnknownBlockType work; // @synthesize work=_work;
@property(retain) id <IDELocalizationStreamPublisher> publisher; // @synthesize publisher=_publisher;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (id)subscribe:(id)arg1;

@end

@interface _IDELocalizationStreamConcat : IDELocalizationStream
{
    id <IDELocalizationStreamPublisher> _first;
    id <IDELocalizationStreamPublisher> _second;
}

+ (id)withFirst:(id)arg1 second:(id)arg2;
@property(retain) id <IDELocalizationStreamPublisher> second; // @synthesize second=_second;
@property(retain) id <IDELocalizationStreamPublisher> first; // @synthesize first=_first;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (id)subscribe:(id)arg1;

@end

@interface _IDELocalizationStreamJoin : IDELocalizationStream
{
    id <IDELocalizationStreamPublisher> _publisher;
    id <IDELocalizationStreamPublisher> _joined;
}

+ (id)withPublisher:(id)arg1;
@property(retain) id <IDELocalizationStreamPublisher> joined; // @synthesize joined=_joined;
@property(retain) id <IDELocalizationStreamPublisher> publisher; // @synthesize publisher=_publisher;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (id)subscribe:(id)arg1;

@end

@interface _IDELocalizationStreamReturn : IDELocalizationStream
{
    NSMutableArray *_remainingDataToPublish;
}

+ (id)withArray:(id)arg1;
@property(retain) NSMutableArray *remainingDataToPublish; // @synthesize remainingDataToPublish=_remainingDataToPublish;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onNext:(id)arg1;
- (void)_next;
- (id)subscribe:(id)arg1;

@end

@interface _IDELocalizationStreamThrow : IDELocalizationStream
{
    NSError *_error;
}

+ (id)withError:(id)arg1;
@property(retain) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)onError:(id)arg1;
- (id)subscribe:(id)arg1;

@end

@interface _IDELocalizationStreamBlockBased : IDELocalizationStream
{
    CDUnknownBlockType _onNextBlock;
    CDUnknownBlockType _onErrorBlock;
    CDUnknownBlockType _onCompletedBlock;
}

@property(copy) CDUnknownBlockType onCompletedBlock; // @synthesize onCompletedBlock=_onCompletedBlock;
@property(copy) CDUnknownBlockType onErrorBlock; // @synthesize onErrorBlock=_onErrorBlock;
@property(copy) CDUnknownBlockType onNextBlock; // @synthesize onNextBlock=_onNextBlock;
- (void).cxx_destruct;
- (void)onCompleted;
- (void)onError:(id)arg1;
- (void)onNext:(id)arg1;
- (id)initWithOnNextBlock:(CDUnknownBlockType)arg1 onErrorBlock:(CDUnknownBlockType)arg2 onCompletedBlock:(CDUnknownBlockType)arg3;

@end

@interface IDEUpgradeTask : NSObject
{
    NSString *_title;
    NSString *_subtitle;
    NSString *_category;
    IDEUpgradeContext *_context;
    BOOL _selected;
}

+ (id)analyzeInScheme:(id)arg1;
+ (id)analyzeInContext:(id)arg1;
+ (id)metricLogAspect;
@property BOOL selected; // @synthesize selected=_selected;
@property(readonly) IDEUpgradeContext *context; // @synthesize context=_context;
@property(readonly) NSString *category; // @synthesize category=_category;
@property(readonly) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)_setCategory:(id)arg1;
- (BOOL)upgrade;
- (id)initWithTitle:(id)arg1 subtitle:(id)arg2 context:(id)arg3;

@end

@interface IDECustomUpgradeTask : IDEUpgradeTask
{
}

- (id)handlerForTask;

@end

@interface IDEUIATestRunner : IDEStandardTestRunner
{
    NSOperationQueue *_commandLineArgsQueue;
    DVTObservingToken *_debugSessionHasStartedObserverToken;
    NSDictionary *_buildConfigurationDictionary;
    NSDictionary *_argumentsDictionary;
    IDEUIATestScriptAgentCommunicator *_agentCommunicator;
}

+ (void)initialize;
@property(retain) IDEUIATestScriptAgentCommunicator *agentCommunicator; // @synthesize agentCommunicator=_agentCommunicator;
@property(retain) NSDictionary *argumentsDictionary; // @synthesize argumentsDictionary=_argumentsDictionary;
@property(retain) NSDictionary *buildConfigurationDictionary; // @synthesize buildConfigurationDictionary=_buildConfigurationDictionary;
- (void).cxx_destruct;
- (id)_scheduledTestArgumentsOperationForBuildParameters:(id)arg1 runDestination:(id)arg2 workspace:(id)arg3 testRunIdentifier:(id)arg4 testRunIdentifiers:(id)arg5 error:(id *)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)_writeTestInvocationScope:(id)arg1 forTestBundlePath:(id)arg2 inWorkspace:(id)arg3 invertScope:(BOOL)arg4;
- (void)_configureCommunicatorWithBuildConfigurationDictionary;
- (id)testRunDictionaryWithWorkspace:(id)arg1 supportMultiple:(BOOL)arg2 supportInverse:(BOOL)arg3 invert:(char *)arg4;
- (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4 error:(id *)arg5;
- (id)testOperationsForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 workspace:(id)arg5 error:(id *)arg6 launchParametersBlock:(CDUnknownBlockType)arg7;
- (id)defaultTestArgumentsOperationForBuildParameters:(id)arg1 launchParameters:(id)arg2 runDestination:(id)arg3 workspace:(id)arg4 error:(id *)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)initWithBuildableProduct:(id)arg1;

// Remaining properties
@property(retain) id <IDEBuildableProduct> buildableProduct;

@end

@interface IDEDebuggerCommandBreakpointAction : IDEBreakpointAction
{
    NSString *_consoleCommand;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *consoleCommand; // @synthesize consoleCommand=_consoleCommand;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_debuggerCommandActionCommonInit;
- (id)init;

@end

@interface IDEBuilder : DVTOperation
{
    int _buildCommand;
    IDEBuildableSnapshot *_snapshot;
    NSArray *_exclusiveSourceFiles;
    NSArray *_warningsToEmit;
    NSString *_uniqueIdentifier;
    int _result;
    IDEActivityLogSection *_activityLogSection;
    NSString *_localizedDescription;
    IDEBuildOperationQueueSet *_buildTaskQueueSet;
    BOOL _restorePersistedBuildResults;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    NSMutableSet *_generatedFileInfo;
    NSMutableArray *_buildTaskStatistics;
    NSDictionary *_copiedFilePathsFromBuildOperation;
    NSDictionary *_copiedFilePathsFromBuildableProduct;
    DVTSystemStatisticsMeasurement *_initialSystemStats;
    CDUnknownBlockType _activityLogSectionDidChangeBlock;
    CDUnknownBlockType _resultDidChangeBlock;
    CDUnknownBlockType _didStartExecutingBlock;
    CDUnknownBlockType _didFinishExecutingBlock;
    CDUnknownBlockType _updateBuildStatusBlock;
    BOOL _dontActuallyRunCommands;
    DVTDynamicLogController *_builderTimingDataLogController;
    IDEBuildStatisticsSection *_buildStatisticsSection;
    IDEBuilderHarvestedInfo *_harvestedInfo;
    IDESchemeActionResult *_schemeBuildResult;
}

+ (void)initialize;
@property(retain) IDESchemeActionResult *schemeBuildResult; // @synthesize schemeBuildResult=_schemeBuildResult;
@property(readonly) IDEBuilderHarvestedInfo *harvestedInfo; // @synthesize harvestedInfo=_harvestedInfo;
@property(retain) IDEBuildStatisticsSection *buildStatisticsSection; // @synthesize buildStatisticsSection=_buildStatisticsSection;
@property(retain) DVTDynamicLogController *builderTimingDataLogController; // @synthesize builderTimingDataLogController=_builderTimingDataLogController;
@property BOOL dontActuallyRunCommands; // @synthesize dontActuallyRunCommands=_dontActuallyRunCommands;
@property(readonly, copy) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy) NSDictionary *copiedFilePathsFromBuildableProduct; // @synthesize copiedFilePathsFromBuildableProduct=_copiedFilePathsFromBuildableProduct;
@property(copy) NSDictionary *copiedFilePathsFromBuildOperation; // @synthesize copiedFilePathsFromBuildOperation=_copiedFilePathsFromBuildOperation;
@property(copy) CDUnknownBlockType updateBuildStatus; // @synthesize updateBuildStatus=_updateBuildStatusBlock;
@property(copy) CDUnknownBlockType didFinishExecuting; // @synthesize didFinishExecuting=_didFinishExecutingBlock;
@property(copy) CDUnknownBlockType didStartExecuting; // @synthesize didStartExecuting=_didStartExecutingBlock;
@property(copy) CDUnknownBlockType resultDidChange; // @synthesize resultDidChange=_resultDidChangeBlock;
@property(copy) CDUnknownBlockType activityLogSectionDidChange; // @synthesize activityLogSectionDidChange=_activityLogSectionDidChangeBlock;
@property(readonly) NSSet *generatedFileInfo; // @synthesize generatedFileInfo=_generatedFileInfo;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) NSArray *exclusiveSourceFiles; // @synthesize exclusiveSourceFiles=_exclusiveSourceFiles;
@property(readonly) IDEBuildOperationQueueSet *buildTaskQueueSet; // @synthesize buildTaskQueueSet=_buildTaskQueueSet;
@property(copy) NSString *localizedDescription; // @synthesize localizedDescription=_localizedDescription;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(nonatomic) int result; // @synthesize result=_result;
@property(copy) NSArray *warningsToEmit; // @synthesize warningsToEmit=_warningsToEmit;
@property(readonly) IDEBuildableSnapshot *snapshot; // @synthesize snapshot=_snapshot;
@property(readonly) int buildCommand; // @synthesize buildCommand=_buildCommand;
- (void).cxx_destruct;
- (id)description;
- (void)_logBuilderTimingDataIfNecessary;
- (void)addGeneratedFileInfo:(id)arg1;
- (void)main;
- (void)prepareForBuilding;
- (id)init;
- (id)initForBuildCommand:(int)arg1 withBuildableSnapshot:(id)arg2 buildTaskQueueSet:(id)arg3 buildOnlyTheseFiles:(id)arg4 restorePersistedBuildResults:(BOOL)arg5;

@end

@interface IDEBuilderHarvestedInfo : NSObject
{
    DVTMacroExpansionScope *_macroExpansionScope;
    BOOL _isImmutable;
}

@property(readonly) BOOL isImmutable; // @synthesize isImmutable=_isImmutable;
- (void).cxx_destruct;
@property(copy) DVTMacroExpansionScope *macroExpansionScope;
- (void)makeImmutable;
- (id)init;

@end

@interface IDEBuilderGeneratedFileInfo : NSObject <NSCoding>
{
    int _buildCommand;
    DVTFilePath *_sourceFilePath;
    DVTFilePath *_generatedFilePath;
    int _commandResult;
    NSString *_errorString;
    IDEActivityLogSection *_commandLogSection;
}

@property(readonly) IDEActivityLogSection *commandLogSection; // @synthesize commandLogSection=_commandLogSection;
@property(readonly) NSString *errorString; // @synthesize errorString=_errorString;
@property(readonly) int commandResult; // @synthesize commandResult=_commandResult;
@property(readonly) DVTFilePath *generatedFilePath; // @synthesize generatedFilePath=_generatedFilePath;
@property(readonly) DVTFilePath *sourceFilePath; // @synthesize sourceFilePath=_sourceFilePath;
@property(readonly) int buildCommand; // @synthesize buildCommand=_buildCommand;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBuildCommand:(int)arg1 sourceFilePath:(id)arg2 generatedFilePath:(id)arg3 commandResult:(int)arg4 errorString:(id)arg5 commandLogSection:(id)arg6;

@end

@interface IDEWorkspace : IDEXMLPackageContainer <IDEClientTracking, IDEIntegrityLogDataSource>
{
    NSString *_untitledName;
    IDEWorkspaceArena *_workspaceArena;
    DVTFilePath *_headerMapFilePath;
    IDEExecutionEnvironment *_executionEnvironment;
    IDEContainerQuery *_containerQuery;
    DVTObservingToken *_containerQueryObservingToken;
    NSMutableSet *_referencedContainers;
    DVTHashTable *_fileRefsWithContainerLoadingIssues;
    IDEActivityLogSection *_containerLoadingIntegrityLog;
    NSMutableSet *_customDataStores;
    IDEWorkspaceUserSettings *_userSettings;
    IDEWorkspaceSharedSettings *_sharedSettings;
    DVTMapTable *_blueprintProviderObserverMap;
    NSMutableSet *_referencedBlueprints;
    DVTMapTable *_testableProviderObserverMap;
    NSMutableSet *_referencedTestables;
    BOOL _initialContainerScanComplete;
    NSMutableArray *_referencedRunnableBuildableProducts;
    IDERunContextManager *_runContextManager;
    IDELogManager *_logManager;
    IDEIssueManager *_issueManager;
    IDEBreakpointManager *_breakpointManager;
    IDEBatchFindManager *_batchFindManager;
    IDETestManager *_testManager;
    IDEContainerQuery *_indexableSourceQuery;
    DVTObservingToken *_indexableSourceQueryObservingToken;
    NSMutableArray *_observedIndexableSources;
    IDEContainerQuery *_indexableFileQuery;
    DVTObservingToken *_indexableFileQueryObservingToken;
    id _indexableFileUpdateNotificationToken;
    IDEIndex *_index;
    IDERefactoring *_refactoring;
    DVTMapTable *_fileRefsToResolvedFilePaths;
    NSMutableSet *_fileRefsToRegisterForIndexing;
    IDETextIndex *_textIndex;
    IDEDeviceInstallWorkspaceMonitor *_deviceInstallWorkspaceMonitor;
    IDESourceControlWorkspaceMonitor *_sourceControlWorkspaceMonitor;
    IDEWorkspaceSnapshotManager *_snapshotManager;
    IDELocalizationManager *_localizationManager;
    DVTFilePath *_wrappedXcode3ProjectPath;
    IDEContainer<IDECustomDataStoring> *_wrappedXcode3Project;
    DVTObservingToken *_wrappedXcode3ProjectValidObservingToken;
    DVTObservingToken *_newWrappedXcode3ProjectObservingToken;
    NSHashTable *_pendingReferencedFileReferences;
    NSHashTable *_pendingReferencedContainers;
    IDEConcreteClientTracker *_clientTracker;
    DVTHashTable *_fileReferencesForProblem8727051;
    DVTObservingToken *_finishedLoadingObservingToken;
    NSDictionary *_Problem9887530_preferredStructurePaths;
    BOOL _simpleFilesFocused;
    id _openingPerformanceMetricIdentifier;
    DVTStackBacktrace *_finishedLoadingBacktrace;
    NSMutableOrderedSet *_initialOrderedReferencedBlueprintProviders;
    BOOL _hasPostedIndexingRegistrationBatchNotification;
    BOOL _didFinishLoadingFirstStage;
    BOOL _finishedLoading;
    BOOL _postLoadingPerformanceMetricsAllowed;
    BOOL _willInvalidate;
    BOOL _pendingFileReferencesAndContainers;
    BOOL _didProcessFileReferencesForProblem8727051;
    BOOL _isCleaningBuildFolder;
    BOOL _indexingAndRefactoringRestartScheduled;
    BOOL _indexCreationInFlight;
    BOOL _didFinishBuildingInitialBlueprintProviderOrderedSet;
    NSMapTable *_pendingExecutionNotificationTokens;
    BOOL _isPotentiallyClosing;
    long long _indexGenerationCounter;
    id <IDEContinuousIntegrationBotMonitor> _xcs2WorkspaceBotMonitor;
    id <IDEActiveRunContextStoring> _activeRunContextStore;
    IDEWorkspaceUpgradeTasksController *_deferredUpgradeTasksController;
}

+ (BOOL)_shouldTrackReadOnlyStatus;
+ (id)keyPathsForValuesAffectingRepresentingCustomDataStore;
+ (id)keyPathsForValuesAffectingHostOnlyXcode3Project;
+ (id)keyPathsForValuesAffectingRepresentingTitle;
+ (id)keyPathsForValuesAffectingRepresentingFilePath;
+ (id)keyPathsForValuesAffectingName;
+ (id)_workspaceFileExtension;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (id)xmlArchiveFileName;
+ (id)rootElementName;
+ (id)_wrappedWorkspacePathForProjectPath:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversOfWrappedXcode3ProjectPath;
+ (BOOL)_shouldLoadUISubsystems;
+ (BOOL)automaticallyNotifiesObserversOfFileRefsWithContainerLoadingIssues;
+ (void)initialize;
@property(retain) IDEWorkspaceUpgradeTasksController *deferredUpgradeTasksController; // @synthesize deferredUpgradeTasksController=_deferredUpgradeTasksController;
@property(retain) id <IDEActiveRunContextStoring> activeRunContextStore; // @synthesize activeRunContextStore=_activeRunContextStore;
@property(nonatomic) BOOL isPotentiallyClosing; // @synthesize isPotentiallyClosing=_isPotentiallyClosing;
@property(readonly, nonatomic) BOOL postLoadingPerformanceMetricsAllowed; // @synthesize postLoadingPerformanceMetricsAllowed=_postLoadingPerformanceMetricsAllowed;
@property(retain, nonatomic) IDEWorkspaceSharedSettings *sharedSettings; // @synthesize sharedSettings=_sharedSettings;
@property(retain, nonatomic) IDEWorkspaceUserSettings *userSettings; // @synthesize userSettings=_userSettings;
@property(retain, nonatomic) id <IDEContinuousIntegrationBotMonitor> xcs2WorkspaceBotMonitor; // @synthesize xcs2WorkspaceBotMonitor=_xcs2WorkspaceBotMonitor;
@property(readonly, nonatomic) long long indexGenerationCounter; // @synthesize indexGenerationCounter=_indexGenerationCounter;
@property BOOL isCleaningBuildFolder; // @synthesize isCleaningBuildFolder=_isCleaningBuildFolder;
@property(readonly) IDETextIndex *textIndex; // @synthesize textIndex=_textIndex;
@property(nonatomic) BOOL finishedLoading; // @synthesize finishedLoading=_finishedLoading;
@property(nonatomic) BOOL pendingFileReferencesAndContainers; // @synthesize pendingFileReferencesAndContainers=_pendingFileReferencesAndContainers;
@property BOOL initialContainerScanComplete; // @synthesize initialContainerScanComplete=_initialContainerScanComplete;
@property(retain) IDESourceControlWorkspaceMonitor *sourceControlWorkspaceMonitor; // @synthesize sourceControlWorkspaceMonitor=_sourceControlWorkspaceMonitor;
@property(retain) IDEDeviceInstallWorkspaceMonitor *deviceInstallWorkspaceMonitor; // @synthesize deviceInstallWorkspaceMonitor=_deviceInstallWorkspaceMonitor;
@property(readonly) IDERefactoring *refactoring; // @synthesize refactoring=_refactoring;
@property(retain) IDEIndex *index; // @synthesize index=_index;
@property(retain, nonatomic) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property(readonly) DVTFilePath *wrappedXcode3ProjectPath; // @synthesize wrappedXcode3ProjectPath=_wrappedXcode3ProjectPath;
@property(retain) IDERunContextManager *runContextManager; // @synthesize runContextManager=_runContextManager;
- (void).cxx_destruct;
- (id)buildableProductsForBaseName:(id)arg1;
- (void)_handleIndexablesChange:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)didCreateIndex:(id)arg1;
- (void)initializeIndexAndRefactoring:(id)arg1;
- (void)_scheduleWorkspaceUpgradeTasksController:(id)arg1;
- (void)_setupWorkspaceUpgradeTasksController;
- (void)_setupSourceControlWorkspaceMonitorIfNeeded;
- (void)_initializeSourceControlWorkspaceMonitor;
- (void)_setupDeviceInstallWorkspaceMonitor;
- (void)beginTextIndexing;
- (id)tearDownIndexAndRefactoring;
- (void)_restartIndexingAndRefactoring;
- (void)_scheduleIndexingAndRefactoringRestart;
- (void)_handleIndexableFilesChange:(id)arg1;
- (void)_updateIndexableFiles:(id)arg1;
- (id)_fileRefsToResolvedFilePaths;
- (void)_processIndexRegistrationBatch:(id)arg1;
- (void)_enqueueIndexRegistrationBatchNotification;
- (void)_handleIndexableSourcesChange:(id)arg1;
- (void)primitiveInvalidate;
@property(readonly) IDEContainer<IDECustomDataStoring> *representingCustomDataStore;
@property(readonly) IDEContainer *wrappedXcode3Project;
- (void)_updateWrappedXcode3Project;
- (void)_setWrappedXcode3Project:(id)arg1;
@property(readonly, getter=isSimpleFilesFocused) BOOL simpleFilesFocused;
- (void)_setSimpleFilesFocused:(BOOL)arg1;
- (void)_primitiveSetSimpleFilesFocused:(BOOL)arg1;
- (void)setSimpleFilesFocused:(BOOL)arg1;
@property(readonly) BOOL hostsOnlyXcode3Project;
@property(readonly) NSString *representingTitle;
@property(readonly) DVTFilePath *representingFilePath;
@property(retain) IDEExecutionEnvironment *executionEnvironment;
- (void)_setupExecutionEnvironment;
- (float)maxSupportedArchiveVersion;
- (float)archiveVersion;
- (id)displayName;
@property(readonly) NSString *name;
@property(readonly) IDELocalizationManager *localizationManager;
@property(retain) IDETestManager *testManager; // @dynamic testManager;
- (void)setBatchFindManager:(id)arg1;
@property(readonly) IDEBatchFindManager *batchFindManager;
@property(retain) IDEWorkspaceSnapshotManager *snapshotManager; // @synthesize snapshotManager=_snapshotManager;
@property(retain) IDEBreakpointManager *breakpointManager; // @dynamic breakpointManager;
@property(readonly) IDEIssueManager *issueManager; // @synthesize issueManager=_issueManager;
- (void)_setupIssueManagerIfNeeded;
@property(readonly) IDELogManager *logManager; // @synthesize logManager=_logManager;
- (void)_setupLogManagerIfNeeded;
- (id)blueprintsContainingFilePaths:(id)arg1;
@property(readonly) NSSet *customDataStores;
@property(readonly) NSSet *referencedRunnableBuildableProducts;
@property(readonly) NSSet *referencedTestables;
@property(readonly) NSSet *referencedTestableProviders;
@property(readonly) NSSet *referencedBlueprints;
- (id)containerGraphOrderForBlueprintProviders:(id)arg1;
@property(readonly) NSSet *referencedBlueprintProviders;
@property(readonly) NSSet *referencedContainers;
- (void)_referencedContainersDidUpdate;
- (void)invokeChangingValueForKey:(id)arg1 fromSet:(id)arg2 toSet:(id)arg3 block:(CDUnknownBlockType)arg4;
- (void)_referencedTestablesOfProvider:(id)arg1 didChange:(id)arg2;
- (void)_referencedBlueprintsDidUpdateForProvider:(id)arg1;
- (id)buildableProductsForProductName:(id)arg1;
- (void)_setupContainerQueries;
- (void)_addBlueprintProviderToOrderedSet:(id)arg1;
- (id)_Problem9887530_preferredStructurePathForContainerAtPath:(id)arg1;
- (id)_Problem9887530_preferredStructurePaths;
- (id)_Problem9887530_preferredStructurePathsForContainerToContainerFileReferences:(id)arg1;
- (id)_Problem9887530_wrappedContainerFileReferences:(id)arg1 forPath:(id)arg2;
- (void)_processFileReferencesForProblem8727051;
- (void)_addFileReferenceForProblem8727051:(id)arg1;
- (void)cancelTrackedClients;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerUncancellableClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(CDUnknownBlockType)arg3;
@property(readonly) IDEConcreteClientTracker *clientTracker;
- (BOOL)_cancelOngoingBuildWithCompletionBlockIfNeeded:(CDUnknownBlockType)arg1;
- (void)_setupBuildCompletedNotificationForExecutionEnvironment:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (BOOL)setContainerFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_setContainerFilePath:(id)arg1 upgradeToWorkspace:(BOOL)arg2 error:(id *)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2 upgradeToWorkspace:(BOOL)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (BOOL)_configureWrappedWorkspaceWithError:(id *)arg1;
- (id)_wrappingContainerPath;
- (void)_setWrappedXcode3ProjectPath:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_buildProductsLocationDidChange;
- (void)_containerDidLoad;
- (void)_checkIfHasFinishedLoading;
- (void)_finishLoadingAsynchronously:(BOOL)arg1 shouldUpgradeFromSimpleFilesFocused:(BOOL)arg2;
- (void)_setupWorkspaceArenaIfNeeded;
@property(readonly) IDEActivityLogSection *integrityLog;
- (void)analyzeModelIntegrity;
- (void)_setFileRefsWithContainerLoadingIssues:(id)arg1;
- (void)_handleContainerResolutionFailureForFileReference:(id)arg1;
- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
- (void)_removePendingReferencedContainerPath:(id)arg1;
- (void)_addPendingReferencedContainerPath:(id)arg1;
- (void)_removePendingReferencedFileReference:(id)arg1;
- (void)_addPendingReferencedFileReference:(id)arg1;
@property(retain) id _applicationDelegate; // @dynamic _applicationDelegate;
@property(retain) id <IDEWorkspaceDelegate> workspaceDelegate;
- (id)_openingPerformanceMetricIdentifier;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)insertInSdefSupport_symbolicBreakpoints:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInSdefSupport_fileBreakpoints:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInSdefSupport_breakpoints:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)sdefSupport_newXcode3GroupWithProperties:(id)arg1;
- (id)sdefSupport_newXcode3FileReferenceWithProperties:(id)arg1;
- (id)sdefSupport_newSymbolicBreakpointWithProperties:(id)arg1;
- (id)sdefSupport_newRunContextWithProperties:(id)arg1;
- (id)sdefSupport_newProjectForDocument:(id)arg1 withContentsValue:(id)arg2 andProperties:(id)arg3;
- (id)sdefSupport_newItemReferenceWithProperties:(id)arg1;
- (id)sdefSupport_newGroupWithProperties:(id)arg1;
- (id)sdefSupport_newFileReferenceWithProperties:(id)arg1;
- (id)sdefSupport_newFileBreakpointWithProperties:(id)arg1;
- (id)sdefSupport_newBuildMessagesWithProperties:(id)arg1;
- (id)sdefSupport_newBreakpointWithProperties:(id)arg1;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)sdefSupport_symbolicBreakpointsForDocument:(id)arg1;
- (id)sdefSupport_fileBreakpointsForDocument:(id)arg1;
- (id)sdefSupport_breakpointsForDocument:(id)arg1;
- (void)setSdefSupport_buildFolderName:(id)arg1;
- (id)sdefSupport_buildFolderName;
- (id)ideModelObjectTypeIdentifier;
- (id)patchesDirectoryWrapper;
- (id)patchesDirectory;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEInMemoryActivityLogRecord : IDEActivityLogRecord
{
    IDEInMemoryLogStore_Impl *_logStore;
    IDEActivityLogSection *_fullLog;
    DVTFileDataType *_documentType;
}

+ (id)keyPathsForValuesAffectingTimeStoppedRecording;
+ (id)keyPathsForValuesAffectingIsRecording;
- (void).cxx_destruct;
- (id)description;
- (double)timeStoppedRecording;
- (id)highLevelStatus;
- (id)signature;
- (id)documentType;
- (double)timeStartedRecording;
- (id)title;
- (id)uniqueIdentifier;
- (id)domainType;
- (BOOL)isRecording;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isRemoved;
- (id)initWithLog:(id)arg1 entityIdentifier:(id)arg2 store:(id)arg3;

@end

@interface IDEInMemoryLogStore_Impl : IDEInMemoryLogStore
{
}

- (BOOL)preserveOldLogs;
- (void)setPreserveOldLogs:(BOOL)arg1;
- (void)_removeLogRecord:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)addLog:(id)arg1 entityIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface IDEInMemoryLogStore : IDELogStore
{
}

+ (id)inMemoryStore;

@end

@interface IDEIndexDatabase : NSObject
{
    NSURL *_fileURL;
    IDEIndexImporter *_importer;
    NSMutableArray *_dbConnections;
    DVTDispatchLock *_dbConnectionsLock;
    NSMutableDictionary *_rawKindForSymbolKind;
    NSMutableDictionary *_symbolKindForRawKind;
    NSDictionary *_rawLanguageForSymbolLanguage;
    NSDictionary *_symbolLanguageForRawLanguage;
    NSObject<IDEIndexDatabaseDelegate> *_delegate;
    IDEIndexDatabaseQueryProvider *_queryProvider;
    BOOL _readonly;
    BOOL _diagnosticMode;
    BOOL _enabledWAL;
    NSMutableArray *_errors;
    DVTDispatchLock *_dataLock;
    IDEIndexDBStringStorage *_directoryStringStorage;
    IDEIndexDBStringStorage *_filenameStringStorage;
    IDEIndexDBStringStorage *_moduleURLStringStorage;
    IDEIndexDBStringStorage *_spellingStringStorage;
    IDEIndexDBStringStorage *_resolutionStringStorage;
    IDEIndexDBStringStorage *_completionStringStorage;
    NSDictionary *_rootPathsTrie;
    NSMutableDictionary *_rootPathsCache;
    NSMapTable *_directoryPathsCache;
}

+ (id)modulesTargetID;
+ (id)auxTargetID;
+ (id)pchTargetID;
+ (void)reportException:(id)arg1;
+ (BOOL)verboseLogging;
+ (void)logCritical:(id)arg1;
+ (void)logVerbose:(id)arg1;
+ (void)log:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) BOOL enabledWAL; // @synthesize enabledWAL=_enabledWAL;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
@property(retain, nonatomic) NSObject<IDEIndexDatabaseDelegate> *delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IDEIndexImporter *importer; // @synthesize importer=_importer;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (id)symbolDumpForFile:(id)arg1;
- (void)saveStringStorage;
- (void)findSpellingStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forEachResult:(CDUnknownBlockType)arg7;
- (void)findFilenameStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forEachResult:(CDUnknownBlockType)arg7;
- (void)findStringsContaining:(id)arg1 inStorage:(id)arg2 anchorStart:(BOOL)arg3 anchorEnd:(BOOL)arg4 subsequence:(BOOL)arg5 lowercase:(BOOL)arg6 cancelWhen:(CDUnknownBlockType)arg7 forEachResult:(CDUnknownBlockType)arg8;
- (id)moduleURLAtOffset:(long long)arg1;
- (id)filePathForDirectoryAtOffset:(long long)arg1 fileAtOffset:(long long)arg2;
- (char *)completionCStringAtOffset:(long long)arg1;
- (char *)resolutionCStringAtOffset:(long long)arg1;
- (char *)spellingCStringAtOffset:(long long)arg1;
- (char *)moduleURLCStringAtOffset:(long long)arg1;
- (char *)filenameCStringAtOffset:(long long)arg1;
- (char *)directoryCStringAtOffset:(long long)arg1;
- (char *)cStringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (id)completionStringAtOffset:(long long)arg1;
- (id)resolutionStringAtOffset:(long long)arg1;
- (id)spellingStringAtOffset:(long long)arg1;
- (id)moduleURLStringAtOffset:(long long)arg1;
- (id)filenameStringAtOffset:(long long)arg1;
- (id)directoryStringAtOffset:(long long)arg1;
- (id)stringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (long long)offsetOfCompletionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfCompletionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfModuleURLString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfFilenameString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfDirectoryString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfString:(id)arg1 inStorage:(id)arg2 addIfMissing:(BOOL)arg3;
- (void)registerSymbolLanguages:(id)arg1;
- (id)symbolLanguageForRawLanguage:(long long)arg1;
- (long long)rawLanguageForSymbolLanguage:(id)arg1;
- (void)addKindsTableToConnection:(id)arg1;
- (void)registerSymbolKinds:(id)arg1;
- (id)symbolKindForRawKind:(long long)arg1;
- (long long)rawKindForSymbolKind:(id)arg1;
- (void)purgeStaleData:(id)arg1;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (void)registerHotFile:(id)arg1;
- (void)reportAutoQueryProgress:(double)arg1;
- (void)clearPCHFailures;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (void)registerTarget:(id)arg1 byCaller:(id)arg2 outOfDateCallback:(CDUnknownBlockType)arg3;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (id)mainFilesForFile:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (BOOL)isKnownFile:(id)arg1 makeKnown:(BOOL)arg2;
- (id)mainFilesForTarget:(id)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (id)filesForMainFile:(id)arg1 target:(id)arg2;
- (BOOL)isProjectFile:(id)arg1;
- (id)rebuildProjectFiles:(id)arg1;
- (BOOL)updateProjectFiles:(id)arg1;
- (BOOL)isProjectDirectory:(id)arg1;
- (void)setRootPaths:(id)arg1;
- (id)newImportSession;
- (id)providersAndVersions;
@property(readonly, nonatomic) NSArray *errors;
- (void)reportErrorCode:(long long)arg1 description:(id)arg2 reason:(id)arg3;
- (void)reportError:(id)arg1;
- (void)didReportError;
- (void)didForgetFiles:(id)arg1;
- (void)sendDelegateDidForgetFiles:(id)arg1;
- (void)didEndSession:(id)arg1;
- (void)sendDelegateDidEndImportSession:(id)arg1;
- (void)didSave;
- (void)didIndexHotFile;
- (void)didLoad;
- (void)close;
- (void)releaseQueryConnection:(id)arg1;
- (id)obtainQueryConnection:(id)arg1;
- (id)newBackgroundPriorityConnection;
- (id)newConnection;
- (void)openReadonly:(BOOL)arg1 diagnosticMode:(BOOL)arg2;
- (void)openInDiagnosticMode;
- (void)openReadonly;
- (void)open;
- (id)initWithFileURL:(id)arg1;

@end

@interface IDEIndexSymbolOccurrenceCollection : IDEIndexCollection
{
    IDEIndexSymbol *_correspondingSymbol;
}

@property(retain, nonatomic) IDEIndexSymbol *correspondingSymbol; // @synthesize correspondingSymbol=_correspondingSymbol;
- (void).cxx_destruct;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexSymbolFormatterFactory : NSObject
{
}

+ (id)formatterForLanguage:(id)arg1;
+ (id)_formatterExtensionForLanguage:(id)arg1;
+ (void)initialize;

@end

@interface IDEIndexPropertySymbol : IDEIndexSymbol
{
}

- (id)getter;
- (id)setter;

@end

@interface IDEDistributionConsoleLogger : DVTConsoleLogger
{
    int _exclusiveLogLevel;
}

@property(readonly) int exclusiveLogLevel; // @synthesize exclusiveLogLevel=_exclusiveLogLevel;
- (void)logMessage:(id)arg1 forAspect:(id)arg2 logLevel:(int)arg3;
- (id)initWithExclusiveLogLevel:(int)arg1;

@end

@interface IDELaunchParametersSnapshot : NSObject
{
    BOOL _askOnLaunchChangedRunnable;
    BOOL _allowLocationSimulation;
    BOOL _showNonLocalizedStrings;
    BOOL _debugAsAService;
    BOOL _testingUsesDirectReportingConnection;
    BOOL _usingCommandLineUnitTesting;
    BOOL _debugXPCServices;
    BOOL _debugAppExtensions;
    BOOL _viewDebuggingEnabled;
    BOOL _shouldGenerateOptimizationProfile;
    int _launchStyle;
    int _launchAutomaticallySubstyle;
    int _runnableType;
    unsigned int _debugProcessAsUID;
    int _enableGPUFrameCaptureMode;
    int _enableGPUValidationMode;
    int _debugServiceFD;
    int _internalIOSLaunchStyle;
    NSMutableDictionary *_testingEnvironmentVariables;
    NSDictionary *_environmentVariables;
    NSArray *_commandLineArgs;
    DVTFilePath *_runnableLocation;
    DVTFilePath *_filePathToBinary;
    IDEEntityIdentifier *_schemeIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSString *_selectedDebuggerIdentifier;
    NSString *_runnableBundleIdentifier;
    NSDictionary *_appExtensionBuiltPaths;
    DVTFilePath *_replacementRunnableLocation;
    DVTFilePath *_workingDirectory;
    NSString *_architecture;
    IDELocationScenarioReference *_locationScenarioReference;
    NSString *_language;
    NSString *_region;
    IDESchemeOptionReference *_routingCoverageFileReference;
    NSString *_sdkPath;
    NSString *_remoteInstallPath;
    id _debugServiceObject;
    id _deviceArbitrationObject;
    NSString *_platformIdentifier;
    NSString *_buildConfiguration;
    id <IDEBuildableProduct> _buildableProduct;
    NSSet *_additionalInstallations;
    NSSet *_buildProductDirectories;
    NSArray *_testingCommandLineArgs;
    NSArray *_testingAdditionalBuiltDependenciesProductPaths;
    NSString *_testScopeFilePath;
    NSString *_testBaselineFilePath;
    NSUUID *_testSessionIdentifier;
    NSString *_testingDirectReportingSocketPath;
    NSDictionary *_additionalDeviceSubstitutionPaths;
    NSString *_deviceAppDataPackage;
    NSString *_optimizationProfilePathString;
    NSString *_internalIOSSubstitutionApp;
    NSString *_customLaunchCommand;
}

+ (id)environmentVariablesToMergeFromTestingEnvironmentVariables;
+ (id)launchParametersWithSchemeIdentifier:(id)arg1 launcherIdentifier:(id)arg2 debuggerIdentifier:(id)arg3 launchStyle:(int)arg4 runnableLocation:(id)arg5 debugProcessAsUID:(unsigned int)arg6 workingDirectory:(id)arg7 commandLineArgs:(id)arg8 environmentVariables:(id)arg9 architecture:(id)arg10 platformIdentifier:(id)arg11 buildConfiguration:(id)arg12 buildableProduct:(id)arg13 deviceAppDataPackage:(id)arg14 allowLocationSimulation:(BOOL)arg15 locationScenarioReference:(id)arg16 showNonLocalizedStrings:(BOOL)arg17 language:(id)arg18 region:(id)arg19 routingCoverageFileReference:(id)arg20 enableGPUFrameCaptureMode:(int)arg21 enableGPUValidationMode:(int)arg22 debugXPCServices:(BOOL)arg23 debugAppExtensions:(BOOL)arg24 internalIOSLaunchStyle:(int)arg25 internalIOSSubstitutionApp:(id)arg26 launchAutomaticallySubstyle:(int)arg27;
+ (id)launchParametersWithSchemeIdentifier:(id)arg1 launcherIdentifier:(id)arg2 debuggerIdentifier:(id)arg3 launchStyle:(int)arg4 runnableLocation:(id)arg5 debugProcessAsUID:(unsigned int)arg6 workingDirectory:(id)arg7 commandLineArgs:(id)arg8 environmentVariables:(id)arg9 architecture:(id)arg10 platformIdentifier:(id)arg11 buildConfiguration:(id)arg12 buildableProduct:(id)arg13 deviceAppDataPackage:(id)arg14 allowLocationSimulation:(BOOL)arg15 locationScenarioReference:(id)arg16 showNonLocalizedStrings:(BOOL)arg17 language:(id)arg18 region:(id)arg19 routingCoverageFileReference:(id)arg20 enableGPUFrameCaptureMode:(int)arg21 enableGPUValidationMode:(int)arg22 simulatorIPhoneDisplay:(id)arg23 simulatorIPadDisplay:(id)arg24 debugXPCServices:(BOOL)arg25 additionalXPCServicesToDebug:(id)arg26 internalIOSLaunchStyle:(int)arg27 internalIOSSubstitutionApp:(id)arg28 launchAutomaticallySubstyle:(int)arg29;
+ (id)launchParametersWithSchemeIdentifier:(id)arg1 launcherIdentifier:(id)arg2 debuggerIdentifier:(id)arg3 launchStyle:(int)arg4 runnableLocation:(id)arg5 debugProcessAsUID:(unsigned int)arg6 workingDirectory:(id)arg7 commandLineArgs:(id)arg8 environmentVariables:(id)arg9 architecture:(id)arg10 platformIdentifier:(id)arg11 buildConfiguration:(id)arg12 buildableProduct:(id)arg13 deviceAppDataPackage:(id)arg14 allowLocationSimulation:(BOOL)arg15 locationScenarioReference:(id)arg16 showNonLocalizedStrings:(BOOL)arg17 language:(id)arg18 region:(id)arg19 routingCoverageFileReference:(id)arg20 enableOpenGLFrameCaptureMode:(int)arg21 enableOpenGLPerformanceAnalysisMode:(int)arg22 simulatorIPhoneDisplay:(id)arg23 simulatorIPadDisplay:(id)arg24 debugXPCServices:(BOOL)arg25 additionalXPCServicesToDebug:(id)arg26 internalIOSLaunchStyle:(int)arg27 internalIOSSubstitutionApp:(id)arg28 launchAutomaticallySubstyle:(int)arg29;
@property(copy) NSString *customLaunchCommand; // @synthesize customLaunchCommand=_customLaunchCommand;
@property(copy) NSString *internalIOSSubstitutionApp; // @synthesize internalIOSSubstitutionApp=_internalIOSSubstitutionApp;
@property(copy, nonatomic) NSString *optimizationProfilePathString; // @synthesize optimizationProfilePathString=_optimizationProfilePathString;
@property BOOL shouldGenerateOptimizationProfile; // @synthesize shouldGenerateOptimizationProfile=_shouldGenerateOptimizationProfile;
@property BOOL viewDebuggingEnabled; // @synthesize viewDebuggingEnabled=_viewDebuggingEnabled;
@property int internalIOSLaunchStyle; // @synthesize internalIOSLaunchStyle=_internalIOSLaunchStyle;
@property(readonly) BOOL debugAppExtensions; // @synthesize debugAppExtensions=_debugAppExtensions;
@property(readonly) BOOL debugXPCServices; // @synthesize debugXPCServices=_debugXPCServices;
@property(readonly) NSString *deviceAppDataPackage; // @synthesize deviceAppDataPackage=_deviceAppDataPackage;
@property(copy) NSDictionary *additionalDeviceSubstitutionPaths; // @synthesize additionalDeviceSubstitutionPaths=_additionalDeviceSubstitutionPaths;
@property(getter=isUsingCommandLineUnitTesting) BOOL usingCommandLineUnitTesting; // @synthesize usingCommandLineUnitTesting=_usingCommandLineUnitTesting;
@property(copy) NSString *testingDirectReportingSocketPath; // @synthesize testingDirectReportingSocketPath=_testingDirectReportingSocketPath;
@property(retain) NSUUID *testSessionIdentifier; // @synthesize testSessionIdentifier=_testSessionIdentifier;
@property BOOL testingUsesDirectReportingConnection; // @synthesize testingUsesDirectReportingConnection=_testingUsesDirectReportingConnection;
@property(copy) NSString *testBaselineFilePath; // @synthesize testBaselineFilePath=_testBaselineFilePath;
@property(copy) NSString *testScopeFilePath; // @synthesize testScopeFilePath=_testScopeFilePath;
@property(copy) NSArray *testingAdditionalBuiltDependenciesProductPaths; // @synthesize testingAdditionalBuiltDependenciesProductPaths=_testingAdditionalBuiltDependenciesProductPaths;
@property(copy) NSArray *testingCommandLineArgs; // @synthesize testingCommandLineArgs=_testingCommandLineArgs;
@property(copy) NSSet *buildProductDirectories; // @synthesize buildProductDirectories=_buildProductDirectories;
@property(copy) NSSet *additionalInstallations; // @synthesize additionalInstallations=_additionalInstallations;
@property(readonly) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
@property(readonly) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(readonly) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
@property(retain) id deviceArbitrationObject; // @synthesize deviceArbitrationObject=_deviceArbitrationObject;
@property(retain) id debugServiceObject; // @synthesize debugServiceObject=_debugServiceObject;
@property int debugServiceFD; // @synthesize debugServiceFD=_debugServiceFD;
@property BOOL debugAsAService; // @synthesize debugAsAService=_debugAsAService;
@property(copy) NSString *remoteInstallPath; // @synthesize remoteInstallPath=_remoteInstallPath;
@property(copy) NSString *sdkPath; // @synthesize sdkPath=_sdkPath;
@property(readonly) int enableGPUValidationMode; // @synthesize enableGPUValidationMode=_enableGPUValidationMode;
@property(readonly) int enableGPUFrameCaptureMode; // @synthesize enableGPUFrameCaptureMode=_enableGPUFrameCaptureMode;
@property(readonly) IDESchemeOptionReference *routingCoverageFileReference; // @synthesize routingCoverageFileReference=_routingCoverageFileReference;
@property(readonly, copy, nonatomic) NSString *region; // @synthesize region=_region;
@property(readonly, copy, nonatomic) NSString *language; // @synthesize language=_language;
@property(readonly) BOOL showNonLocalizedStrings; // @synthesize showNonLocalizedStrings=_showNonLocalizedStrings;
@property(readonly) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property(readonly) BOOL allowLocationSimulation; // @synthesize allowLocationSimulation=_allowLocationSimulation;
@property(readonly, copy) NSString *architecture; // @synthesize architecture=_architecture;
@property(readonly) DVTFilePath *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property unsigned int debugProcessAsUID; // @synthesize debugProcessAsUID=_debugProcessAsUID;
@property(copy) DVTFilePath *replacementRunnableLocation; // @synthesize replacementRunnableLocation=_replacementRunnableLocation;
@property BOOL askOnLaunchChangedRunnable; // @synthesize askOnLaunchChangedRunnable=_askOnLaunchChangedRunnable;
@property(copy) NSDictionary *appExtensionBuiltPaths; // @synthesize appExtensionBuiltPaths=_appExtensionBuiltPaths;
@property int runnableType; // @synthesize runnableType=_runnableType;
@property(copy) NSString *runnableBundleIdentifier; // @synthesize runnableBundleIdentifier=_runnableBundleIdentifier;
@property(readonly) int launchAutomaticallySubstyle; // @synthesize launchAutomaticallySubstyle=_launchAutomaticallySubstyle;
@property(readonly) int launchStyle; // @synthesize launchStyle=_launchStyle;
@property(readonly) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(readonly) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(readonly) IDEEntityIdentifier *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
- (void).cxx_destruct;
@property(readonly) int enableOpenGLPerformanceAnalysisMode;
@property(readonly) int enableOpenGLFrameCaptureMode;
- (id)launchParametersByAppendingPath:(id)arg1 toSearchPathEnvironmentVariable:(id)arg2;
- (id)launchParametersByPrependingPath:(id)arg1 toSearchPathEnvironmentVariable:(id)arg2;
- (id)launchParametersByReplacingEnvironmentVariablesWithDictionary:(id)arg1;
- (id)launchParametersByReplacingCommandLineArgsWithArray:(id)arg1;
@property(readonly) DVTFilePath *filePathToBinary; // @synthesize filePathToBinary=_filePathToBinary;
@property(readonly) DVTFilePath *originalRunnableLocation;
@property(readonly, copy) DVTFilePath *runnableLocation; // @synthesize runnableLocation=_runnableLocation;
@property(readonly, copy) NSArray *commandLineArgs; // @synthesize commandLineArgs=_commandLineArgs;
@property(readonly) NSArray *rawCommandLineArgs;
@property(readonly, copy) NSDictionary *environmentVariables; // @synthesize environmentVariables=_environmentVariables;
@property(readonly, copy) NSMutableDictionary *testingEnvironmentVariables; // @synthesize testingEnvironmentVariables=_testingEnvironmentVariables;

@end

@interface IDETestResult : NSObject
{
    IDETest *_test;
    unsigned long long _status;
    NSDate *_date;
    double _duration;
    DVTPerformanceTestOutput *_performanceTestOutput;
    NSArray *_performanceMetrics;
    NSArray *_messages;
}

@property(readonly) NSArray *performanceMetrics; // @synthesize performanceMetrics=_performanceMetrics;
@property(readonly, copy) NSArray *messages; // @synthesize messages=_messages;
@property(readonly) DVTPerformanceTestOutput *performanceTestOutput; // @synthesize performanceTestOutput=_performanceTestOutput;
@property(readonly) double duration; // @synthesize duration=_duration;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) unsigned long long status; // @synthesize status=_status;
@property(readonly) IDETest *test; // @synthesize test=_test;
- (void).cxx_destruct;
- (id)initWithTest:(id)arg1 status:(unsigned long long)arg2 date:(id)arg3 duration:(double)arg4 performanceMetrics:(id)arg5 performanceTestOutput:(id)arg6 messages:(id)arg7;

@end

@interface IDETestResultMessage : NSObject
{
    NSString *_text;
    unsigned long long _messageType;
    NSString *_filePath;
    NSNumber *_lineNumber;
}

@property(readonly, copy) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, copy) NSString *filePath; // @synthesize filePath=_filePath;
@property(readonly) unsigned long long messageType; // @synthesize messageType=_messageType;
@property(readonly, copy) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)initWithText:(id)arg1 messageType:(unsigned long long)arg2 filePath:(id)arg3 lineNumber:(id)arg4;

@end

@interface IDEUpgradeContext : NSObject
{
}

@end

@interface IDEUpgradeSchemeContext : IDEUpgradeContext
{
    IDEScheme *_scheme;
}

@property(readonly) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
- (id)description;
- (id)initWithScheme:(id)arg1;

@end

@interface IDEUpgradeContainerContext : IDEUpgradeContext
{
    IDEContainer *_container;
}

@property(readonly) IDEContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)description;
- (id)initWithContainer:(id)arg1;

@end

@interface IDEUpgradeBlueprintContext : IDEUpgradeContext
{
    id <IDEBlueprint> _blueprint;
}

@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
- (void).cxx_destruct;
- (id)description;
- (id)initWithBlueprint:(id)arg1;

@end

@interface IDEDistributionProvisioning : NSObject
{
    NSArray *_rootDistributionItems;
    IDEDistributionMethod *_distributionMethod;
    NSString *_teamID;
    DVTProvisioningProfileManager *_profileManager;
    DVTSigningCertificateManager *_signingCertificateManager;
    IDEDistributionLogging *_logging;
    NSArray *_codesignableDevices;
}

@property(readonly) NSArray *codesignableDevices; // @synthesize codesignableDevices=_codesignableDevices;
@property(readonly) IDEDistributionLogging *logging; // @synthesize logging=_logging;
@property(retain, nonatomic) DVTSigningCertificateManager *signingCertificateManager; // @synthesize signingCertificateManager=_signingCertificateManager;
@property(retain, nonatomic) DVTProvisioningProfileManager *profileManager; // @synthesize profileManager=_profileManager;
@property(readonly) NSString *teamID; // @synthesize teamID=_teamID;
@property(readonly) IDEDistributionMethod *distributionMethod; // @synthesize distributionMethod=_distributionMethod;
@property(readonly) NSArray *rootDistributionItems; // @synthesize rootDistributionItems=_rootDistributionItems;
- (void).cxx_destruct;
- (id)_installerSigningInfoForTeamID:(id)arg1 certificateKind:(id)arg2 error:(id *)arg3;
- (id)_signingInfoForItem:(id)arg1 limitToSigningCertificate:(id)arg2 error:(id *)arg3;
- (id)_itemToSigningInfoForSigningCertificate:(id)arg1 flattenedItems:(id)arg2 errors:(id *)arg3;
- (id)_signingCertificatesApplicableForTeamID:(id)arg1 certificateKind:(id)arg2 isForInstaller:(BOOL)arg3 error:(id *)arg4;
- (id)_itemToSigningInfoMap:(id *)arg1;
- (id)logAspect;
- (id)instantiateProvisioningSnapshot:(id *)arg1;
- (id)initWithRootDistributionItems:(id)arg1 distributionMethod:(id)arg2 teamID:(id)arg3 codesignableDevicesOrNil:(id)arg4 logging:(id)arg5;

@end

@interface IDEIndexableMainThreadProxy : NSObject <IDEIndexable>
{
    id <IDEIndexable> _indexableObject;
    BOOL _respondsToSettingsForFiles;
    NSString *_cachedIdentifier;
    NSString *_cachedIndexName;
    NSDictionary *_cachedSettingsForFiles;
}

@property(retain) id <IDEIndexable> indexableObject; // @synthesize indexableObject=_indexableObject;
- (void).cxx_destruct;
- (BOOL)isUnitTest;
- (id)productType;
- (id)productNameWithBuildSetting:(id)arg1 workspace:(id)arg2;
- (id)buildSettingsForMainFile:(id)arg1 workspace:(id)arg2;
- (id)localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 workspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)clearCachedBuildSettings;
- (void)settingsForFilesInWorkspace:(id)arg1 shouldWriteAuxiliaryFiles:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
- (id)indexableFiles;
- (id)indexName;
- (id)identifier;
- (BOOL)requiresMainThread;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndexable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(nonatomic) __weak id <IDEIndexable> proxy;
@property(readonly) Class superclass;

@end

@interface IDEPseudoTerminal : NSObject
{
    int _masterFD;
    int _slaveFD;
    NSFileHandle *_masterFileHandle;
    NSString *_slaveName;
}

@property(readonly) int slaveFD; // @synthesize slaveFD=_slaveFD;
@property(readonly) NSString *slaveName; // @synthesize slaveName=_slaveName;
@property(readonly) NSFileHandle *masterFileHandle; // @synthesize masterFileHandle=_masterFileHandle;
- (void).cxx_destruct;
@property(readonly) NSFileHandle *slaveFileHandle;
- (int)_openSlaveCounterpart:(int)arg1 error:(id *)arg2;
- (BOOL)_openFirstAvailableMasterWithAccessMode:(int)arg1 error:(id *)arg2;
- (void)_closeMasterFD;
- (id)initWithAccessMode:(int)arg1 error:(id *)arg2;
- (id)initWithAccessMode:(int)arg1 ownsSlaveFileDescriptor:(BOOL)arg2 error:(id *)arg3;

@end

@interface IDESchemeBuildableReference : NSObject <DVTXMLUnarchiving, NSCopying>
{
    NSString *_buildableIdentifier;
    NSString *_blueprintIdentifier;
    NSString *_cachedBuildableName;
    NSString *_cachedBlueprintName;
    NSString *_legacyBuildableIdentifier;
    IDEContainer<IDEBlueprintProvider> *_referencedContainer;
    NSString *_lastArchivedReferencedContainerPath;
    IDEScheme *_scheme;
    id <IDEBlueprint> _cachedResolvedBlueprint;
    id <IDEBuildable> _cachedResolvedBuildable;
    DVTObservingToken *_referencedContainersObservingToken;
    DVTObservingToken *_schemeClosedToken;
    DVTObservingToken *_schemeValidToken;
    DVTObservingToken *_referencedContainerFilePathObservingToken;
    DVTObservingToken *_referencedContainerBlueprintsObservingToken;
    DVTObservingToken *_referencedContainerIsValidObservingToken;
    DVTObservingToken *_resolvedBuildableNameObservingToken;
    DVTObservingToken *_resolvedBlueprintNameObservingToken;
    BOOL _resolvingBlueprint;
    BOOL _willBeArchived;
}

+ (id)resolvedBuildableForLegacyIdentifier:(id)arg1 inContainer:(id)arg2;
+ (id)keyPathsForValuesAffectingBlueprintName;
+ (id)keyPathsForValuesAffectingBuildableName;
@property(readonly) BOOL willBeArchived; // @synthesize willBeArchived=_willBeArchived;
@property(copy) NSString *cachedBuildableName; // @synthesize cachedBuildableName=_cachedBuildableName;
@property(retain, nonatomic) IDEContainer<IDEBlueprintProvider> *referencedContainer; // @synthesize referencedContainer=_referencedContainer;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setReferencedContainerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBlueprintNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBlueprintIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableProductIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)loadLegacyBuildableWithResolutionContextContainer:(id)arg1;
- (void)resolveBuildableFromImport;
- (BOOL)referencesSameBuildableAsReference:(id)arg1;
- (id)currentReferencedContainerPath;
- (void)markSchemeDirty;
- (id)referencedContainerFromSchemeForArchivedPath:(id)arg1;
- (id)referenceResolutionContext;
- (id)containerReferenceResolver;
@property(readonly) NSString *blueprintName;
@property(readonly) NSString *buildableName;
- (BOOL)updateCachedBuildableName;
- (BOOL)updateCachedBlueprintName;
@property(readonly) id <IDEBuildable> resolvedBuildable;
- (void)_invalidateResolvedBuildable;
@property(readonly) id <IDEBlueprint> resolvedBlueprint;
- (void)_invalidateResolvedBlueprint;
- (void)setBlueprintIdentifierWithoutInvalidatingResolvedBlueprint:(id)arg1;
@property(copy) NSString *blueprintIdentifier;
@property(copy) NSString *cachedBlueprintName;
@property(copy) NSString *buildableIdentifier;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildable:(id)arg1 scheme:(id)arg2 willBeArchived:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESDKInfoCommandLineVerb : IDECommandLineVerb
{
}

+ (int)_printVerboseInfoForSDK:(id)arg1 inEnvironment:(id)arg2 keysToEmit:(id)arg3;
+ (void)_enumerateAllPlatformsAlphabeticallyWithBlock:(CDUnknownBlockType)arg1;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEIndexingEngine : NSObject <NSCopying>
{
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_engine_queue;
    NSMutableArray *_waitingLoadJobs;
    NSMutableArray *_waitingFileJobs;
    NSMutableSet *_waitingDeferredJobs;
    NSMutableSet *_waitingHeldJobs;
    NSMutableDictionary *_registeredIndexables;
    NSMutableDictionary *_productInfos;
    NSMutableDictionary *_rootPaths;
    NSMutableSet *_registeredFiles;
    NSMutableDictionary *_missingFiles;
    NSMutableDictionary *_priorityFiles;
    IDEIndexImportSession *_session;
    id _prebuildNotificationToken;
    double _timeIndexablesChanged;
    double _timeFilesChanged;
    double _timeFileJobsChanged;
    double _timeJobsEnded;
    int _suspended;
    int _nScheduledJobs;
    int _nWaitingModuleJobs;
    int _nScheduledModuleJobs;
    BOOL _wroteWorkspaceHeaderMap;
    BOOL _wroteAuxiliaryFiles;
    BOOL _purgedStaleData;
    BOOL _isActive;
    BOOL _isIndexing;
    BOOL _notified;
    BOOL _mightNotResume;
    BOOL _waitingForSessionToEnd;
    BOOL _aborted;
    BOOL _registeredFilesAdded;
    BOOL _waitingForMoreFiles;
    BOOL _waitingForMoreIndexables;
    BOOL _waitingForMoreFileJobs;
    BOOL _waitingToStartDeferredJob;
    BOOL _doingDeferredJobs;
    BOOL _dontDeferJobs;
    BOOL _lastLogWasDeferred;
    BOOL _initializedTextIndex;
    CDUnknownBlockType _abortCallback;
    DVTPerformanceMetric *_indexingMetric;
    long long _nCompleted;
    double _throttleFactor;
    NSDictionary *_notifiedDeferred;
    NSMutableArray *_filesReadyBlocks;
    double _autoQueryProgress;
}

+ (void)runDeferredJob:(id)arg1;
+ (void)runFileJob:(id)arg1;
+ (void)runLoadJob:(id)arg1;
+ (void)setClangOnly:(BOOL)arg1;
+ (id)auxDataSourceVersion;
+ (id)auxDataSource;
+ (void)initialize;
@property(nonatomic) double throttleFactor; // @synthesize throttleFactor=_throttleFactor;
@property(readonly, nonatomic) IDEIndex *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (void)reset;
- (void)abort:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL hasHeldJobs;
@property(readonly, nonatomic) BOOL isLoading;
@property(readonly, nonatomic) BOOL isActive;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)_endActivity;
- (void)_endFileActivity;
- (void)_reportProgress;
- (void)_startFileActivity;
- (void)_startActivity;
- (void)_purgeStaleData;
- (void)_writeAuxiliaryFiles;
- (void)_writeWorkspaceHeaderMap;
- (void)_setRootPaths:(id)arg1 forIndexable:(id)arg2;
- (void)didForgetFiles:(id)arg1;
- (void)didEndImportSession:(id)arg1;
- (void)_scheduleJobs;
- (void)didCancelJob:(id)arg1;
- (void)didCompleteJob:(id)arg1;
- (BOOL)shouldRunJob:(id)arg1;
- (void)_deferJob:(id)arg1;
- (void)_cancelJobs;
- (void)_scheduleJob:(id)arg1;
- (void)prunePriorityFiles;
- (void)addPriorityFile:(id)arg1;
- (void)reportAutoQueryProgress:(double)arg1;
- (void)retryHeldJobs;
- (void)dontDeferJobForFile:(id)arg1 indexable:(id)arg2;
- (void)dontDeferJobs;
- (void)indexFile:(id)arg1 indexable:(id)arg2 dirtyFile:(id)arg3 settings:(id)arg4;
- (void)indexFile:(id)arg1 indexable:(id)arg2 dirtyFile:(id)arg3;
- (void)stopIndexing;
- (void)resumeIndexing;
- (void)suspendIndexing;
- (void)suspendIndexing:(BOOL)arg1;
- (void)clearHotFiles;
- (void)registerHotFile:(id)arg1;
- (void)doWhenFilesReady:(CDUnknownBlockType)arg1;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (void)unregisterIndexable:(id)arg1;
- (void)buildSettingsChanged:(id)arg1;
- (void)indexableChanged:(id)arg1 addOnly:(BOOL)arg2;
- (void)registerIndexable:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndex:(id)arg1;

@end

@interface IDETestPerformanceMetricBaselineRecord : NSObject
{
    NSString *_baselineDisplayName;
    NSNumber *_average;
    NSNumber *_maxPercentRegression;
    NSNumber *_maxPercentImprovement;
    NSNumber *_maxPercentRelativeStandardDeviation;
    NSNumber *_maxRegression;
    NSNumber *_maxStandardDeviation;
}

+ (void)initialize;
@property(readonly) NSNumber *maxStandardDeviation; // @synthesize maxStandardDeviation=_maxStandardDeviation;
@property(readonly) NSNumber *maxRegression; // @synthesize maxRegression=_maxRegression;
@property(readonly) NSNumber *maxPercentRelativeStandardDeviation; // @synthesize maxPercentRelativeStandardDeviation=_maxPercentRelativeStandardDeviation;
@property(readonly) NSNumber *maxPercentImprovement; // @synthesize maxPercentImprovement=_maxPercentImprovement;
@property(readonly) NSNumber *maxPercentRegression; // @synthesize maxPercentRegression=_maxPercentRegression;
@property(readonly) NSNumber *average; // @synthesize average=_average;
@property(readonly) NSString *baselineDisplayName; // @synthesize baselineDisplayName=_baselineDisplayName;
- (void).cxx_destruct;
- (id)initWithBaselineDisplayName:(id)arg1 average:(id)arg2 maxPercentRegression:(id)arg3 maxPercentImprovement:(id)arg4 maxPercentRelativeStandardDeviation:(id)arg5 maxRegression:(id)arg6 maxStandardDeviation:(id)arg7;
- (id)init;

@end

@interface IDETestBaselineRecord : NSObject
{
    NSMutableDictionary *_performanceMetricIdentifiersDict;
    NSMutableDictionary *_classNamesDict;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)unionWithBaselineRecord:(id)arg1;
- (void)unionWithTestClassName:(id)arg1 testMethodName:(id)arg2 inBaselineRecord:(id)arg3;
- (void)unionWithDefaultsInBaselineRecord:(id)arg1;
- (void)setBaselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3 maxPercentRegression:(id)arg4 maxPercentImprovement:(id)arg5 maxPercentRelativeStandardDeviation:(id)arg6 maxRegression:(id)arg7 maxStandardDeviation:(id)arg8;
- (void)setBaselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3 baselineDisplayName:(id)arg4 average:(id)arg5 maxPercentRegression:(id)arg6 maxPercentImprovement:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10;
- (void)_setBaselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3 baselineDisplayName:(id)arg4 average:(id)arg5 maxPercentRegression:(id)arg6 maxPercentImprovement:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10;
- (id)baselineForTestClassName:(id)arg1 testMethodName:(id)arg2 performanceMetricIdentifier:(id)arg3;
- (void)setDefaultBaselineForPerformanceMetricIdentifier:(id)arg1 maxPercentRegression:(id)arg2 maxPercentImprovement:(id)arg3 maxPercentRelativeStandardDeviation:(id)arg4 maxRegression:(id)arg5 maxStandardDeviation:(id)arg6;
- (id)defaultBaselineForPerformanceMetricIdentifier:(id)arg1;
- (id)performanceMetricIdentifiersWithDefaultBaseline;
- (id)performanceMetricIdentifiersForClassName:(id)arg1 testMethodName:(id)arg2;
- (id)testMethodNamesForClassName:(id)arg1;
- (id)testClassNames;
- (BOOL)writeToFilePath:(id)arg1 workspace:(id)arg2 versionedFileManager:(id)arg3 error:(id *)arg4;
- (id)_plistDataWithError:(id *)arg1;
- (id)initWithFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_validatePropertyList:(id)arg1 errorString:(id *)arg2;
- (BOOL)_validateClassNamesDictionary:(id)arg1 locationDescription:(id)arg2 errorString:(id *)arg3;
- (BOOL)_validatePerformanceMetricBaselinesByPerformanceMetricIdentifierDictionary:(id)arg1 locationDescription:(id)arg2 errorString:(id *)arg3;
- (id)init;

@end

@interface IDEBuildArbitrator : NSObject
{
    NSOperationQueue *_serializationQueue;
    DVTMapTable *_fileProducingBuildTasksByFilePath;
    DVTMapTable *_registeringBuildersByFilePath;
    DVTMapTable *_registeredFilePathsByBuilder;
}

+ (id)sharedBuildArbitrator;
+ (void)initialize;
- (void).cxx_destruct;
- (void)unregisterAllBuildTasksForBuilder:(id)arg1;
- (void)unregisterBuildTaskWhichProducesFileAtPath:(id)arg1 forBuilder:(id)arg2;
- (id)registerBuildTask:(id)arg1 asProducerOfFileAtPath:(id)arg2 forBuilder:(id)arg3;
- (id)init;

@end

@interface IDEOCUnitTestRunnerOperation : IDERunOperation
{
    DVTFilePath *_testScopeFilePath;
}

@property(retain) DVTFilePath *testScopeFilePath; // @synthesize testScopeFilePath=_testScopeFilePath;
- (void).cxx_destruct;
- (void)runningDidFinish;

@end

@interface IDEOCUnitTestRunner : IDEStandardTestRunner
{
    NSOperationQueue *_commandLineArgsQueue;
}

- (void).cxx_destruct;
- (id)_scheduledTestArgumentsOperationForBuildParameters:(id)arg1 launchParameters:(id)arg2 runDestination:(id)arg3 workspace:(id)arg4 testRunIdentifier:(id)arg5 testRunIdentifiers:(id)arg6 actionResultsBundleWithBaselineOverridesFilePath:(id)arg7 error:(id *)arg8 completionBlock:(CDUnknownBlockType)arg9;
- (id)defaultTestArgumentsOperationForBuildParameters:(id)arg1 launchParameters:(id)arg2 runDestination:(id)arg3 workspace:(id)arg4 error:(id *)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)testOperationsForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 workspace:(id)arg5 error:(id *)arg6 launchParametersBlock:(CDUnknownBlockType)arg7;
- (id)_writeTestInvocationScope:(id)arg1 forTestBundlePath:(id)arg2 inWorkspace:(id)arg3 invertScope:(BOOL)arg4;
- (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4 error:(id *)arg5;
- (BOOL)treatMissingBaselinesAsTestFailuresForBuildParameters:(id)arg1;

@end

@interface IDEIssueGroup : NSObject
{
    IDEIssueProvider *_issueProvider;
    IDEContainer *_container;
    id <IDEBlueprint> _blueprint;
    NSMutableArray *_issueFileGroups;
    DVTMapTable *_issueFileGroupsIndex;
    NSMutableArray *_issuesWithNoFile;
    NSMutableArray *_issueTypeGroups;
    DVTMapTable *_issueTypeGroupsIndex;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    int _issueType;
}

@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property(readonly) NSArray *issueTypeGroups; // @synthesize issueTypeGroups=_issueTypeGroups;
@property(readonly) NSArray *issuesWithNoFile; // @synthesize issuesWithNoFile=_issuesWithNoFile;
@property(readonly) NSArray *issueFileGroups; // @synthesize issueFileGroups=_issueFileGroups;
@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void).cxx_destruct;
@property(readonly) NSSet *_allIssues;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_addNoFileIssues:(id)arg1;
- (void)_updateIssueType;
@property(readonly) unsigned long long issueCount;
- (id)_initWithIssueProvider:(id)arg1 container:(id)arg2 blueprint:(id)arg3;
- (id)init;

@end

@interface IDEDistributionCodesignStep : IDEDistributionProcessingStep
{
}

+ (id)processingStepWithDistributionItem:(id)arg1;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;

@end

@interface IDERunContextManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableSet *_customDataStores;
    DVTMapTable *_storeToSpecifierMap;
    DVTMapTable *_storeToUserDataMap;
    NSMutableArray *_runContexts;
    IDEScheme *_activeRunContext;
    IDERunDestination *_activeRunDestination;
    NSMutableArray *_ignoredChangesDevices;
    NSCountedSet *_schemeNameCounts;
    BOOL _bulkChangingBlueprints;
    BOOL _blueprintChangedDuringBulkChanges;
}

+ (BOOL)automaticallyNotifiesObserversOfActiveRunDestination;
+ (BOOL)automaticallyNotifiesObserversOfActiveRunContext;
+ (void)initialize;
@property(readonly) NSCountedSet *schemeNameCounts; // @synthesize schemeNameCounts=_schemeNameCounts;
@property(retain, nonatomic) IDERunDestination *activeRunDestination; // @synthesize activeRunDestination=_activeRunDestination;
@property(retain, nonatomic) IDEScheme *activeRunContext; // @synthesize activeRunContext=_activeRunContext;
@property(readonly) NSArray *runContexts; // @synthesize runContexts=_runContexts;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)setActiveRunContext:(id)arg1 andRunDestination:(id)arg2;
- (BOOL)validateActiveRunContext:(id *)arg1 error:(id *)arg2;
- (void)blueprintsDidBulkChange:(id)arg1;
- (void)blueprintsWillBulkChange:(id)arg1;
- (void)blueprintsDidChange:(id)arg1;
- (void)deviceUsabilityDidChange:(id)arg1;
- (void)_invalidateAvailableRunDestinations;
- (void)_invalidateAvailableRunDestinationsForSchemes:(id)arg1;
- (void)_invalidateActiveRunDestination;
- (void)shouldIgnoreDeviceChangesDidEnd:(id)arg1;
- (void)shouldIgnoreDeviceChangesWillBegin:(id)arg1;
- (void)_updateOrderHint:(unsigned long long)arg1 forRunContext:(id)arg2;
- (void)_updateIsShown:(BOOL)arg1 forRunContext:(id)arg2;
- (id)runContextManagementDictionaryForStore:(id)arg1;
- (void)saveRunContextManagementDictionaryForStore:(id)arg1;
- (void)_lookupIsShown:(char *)arg1 orderHint:(unsigned long long *)arg2 forCustomDataStore:(id)arg3 specifier:(id)arg4;
- (id)_contextUserStateForCustomDataStore:(id)arg1 specifier:(id)arg2 createIfNeeded:(BOOL)arg3;
- (id)_contextUserStateDictForCustomDataStore:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)_contextUserStateKeyForSpecifier:(id)arg1;
- (void)moveRunContext:(id)arg1 toCustomDataStore:(id)arg2 customDataSpecifier:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)deleteRunContexts:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)importRunContextAtURL:(id)arg1 withCustomDataStore:(id)arg2 customDataSpecifier:(id)arg3 orderHint:(unsigned long long)arg4 completionQueue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)duplicateRunContext:(id)arg1 withCustomDataSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)newTransientSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3;
- (id)newSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3;
- (id)_newSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3 schemeCreationBlock:(CDUnknownBlockType)arg4;
- (void)_addContext:(id)arg1 specifierToRunContextMap:(id)arg2;
- (id)_uniqueSpecifierForSpecifier:(id)arg1 inMap:(id)arg2;
- (void)_customDataStoresDidUpdate;
- (void)_finishUpdatingRunContexts;
- (void)_startUpdatingRunContexts;
- (void)_ensureActiveRunContext;
- (void)_restoreActiveRunContextIfPossible;
- (void)_updateMap:(id)arg1 contextForCustomDataStore:(id)arg2 specifier:(id)arg3;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexClangQueryProvider : IDEIndexGenericQueryProvider
{
    DVTDispatchLock *_clangLock;
    void *_cxIndex;
    struct CXTranslationUnitImpl *_cxTU;
    long long _filePurgeCount;
    NSArray *_astArgs;
    NSString *_workingDirectory;
    struct {
        unsigned int _field1[4];
        void *_field2;
    } *_tokens;
    CDStruct_a94d320b *_cursors;
    DVTTextDocumentLocation *_processedLocation;
    DVTDispatchLock *_completionLock;
    CDUnknownBlockType _completionBlock;
    unsigned int _numTokens;
    BOOL _throwOutCache;
}

+ (BOOL)supportsSymbolColoring;
+ (void)initialize;
- (void).cxx_destruct;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForCXType:(CDStruct_9b248d9b)arg1;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (BOOL)_setOccurrenceForCursor:(CDStruct_a94d320b)arg1 symbol:(id)arg2 index:(id)arg3;
- (id)processedSymbolsInContext:(id)arg1 initFunction:(CDUnknownBlockType)arg2 visitorFunction:(CDUnknownBlockType)arg3 includeSymbolLocations:(BOOL)arg4 withCurrentFileContentDictionary:(id)arg5 forIndex:(id)arg6;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)_diagnosticItemsFromDiagnosticSet:(void *)arg1 parentDiagnostic:(void *)arg2 location:(id)arg3 forIndex:(id)arg4;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)_symbolsMatchingName:(id)arg1 inContext:(id)arg2 cxTU:(struct CXTranslationUnitImpl *)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)_resolutionForCursor:(CDStruct_a94d320b)arg1;
- (void)_createSharedTranslationUnitWithCurrentFileContentDictionary:(id)arg1 index:(id)arg2;
- (id)_canonicalPathForFile:(void *)arg1 index:(id)arg2;
- (id)_canonicalPathForPath:(id)arg1 index:(id)arg2;
- (void)_logClangInvocationWithArguments:(id)arg1;
- (id)pchFile;
- (void)purgeCaches;
- (BOOL)hasAST;
- (void)dealloc;
- (void)disposeCIndexAndTU;
- (void)disposeTokensAndCursors;
- (void)performCompletion:(CDUnknownBlockType)arg1;
- (void)asyncPerformClang:(CDUnknownBlockType)arg1;
- (void)performClang:(CDUnknownBlockType)arg1;
- (void)processCompletions;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

@end

@interface IDEWorkspaceSharedSettings : IDEWorkspaceSettings
{
}

@property BOOL autocreateContextsIfNeeded;
- (id)settingsOwnership;

@end

@interface IDEBuildSettingTable : DVTMacroDefinitionTable
{
}

+ (id)macroNameRegistry;

@end

@interface IDEContainerQuery : NSObject <DVTInvalidation>
{
    id <DVTModelObject><DVTInvalidation> _containerGraphObject;
    DVTObservingToken *_containerGraphObjectValidObservationToken;
    CDUnknownBlockType _skipSubgraphBlock;
    CDUnknownBlockType _predicateBlock;
    CDUnknownBlockType _visitorBlock;
    NSMutableSet *_matches;
    NSMutableSet *_visitedContainerGraphObjects;
    BOOL _isCancelled;
    BOOL _isLiveQuery;
    BOOL _inObjectsDidChangeNotification;
}

+ (BOOL)automaticallyNotifiesObserversOfMatches;
+ (id)containerQueryWithContainerGraphObject:(id)arg1 predicateBlock:(CDUnknownBlockType)arg2;
+ (void)traverseContainerGraphRootedInContainerGraphObject:(id)arg1 skipSubgraphBlock:(CDUnknownBlockType)arg2 visitorBlock:(CDUnknownBlockType)arg3;
+ (void)initialize;
- (void).cxx_destruct;
- (void)_objectsDidChange:(id)arg1;
- (void)_updateWithInsertedMatches:(id)arg1 deletedMatches:(id)arg2;
- (void)_traverseContainerGraphObjects:(id)arg1 forDeletion:(BOOL)arg2 insertedMatches:(id)arg3 deletedMatches:(id)arg4;
- (BOOL)_isInterestedInContainerGraphObject:(id)arg1 forDeletion:(BOOL)arg2;
- (BOOL)_workspaceVerified_isTrackingContainerItem:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_isTrackingContainerItem:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_workspaceVerified_isTrackingContainer:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_isTrackingContainer:(id)arg1 checkedContainers:(id)arg2;
- (void)_traverseContainerGraphObject:(id)arg1 forDeletion:(BOOL)arg2 checkedContainers:(id)arg3 insertedMatches:(id)arg4 deletedMatches:(id)arg5;
- (void)_processContainerGraphObject:(id)arg1 insertedMatches:(id)arg2 deletedMatches:(id)arg3;
- (void)_removeContainerGraphObject:(id)arg1 deletedMatches:(id)arg2;
- (void)_addContainerGraphObject:(id)arg1 insertedMatches:(id)arg2;
@property(readonly) NSSet *matches;
- (void)primitiveInvalidate;
- (void)_cancelQueryIfNeeded;
- (id)_initWithContainerGraphObject:(id)arg1 skipSubgraphBlock:(CDUnknownBlockType)arg2 predicateBlock:(CDUnknownBlockType)arg3 visitorBlock:(CDUnknownBlockType)arg4;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceControlIssueProvider : IDEIssueProvider
{
    IDEWorkspace *_workspace;
    DVTObservingToken *_scmMonitorObservingToken;
    id _didUpdateServerStatusNotificationToken;
    id _didUpdateLocalStatusNotificationToken;
    NSDictionary *_localizedStrings;
}

+ (id)_issueScanningQueue;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)_issueTypeIdentifierForStatus:(int)arg1;
- (id)_shortMessageForItem:(id)arg1;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (id)_locationsOfTextualConflictsAtPath:(id)arg1;
- (id)_issuesForItemWithStatus:(id)arg1;
- (void)_scanForIssues;
- (void)primitiveInvalidate;
- (void)_setUpSourceControlObserving;
- (id)_localizedStringForKey:(id)arg1;
- (void)_generateLocalizedStrings;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDERunDestinationSelectable : NSObject
{
    BOOL _targetDeviceIsConcrete;
    BOOL _targetDeviceIsWireless;
    BOOL _isEligible;
    BOOL _isResizable;
    NSURL *_targetDeviceLocation;
    NSString *_targetDeviceModelCode;
    NSString *_targetDeviceFamily;
    DVTSDK *_targetSDK;
    NSString *_targetArchitecture;
}

@property(readonly, nonatomic) BOOL isResizable; // @synthesize isResizable=_isResizable;
@property(readonly, nonatomic) BOOL isEligible; // @synthesize isEligible=_isEligible;
@property(readonly, nonatomic) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly, nonatomic) DVTSDK *targetSDK; // @synthesize targetSDK=_targetSDK;
@property(readonly, nonatomic) BOOL targetDeviceIsWireless; // @synthesize targetDeviceIsWireless=_targetDeviceIsWireless;
@property(readonly, nonatomic) BOOL targetDeviceIsConcrete; // @synthesize targetDeviceIsConcrete=_targetDeviceIsConcrete;
@property(readonly, nonatomic) NSString *targetDeviceFamily; // @synthesize targetDeviceFamily=_targetDeviceFamily;
@property(readonly, nonatomic) NSString *targetDeviceModelCode; // @synthesize targetDeviceModelCode=_targetDeviceModelCode;
@property(readonly, nonatomic) NSURL *targetDeviceLocation; // @synthesize targetDeviceLocation=_targetDeviceLocation;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)plistRepresentation;
- (id)initWithPlistRepresentation:(id)arg1;
- (id)initWithRunDestination:(id)arg1;
- (id)initWithTargetDeviceLocation:(id)arg1 targetDeviceFamily:(id)arg2 targetDeviceModelCode:(id)arg3 targetDeviceIsConcrete:(BOOL)arg4 targetDeviceIsWireless:(BOOL)arg5 targetSDK:(id)arg6 targetArchitecture:(id)arg7 isEligible:(BOOL)arg8 isResizable:(BOOL)arg9;

@end

@interface IDERunDestinationFallbackSelector : NSObject
{
}

+ (id)bestDestinationSelectableWithPreviousDestinationSelectable:(id)arg1 availableDestinationSelectables:(id)arg2;
+ (id)bestDestinationWithPreviousDestinationSelectable:(id)arg1 scheme:(id)arg2;
+ (id)bestDestinationWithPreviousDestination:(id)arg1 scheme:(id)arg2;

@end

@interface IDEFramework : IDEFolder
{
}

+ (id)containerTypeDisplayName;
+ (BOOL)_THREAD_shouldAddFileWithName:(id)arg1;
+ (void)initialize;
- (id)displayName;

@end

@interface IDEEnergyAddition : NSObject <IDEDebuggingAddition, DVTSysmonBridgeDelegate>
{
    int _selectedPID;
    IDEDataMatrix *_metricsOverTime;
    NSString *_identifier;
    IDELaunchSession *_launchSession;
    id _launchSessionObservationToken;
    id _launchSessionObservationToken2;
    DVTSysmonBridge *_sysmonBridge;
}

+ (void)initialize;
+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
@property(readonly, nonatomic) int selectedPID; // @synthesize selectedPID=_selectedPID;
@property(retain, nonatomic) DVTSysmonBridge *sysmonBridge; // @synthesize sysmonBridge=_sysmonBridge;
@property(retain, nonatomic) id launchSessionObservationToken2; // @synthesize launchSessionObservationToken2=_launchSessionObservationToken2;
@property(retain, nonatomic) id launchSessionObservationToken; // @synthesize launchSessionObservationToken=_launchSessionObservationToken;
@property(retain, nonatomic) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) IDEDataMatrix *metricsOverTime; // @synthesize metricsOverTime=_metricsOverTime;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)bridgeHasNewProcessInformation:(id)arg1;
- (void)_handlePIDChange:(int)arg1;
- (void)_sysmondControl:(int)arg1;
- (void)processFinalLaunchParameters:(id)arg1;
- (id)initInLaunchSession:(id)arg1 withAppDisplayName:(id)arg2 runDestination:(id)arg3 fromExtension:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexCompletionArray : NSMutableArray
{
    NSMutableArray *_array;
    void *_completionResults;
}

- (void).cxx_destruct;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCodeCompleteResults:(void *)arg1;

@end

@interface IDEMasterPtyFileHandle : NSFileHandle
{
    NSFileHandle *_masterFileHandle;
    BOOL _readObserverAdded;
    BOOL _isInGotData;
    NSFileHandle *_slaveFileHandle;
}

@property(readonly) NSFileHandle *slaveFileHandle; // @synthesize slaveFileHandle=_slaveFileHandle;
- (void).cxx_destruct;
- (int)fileDescriptor;
- (void)waitForDataInBackgroundAndNotify;
- (void)waitForDataInBackgroundAndNotifyForModes:(id)arg1;
- (void)acceptConnectionInBackgroundAndNotify;
- (void)acceptConnectionInBackgroundAndNotifyForModes:(id)arg1;
- (void)readToEndOfFileInBackgroundAndNotify;
- (void)readToEndOfFileInBackgroundAndNotifyForModes:(id)arg1;
- (void)readInBackgroundAndNotify;
- (void)_gotData:(id)arg1;
- (void)readInBackgroundAndNotifyForModes:(id)arg1;
- (void)closeFile;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataOfLength:(unsigned long long)arg1;
- (id)readDataToEndOfFile;
- (id)availableData;
- (void)dealloc;
- (id)initWithFileDescriptor:(int)arg1 slaveFileDescriptor:(int)arg2 ownsSlaveFileDescriptor:(BOOL)arg3;

@end

@interface IDEBuildPlan : NSObject
{
    NSString *_debugName;
    NSMutableArray *_bucketList;
    BOOL _isImmutable;
}

@property(readonly) NSString *debugName; // @synthesize debugName=_debugName;
- (void).cxx_destruct;
- (id)description;
- (void)makeImmutable;
- (BOOL)isImmutable;
- (void)addBucket:(id)arg1;
@property(readonly) NSArray *bucketList;
- (id)initWithDebugName:(id)arg1;

@end

@interface _IDELocalizedPlistAdaptorReadContext : IDELocalizationWorkContext <IDELocalizationWorkReadStrings>
{
    DVTFilePath *IDELocalizationWork_path;
    NSDictionary *IDELocalizationWork_strings;
    NSDictionary *IDELocalizationWork_comments;
    IDELocalizedPlistAdaptor *_adaptor;
    DVTLocale *_language;
}

@property(retain) DVTLocale *language; // @synthesize language=_language;
@property(retain) IDELocalizedPlistAdaptor *adaptor; // @synthesize adaptor=_adaptor;
@property(retain) NSDictionary *IDELocalizationWork_comments; // @synthesize IDELocalizationWork_comments;
@property(retain) NSDictionary *IDELocalizationWork_strings; // @synthesize IDELocalizationWork_strings;
@property(retain) DVTFilePath *IDELocalizationWork_path; // @synthesize IDELocalizationWork_path;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface _IDELocalizedPlistAdaptorWriteContext : IDELocalizationWorkContext <IDELocalizationWorkWriteStrings>
{
    BOOL IDELocalizationWork_createdNewSubitem;
    NSDictionary *IDELocalizationWork_strings;
    NSDictionary *IDELocalizationWork_comments;
    IDEContainer<IDELocalizedContainer> *IDELocalizationWork_container;
    IDEGroup<IDELocalizedGroup> *IDELocalizationWork_group;
    DVTLocale *IDELocalizationWork_language;
    DVTFilePath *IDELocalizationWork_path;
}

@property(retain) DVTFilePath *IDELocalizationWork_path; // @synthesize IDELocalizationWork_path;
@property BOOL IDELocalizationWork_createdNewSubitem; // @synthesize IDELocalizationWork_createdNewSubitem;
@property(retain) DVTLocale *IDELocalizationWork_language; // @synthesize IDELocalizationWork_language;
@property(retain) IDEGroup<IDELocalizedGroup> *IDELocalizationWork_group; // @synthesize IDELocalizationWork_group;
@property(retain) IDEContainer<IDELocalizedContainer> *IDELocalizationWork_container; // @synthesize IDELocalizationWork_container;
@property(retain) NSDictionary *IDELocalizationWork_comments; // @synthesize IDELocalizationWork_comments;
@property(retain) NSDictionary *IDELocalizationWork_strings; // @synthesize IDELocalizationWork_strings;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizedPlistAdaptor : IDELocalizedResourceAdaptor
{
    IDEFileReference *_plistFileReference;
    NSDictionary *_baseStrings;
    NSMutableDictionary *_stringsCache;
}

+ (id)writeWorkForContext:(id)arg1 langauge:(id)arg2;
+ (id)readWorkForContext:(id)arg1;
- (void).cxx_destruct;
- (id)target;
- (id)expectedSuperitem;
- (id)expectedDirectoryPath;
- (id)expectedFileName;
- (id)filteredBaseStringsByKey:(id)arg1;
- (id)localizedGroupIdentifier;
- (id)plistFileReference;
- (id)commentsByKey;
- (void)setStringsByKey:(id)arg1 forLanguage:(id)arg2;
- (id)stringsByKeyForLanguage:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithLocalizedContainer:(id)arg1 localizedGroup:(id)arg2 plistFileReference:(id)arg3;

@end

@interface IDEDistributionItemProcessingResults : NSObject <NSCopying>
{
    IDEDistributionItem *_item;
    NSDictionary *_entitlements;
    DVTFilePath *_path;
    NSString *_codesignCommandline;
}

+ (id)itemResultsForItem:(id)arg1 entitlements:(id)arg2 destinationPath:(id)arg3 andCommandline:(id)arg4;
@property(readonly, nonatomic) NSString *codesignCommandline; // @synthesize codesignCommandline=_codesignCommandline;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) IDEDistributionItem *item; // @synthesize item=_item;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface _IDEOCUnitTestRecord : NSObject
{
    IDETest *_test;
    NSMutableArray *_outputMessages;
    unsigned long long _status;
    NSDate *_startDate;
    double _duration;
    DVTPerformanceTestOutput *_performanceTestOutput;
    NSMutableArray *_performanceMetrics;
    NSMutableSet *_failureLocationsForCurrentTest;
}

+ (void)initialize;
@property(readonly) NSMutableSet *failureLocationsForCurrentTest; // @synthesize failureLocationsForCurrentTest=_failureLocationsForCurrentTest;
@property(retain) NSMutableArray *performanceMetrics; // @synthesize performanceMetrics=_performanceMetrics;
@property(copy) DVTPerformanceTestOutput *performanceTestOutput; // @synthesize performanceTestOutput=_performanceTestOutput;
@property double duration; // @synthesize duration=_duration;
@property(copy) NSDate *startDate; // @synthesize startDate=_startDate;
@property unsigned long long status; // @synthesize status=_status;
@property(readonly) IDETest *test; // @synthesize test=_test;
- (void).cxx_destruct;
@property(readonly) IDETestResult *result;
- (id)initWithTest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSMutableArray *mutableOutputMessages; // @dynamic mutableOutputMessages;
@property(copy) NSArray *outputMessages; // @dynamic outputMessages;

@end

@interface IDEUnitTestsRunnerAdaptor : NSObject <IDEUnitTestsObserver>
{
    NSMutableDictionary *_operationToTestRunnerLookup;
    NSMutableArray *_testsStack;
    DVTOperation *_currentOperation;
    double _testRunStartedTime;
}

@property(readonly) double testRunStartedTime; // @synthesize testRunStartedTime=_testRunStartedTime;
- (void).cxx_destruct;
- (id)identifierForTestClass:(id)arg1 method:(id)arg2;
- (void)testOperationGroupDidFinish;
- (void)testOperation:(id)arg1 willFinishWithSuccess:(BOOL)arg2 withError:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(id)arg1 method:(id)arg2 performanceMetric:(id)arg3 rawOutput:(id)arg4;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testOperationDidStartExecution:(id)arg1;
- (id)parsedTestFromTestClass:(id)arg1 method:(id)arg2;
- (id)currentTestRecord;
- (id)popTestRecord;
- (void)pushTestRecord:(id)arg1;
- (id)currentTestRunner;
- (void)registerOperations:(id)arg1 forTestRunner:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceControlLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDEExecutionActionOperation : DVTOperation
{
    CDUnknownBlockType _environmentPopulationBlock;
}

@property(copy) CDUnknownBlockType environmentPopulationBlock; // @synthesize environmentPopulationBlock=_environmentPopulationBlock;
- (void).cxx_destruct;

@end

@interface IDEIndexSymbolOccurrence : NSObject
{
    long long _role;
    DVTDocumentLocation *_location;
    long long _objectId;
    long long _lineNumber;
    long long _column;
    DVTFilePath *_file;
    NSURL *_moduleURL;
    BOOL _lookedForCorrespondingSymbol;
    IDEIndexSymbol *_correspondingSymbol;
    NSObject<IDEIndexQueryProvider> *_queryProvider;
}

+ (id)newSymbolOccurrenceForSymbol:(id)arg1 role:(long long)arg2 location:(id)arg3 forQueryProvider:(id)arg4;
+ (id)newSymbolOccurrenceForSymbol:(id)arg1 objectId:(long long)arg2 role:(long long)arg3 lineNumber:(long long)arg4 column:(long long)arg5 file:(id)arg6 forQueryProvider:(id)arg7;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
@property(readonly, nonatomic) long long column; // @synthesize column=_column;
@property(readonly, nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) long long role; // @synthesize role=_role;
@property(readonly, nonatomic) long long objectId; // @synthesize objectId=_objectId;
- (void).cxx_destruct;
- (id)callees;
@property(readonly, nonatomic) DVTDocumentLocation *location;
@property(readonly, nonatomic) NSURL *moduleURL;
@property(readonly, nonatomic) DVTFilePath *file;
- (id)occurrence;
- (id)containingSymbol;
- (id)description;
- (void)setOccurrence:(id)arg1;
- (void)setRole:(long long)arg1 location:(id)arg2;
- (void)setObjectId:(long long)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5 moduleURL:(id)arg6;
- (void)setObjectId:(long long)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5;
- (id)correspondingSymbol;
- (id)initWithCorrespondingSymbol:(id)arg1 forQueryProvider:(id)arg2;

@end

@interface IDEIntegrateSchemeAction : IDESchemeAction
{
    BOOL _performsAnalyze;
    BOOL _performsTest;
    BOOL _performsArchive;
}

+ (id)keyPathsForValuesAffectingHasDefaultValues;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)shouldAllowCustomPhaseActions;
@property(nonatomic) BOOL performsArchive; // @synthesize performsArchive=_performsArchive;
@property(nonatomic) BOOL performsTest; // @synthesize performsTest=_performsTest;
@property(nonatomic) BOOL performsAnalyze; // @synthesize performsAnalyze=_performsAnalyze;
- (void)setPerformsArchiveFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPerformsTestFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPerformsAnalyzeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)hasDefaultValues;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)mutablePostPhaseExecutionActions;
- (id)postPhaseExecutionActions;
- (id)mutablePrePhaseExecutionActions;
- (id)prePhaseExecutionActions;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

@end

@interface _IDEFoundationPrivateClassForFindingBundle : NSObject
{
}

@end

@interface IDETestReportDocumentLocation : DVTDocumentLocation
{
    NSString *_testClassName;
    NSString *_testMethodName;
}

@property(copy) NSString *testMethodName; // @synthesize testMethodName=_testMethodName;
@property(copy) NSString *testClassName; // @synthesize testClassName=_testClassName;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 testClassName:(id)arg3 testMethodName:(id)arg4;

@end

@interface IDEIndexingPrebuildController : NSObject
{
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_queue;
    BOOL _hasInitiatedPrebuild;
    BOOL _hasPerformedPrebuild;
}

@property BOOL hasPerformedPrebuild; // @synthesize hasPerformedPrebuild=_hasPerformedPrebuild;
- (void).cxx_destruct;
- (void)cancelAnyPrebuild;
- (void)needsPrebuild;
- (void)initiatePrebuild;
- (id)initWithIndex:(id)arg1;

@end

@interface IDEAnalysisTool : NSObject
{
    int _type;
    NSString *_identifier;
    NSString *_displayName;
}

@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)displayNameCompare:(id)arg1;
- (id)initWithType:(int)arg1 identifer:(id)arg2 displayName:(id)arg3;

@end

@interface IDEProfileSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    IDERunnable *_runnable;
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    id <IDEAnalysisToolService> _analysisToolService;
    BOOL _useCustomWorkingDirectory;
    NSString *_customWorkingDirectory;
    NSString *_resolvedCustomWorkingDirectory;
    BOOL _ignoresPersistentStateOnLaunch;
    BOOL _debugDocumentVersioning;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    NSString *_buildConfiguration;
    NSString *_savedToolIdentifier;
    IDESchemeBuildableReference *_profileBuildableReferenceToUseForMacroExpansion;
    DVTNotificationToken *_buildablesToken;
    BOOL _askForAppToLaunch;
    Class _analysisToolServiceClass;
}

+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (BOOL)automaticallyNotifiesObserversOfAnalysisToolService;
+ (id)keyPathsForValuesAffectingRunnable;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(retain) Class analysisToolServiceClass; // @synthesize analysisToolServiceClass=_analysisToolServiceClass;
@property BOOL askForAppToLaunch; // @synthesize askForAppToLaunch=_askForAppToLaunch;
@property BOOL useCustomWorkingDirectory; // @synthesize useCustomWorkingDirectory=_useCustomWorkingDirectory;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
@property(retain, nonatomic) NSString *savedToolIdentifier; // @synthesize savedToolIdentifier=_savedToolIdentifier;
@property BOOL ignoresPersistentStateOnLaunch; // @synthesize ignoresPersistentStateOnLaunch=_ignoresPersistentStateOnLaunch;
@property BOOL debugDocumentVersioning; // @synthesize debugDocumentVersioning=_debugDocumentVersioning;
@property(copy, nonatomic) NSString *customWorkingDirectory; // @synthesize customWorkingDirectory=_customWorkingDirectory;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (void).cxx_destruct;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setDebugDocumentVersioningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSavedToolIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAskForAppToLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_expandMacrosInString:(id)arg1;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (id)buildableReferenceToUseForMacroExpansion;
@property(readonly) NSString *resolvedCustomWorkingDirectory; // @synthesize resolvedCustomWorkingDirectory=_resolvedCustomWorkingDirectory;
@property(readonly) NSDictionary *environmentVariables;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
- (id)commandLineArgumentsForDevice:(id)arg1;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
- (id)_profileOperationWithExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 testManager:(id)arg5 overridingTestingSpecifiers:(id)arg6 schemeActionRecord:(id)arg7 environmentVariables:(id)arg8 commandLineArguments:(id)arg9 outError:(id *)arg10 actionCallbackBlock:(CDUnknownBlockType)arg11;
- (id)_testRunnerForTestManager:(id)arg1 overridingTestingSpecifiers:(id)arg2;
- (id)profileOperationForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 schemeActionRecord:(id)arg5 outError:(id *)arg6 actionCallbackBlock:(CDUnknownBlockType)arg7;
- (id)profileOperationWithTestManager:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 buildableProductDirectories:(id)arg5 overridingTestingSpecifiers:(id)arg6 schemeActionRecord:(id)arg7 outError:(id *)arg8 actionCallbackBlock:(CDUnknownBlockType)arg9;
- (id)_filePathsForContainersAndExtensions;
- (void)setSelectedAnalysisToolIdentifier:(id)arg1 forPlatformIdentifier:(id)arg2;
@property(retain) IDERunnable *runnable; // @synthesize runnable=_runnable;
- (void)_updateProfileActionBuildableToUseForMacroExpansion;
- (void)setRunContext:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)primitiveInvalidate;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBotSCMAction : NSObject
{
    NSURL *_repositoryURL;
    DVTFilePath *_destinationPath;
}

+ (id)_performBotSCMAction:(int)arg1 repositoryURL:(id)arg2 version:(id)arg3 destinationPath:(id)arg4 username:(id)arg5 password:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
+ (id)performSVNUpdateLocalRepositoryAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (id)performSVNCheckoutRepositoryURL:(id)arg1 revision:(id)arg2 destinationPath:(id)arg3 username:(id)arg4 password:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
+ (id)performGitUpdateLocalRepositoryAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (id)performGitResetHeadWithHash:(id)arg1 destinationPath:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)performGitCheckoutBranch:(id)arg1 destinationPath:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)performGitCloneRepositoryURL:(id)arg1 destinationPath:(id)arg2 username:(id)arg3 password:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
+ (void)verifyIfSCMIsTrackingFileAtPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, copy, nonatomic) DVTFilePath *destinationPath; // @synthesize destinationPath=_destinationPath;
@property(readonly, copy, nonatomic) NSURL *repositoryURL; // @synthesize repositoryURL=_repositoryURL;
- (void).cxx_destruct;
- (void)_currentBranchForWorkingTree:(id)arg1 currentBranchNameCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_remoteRepositoryURLForLocalRepositoryPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_svnUpdateWithExtension:(id)arg1 repositoryURL:(id)arg2 destinationPath:(id)arg3 username:(id)arg4 password:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)_svnCheckoutWithExtension:(id)arg1 repositoryURL:(id)arg2 revision:(id)arg3 destinationPath:(id)arg4 username:(id)arg5 password:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (void)_gitUpdateWithExtension:(id)arg1 repositoryURL:(id)arg2 destinationPath:(id)arg3 username:(id)arg4 password:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)_gitResetHeadWithExtension:(id)arg1 hash:(id)arg2 destinationPath:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_gitCheckoutBranchWithExtension:(id)arg1 branch:(id)arg2 destinationPath:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_gitCloneWithExtension:(id)arg1 repositoryURL:(id)arg2 branch:(id)arg3 destinationPath:(id)arg4 username:(id)arg5 password:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;

@end

@interface IDETestingSpecification : NSObject
{
    BOOL _adhoc;
    NSArray *_testingSpecifiers;
}

@property(readonly) BOOL adhoc; // @synthesize adhoc=_adhoc;
@property(readonly, copy) NSArray *testingSpecifiers; // @synthesize testingSpecifiers=_testingSpecifiers;
- (void).cxx_destruct;
- (id)initWithTestingSpecifiers:(id)arg1 isAdhoc:(BOOL)arg2;

@end

@interface IDEBreakpointManager : NSObject <IDEInternalBreakpointDelegate, DVTInvalidation>
{
    IDEWorkspace *_workspace;
    DVTObservingToken *_workspaceReferencedContainersToken;
    DVTObservingToken *_currentDebugSessionStateObserverToken;
    DVTMapTable *_bucketsToObserverTokens;
    IDEBreakpointBucket *_defaultBucket;
    IDEBreakpointBucket *_userWorkspaceBucket;
    NSMutableArray *_userProjectBuckets;
    IDEBreakpointBucket *_userGlobalBucket;
    IDEBreakpointBucket *_watchpointBucket;
    IDEBreakpointBucket *_sharedWorkspaceBucket;
    NSMutableArray *_sharedProjectBuckets;
    DVTMapTable *_userToSharedBuckets;
    DVTMapTable *_sharedToUserBuckets;
    NSMutableArray *_breakpoints;
    BOOL _breakpointsActivated;
    NSMutableSet *_breakpointObservers;
}

+ (BOOL)_isBreakpointAtLocation:(id)arg1 location:(id)arg2;
+ (void)initialize;
@property(readonly) IDEBreakpointBucket *sharedWorkspaceBucket; // @synthesize sharedWorkspaceBucket=_sharedWorkspaceBucket;
@property(readonly) IDEBreakpointBucket *userGlobalBucket; // @synthesize userGlobalBucket=_userGlobalBucket;
@property(readonly) IDEBreakpointBucket *userWorkspaceBucket; // @synthesize userWorkspaceBucket=_userWorkspaceBucket;
@property(retain, nonatomic) IDEBreakpointBucket *defaultBucket; // @synthesize defaultBucket=_defaultBucket;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)internal_breakpointLocationsAdded:(id)arg1 removed:(id)arg2;
- (void)internal_breakpointEnablementChanged:(id)arg1;
- (void)_notifyObserversOfActivationStateChange;
- (void)removeBreakpointObserver:(id)arg1;
- (void)addBreakpointObserver:(id)arg1;
- (void)_handleBreakpointsChanged:(id)arg1;
- (void)_addListenerToBucketsBreakpointList:(id)arg1;
- (void)_removeListenerFromBucketsBreakpointList:(id)arg1;
- (BOOL)_canSetBreakpointAtURL:(id)arg1;
- (void)setBreakpointShared:(id)arg1 shared:(BOOL)arg2;
@property BOOL breakpointsActivated;
- (id)fileBreakpointAtDocumentLocation:(id)arg1;
- (void)removeWatchpoint:(id)arg1;
- (void)removeBreakpoint:(id)arg1;
- (BOOL)_managesBucket:(id)arg1;
- (void)_addBreakpoint:(id)arg1 toBucket:(id)arg2;
- (void)addWatchpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
- (id)createWatchpoint:(id)arg1 variableName:(id)arg2;
- (id)_createAddressBreakpointFrom:(id)arg1 usingLineOfDisassembly:(id)arg2;
- (id)createAddressBreakpoint:(id)arg1;
- (id)createFileBreakpointAtDocumentLocation:(id)arg1;
- (id)createBreakpointAtDocumentLocation:(id)arg1 usingStringAtLine:(id)arg2;
- (void)_handleWorkspaceContainerRemoved:(id)arg1;
- (void)_handleWorkspaceContainerInserted:(id)arg1;
- (void)_handleWorkspaceContainersChanges:(id)arg1;
- (void)_handleCurrentDebugSessionStateChanged:(id)arg1;
- (id)initWithWorkspace:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(copy) NSArray *breakpoints; // @dynamic breakpoints;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) NSMutableArray *mutableSharedProjectBuckets; // @dynamic mutableSharedProjectBuckets;
@property(readonly) NSMutableArray *mutableUserProjectBuckets; // @dynamic mutableUserProjectBuckets;
@property(retain) NSArray *sharedProjectBuckets; // @dynamic sharedProjectBuckets;
@property(readonly) Class superclass;
@property(retain) NSArray *userProjectBuckets; // @dynamic userProjectBuckets;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDERefactoringKeyValueAccessorMethodDescriptor : NSObject
{
    NSString *_methodName;
    int _keyStyle;
    unsigned long long _indexOfKey;
}

@property(readonly) unsigned long long indexOfKey; // @synthesize indexOfKey=_indexOfKey;
@property(readonly) int keyStyle; // @synthesize keyStyle=_keyStyle;
@property(readonly) NSString *methodName; // @synthesize methodName=_methodName;
- (void).cxx_destruct;
- (id)description;
- (id)initWithMethodName:(const char *)arg1 keyStyle:(int)arg2 indexOfKey:(unsigned long long)arg3;

@end

@interface IDEAppleScriptBreakpointAction : IDEBreakpointAction
{
    NSString *_script;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *script; // @synthesize script=_script;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_handleScriptChanged;
- (void)_appleScriptActionCommonInit;
- (id)init;

@end

@interface IDESchemeActionsInvocationRecord : NSObject
{
    NSMutableArray *_actions;
    NSMutableArray *_warningSummaries;
    NSMutableArray *_errorSummaries;
    NSMutableArray *_analyzerWarningSummaries;
    NSMutableArray *_testFailureSummaries;
    NSMutableArray *_testableSummaries;
    DVTMapTable *_strongActionRecordsToStatusObservers;
    BOOL _running;
    BOOL _archiveFetchable;
    BOOL _productFetchable;
    BOOL _shouldClearExistingFileOnSave;
    BOOL _remoteTestSummaryNeedsFetch;
    DVTFilePath *_archivePath;
    NSString *_archiveName;
    unsigned long long _archiveSize;
    DVTFilePath *_productPath;
    NSString *_productName;
    unsigned long long _productSize;
    unsigned long long _warningCount;
    unsigned long long _errorCount;
    unsigned long long _analyzerWarningCount;
    unsigned long long _testsCount;
    unsigned long long _testsFailedCount;
    DVTFilePath *_creatingWorkspaceFilePath;
    NSString *_archiveGUID;
    NSString *_productGUID;
    DVTFilePath *_filePath;
    id <IDESchemeActionsInvocationRecordUpdateDelegate> _updateDelegate;
    id _remoteTestSummaryIdentifier;
}

+ (id)keyPathsForValuesAffectingSimpleOperationStatus;
+ (id)keyPathsForValuesAffectingStatus;
+ (BOOL)updateSummariesFromDictionaryRepresentations:(id)arg1 withSummaryOwner:(id)arg2 summaryPropertyName:(id)arg3 summaryiVarArrayRef:(id *)arg4 summariesAreTestFailures:(BOOL)arg5;
+ (BOOL)automaticallyNotifiesObserversOfActions;
+ (void)invocationRecordWithLocalActionResultFilePath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL remoteTestSummaryNeedsFetch; // @synthesize remoteTestSummaryNeedsFetch=_remoteTestSummaryNeedsFetch;
@property(copy, nonatomic) id remoteTestSummaryIdentifier; // @synthesize remoteTestSummaryIdentifier=_remoteTestSummaryIdentifier;
@property(nonatomic) BOOL shouldClearExistingFileOnSave; // @synthesize shouldClearExistingFileOnSave=_shouldClearExistingFileOnSave;
@property(readonly, nonatomic) id <IDESchemeActionsInvocationRecordUpdateDelegate> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(retain, nonatomic) NSString *productGUID; // @synthesize productGUID=_productGUID;
@property(retain, nonatomic) NSString *archiveGUID; // @synthesize archiveGUID=_archiveGUID;
@property(retain, nonatomic) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(retain, nonatomic) NSArray *testableSummaries; // @synthesize testableSummaries=_testableSummaries;
@property(retain, nonatomic) NSArray *testFailureSummaries; // @synthesize testFailureSummaries=_testFailureSummaries;
@property(retain, nonatomic) NSArray *analyzerWarningSummaries; // @synthesize analyzerWarningSummaries=_analyzerWarningSummaries;
@property(retain, nonatomic) NSArray *errorSummaries; // @synthesize errorSummaries=_errorSummaries;
@property(retain, nonatomic) NSArray *warningSummaries; // @synthesize warningSummaries=_warningSummaries;
@property(nonatomic) unsigned long long testsFailedCount; // @synthesize testsFailedCount=_testsFailedCount;
@property(nonatomic) unsigned long long testsCount; // @synthesize testsCount=_testsCount;
@property(nonatomic) unsigned long long analyzerWarningCount; // @synthesize analyzerWarningCount=_analyzerWarningCount;
@property(nonatomic) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(nonatomic) unsigned long long warningCount; // @synthesize warningCount=_warningCount;
@property(nonatomic) unsigned long long productSize; // @synthesize productSize=_productSize;
@property(retain, nonatomic) NSString *productName; // @synthesize productName=_productName;
@property(retain, nonatomic) DVTFilePath *productPath; // @synthesize productPath=_productPath;
@property(nonatomic, getter=isProductFetchable) BOOL productFetchable; // @synthesize productFetchable=_productFetchable;
@property(nonatomic, getter=isArchiveFetchable) BOOL archiveFetchable; // @synthesize archiveFetchable=_archiveFetchable;
@property(nonatomic) unsigned long long archiveSize; // @synthesize archiveSize=_archiveSize;
@property(retain, nonatomic) NSString *archiveName; // @synthesize archiveName=_archiveName;
@property(retain, nonatomic) DVTFilePath *archivePath; // @synthesize archivePath=_archivePath;
@property(retain, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(nonatomic, getter=isRunning) BOOL running; // @synthesize running=_running;
- (void).cxx_destruct;
- (void)fetchTestSummariesAndUpdateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)fetchLogsAndUpdateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateRecordWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) int simpleOperationStatus;
@property(readonly, nonatomic) int status;
- (BOOL)updateLocalTestSummaryWithRemoteTestSummary:(id)arg1 error:(id *)arg2;
- (BOOL)saveTestSummariesWithError:(id *)arg1;
- (id)testSummaryFormatVersionString;
- (id)localTestSummaryFilePath;
- (void)_updateTestableSummaries;
- (void)_updateSummaries;
- (void)tearDownObserversForSchemeActionRecord:(id)arg1;
- (void)setUpObserversForSchemeActionRecord:(id)arg1;
- (void)updateAllSchemeActionRecordDirectoryFilePaths;
- (id)filePathForSchemeActionRecordDirectoryWithSchemeCommand:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)makeActionRecordWithSchemeCommand:(id)arg1 schemeTask:(int)arg2 runDestination:(id)arg3;
- (id)description;
- (void)close;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (void)updateWithArchiveData:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)updateWithProductData:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)saveWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 updateDelegate:(id)arg2 error:(id *)arg3;
- (id)initLocalRecordWithWorkspace:(id)arg1;
- (id)init;
- (id)_init;

@end

@interface IDESnapshotItem : NSObject
{
    NSString *_name;
    NSString *_comment;
    int _type;
    NSDate *_date;
    NSString *_revision;
}

@property(copy) NSString *revision; // @synthesize revision=_revision;
@property(copy) NSDate *date; // @synthesize date=_date;
@property int type; // @synthesize type=_type;
@property(copy) NSString *comment; // @synthesize comment=_comment;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDEGroup : IDEContainerItem <IDEStructureEditing>
{
    IDEContainer *_container;
    NSString *_name;
    DVTFilePath *_resolvedFilePath;
    DVTCopyOnWriteMutableArray *_subitems;
    BOOL _subitemsAreValid;
    BOOL _pendingAsynchronousUpdate;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
}

+ (Class)_groupClassForGroup:(id)arg1;
+ (Class)_fileReferenceClassForFileReference:(id)arg1;
+ (Class)_groupClassForSubitems;
+ (Class)_fileReferenceClassForSubitems;
+ (id)_groupForFolderURL:(id)arg1 targetGroup:(id)arg2;
+ (id)_fileReferenceWithFileURL:(id)arg1 targetGroup:(id)arg2;
+ (BOOL)_shouldCreateContainerItemForFileURL:(id)arg1 isFolder:(char *)arg2;
+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
+ (BOOL)automaticallyNotifiesObserversOfSubitems;
+ (id)keyPathsForValuesAffectingConflictStateForUpdateOrMerge;
+ (id)keyPathsForValuesAffectingSourceControlServerStatus;
+ (id)keyPathsForValuesAffectingSourceControlLocalStatus;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, getter=isLocationKnown) BOOL locationKnown;
- (BOOL)createNewSubgroupAtIndex:(unsigned long long)arg1;
- (id)_availableNameBasedOn:(id)arg1;
- (id)_subgroupNamed:(id)arg1;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)structureEditRemoveSubitemsPreflightForIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (BOOL)_acceptsItem:(id)arg1;
- (BOOL)_isSubitemOfItem:(id)arg1;
- (BOOL)allowRemovingContainerGroup;
- (void)_takeConfigurationFromGroup:(id)arg1;
- (void)_copyAndInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)primitiveInvalidate;
- (void)debugPrintInnerStructure;
- (void)_invalidateComputedSourceControlStatus;
- (void)_setConflictStateForUpdateOrMergeNeedsUpdate;
- (void)_setSourceControlServerStatusNeedsUpdate;
- (void)_setSourceControlLocalStatusNeedsUpdate;
- (void)_setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)_setSourceControlServerStatus:(int)arg1;
- (void)_setSourceControlLocalStatus:(int)arg1;
- (unsigned long long)aggregateSourceControlConflictStatus;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (unsigned long long)conflictStateForUpdateOrMerge;
- (int)sourceControlServerStatus;
- (int)sourceControlLocalStatus;
- (void)invalidateComputedSubitems;
- (id)computedSubitemsWithOldSubitems:(id)arg1;
- (void)insertObject:(id)arg1 inGroupSubitemsAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromGroupSubitemsAtIndex:(unsigned long long)arg1;
- (void)insertGroupSubitems:(id)arg1 atIndexes:(id)arg2;
- (void)removeGroupSubitemsAtIndexes:(id)arg1;
- (unsigned long long)countOfGroupSubitems;
- (id)objectInGroupSubitemsAtIndex:(unsigned long long)arg1;
@property(readonly) NSMutableArray *mutableSubitems;
- (void)_setSubitems:(id)arg1;
@property(readonly) NSArray *subitems;
- (id)_subitems;
@property(readonly) BOOL subitemsAreComputed;
@property(readonly) BOOL subitemsAreEditable;
- (id)resolvedFilePath;
- (void)_invalidateResolvedFilePath;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_didSetContainer;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
- (id)container;
- (id)initWithPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_addObject:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setNameFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDEGroupWrapper : IDEItemReferenceWrapper
{
}

- (id)sdefSupport_fileReferenceForPath:(id)arg1;
- (void)insertInGroups:(id)arg1 atIndex:(long long)arg2;
- (void)insertInFileReferences:(id)arg1 atIndex:(long long)arg2;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)itemReferences;
- (id)groups;
- (id)fileReferences;

@end

@interface _IDEUnitTestParserValidator : NSObject
{
    int _type;
    NSString *_identifier;
}

+ (id)errorDescriptionForEvent:(int)arg1;
+ (id)validatorWithType:(int)arg1 andIdentifier:(id)arg2;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)description;
- (BOOL)validateEvent:(int)arg1;

@end

@interface _IDETestResultsProcessor : NSObject <DVTInvalidation>
{
    BOOL _finished;
    NSString *_targetArchitecture;
    DVTDevice *_targetDevice;
    NSMutableArray *_validatorsStack;
    IDERunOperation *_operation;
    DVTStackBacktrace *_creationBacktrace;
    id <_IDETestResultsProcessorDelegate> _delegate;
}

+ (void)initialize;
@property BOOL finished; // @synthesize finished=_finished;
@property(retain) id <_IDETestResultsProcessorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) DVTStackBacktrace *creationBacktrace; // @synthesize creationBacktrace=_creationBacktrace;
@property(retain) IDERunOperation *operation; // @synthesize operation=_operation;
@property(retain) NSMutableArray *validatorsStack; // @synthesize validatorsStack=_validatorsStack;
@property(retain) DVTDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
- (void).cxx_destruct;
- (BOOL)validateEvent:(int)arg1 error:(id *)arg2;
- (void)initializeValidatorsStack;
- (id)initWithSessionStateDelegate:(id)arg1 andOperation:(id)arg2;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDEUnitTestParserMediator : _IDETestResultsProcessor <DVTInvalidation, IDEOCUnitTestOutputParserDelegate>
{
    DVTObservingToken *_launchSessionsStateObserverToken;
    DVTObservingToken *_launchSessionsConsoleAdaptorsObserverToken;
    DVTObservingToken *_debugSessionHasCrashedObserverToken;
    NSMutableArray *_validatorStack;
    int _currentState;
    id _disallowFinishToken;
    DVTObservingToken *_runOperationCancellationObservationToken;
    DVTObservingToken *_runOperationErrorObservationToken;
    IDEConsoleAdaptor *_adaptor;
    DVTObservingToken *_consoleTerminationToken;
    id _outputNotificationObserver;
    IDEOCUnitTestOutputParser *_outputParser;
    NSString *_savedPartialContent;
}

+ (void)initialize;
@property(copy) NSString *savedPartialContent; // @synthesize savedPartialContent=_savedPartialContent;
@property(retain) IDEOCUnitTestOutputParser *outputParser; // @synthesize outputParser=_outputParser;
@property(retain) id outputNotificationObserver; // @synthesize outputNotificationObserver=_outputNotificationObserver;
@property(retain) DVTObservingToken *consoleTerminationToken; // @synthesize consoleTerminationToken=_consoleTerminationToken;
@property(retain) IDEConsoleAdaptor *adaptor; // @synthesize adaptor=_adaptor;
@property(retain) DVTObservingToken *runOperationErrorObservationToken; // @synthesize runOperationErrorObservationToken=_runOperationErrorObservationToken;
@property(retain) DVTObservingToken *runOperationCancellationObservationToken; // @synthesize runOperationCancellationObservationToken=_runOperationCancellationObservationToken;
@property(retain) id disallowFinishToken; // @synthesize disallowFinishToken=_disallowFinishToken;
@property int currentState; // @synthesize currentState=_currentState;
- (void).cxx_destruct;
- (BOOL)finished;
- (void)primitiveInvalidate;
- (void)_finishWithError:(id)arg1 didCancel:(BOOL)arg2;
- (BOOL)_validateEvent:(int)arg1 description:(id)arg2;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(id)arg1 method:(id)arg2 performanceMetric:(id)arg3 rawOutput:(id)arg4;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testDidOutput:(id)arg1;
- (void)_handleConsoleOutputTerminated:(id)arg1;
- (void)_handleDebugSessionFinishedAbnormally:(id)arg1;
- (void)_handleConsoleOutputAdded:(id)arg1;
- (void)_handleConsoleAdaptorAdded:(id)arg1;
- (void)_handleLaunchSessionStarted;
- (id)initWithSessionStateDelegate:(id)arg1 andOperation:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDETestManagerAPIMediator : _IDETestResultsProcessor <DVTInvalidation, XCTestManager_IDEInterface, IDEConsoleAdaptorDelegateProtocol>
{
    BOOL _testPlanDidStartExecuting;
    BOOL _hasFailed;
    BOOL _readyForTestBundleToConnect;
    BOOL _loggingFromTarget;
    BOOL _targetIsiOSSimulator;
    id <XCTestDriverInterface> _testBundleProxy;
    NSTimer *_startupTimeoutTimer;
    DVTObservingToken *_launchSessionStartObserverToken;
    DVTObservingToken *_debugSessionHasCrashedObserverToken;
    DVTObservingToken *_runOperationCancellationObservationToken;
    DVTObservingToken *_runOperationErrorObservationToken;
    id _disallowFinishToken;
    long long _testProtocolVersion;
    DVTObservingToken *_launchSessionsConsoleAdaptorsObserverToken;
    NSMutableString *_consoleBuffer;
    NSMutableArray *_consoleChunkQueue;
    NSMutableArray *_delegateBlockQueue;
    IDEConsoleAdaptor *_consoleAdaptor;
    NSArray *_finalCommandLineArguments;
    NSOutputStream *_statusStream;
    NSObject<OS_dispatch_queue> *_statusStreamQueue;
    NSString *_statusLogPath;
    DTXConnection *_connection;
    NSDateFormatter *_loggingDateFormatter;
    NSString *_unprocessedConsoleOutput;
    NSObject<OS_dispatch_source> *_acceptSource;
}

@property(retain) NSObject<OS_dispatch_source> *acceptSource; // @synthesize acceptSource=_acceptSource;
@property BOOL targetIsiOSSimulator; // @synthesize targetIsiOSSimulator=_targetIsiOSSimulator;
@property(retain) NSString *unprocessedConsoleOutput; // @synthesize unprocessedConsoleOutput=_unprocessedConsoleOutput;
@property BOOL loggingFromTarget; // @synthesize loggingFromTarget=_loggingFromTarget;
@property(retain) NSDateFormatter *loggingDateFormatter; // @synthesize loggingDateFormatter=_loggingDateFormatter;
@property(retain) DTXConnection *connection; // @synthesize connection=_connection;
@property(retain) NSString *statusLogPath; // @synthesize statusLogPath=_statusLogPath;
@property(retain) NSObject<OS_dispatch_queue> *statusStreamQueue; // @synthesize statusStreamQueue=_statusStreamQueue;
@property(retain) NSOutputStream *statusStream; // @synthesize statusStream=_statusStream;
@property(retain) NSArray *finalCommandLineArguments; // @synthesize finalCommandLineArguments=_finalCommandLineArguments;
@property(retain, nonatomic) IDEConsoleAdaptor *consoleAdaptor; // @synthesize consoleAdaptor=_consoleAdaptor;
@property(retain) NSMutableArray *delegateBlockQueue; // @synthesize delegateBlockQueue=_delegateBlockQueue;
@property(retain) NSMutableArray *consoleChunkQueue; // @synthesize consoleChunkQueue=_consoleChunkQueue;
@property(retain) NSMutableString *consoleBuffer; // @synthesize consoleBuffer=_consoleBuffer;
@property(retain) DVTObservingToken *launchSessionsConsoleAdaptorsObserverToken; // @synthesize launchSessionsConsoleAdaptorsObserverToken=_launchSessionsConsoleAdaptorsObserverToken;
@property long long testProtocolVersion; // @synthesize testProtocolVersion=_testProtocolVersion;
@property(retain) id disallowFinishToken; // @synthesize disallowFinishToken=_disallowFinishToken;
@property BOOL readyForTestBundleToConnect; // @synthesize readyForTestBundleToConnect=_readyForTestBundleToConnect;
@property BOOL hasFailed; // @synthesize hasFailed=_hasFailed;
@property BOOL testPlanDidStartExecuting; // @synthesize testPlanDidStartExecuting=_testPlanDidStartExecuting;
@property(retain) DVTObservingToken *runOperationErrorObservationToken; // @synthesize runOperationErrorObservationToken=_runOperationErrorObservationToken;
@property(retain) DVTObservingToken *runOperationCancellationObservationToken; // @synthesize runOperationCancellationObservationToken=_runOperationCancellationObservationToken;
@property(retain) DVTObservingToken *debugSessionHasCrashedObserverToken; // @synthesize debugSessionHasCrashedObserverToken=_debugSessionHasCrashedObserverToken;
@property(retain) DVTObservingToken *launchSessionStartObserverToken; // @synthesize launchSessionStartObserverToken=_launchSessionStartObserverToken;
@property(retain) NSTimer *startupTimeoutTimer; // @synthesize startupTimeoutTimer=_startupTimeoutTimer;
@property(retain) id <XCTestDriverInterface> testBundleProxy; // @synthesize testBundleProxy=_testBundleProxy;
- (void).cxx_destruct;
- (id)_XCT_logMessage:(id)arg1;
- (id)_XCT_testSuite:(id)arg1 didFinishAt:(id)arg2 runCount:(id)arg3 withFailures:(id)arg4 unexpected:(id)arg5 testDuration:(id)arg6 totalDuration:(id)arg7;
- (id)_XCT_testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(id)arg4;
- (id)_XCT_testMethod:(id)arg1 ofClass:(id)arg2 didMeasureValues:(id)arg3 forPerformanceMetricID:(id)arg4 name:(id)arg5 withUnits:(id)arg6 baselineName:(id)arg7 baselineAverage:(id)arg8 maxPercentRegression:(id)arg9 maxPercentRelativeStandardDeviation:(id)arg10 file:(id)arg11 line:(id)arg12;
- (id)_XCT_testMethod:(id)arg1 ofClass:(id)arg2 didMeasureMetric:(id)arg3 file:(id)arg4 line:(id)arg5;
- (id)_XCT_testCase:(id)arg1 method:(id)arg2 didStallOnMainThreadInFile:(id)arg3 line:(id)arg4;
- (id)_XCT_testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(id)arg5;
- (id)_XCT_testCaseDidStartForTestClass:(id)arg1 method:(id)arg2;
- (id)_XCT_testSuite:(id)arg1 didStartAt:(id)arg2;
- (id)_XCT_didFinishExecutingTestPlan;
- (id)_XCT_didBeginExecutingTestPlan;
- (id)_XCT_testBundleReadyWithProtocolVersion:(id)arg1 minimumVersion:(id)arg2;
- (id)_XCT_testBundleReady;
- (BOOL)validateEvent:(int)arg1;
- (void)_executeDelegateBlockWithNextConsoleChunk:(CDUnknownBlockType)arg1;
- (void)_considerDispatchingDelegateBlock;
- (void)_flushDelegateBlockQueue;
- (void)_delegateBlockQueueTimeoutTimerFired;
- (void)_considerFlushingDelegateBlockQueue;
- (id)parseConsoleOutputFromOriginalOutput:(id)arg1;
- (void)_finishWithError:(id)arg1 didCancel:(BOOL)arg2;
- (void)_detectAndMessageTrace_r17733855_fromError:(id)arg1;
- (void)_reportStartupProgress:(id)arg1 withTimeoutInterval:(double)arg2;
- (void)_startupTimedOut:(id)arg1;
- (void)_logAtLevel:(int)arg1 message:(id)arg2;
- (void)_logMessage:(id)arg1 fromTarget:(BOOL)arg2;
- (void)_handleUnexpectedFailureDuringTestExecution:(id)arg1;
- (void)_reportStartupFailure:(id)arg1;
- (void)_waitForTestProcessToConnect;
- (void)_waitForLaunch;
- (void)_handleDaemonConnection:(id)arg1;
- (void)_setupTestBundleConnectionWithTransport:(id)arg1;
- (BOOL)_setupTransportForUDSAtPath:(id)arg1 errorMessage:(id *)arg2;
- (void)_setupObserversForTestOperation:(id)arg1;
- (void)_prepareStatusLoggingStream;
- (id)initWithSessionStateDelegate:(id)arg1 andOperation:(id)arg2;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEUnitTestsOperationsObserver : NSObject <_IDETestResultsProcessorDelegate, DVTInvalidation>
{
    NSMutableSet *_testResultsProcessors;
    NSMutableSet *_unitTestsObservers;
    NSMutableArray *_errors;
    BOOL _didHandleTestOperationsCompletion;
    CDUnknownBlockType _finishBlock;
    IDEExecutionEnvironment *_executionEnvironment;
}

+ (void)initialize;
@property BOOL didHandleTestOperationsCompletion; // @synthesize didHandleTestOperationsCompletion=_didHandleTestOperationsCompletion;
@property(retain) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property(copy) CDUnknownBlockType finishBlock; // @synthesize finishBlock=_finishBlock;
- (void).cxx_destruct;
- (void)handleTestOperationsCompletionIfAppropriate;
- (void)willFinishWithError:(id)arg1 didCancel:(BOOL)arg2 sessionState:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6 sessionState:(id)arg7;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3 sessionState:(id)arg4;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2 sessionState:(id)arg3;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(id)arg1 method:(id)arg2 performanceMetric:(id)arg3 rawOutput:(id)arg4 sessionState:(id)arg5;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6 sessionState:(id)arg7;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5 sessionState:(id)arg6;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3 sessionState:(id)arg4;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3 sessionState:(id)arg4;
- (void)testDidOutput:(id)arg1 sessionState:(id)arg2;
- (void)launchSessionStarted:(id)arg1;
- (void)removeAllUnitTestsObservers;
- (void)addUnitTestsObserver:(id)arg1;
- (void)registerRunOperation:(id)arg1 usesXCTest:(BOOL)arg2;
- (BOOL)willUseGCWithRunOperation:(id)arg1;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEStandardTestable : NSObject <IDETestable, DVTInvalidation>
{
    NSMutableSet *_subtests;
    NSMutableArray *_cachedArrangedSubtests;
    NSMutableDictionary *_testIDsByURL;
    NSMutableDictionary *_testsByID;
}

+ (void)initialize;
@property(readonly, copy) NSMutableDictionary *testsByID; // @synthesize testsByID=_testsByID;
@property(readonly, copy) NSMutableDictionary *testIDsByURL; // @synthesize testIDsByURL=_testIDsByURL;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *arrangedSubtests; // @dynamic arrangedSubtests;
- (void)removeSubtest:(id)arg1;
- (void)_recursiveUnregisteringOfSubtest:(id)arg1;
- (void)_primitiveRemoveSubtest:(id)arg1;
- (void)_addSubtest:(id)arg1;
- (void)_primitiveAddSubtest:(id)arg1;
@property(readonly) BOOL canHaveSubtests;
- (BOOL)canHaveSubtestsForTestWithIdentifier:(id)arg1;
- (id)supertestForTestWithIdentifier:(id)arg1;
- (id)supertestForTestWithIdentifier:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)nameForTestWithIdentifier:(id)arg1;
- (id)testForIdentifier:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)testForIdentifier:(id)arg1;
- (id)identifierForTestClass:(id)arg1 method:(id)arg2;
- (void)_removeTestIDFromURL:(id)arg1 testID:(id)arg2;
- (void)_updateLocationOfTest:(id)arg1 oldLocation:(id)arg2;
@property(readonly) NSSet *testFiles;
- (id)testsInFile:(id)arg1;
- (id)parentBuildableInWorkspace:(id)arg1;
- (id)testHostBuildableInWorkspace:(id)arg1;
- (id)primaryBuildable;
- (BOOL)matchesBlueprint:(id)arg1;
- (void)waitUntilTestSearchIsFinished;
@property(readonly) BOOL isSearchingForTests;
- (void)searchForTestsInWorkspace:(id)arg1;
- (id)newTestRunner;
@property(readonly) BOOL usesXCTest;
@property(readonly) NSString *name;
@property(readonly) id <IDETestableProvider> testableProvider;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableSet *mutableSubtests; // @dynamic mutableSubtests;
@property(readonly, copy) NSSet *subtests; // @dynamic subtests;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEiCloudEntitlementsProcessor : IDEEntitlementsProcessor
{
}

- (BOOL)runWithError:(id *)arg1;
@property(retain, nonatomic) NSString *selectedEnvironment;
@property(readonly, nonatomic) NSArray *availableEnvironments;
- (BOOL)isApplicable;
- (BOOL)needsInteraction;

@end

@interface IDELocationSimulator : NSObject <DVTInvalidation>
{
    IDELaunchSession *_launchSession;
    IDESimulateLocationService *_service;
    int _state;
    IDELocationScenario *_scenario;
    DVTObservingToken *_debugSessionStateObserver;
    BOOL _playingBack;
    NSTimer *_playbackTimer;
    unsigned long long _currentPlaybackIndex;
    IDELocation *_currentPlaybackLocation;
    double _lastUpdateTime;
    NSOperationQueue *_playbackQueue;
}

+ (void)initialize;
+ (id)locationSimulatorLogAspect;
@property(retain) IDESimulateLocationService *service; // @synthesize service=_service;
@property(retain, nonatomic) IDELocationScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly) int state; // @synthesize state=_state;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
- (void).cxx_destruct;
- (void)_playbackTimerFired:(id)arg1;
- (void)_startOrResumePlayback;
- (void)_pausePlayback;
- (void)_stopPlayback;
- (void)_debugSessionStateChanged;
- (void)_setState:(int)arg1;
- (void)_updateScenarioSimulation;
- (int)_locationSimulatorStateForDebugSessionState:(int)arg1;
- (void)_updateLocationScenario;
- (void)_updateService;
- (id)_simulateLocationCapability;
- (void)stopSimulating;
- (void)primitiveInvalidate;
- (id)initWithLaunchSession:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDEDeferredInitializationInvocation : NSObject
{
    Class _initializerClass;
    int _options;
    DVTExtension *_extension;
}

- (void).cxx_destruct;
- (void)invokeWithFailureHandler:(CDUnknownBlockType)arg1;
- (id)initWithInitalizerClass:(Class)arg1 options:(int)arg2 extension:(id)arg3;

@end

@interface IDERunOperation : DVTOperation <IDEExecutingOperationTrackable, IDERunOperationWorkerDelegate>
{
    NSMutableArray *_trackers;
    NSMutableArray *_trackerObserverTokens;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    id _finishToken;
    BOOL _workaroundIsCancelled;
    IDERunOperationWorker *_worker;
}

+ (id)keyPathsForValuesAffectingLaunchSession;
+ (id)keyPathsForValuesAffectingIsCancelled;
@property(retain) IDERunOperationWorker *worker; // @synthesize worker=_worker;
@property BOOL workaroundIsCancelled; // @synthesize workaroundIsCancelled=_workaroundIsCancelled;
@property(retain) NSMutableArray *trackers; // @synthesize trackers=_trackers;
- (void).cxx_destruct;
- (void)registerTracker:(id)arg1;
- (void)_runningTrackerFinished:(id)arg1;
- (void)runningDidFinish;
@property(readonly) IDELaunchSession *launchSession;
- (void)cancel;
- (BOOL)isCancelled;
- (void)main;
- (void)workerDidComplete:(id)arg1 withError:(id)arg2;
- (id)initWithWorker:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexDBFactory : NSObject
{
    IDEIndexDBTransaction *_dbTransaction;
    NSString *_tableName;
    NSString *_columnNames;
    NSString *_values;
    NSString *_insertionSQL;
    struct sqlite3_stmt *_dbStatement;
    long long *_objectIdMap;
    long long _objectIdCount;
    long long _objectCount;
    NSString *_tempTableName;
    NSString *_insertionSQL2;
    struct sqlite3_stmt *_dbStatement2;
}

+ (void)initialize;
@property(readonly, nonatomic) long long objectCount; // @synthesize objectCount=_objectCount;
@property(readonly, nonatomic) IDEIndexDBTransaction *dbTransaction; // @synthesize dbTransaction=_dbTransaction;
- (void).cxx_destruct;
- (void)dealloc;
- (void)close;
- (long long)realObjectIdForId:(long long)arg1;
- (void)addObjectId:(long long *)arg1 withBindings:(CDUnknownBlockType)arg2;
- (id)initWithTransaction:(id)arg1 table:(id)arg2 columns:(id)arg3;

@end

@interface IDEDistributionCreatePKGStep : IDEDistributionProcessingStep
{
    NSString *name;
}

+ (id)processingStep;
@property(copy) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;

@end

@interface IDEIndexDBTransaction : IDEIndexDBSQLStream
{
    NSMutableArray *_runQueue;
    IDEIndexDBSQLStream *_parent;
    NSMutableArray *_dbFactories;
}

@property(retain, nonatomic) IDEIndexDBSQLStream *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (void)submit;
- (void)closeFactories;
- (id)newFactoryForTable:(id)arg1 columns:(id)arg2;
- (void)doBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long queueSize;
- (id)dbConnection;
- (id)init;

@end

@interface IDESchemeAction : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    BOOL _hasAwoken;
    IDEScheme *_runContext;
    NSMutableArray *_prePhaseExecutionActions;
    NSMutableArray *_postPhaseExecutionActions;
    IDESchemeBuildableReference *_buildableReferenceToUseForMacroExpansion;
}

+ (BOOL)shouldAllowCustomPhaseActions;
+ (void)initialize;
@property(retain) IDESchemeBuildableReference *buildableReferenceToUseForMacroExpansion; // @synthesize buildableReferenceToUseForMacroExpansion=_buildableReferenceToUseForMacroExpansion;
@property(readonly) IDEScheme *runContext; // @synthesize runContext=_runContext;
- (void).cxx_destruct;
- (void)notifyOptimizationProfileCreationFailedWithError:(id)arg1;
- (void)notifyOptimizationProfileCreationSucceeded;
- (void)addOptimizationProfileFromFilePath:(id)arg1 toContainer:(id)arg2;
- (BOOL)mergeOptimizationProfilesFromDirectoryAtPath:(id)arg1 toFileAtPath:(id)arg2 forBuildableProduct:(id)arg3 buildParameters:(id)arg4 returningError:(id *)arg5;
- (id)relevantBuildablesForOptimizationProfileGenerationForSchemeCommand:(id)arg1;
- (BOOL)addOptimizationProfileFilePathToEnvironmentVariables:(id)arg1 forBuildableProduct:(id)arg2 buildParameters:(id)arg3 schemeActionRecord:(id)arg4 outError:(id *)arg5;
- (void)updateSearchPathSettingsInEnvironment:(id)arg1 withBuildProducts:(id)arg2 runDestination:(id)arg3;
- (void)addPostActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPreActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
@property(readonly) NSArray *_postPhaseExecutionActionsProxies;
@property(readonly) NSArray *_prePhaseExecutionActionsProxies;
- (void)schemeObjectGraphSetupComplete;
@property(readonly) BOOL hasAwoken;
- (void)replacePostPhaseExecutionActionsAtIndexes:(id)arg1 withPostPhaseExecutionActions:(id)arg2;
- (void)replaceObjectInPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removePostPhaseExecutionActionsAtIndexes:(id)arg1;
- (void)insertPostPhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inPostPhaseExecutionActionsAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *postPhaseExecutionActions; // @dynamic postPhaseExecutionActions;
- (void)replacePrePhaseExecutionActionsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectInPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removePrePhaseExecutionActionsAtIndexes:(id)arg1;
- (void)insertPrePhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inPrePhaseExecutionActionsAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *prePhaseExecutionActions; // @dynamic prePhaseExecutionActions;
- (void)primitiveInvalidate;
- (id)bundleIdentifierFromBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)bundleIdentifierWithRunnablePath:(id)arg1;
- (id)expandMacrosInString:(id)arg1 forSchemeCommand:(id)arg2;
- (id)setUpActionDependenciesForCorePhaseOperation:(id)arg1 shouldRunPostActionsBlock:(CDUnknownBlockType)arg2 prePhaseEnvironmentPopulationBlock:(CDUnknownBlockType)arg3 postPhaseEnvironmentPopulationBlock:(CDUnknownBlockType)arg4 buildParameters:(id)arg5 schemeActionResultOperation:(id)arg6 error:(id *)arg7;
- (void)setRunContext:(id)arg1;
@property(readonly) BOOL doesNonActionWork;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *name;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutablePostPhaseExecutionActions; // @dynamic mutablePostPhaseExecutionActions;
@property(readonly) NSMutableArray *mutablePrePhaseExecutionActions; // @dynamic mutablePrePhaseExecutionActions;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEInstallLocalMacService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEInstallLocalMacWorker : IDERunOperationWorker
{
}

- (void)terminate;
- (void)start;
- (void)_setFinishedRunningWithError:(id)arg1;

@end

@interface IDEWorkspaceUserSettings : IDEWorkspaceSettings
{
}

+ (BOOL)automaticallyNotifiesObserversForIssueFilterStyle;
+ (BOOL)automaticallyNotifiesObserversForLiveSourceIssuesEnabled;
+ (BOOL)automaticallyNotifiesObserversForHasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
+ (BOOL)automaticallyNotifiesObserversForTakeSnapshotsBeforeSignificantChanges;
+ (BOOL)automaticallyNotifiesObserversForSnapshotCustomLocation;
+ (BOOL)automaticallyNotifiesObserversForSnapshotLocationStyle;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildIntermediatesPath;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildProductsPath;
+ (BOOL)automaticallyNotifiesObserversForSharedBuildFolderName;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildLocationType;
+ (BOOL)automaticallyNotifiesObserversForBuildLocationStyle;
+ (BOOL)automaticallyNotifiesObserversForDerivedDataCustomLocation;
+ (BOOL)automaticallyNotifiesObserversForDerivedDataLocationStyle;
- (void)loadSettings;
- (void)saveSettings;
@property int issueFilterStyle;
@property BOOL liveSourceIssuesEnabled;
@property BOOL hasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
@property BOOL takeSnapshotsBeforeSignificantChanges;
@property(retain) NSString *snapshotCustomLocation;
@property int snapshotLocationStyle;
@property(retain) NSString *customBuildIntermediatesPath;
@property(retain) NSString *customBuildProductsPath;
@property(retain) NSString *sharedBuildFolderName;
@property int customBuildLocationType;
@property int buildLocationStyle;
@property(retain) NSString *derivedDataCustomLocation;
@property int derivedDataLocationStyle;
- (id)settingsOwnership;

@end

@interface IDEExecutionActionType : NSObject
{
    NSString *_identifier;
}

+ (id)actionTypeWithIdentifier:(id)arg1 error:(id *)arg2;
+ (BOOL)point:(id)arg1 isSubpointOfPoint:(id)arg2;
+ (id)actionTypePoint;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;

@end

@interface IDEGaugeDataQuery : NSObject <DVTInvalidation>
{
    BOOL _isSuspended;
    IDEGaugeDataQueryCoordinator *_queryCoordinator;
    NSSet *_observedAttributes;
    CDUnknownBlockType _resultDictHandler;
}

+ (void)initialize;
@property(nonatomic) BOOL isSuspended; // @synthesize isSuspended=_isSuspended;
@property(copy, nonatomic) CDUnknownBlockType resultDictHandler; // @synthesize resultDictHandler=_resultDictHandler;
@property(copy, nonatomic) NSSet *observedAttributes; // @synthesize observedAttributes=_observedAttributes;
@property(retain) IDEGaugeDataQueryCoordinator *queryCoordinator; // @synthesize queryCoordinator=_queryCoordinator;
- (void).cxx_destruct;
- (void)handleResultDict:(id)arg1;
- (void)primitiveInvalidate;
- (id)initForProcessWithPID:(id)arg1 onDevice:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildSchemeAction : IDESchemeAction
{
    NSMutableArray *_legacyBuildableReferences;
    BOOL _parallelizeBuildables;
    BOOL _buildImplicitDependencies;
    NSString *_legacyBuildConfiguration;
    NSMutableArray *_buildActionEntries;
    IDEBuildActionEntry *_launchRunnableEntry;
    IDEBuildActionEntry *_profileRunnableEntry;
    NSMutableArray *_testBuildableEntries;
    BOOL _buildablesDidChangeNotificationEnabled;
    BOOL _isBuildablesDidChangeNotificationPending;
    DVTMapTable *_overridingBuildPropertiesForBuildable;
    DVTObservingToken *_launchActionRunnableObservingToken;
    DVTObservingToken *_profileActionRunnableObservingToken;
    DVTObservingToken *_testBuildableReferencesObservingToken;
    DVTObservingToken *_testHostBuildableReferencesObservingToken;
}

+ (id)_uniquedBuildablesForBuildables:(id)arg1 includingDependencies:(BOOL)arg2;
+ (id)buildablesForTestingSpecifiers:(id)arg1 includingDependencies:(BOOL)arg2;
+ (id)keyPathsForValuesAffectingAvailableBuildConfigurations;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(nonatomic, getter=isBuildablesDidChangeNotificationEnabled) BOOL buildablesDidChangeNotificationEnabled; // @synthesize buildablesDidChangeNotificationEnabled=_buildablesDidChangeNotificationEnabled;
@property BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
- (void).cxx_destruct;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildRoles:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildActionEntries:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductReferences:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildImplicitDependenciesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setParallelizeBuildablesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)overridingBuildPropertiesForBuildable:(id)arg1;
- (void)setOverridingBuildProperties:(id)arg1 forBuildable:(id)arg2;
- (void)postBuildablesDidChangeNotification;
- (CDUnknownBlockType)_matcherBlockForCommand:(id)arg1;
- (id)buildablesByConfiguration;
- (id)buildableReferencesForSchemeCommand:(id)arg1;
- (id)buildableReferences;
- (id)buildablesForSchemeCommand:(id)arg1 includingDependencies:(BOOL)arg2;
- (id)buildablesForSchemeCommand:(id)arg1 testingSpecifiers:(id)arg2 includingDependencies:(BOOL)arg3;
- (id)buildablesForAllSchemeCommandsIncludingDependencies:(BOOL)arg1;
- (id)_buildablesIncludingDependencies:(BOOL)arg1 restrictToSchemeCommand:(id)arg2;
- (id)buildableReferenceForBuildable:(id)arg1;
@property(readonly) NSArray *availableBuildConfigurations;
- (id)buildDirectoryPathsForBuildParameters:(id)arg1 schemeCommand:(id)arg2;
- (void)moveBuildActionEntriesAtIndexes:(id)arg1 toIndex:(unsigned long long)arg2;
- (id)addBuildActionEntryForBuildableReference:(id)arg1;
- (void)removeBuildActionEntryAtIndex:(unsigned long long)arg1;
- (void)_setupImplicitBuildActionEntries;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)cleanOperationForExecutionEnvironment:(id)arg1 orderedBuildables:(id)arg2 buildConfiguration:(id)arg3 buildLog:(id)arg4 overridingProperties:(id)arg5 activeRunDestination:(id)arg6 activeArchitecture:(id)arg7 schemeActionRecord:(id)arg8 error:(id *)arg9;
- (id)buildOperationForExecutionEnvironment:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(id)arg4 filePath:(id)arg5 buildConfiguration:(id)arg6 buildLog:(id)arg7 overridingProperties:(id)arg8 activeRunDestination:(id)arg9 activeArchitecture:(id)arg10 restorePersistedBuildResults:(BOOL)arg11 schemeActionRecord:(id)arg12 overridingBuildables:(id)arg13 error:(id *)arg14;
- (id)overridingBuildSettingsForSchemeCommand:(id)arg1;
- (id)buildFolderPathForPGO;
- (void)setRunContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;
- (void)_commonInit;

// Remaining properties
@property(readonly) NSArray *buildActionEntries; // @dynamic buildActionEntries;
@property(readonly) NSMutableArray *mutableBuildActionEntries; // @dynamic mutableBuildActionEntries;

@end

@interface IDEBuildActionEntry : NSObject <DVTXMLUnarchiving>
{
    BOOL _isExplicitEntry;
    BOOL _shouldBuildForTesting;
    BOOL _mustBuildForTesting;
    BOOL _shouldBuildForRunning;
    BOOL _mustBuildForRunning;
    BOOL _shouldBuildForProfiling;
    BOOL _mustBuildForProfiling;
    BOOL _shouldBuildForArchiving;
    BOOL _shouldBuildForAnalyzing;
    IDESchemeBuildableReference *_buildableReference;
    IDEBuildSchemeAction *_buildAction;
}

+ (id)keyPathsForValuesAffectingCanRemoveEntry;
+ (id)keyPathsForValuesAffectingCanEditBuildForProfiling;
+ (id)keyPathsForValuesAffectingShouldBuildForProfiling;
+ (id)keyPathsForValuesAffectingCanEditBuildForRunning;
+ (id)keyPathsForValuesAffectingShouldBuildForRunning;
+ (id)keyPathsForValuesAffectingCanEditBuildForTesting;
+ (id)keyPathsForValuesAffectingShouldBuildForTesting;
@property(retain) IDEBuildSchemeAction *buildAction; // @synthesize buildAction=_buildAction;
@property(readonly) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
@property(nonatomic) BOOL mustBuildForProfiling; // @synthesize mustBuildForProfiling=_mustBuildForProfiling;
@property(nonatomic) BOOL mustBuildForRunning; // @synthesize mustBuildForRunning=_mustBuildForRunning;
@property(nonatomic) BOOL mustBuildForTesting; // @synthesize mustBuildForTesting=_mustBuildForTesting;
@property(readonly) BOOL isExplicitEntry; // @synthesize isExplicitEntry=_isExplicitEntry;
- (void).cxx_destruct;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForAnalyzingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForArchivingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForProfilingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForRunningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForTestingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)enableBuildEntry;
- (void)disableBuildEntry;
@property(readonly) BOOL canRemoveEntry;
@property(readonly) BOOL canEditBuildForAnalyzing;
@property BOOL shouldBuildForAnalyzing;
@property(readonly) BOOL canEditBuildForArchiving;
@property BOOL shouldBuildForArchiving;
@property(readonly) BOOL canEditBuildForProfiling;
@property BOOL shouldBuildForProfiling;
@property(readonly) BOOL canEditBuildForRunning;
@property BOOL shouldBuildForRunning;
@property(readonly) BOOL canEditBuildForTesting;
@property BOOL shouldBuildForTesting;
- (void)_makeExplicit;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildableReference:(id)arg1 buildAction:(id)arg2 explicityManaged:(BOOL)arg3;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDeveloperPaths : DVTDeveloperPaths
{
    DVTFilePath *_distributionArchivesLocation;
    id _distributionArchivesLocationNotificatonToken;
    id _distributionArchivesSourceTreesNotificationToken;
    DVTFilePath *_snapshotsDirectory;
    id _snapshotsDirectoryNotificatonToken;
    id _snapshotsDirectorySourceTreesNotificationToken;
}

- (void).cxx_destruct;
- (id)templateSearchPath;
- (id)defaultWorkspaceDerivedDataLocation;
- (id)defaultDistributionArchivesLocation;
- (id)distributionArchivesLocation;
- (id)defaultSnapshotsDirectory;
- (id)snapshotsDirectory;
- (id)corePlugInSearchPathForPlatform:(id)arg1;

@end

@interface IDEBuildStatisticsSection : NSObject <IDEBuildStatisticsData>
{
    NSMutableDictionary *_statisticsSectionList;
    NSMutableArray *_statisticsDataList;
    unsigned long long _ordinalGenerator;
    double _elapsedUserTime;
    double _elapsedSystemTime;
    long long _numberOfVMPageins;
    long long _numberOfVMPageouts;
    DVTDispatchLock *_dispatchLock;
    NSString *_title;
    DVTSystemStatisticsMeasurement *_startSystemStats;
    DVTSystemStatisticsMeasurement *_endSystemStats;
    unsigned long long _ordinal;
    CDUnknownBlockType _contentsEmissionBlock;
}

@property(copy) CDUnknownBlockType contentsEmissionBlock; // @synthesize contentsEmissionBlock=_contentsEmissionBlock;
@property unsigned long long ordinal; // @synthesize ordinal=_ordinal;
@property(retain) DVTSystemStatisticsMeasurement *endSystemStats; // @synthesize endSystemStats=_endSystemStats;
@property(retain) DVTSystemStatisticsMeasurement *startSystemStats; // @synthesize startSystemStats=_startSystemStats;
@property(copy) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)description;
- (void)emitContentsForAspect:(id)arg1 logLevel:(int)arg2 indentLevel:(unsigned long long)arg3 withBlock:(CDUnknownBlockType)arg4;
- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)arg1;
@property(readonly) long long numberOfVMPageouts;
@property(readonly) long long numberOfVMPageins;
@property(readonly) double elapsedSystemTime;
@property(readonly) double elapsedUserTime;
@property(readonly) double elapsedWallClockTime;
@property(readonly) double endWallClockTime;
@property(readonly) double startWallClockTime;
- (void)recordEndSystemStats;
- (void)recordStartSystemStats;
- (id)children;
- (id)dataObjects;
- (id)subsections;
- (void)addBuildStatisticsData:(id)arg1;
- (void)addBuildStatisticsSection:(id)arg1;
- (void)addNewBuildStatisticsDataWithTitle:(id)arg1 commandString:(id)arg2 startSystemStatisticsMeasurement:(id)arg3 endSystemStatisticsMeasurement:(id)arg4 elapsedUserTime:(double)arg5 elapsedSystemTime:(double)arg6;
- (id)buildStatisticsSectionWithTitleFormat:(id)arg1;
- (unsigned long long)_newOrdinal;
- (id)initWithTitle:(id)arg1;
- (id)initWithTitle:(id)arg1 ordinal:(unsigned long long)arg2;

@end

@interface IDESourceControlRequest : NSObject <DVTInvalidation>
{
    IDESourceControlTree *_sourceTree;
    IDESourceControlWorkingCopyConfiguration *_wcc;
    IDESourceControlRepository *_remote;
    int _type;
    NSString *_startingRevision;
    NSString *_endingRevision;
    NSString *_destination;
    NSArray *_files;
    NSDictionary *_options;
    IDEActivityLogSection *_log;
    IDEActivityLogSection *_logSection;
    NSString *_shortTitle;
    NSString *_longTitle;
    NSString *_workspaceName;
    IDELogStore *_logStore;
    IDESourceControlExtension *_sourceControlExtension;
    NSString *_message;
    IDESourceControlOperation *_operation;
    BOOL _stopAllActivityWhenCanceled;
    BOOL _shouldGenerateLog;
    BOOL _cancelable;
    CDUnknownBlockType _progressBlock;
}

+ (void)initialize;
@property(copy) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(retain) IDESourceControlWorkingCopyConfiguration *wcc; // @synthesize wcc=_wcc;
@property IDESourceControlOperation *operation; // @synthesize operation=_operation;
@property BOOL cancelable; // @synthesize cancelable=_cancelable;
@property(readonly) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property BOOL shouldGenerateLog; // @synthesize shouldGenerateLog=_shouldGenerateLog;
@property(readonly, copy) NSString *workspaceName; // @synthesize workspaceName=_workspaceName;
@property(retain) IDEActivityLogSection *logSection; // @synthesize logSection=_logSection;
@property(retain) IDEActivityLogSection *log; // @synthesize log=_log;
@property BOOL stopAllActivityWhenCanceled; // @synthesize stopAllActivityWhenCanceled=_stopAllActivityWhenCanceled;
@property(copy) NSDictionary *options; // @synthesize options=_options;
@property(copy) NSArray *files; // @synthesize files=_files;
@property(copy) NSString *destination; // @synthesize destination=_destination;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *endingRevision; // @synthesize endingRevision=_endingRevision;
@property(copy) NSString *startingRevision; // @synthesize startingRevision=_startingRevision;
@property int type; // @synthesize type=_type;
@property(retain) IDESourceControlRepository *remote; // @synthesize remote=_remote;
@property(retain) IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)cancelOperation;
- (void)setShouldGenerateLog:(BOOL)arg1 logStore:(id)arg2 workspaceName:(id)arg3;
- (void)setShouldGenerateLog:(BOOL)arg1 logStore:(id)arg2 shortTitle:(id)arg3 longTitle:(id)arg4;
@property(readonly, copy) NSString *longTitle; // @synthesize longTitle=_longTitle;
@property(readonly, copy) NSString *shortTitle; // @synthesize shortTitle=_shortTitle;
- (BOOL)isRequestBlacklistedFromLogging;
@property(readonly, copy) NSString *description;
@property(readonly) IDESourceControlRepository *repositoryToAuthenticate;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
- (id)initWithType:(int)arg1 startingRevision:(id)arg2 destination:(id)arg3 options:(id)arg4;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 files:(id)arg3 options:(id)arg4;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 destination:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 destination:(id)arg3 startingRevision:(id)arg4 endingRevision:(id)arg5 files:(id)arg6 options:(id)arg7;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 startingRevision:(id)arg3 endingRevision:(id)arg4 files:(id)arg5 options:(id)arg6;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 message:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 workingCopyConfiguration:(id)arg2 destination:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 files:(id)arg3;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESchemeActionResultOperation : DVTOperation
{
    BOOL _isObservingIsExecuting;
    BOOL _isFinished;
    BOOL _isExecuting;
    DVTOperation *_trackingOperation;
    IDESchemeActionRecord *_schemeActionRecord;
    CDUnknownBlockType _actionCallbackBlock;
    CDUnknownBlockType _schemeActionResultComputationBlock;
}

+ (id)schemeActionResultOperationWithSchemeActionRecord:(id)arg1 trackingExecutionOfOperation:(id)arg2 actionCallbackBlock:(CDUnknownBlockType)arg3 schemeActionResultComputationBlock:(CDUnknownBlockType)arg4;
@property(nonatomic) BOOL isExecuting; // @synthesize isExecuting=_isExecuting;
@property(nonatomic) BOOL isFinished; // @synthesize isFinished=_isFinished;
@property BOOL isObservingIsExecuting; // @synthesize isObservingIsExecuting=_isObservingIsExecuting;
@property(copy) CDUnknownBlockType schemeActionResultComputationBlock; // @synthesize schemeActionResultComputationBlock=_schemeActionResultComputationBlock;
@property(copy) CDUnknownBlockType actionCallbackBlock; // @synthesize actionCallbackBlock=_actionCallbackBlock;
@property(retain) IDESchemeActionRecord *schemeActionRecord; // @synthesize schemeActionRecord=_schemeActionRecord;
@property(retain) DVTOperation *trackingOperation; // @synthesize trackingOperation=_trackingOperation;
- (void).cxx_destruct;
- (void)_doCancellationCleanup;
- (void)main;
- (void)start;
- (BOOL)isConcurrent;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;

@end

@interface IDEFileReferenceContainerObserverCacheKey : NSObject
{
    IDEContainer *_container;
    NSString *_identifier;
    NSSet *_types;
}

- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithContainerObserver:(id)arg1;
- (id)initWithContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3;

@end

@interface IDEFileReferenceContainerObserver : NSObject <DVTInvalidation>
{
    NSMutableDictionary *_observedTypesConformanceByDataType;
    CDUnknownBlockType _skipReferencePredicateBlock;
    CDUnknownBlockType _updateHandlerBlock;
    CDUnknownBlockType _cleanUpBlock;
    NSMutableDictionary *_incrementalResults;
    NSMutableDictionary *_compositeResults;
    DVTObservingToken *_matchesKVOToken;
    IDEContainerQuery *_containerQuery;
    NSMutableSet *_incrementalRemovals;
    IDEContainer *_observedContainer;
    NSMutableSet *_observationBlocks;
    NSDictionary *_currentFilePaths;
    NSSet *_currentFileReferences;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSString *_identifier;
    NSSet *_observedTypes;
    BOOL _hasProcessedFirstBatchOfContainerQueryMatches;
    DVTDelayedInvocation *_processInvocation;
    DVTDelayedInvocation *_postInvocation;
}

+ (void)initialize;
+ (void)unregisterObserver:(id)arg1;
+ (id)observerForContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(CDUnknownBlockType)arg4;
+ (id)observerForContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(CDUnknownBlockType)arg4 skipFileReferencePredicate:(CDUnknownBlockType)arg5;
+ (id)observerForContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(CDUnknownBlockType)arg4 cleanUpBlock:(CDUnknownBlockType)arg5 skipFileReferencePredicate:(CDUnknownBlockType)arg6;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSSet *observedTypes; // @synthesize observedTypes=_observedTypes;
@property(readonly) IDEContainer *observedContainer; // @synthesize observedContainer=_observedContainer;
- (void).cxx_destruct;
- (void)processPendingResults:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)processResultForPath:(id)arg1 withLastKnownFileType:(id)arg2 updateType:(long long)arg3;
- (void)postResults:(id)arg1;
- (void)postResultsRetrospectiveResultsToObserverBlock:(CDUnknownBlockType)arg1;
- (void)setResult:(id)arg1 forPath:(id)arg2;
- (void)matchedContainerItemsDidChange:(id)arg1;
- (void)invalidateProcessing;
- (void)invalidatePosting;
- (id)addObserver:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(CDUnknownBlockType)arg4 cleanUpBlock:(CDUnknownBlockType)arg5 skipFileReferencePredicate:(CDUnknownBlockType)arg6;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexSymbolOccurrenceWithSymbolCollection : IDEIndexSymbolOccurrenceCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDELogDocumentLocation : DVTDocumentLocation
{
    NSIndexPath *_indexPath;
    BOOL _expandTranscript;
    struct _NSRange _characterRange;
}

@property(readonly) struct _NSRange characterRange; // @synthesize characterRange=_characterRange;
@property(readonly) BOOL expandTranscript; // @synthesize expandTranscript=_expandTranscript;
@property(readonly) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 expandTranscript:(BOOL)arg4;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 characterRange:(struct _NSRange)arg4;
- (id)_initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 expandTranscript:(BOOL)arg4 characterRange:(struct _NSRange)arg5;

@end

@interface IDEWorkspaceUpgradeTasksController : NSObject
{
    IDEWorkspace *_workspace;
}

@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)processUpgradeTasks;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEIndexNewSymbol : NSObject
{
    IDEIndexNewFile *_file;
    long long _lineNumber;
    long long _column;
    long long _symbolId;
    unsigned long long _containerSeq;
    BOOL _hasBody;
}

@property(readonly, nonatomic) BOOL hasBody; // @synthesize hasBody=_hasBody;
@property(nonatomic) unsigned long long containerSeq; // @synthesize containerSeq=_containerSeq;
@property(nonatomic) long long symbolId; // @synthesize symbolId=_symbolId;
@property(readonly, nonatomic) long long column; // @synthesize column=_column;
@property(readonly, nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) __weak IDEIndexNewFile *file; // @synthesize file=_file;
- (void).cxx_destruct;
- (void)didAddBody;
@property(readonly, nonatomic) long long realSymbolId;
- (id)initWithFile:(id)arg1 lineNumber:(long long)arg2 column:(long long)arg3;

@end

@interface IDEIndexSymbolWithModelOccurrenceCollection : IDEIndexSymbolCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDESourceControlBranch : NSObject
{
    NSString *_name;
    IDESourceControlWorkingCopyConfiguration *_wcc;
    IDESourceControlRepository *_remote;
    BOOL _isMainBranch;
    BOOL _orphaned;
    BOOL _isNewBranch;
    IDESourceControlRevision *_currentRevision;
}

@property(retain) IDESourceControlRevision *currentRevision; // @synthesize currentRevision=_currentRevision;
@property(readonly) BOOL isNewBranch; // @synthesize isNewBranch=_isNewBranch;
@property BOOL orphaned; // @synthesize orphaned=_orphaned;
@property(readonly) BOOL isMainBranch; // @synthesize isMainBranch=_isMainBranch;
@property(retain) IDESourceControlRepository *remote; // @synthesize remote=_remote;
@property(readonly) IDESourceControlWorkingCopyConfiguration *wcc; // @synthesize wcc=_wcc;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (id)nameOfTrackingBranch:(CDUnknownBlockType)arg1;
- (id)workingTree:(id)arg1 parentBranchesWithCompletionBlock:(CDUnknownBlockType)arg2;
- (id)repository:(id)arg1 currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly) NSString *repositoryURLString;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (id)initWithNewBranchName:(id)arg1;
- (id)initWithName:(id)arg1 workingCopyConfiguration:(id)arg2 isMainBranch:(BOOL)arg3;

@end

@interface IDEStandardTestRunner : IDETestRunner
{
    id <IDEBuildableProduct> _buildableProduct;
}

@property(retain) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
- (void).cxx_destruct;
- (id)testBundlePathForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)pathForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2 runDestination:(id)arg3;
- (id)testListWithWorkspace:(id)arg1 supportMultiple:(BOOL)arg2 supportInverse:(BOOL)arg3 invert:(char *)arg4;
- (id)testRunIdentifiersForBuildParameters:(id)arg1 runDestination:(id)arg2;
- (id)architectureForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)launchNameForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)workingDirectoryForWorkspace:(id)arg1;
- (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4 error:(id *)arg5;
- (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)testHostRunnableForRunDestination:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
- (id)defaultTestEnvironmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (id)initWithBuildableProduct:(id)arg1;
- (id)init;

@end

@interface IDEContainerItemCore : NSObject <IDEContainerItemCore>
{
    id <IDEGroupCore> _parentGroup;
    NSString *_path;
}

@property(copy) NSString *path; // @synthesize path=_path;
@property(retain) id <IDEGroupCore> parentGroup; // @synthesize parentGroup=_parentGroup;
- (void).cxx_destruct;
@property(readonly) id <IDEContainerCore> parentContainer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEActivityLogUnitTestSectionRecorder : IDEActivityLogSectionRecorder
{
    BOOL _canFinish;
}

@property BOOL canFinish; // @synthesize canFinish=_canFinish;
- (id)section;

@end

@interface IDEBreakpointActionArchivingProxy : NSObject
{
    NSString *_actionExtensionID;
    IDEBreakpointAction *_proxiedAction;
    BOOL _wasSuccessfullyUnarchived;
}

+ (id)_breakpointActionExtensions;
+ (id)_extensionIDForAction:(id)arg1;
+ (id)actionProxyForAction:(id)arg1;
@property(readonly) BOOL wasSuccessfullyUnarchived; // @synthesize wasSuccessfullyUnarchived=_wasSuccessfullyUnarchived;
@property(readonly) IDEBreakpointAction *proxiedAction; // @synthesize proxiedAction=_proxiedAction;
- (void).cxx_destruct;
- (void)addActionContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setActionExtensionIDFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;

@end

@interface IDEAddressBreakpoint : IDESymbolicBreakpoint
{
    NSString *_hexAddress;
}

+ (id)_createSymbolNameFromAddress:(id)arg1;
- (void).cxx_destruct;
- (id)displayName;
@property(copy) NSString *hexAddress;
- (id)initWithAddress:(id)arg1;

@end

@interface IDEUnitTestLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)domainIdentifier;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;
- (id)initWithDomainItem:(id)arg1;

@end

@interface IDERenameableXcode3ProjectItem : NSObject
{
    id _associatedObject;
    NSString *_nameContext;
}

@property(copy) NSString *nameContext; // @synthesize nameContext=_nameContext;
@property(retain) id associatedObject; // @synthesize associatedObject=_associatedObject;
- (void).cxx_destruct;

@end

@interface IDEBreakpoint : NSObject <DVTXMLUnarchiving, NSCopying, DVTInvalidation>
{
    NSString *_displayName;
    IDEBreakpointBucket *_bucket;
    BOOL _shouldBeEnabled;
    unsigned long long _ignoreCount;
    unsigned long long _hitCount;
    NSString *_condition;
    BOOL _continueAfterRunningActions;
    NSMutableArray *_actions;
    NSMutableArray *_locations;
    DVTMapTable *_actionsToSetsOfObservers;
    int _breakpointStackSelectionBehavior;
    NSString *_customStopReasonString;
    id <IDEInternalBreakpointDelegate> _delegate;
}

+ (id)propertiesAffectingPersistenceState;
+ (void)initialize;
@property(retain) id <IDEInternalBreakpointDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSString *customStopReasonString; // @synthesize customStopReasonString=_customStopReasonString;
@property int breakpointStackSelectionBehavior; // @synthesize breakpointStackSelectionBehavior=_breakpointStackSelectionBehavior;
@property unsigned long long hitCount; // @synthesize hitCount=_hitCount;
@property BOOL continueAfterRunningActions; // @synthesize continueAfterRunningActions=_continueAfterRunningActions;
@property(copy) NSString *condition; // @synthesize condition=_condition;
@property unsigned long long ignoreCount; // @synthesize ignoreCount=_ignoreCount;
@property(nonatomic) BOOL shouldBeEnabled; // @synthesize shouldBeEnabled=_shouldBeEnabled;
@property(retain) IDEBreakpointBucket *bucket; // @synthesize bucket=_bucket;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)addLocations:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (id)_actionArchivingProxiesArray;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setBreakpointStackSelectionBehaviorFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setContinueAfterRunningActionsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldBeEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (BOOL)_booleanValueFromUTF8String:(char *)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)_handleActionsChanged:(id)arg1;
- (void)resetActionExpressionResults;
- (void)locationWasRemoved:(id)arg1;
- (void)_updateLocation:(id)arg1 fromLocation:(id)arg2;
- (void)_locationWasResolved:(id)arg1;
- (unsigned long long)_indexOfSimilarBreakpointLocationMatching:(id)arg1 inLocations:(id)arg2;
- (void)locationWasResolved:(id)arg1;
- (void)setInitialResolvedLocations:(id)arg1;
@property(readonly) BOOL locationsProvideAdditionalInformation;
- (void)toggleShouldBeEnabled;
- (void)_notifyPersistencyStateChanged;
- (void)primitiveSetBucket:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)_dvt_commonInit;

// Remaining properties
@property(copy) NSArray *actions; // @dynamic actions;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *locations; // @dynamic locations;
@property(readonly) NSMutableArray *mutableActions; // @dynamic mutableActions;
@property(readonly) NSMutableArray *mutableLocations; // @dynamic mutableLocations;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBreakpointWrapper : ProjectItemWrapper
{
}

- (id)name;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (void)setCondition:(id)arg1;
- (id)condition;
- (void)setAutomaticallyContinue:(BOOL)arg1;
- (BOOL)automaticallyContinue;

@end

@interface IDEIndexDatabaseQueryProvider : NSObject <IDEIndexQueryProvider>
{
    IDEIndexDatabase *_database;
    NSDictionary *_settings;
    DVTDispatchLock *_cacheLock;
    NSMutableDictionary *_symbolCountsByKind;
}

+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2 forIndex:(id)arg3;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 forIndex:(id)arg2;
- (id)completionStringForSymbol:(id)arg1;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (id)symbolDumpForFile:(id)arg1;
- (id)calleesForSymbolOccurrence:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)containingSymbolForOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1 andSuperclasses:(BOOL)arg2;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)getterForProperty:(id)arg1;
- (id)setterForProperty:(id)arg1;
- (id)callsForCallable:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)_allSubClassesForClass:(id)arg1 stoppingAt:(id)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)typeOfArgument:(unsigned long long)arg1 forCallable:(id)arg2;
- (unsigned long long)numArgumentsForCallable:(id)arg1;
- (id)returnTypeForCallable:(id)arg1;
- (id)propertyForCallable:(id)arg1;
- (id)overridingSymbolsForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)referencesForSymbol:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbolWithResolutionOffset:(long long)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)classesWithReferencesToSymbols:(id)arg1 forIndex:(id)arg2;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 andSubclasses:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2 forIndex:(id)arg3;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)tempTableForSymbolOccurrences:(id)arg1 shouldDrop:(char *)arg2;
- (id)tempTableForSymbols:(id)arg1 shouldDrop:(char *)arg2;
- (id)kindsStringForKinds:(id)arg1;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3 forIndex:(id)arg4;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
- (id)testMethodsForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSubClassesForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (void)didSave;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEWorkspaceSnapshotManager : NSObject <DVTInvalidation>
{
    IDESnapshotsManager *_snapshotsManager;
    DVTPerformanceMetric *_metric;
    IDEWorkspace *_workspace;
    DVTFilePath *_repositoryPath;
    BOOL _userIntentToSnapshot;
    NSString *_currentOperationName;
    id <IDESnapshotConfirmationDelegate> _confirmationDelegate;
    NSObject<OS_dispatch_queue> *_snapshotManagerQueue;
    NSDictionary *_localizedStrings;
}

+ (void)initialize;
@property(retain) id <IDESnapshotConfirmationDelegate> confirmationDelegate; // @synthesize confirmationDelegate=_confirmationDelegate;
@property(copy) NSString *currentOperationName; // @synthesize currentOperationName=_currentOperationName;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)createSnapshotWithType:(int)arg1 name:(id)arg2 description:(id)arg3 origin:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)createAutomaticSnapshotBefore:(id)arg1 generatedBy:(id)arg2 type:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (BOOL)_shouldCreateSnapshotWithType:(int)arg1 error:(id *)arg2;
@property(retain) DVTFilePath *repositoryPath; // @synthesize repositoryPath=_repositoryPath;
- (void)_snapshotsSettingsDidChange:(id)arg1;
- (id)_localizedStringForKey:(id)arg1;
- (void)_generateLocalizedStrings;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETextIndex : NSObject <DVTEncodableIndexDelegate, DVTInvalidation>
{
    NSObject<OS_dispatch_queue> *_indexQueue;
    unsigned long long _maxConcurrentOperationCount;
    DVTLibraryFragmentFilter *_filterIndex;
    DVTEncodableIndex *_findIndex;
    IDEWorkspace *_workspace;
    NSArray *_dataProviders;
    int _readyFlag;
    NSMutableSet *_scheduledJobs;
    unsigned long long _nRunningJobs;
    double _startTime;
    long long _nCompleted;
    NSObject<OS_dispatch_queue> *_updateQueue;
    double _timeOfLastUpdateRequest;
    BOOL _updatePending;
    NSObject<OS_dispatch_queue> *_saveQueue;
    double _timeOfLastSaveRequest;
    unsigned long long _indexTypesForPendingSave;
}

+ (void)_logMissingProviderForFileDataType:(id)arg1;
+ (long long)defaultMaxConcurrentOperationCount;
+ (id)logAspect;
+ (void)initialize;
- (void).cxx_destruct;
- (id)_dataProviderForFilePath:(id)arg1 lastKnownFileDataType:(id)arg2 outFileDataType:(id *)arg3;
- (id)_dataProviderForFileDataType:(id)arg1;
- (void)_initDataProviders;
- (id)_computeFindableForFilePath:(id)arg1 withDataProvider:(id)arg2;
- (BOOL)_computeFilterForFilePath:(id)arg1 withDataProvider:(id)arg2 queryString:(id)arg3;
- (id)findableForFilePath:(id)arg1;
- (id)filePathsPossiblyContainingString:(id)arg1 indexedFilePaths:(id *)arg2;
- (void)_finishIndexing;
- (void)_reportProgress:(double)arg1;
- (void)_startIndexing;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_scheduleJobs;
- (void)setMaxConcurrentOperationCount:(unsigned long long)arg1;
- (void)scheduleJob:(id)arg1;
- (void)scheduleJobs:(id)arg1;
- (void)encodableIndex:(id)arg1 didRemoveItemForIdentifier:(id)arg2;
- (void)encodableIndex:(id)arg1 didAddItemForIdentifier:(id)arg2;
- (void)_removeIndexEntriesForPathStrings:(id)arg1 indexTypes:(unsigned long long)arg2;
- (void)_indexFileInPath:(id)arg1;
- (id)_collectFilePathsForTextIndex;
- (void)_scheduleUpdate;
- (void)updateTextIndex;
- (void)_updateIfReady;
- (BOOL)_hasBegunTextIndexing;
- (void)_beginTextIndexingIfNeeded;
- (void)beginTextIndexing;
- (id)_indexFolderPath;
- (void)_scheduleSaveForTypes:(unsigned long long)arg1;
- (void)_saveTextIndexForTypes:(unsigned long long)arg1;
- (void)_loadTextIndex;
- (void)primitiveInvalidate;
- (void)dealloc;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETextIndexDataProvider : NSObject
{
    NSArray *_fileDataTypes;
    IDEWorkspace *_workspace;
}

@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) NSArray *fileDataTypes; // @synthesize fileDataTypes=_fileDataTypes;
- (void).cxx_destruct;
- (id)findableForFilePath:(id)arg1;
- (BOOL)wantsIndexedFindResultsForFileDataType:(id)arg1;
- (id)textRepresentationOfContentsAtPath:(id)arg1;
- (id)initWithFileDataTypes:(id)arg1 workspace:(id)arg2;

@end

@interface IDETextIndexPropertyListDataProvider : IDETextIndexDataProvider
{
}

- (id)textRepresentationOfContentsAtPath:(id)arg1;

@end

@interface IDETextIndexTextDataProvider : IDETextIndexDataProvider
{
}

- (id)textRepresentationOfContentsAtPath:(id)arg1;

@end

@interface IDETextIndexRTFDataProvider : IDETextIndexDataProvider
{
}

- (id)textRepresentationOfContentsAtPath:(id)arg1;

@end

@interface IDETextIndexTextFindableWrapper : NSObject <DVTTextFindable>
{
    CDUnknownBlockType _queryFilterBlock;
    CDUnknownBlockType _findableCreationBlock;
    id <DVTTextFindable> _textFindable;
    DVTFindDescriptor *_previousFindDescriptor;
    BOOL _previousFindDescriptorPassedFilter;
}

- (void).cxx_destruct;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (id)initWithQueryFilterBlock:(CDUnknownBlockType)arg1 andFindableCreationBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

@interface IDEIndexDBTempTable : NSObject
{
    IDEIndexDBConnection *_dbConnection;
    NSString *_tableName;
    BOOL _readOnly;
    long long _count;
}

@property(readonly, nonatomic) IDEIndexDBConnection *dbConnection; // @synthesize dbConnection=_dbConnection;
- (void).cxx_destruct;
- (void)enumerateFromOffset:(long long)arg1 limit:(long long)arg2 forEachRow:(CDUnknownBlockType)arg3;
- (long long)count;
- (void)connectionDidClose;
- (void)drop;
- (int)insertSQLChanges:(id)arg1 withBindings:(CDUnknownBlockType)arg2;
- (void)dumpContents;
@property(readonly, nonatomic) IDEIndexDatabase *database;
- (id)description;
- (id)initWithConnection:(id)arg1 name:(id)arg2 schema:(id)arg3;

@end

@interface IDEConcreteTestingSpecifier : NSObject <IDETestingSpecifier>
{
    id <IDETestable> _testable;
    NSMutableArray *_skippedTests;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    IDELocationScenarioReference *_locationScenarioReference;
    DVTObservingToken *_buildableValidityObservingToken;
    BOOL _skipped;
}

+ (void)initialize;
- (void).cxx_destruct;
@property BOOL skipped;
@property(retain) IDELocationScenarioReference *locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference;
- (id)testable;
- (id)initWithTestable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSMutableArray *mutableSkippedTests; // @dynamic mutableSkippedTests;
@property(copy) NSArray *skippedTests; // @dynamic skippedTests;
@property(readonly) Class superclass;

@end

@interface IDEDistributionFileLogger : DVTFileLogger
{
    int _exclusiveLogLevel;
}

@property(readonly) int exclusiveLogLevel; // @synthesize exclusiveLogLevel=_exclusiveLogLevel;
- (void)logMessage:(id)arg1 forAspect:(id)arg2 logLevel:(int)arg3;
- (id)initWithURL:(id)arg1 append:(BOOL)arg2 exclusiveLogLevel:(int)arg3;

@end

@interface IDETestSchemeBaselineRecord : NSObject
{
    NSMutableDictionary *_infoDict;
    NSMutableDictionary *_bundleBaselinesByTestBundleUUIDDict;
}

+ (id)_bundleBaselineRecordFilePathInSchemeBaselineWithFilePath:(id)arg1 withTestBundleName:(id)arg2 error:(id *)arg3;
- (void).cxx_destruct;
- (void)unionWithSchemeBaselineRecord:(id)arg1;
- (void)setBundleBaselineRecord:(id)arg1 forTestBundleName:(id)arg2;
- (id)bundleBaselineRecordForTestBundleName:(id)arg1;
- (id)testBundleNames;
- (BOOL)writeToFilePath:(id)arg1 workspace:(id)arg2 error:(id *)arg3;
- (id)initWithFilePath:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface IDEDebuggerExpression : NSObject
{
    NSString *_expressionString;
    NSString *_result;
}

@property(copy) NSString *result; // @synthesize result=_result;
@property(copy) NSString *expressionString; // @synthesize expressionString=_expressionString;
- (void).cxx_destruct;
- (void)resetResult;
- (BOOL)hasBeenEvaluated;
- (id)initWithExpressionString:(id)arg1;

@end

@interface IDERunDestinationManager : NSObject
{
    DVTMapTable *_runDestinationsByDeviceCache;
    NSMutableSet *_availableRunDestinations;
    DVTObservingToken *_deviceManagerObservation;
    IDERunDestination *_fallbackRunDestination;
}

+ (id)sharedRunDestinationManager;
+ (void)initialize;
@property(readonly) IDERunDestination *fallbackRunDestination; // @synthesize fallbackRunDestination=_fallbackRunDestination;
- (void).cxx_destruct;
- (id)genericDeploymentRunDestinationForRunDestination:(id)arg1 scheme:(id)arg2 schemeCommands:(id)arg3 executionEnvironment:(id)arg4;
- (id)deploymentRunDestinationForRunDestination:(id)arg1 scheme:(id)arg2 schemeCommands:(id)arg3 executionEnvironment:(id)arg4;
- (id)validRunDestinationsForBuildables:(id)arg1 executionEnvironment:(id)arg2;
- (id)validRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3;
- (id)validRunDestinationsForScheme:(id)arg1 executionEnvironment:(id)arg2;
- (id)visibleRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3;
- (id)visibleRunDestinationsForScheme:(id)arg1 executionEnvironment:(id)arg2;
- (id)_validRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3 forPresentation:(BOOL)arg4;
- (id)_validRunDestinationsForScheme:(id)arg1 executionEnvironment:(id)arg2 forPresentation:(BOOL)arg3;
- (id)defaultRunDestinationForScheme:(id)arg1 fromRunDestinations:(id)arg2 preferGenericDestination:(BOOL)arg3 supportingSDK:(id)arg4;
- (id)defaultRunDestinationForScheme:(id)arg1 fromRunDestinations:(id)arg2 preferGenericDestination:(BOOL)arg3;
- (id)runDestinationWithIneligibleTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3 deviceIneligibilityError:(id)arg4;
- (id)runDestinationWithTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;
- (id)runDestinationForDeviceType:(id)arg1 options:(id)arg2 timeout:(double)arg3 error:(id *)arg4;
- (void)_uncacheRunDestinationsForDevice:(id)arg1;
- (id)_cachedRunDestinationForDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;
- (void)_cacheRunDestination:(id)arg1;
- (id)init;
- (void)_startWatchingDeviceManager;
- (void)_adjustKnownRunDestinationsForChangeKind:(unsigned long long)arg1 addedObjects:(id)arg2 removedObjects:(id)arg3;
- (void)_removeRunDestinationsForDevice:(id)arg1;
- (void)_addRunDestinationsForDevice:(id)arg1;
- (void)_setUpFallbackRunDestination;

// Remaining properties
@property(copy) NSSet *availableRunDestinations; // @dynamic availableRunDestinations;
@property(readonly, copy) NSMutableSet *mutableAvailableRunDestinations; // @dynamic mutableAvailableRunDestinations;

@end

@interface IDEReadOnlyItemsManager : NSObject
{
}

+ (id)readOnlyItemsManagerAspect;
+ (id)localizedRecoveryMessageForFailedUnlockingAttemptWithStatus:(int)arg1;
+ (id)localizedDescriptionForReadOnlyStatus:(int)arg1 itemName:(id)arg2 pluralized:(BOOL)arg3;
+ (BOOL)shouldShowLockedIndicatorForStatus:(int)arg1;
+ (BOOL)tryToMakeFilePathWritable:(id)arg1 error:(id *)arg2;
+ (BOOL)_addUserWritePermissionToFilePath:(id)arg1 error:(id *)arg2;
+ (int)readOnlyStatusOfFilePath:(id)arg1;

@end

@interface IDESourceControlExtension : NSObject
{
    id <IDESourceControlProtocol> _delegate;
    NSString *_identifier;
    NSString *_title;
    NSString *_directoryIdentifier;
    Class _delegateClass;
    NSArray *_supportedProtocols;
    BOOL _distributed;
    BOOL _requiresUsernameInURL;
    BOOL _commitMessageRequired;
    BOOL _supportsLocalBlame;
    BOOL _supportsFineGrainedCheckouts;
    BOOL _repositoryLayoutNeeded;
    BOOL _supportsRemotes;
}

@property(readonly) BOOL supportsRemotes; // @synthesize supportsRemotes=_supportsRemotes;
@property(readonly) BOOL repositoryLayoutNeeded; // @synthesize repositoryLayoutNeeded=_repositoryLayoutNeeded;
@property(readonly) BOOL supportsFineGrainedCheckouts; // @synthesize supportsFineGrainedCheckouts=_supportsFineGrainedCheckouts;
@property(readonly) BOOL supportsLocalBlame; // @synthesize supportsLocalBlame=_supportsLocalBlame;
@property(readonly) BOOL commitMessageRequired; // @synthesize commitMessageRequired=_commitMessageRequired;
@property(readonly) BOOL requiresUsernameInURL; // @synthesize requiresUsernameInURL=_requiresUsernameInURL;
@property(readonly) BOOL distributed; // @synthesize distributed=_distributed;
@property(readonly) NSArray *supportedProtocols; // @synthesize supportedProtocols=_supportedProtocols;
@property(readonly) Class delegateClass; // @synthesize delegateClass=_delegateClass;
@property(readonly) NSString *directoryIdentifier; // @synthesize directoryIdentifier=_directoryIdentifier;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly) NSString *Xcode3Title;
@property(readonly) id <IDESourceControlProtocol> delegate; // @synthesize delegate=_delegate;
- (id)initWithDVTExtension:(id)arg1;

@end

@interface IDEContainerReferenceResolutionStrategy : DVTReferenceResolutionStrategy
{
}

+ (id)currentSDKRelativeContainerResolutionStrategy;
+ (id)developerDirectoryRelativeContainerResolutionStrategy;
+ (id)buildProductsRelativeContainerResolutionStrategy;
+ (id)pathRelativeContainerResolutionStrategy;
+ (id)containerItselfContainerResolutionStrategy;
+ (id)containerRelativeContainerResolutionStrategy;
+ (id)groupRelativeContainerResolutionStrategy;
+ (id)absoluteContainerResolutionStrategy;
- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;
- (id)resolveInput:(id)arg1 inContext:(id)arg2 usingSnapshot:(id)arg3 error:(id *)arg4;
- (BOOL)canResolveInputInBackground;

@end

@interface IDEContainerAbsolutePathReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerGroupRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerContainerRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)displayNameInContext:(id)arg1;
- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerContainerItselfReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerPathRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerBuildProductsRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerDeveloperDirectoryRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerCurrentSDKRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEIndexImporter : NSObject
{
    IDEIndexDatabase *_database;
    NSObject<OS_dispatch_queue> *_project_queue;
    NSObject<OS_dispatch_queue> *_autoQuery_queue;
    NSObject<OS_dispatch_queue> *_import_queue;
    int _isClosing;
    IDEIndexDBConnection *_dbConnection;
    NSDictionary *_providers;
    IDEIndexDBTransaction *_dbTransaction;
    NSMutableSet *_pendingMainFiles;
    IDEIndexDBFactory *_fileFactory;
    IDEIndexDBFactory *_unitFactory;
    IDEIndexDBFactory *_groupFactory;
    IDEIndexDBFactory *_contextFactory;
    NSMutableDictionary *_permanentFileCache;
    NSMutableDictionary *_fileCache;
    NSMutableDictionary *_unitCache;
    NSMutableDictionary *_permanentGroupCache;
    NSMutableSet *_staleGroups;
    NSMutableDictionary *_groupCache;
    long long _symbolCount;
    int _filesWaiting;
    NSSet *_projectFiles;
    IDEIndexUniqueStringMap *_uniqueStrings;
    NSMutableDictionary *_fileDates;
    NSMutableDictionary *_filesByMainFileByTarget;
    NSMutableDictionary *_mainFilesByTargetByFile;
    NSMutableDictionary *_outOfDateFilesByTarget;
    BOOL _isReady;
    NSMutableDictionary *_spliceTable;
    int _totalDeferredJobs;
    int _changedDeferredJobs;
    NSMutableSet *_hotFiles;
    BOOL _didIndexHotFile;
}

+ (void)initialize;
@property(readonly, nonatomic) BOOL isReady; // @synthesize isReady=_isReady;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)purgeStaleFilesUsingTransaction:(id)arg1;
- (void)purgeStaleGroupsUsingTransaction:(id)arg1;
- (void)purgeStaleData:(id)arg1;
- (void)submitTransaction;
- (void)endSession:(id)arg1;
- (void)didSave;
- (void)removeFile:(id)arg1 mainFile:(id)arg2 target:(id)arg3;
- (void)addFile:(id)arg1 mainFile:(id)arg2 target:(id)arg3;
- (void)submitMainFile:(id)arg1;
- (void)resetSpliceTable;
- (void)updateSpliceTableForDirtyFile:(id)arg1 oldGroupId:(long long)arg2 oldModified:(double)arg3;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (long long)existingFileIdForPath:(id)arg1;
- (long long)fileIdForPath:(id)arg1 moduleURL:(id)arg2;
- (long long)realGroupIdForId:(long long)arg1;
- (long long)realUnitIdForId:(long long)arg1;
- (long long)realFileIdForId:(long long)arg1;
- (void)dealloc;
- (void)close;
- (void)logStatistics;
- (void)forgetOutOfDateMainFile:(id)arg1 forTarget:(id)arg2;
- (void)noteOutOfDateMainFile:(id)arg1 file:(id)arg2 forTarget:(id)arg3;
- (void)noteOutOfDateFile:(id)arg1;
- (id)storeTimestamp:(id)arg1 modtime:(double)arg2 forFile:(id)arg3 mainFile:(id)arg4 target:(id)arg5 spliced:(BOOL)arg6;
- (void)registerHotFile:(id)arg1;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (void)registerTarget:(id)arg1 byCaller:(id)arg2 outOfDateCallback:(CDUnknownBlockType)arg3;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (long long)numberOfKnownFiles;
- (id)timestampForFile:(id)arg1;
- (BOOL)isKnownFile:(id)arg1 makeKnown:(BOOL)arg2;
- (id)mainFilesForFile:(id)arg1;
- (id)mainFilesForFile:(id)arg1 followPCH:(BOOL)arg2;
- (id)mainFilesForTarget:(id)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (BOOL)isProjectFile:(id)arg1;
- (void)finishLoading;
- (id)initWithDatabase:(id)arg1;

@end

@interface IDEIndexUnknownDataSource : IDEIndexDataSource
{
}

+ (id)dataSourceVersion;
- (BOOL)generateDataForJob:(id)arg1;

@end

@interface IDECommandLineBuildLog : IDEActivityLogSection
{
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    NSMutableArray *_failedSections;
    NSMutableArray *_sectionsWithAnalyzerIssues;
}

+ (Class)logRecorderClass;
@property(retain) NSMutableArray *sectionsWithAnalyzerIssues; // @synthesize sectionsWithAnalyzerIssues=_sectionsWithAnalyzerIssues;
@property(retain) NSMutableArray *failedSections; // @synthesize failedSections=_failedSections;
@property(retain) NSFileHandle *standardError; // @synthesize standardError=_standardError;
@property(retain) NSFileHandle *standardOutput; // @synthesize standardOutput=_standardOutput;
- (void).cxx_destruct;
- (void)addFailedSection:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initLogWithTitle:(id)arg1 standardOutput:(id)arg2 standardError:(id)arg3;
- (id)initLogWithTitle:(id)arg1;

@end

@interface IDEArchivedApplication : IDEArchivedContent
{
}

+ (id)keyPathsForValuesAffectingIconPath;
+ (id)keyPathsForValuesAffectingApplicationPath;
+ (id)_codesigningIdentityFromApplicationPath:(id)arg1;
+ (id)archivedContentPathPlistKey;
+ (id)archivedContentPropertiesPlistKey;
+ (BOOL)fillInfoDictionary:(id)arg1 forContentAtPath:(id)arg2 inArchiveProductsDirectory:(id)arg3;
+ (id)soleArchivedContentRelativePathInDirectory:(id)arg1;
@property(readonly) DVTPlatform *platform;
- (long long)autodetectedFormatForPackaging;
- (BOOL)supportsPackagingAsFormat:(long long)arg1;
- (id)packager;
- (id)platformName;
@property(readonly) NSArray *iconPaths;
@property(readonly) DVTFilePath *applicationPath;
@property(readonly) NSString *signingIdentity;

@end

@interface IDEIndexClangDataSource : IDEIndexDataSource
{
    IDEIndexingJob *_job;
    NSMutableDictionary *_sourcesToNewFiles;
    IDEIndexNewMainFile *_topLevelFile;
    IDEIndexNewFile *_topLevelSourceFile;
    NSArray *_astArgs;
    NSString *_workingDirectory;
    BOOL _hasCpp;
    BOOL _isModuleFile;
    IDEIndexClangTranslationUnit *_translationUnit;
}

+ (id)translationUnitForPCHFile:(id)arg1 arguments:(id)arg2 session:(id)arg3 create:(BOOL)arg4;
+ (void)logPCHFailure:(id)arg1;
+ (id)substituteNewArgument:(id)arg1 forOldArgument:(id)arg2 inArray:(id)arg3;
+ (id)addHeaderMapInclude:(id)arg1 forBuildProductsDir:(id)arg2 useSpellChecking:(BOOL)arg3 toArguments:(id)arg4;
+ (id)canonicalPathForPath:(id)arg1 index:(id)arg2 arguments:(id)arg3 workingDirectory:(id *)arg4;
+ (id)workingDirFromArgs:(id)arg1;
+ (void)logMemoryUsage:(struct CXTranslationUnitImpl *)arg1 forFile:(id)arg2;
+ (BOOL)loggingMemoryUsage;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
+ (id)dataSourceVersion;
+ (BOOL)displayDiagnostics;
+ (long long)timingMode;
+ (void)initialize;
@property(retain, nonatomic) IDEIndexClangTranslationUnit *translationUnit; // @synthesize translationUnit=_translationUnit;
@property(readonly, nonatomic) BOOL hasCpp; // @synthesize hasCpp=_hasCpp;
@property(readonly, nonatomic) IDEIndexNewFile *topLevelSourceFile; // @synthesize topLevelSourceFile=_topLevelSourceFile;
@property(readonly, nonatomic) IDEIndexNewMainFile *topLevelFile; // @synthesize topLevelFile=_topLevelFile;
@property(readonly, nonatomic) NSMutableDictionary *sourcesToNewFiles; // @synthesize sourcesToNewFiles=_sourcesToNewFiles;
@property(readonly, nonatomic) IDEIndexingJob *job; // @synthesize job=_job;
- (void).cxx_destruct;
- (int)indexOptionFlags;
- (CDStruct_9b0a347d *)indexerCallbacks;
- (BOOL)generateDataForJob:(id)arg1;
- (BOOL)_addTopLevelFile:(id)arg1 includePath:(id)arg2;
- (id)_canonicalPathForPath:(id)arg1;
- (id)initWithSource:(id)arg1;

@end

@interface IDETestableReference : NSObject <IDETestingSpecifier, DVTXMLUnarchiving>
{
    IDESchemeBuildableReference *_buildableReference;
    NSMutableArray *_skippedTests;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    IDELocationScenarioReference *_locationScenarioReference;
    BOOL _skipped;
}

+ (id)keyPathsForValuesAffectingScheme;
+ (void)initialize;
@property(retain) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference; // @synthesize deviceAppDataReference=_deviceAppDataReference;
@property BOOL skipped; // @synthesize skipped=_skipped;
@property(readonly) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void).cxx_destruct;
- (void)setSkippedFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLocationScenarioReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addDeviceAppData:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addSkippedTests:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@property(retain) IDEScheme *scheme;
- (void)resolveBuildableFromImport;
- (id)testableName;
- (id)testable;
@property(readonly, copy) NSString *description;
- (id)init;
- (id)initWithTestable:(id)arg1 scheme:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) NSMutableArray *mutableSkippedTests; // @dynamic mutableSkippedTests;
@property(copy) NSArray *skippedTests; // @dynamic skippedTests;
@property(readonly) Class superclass;

@end

@interface IDETestableReferenceTestIdentifier : NSObject <DVTXMLUnarchiving>
{
    NSString *_identifier;
}

@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)setIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexingJobScheduler : NSObject
{
    NSObject<OS_dispatch_queue> *_control_queue;
    long long _width;
    long long _lastThrottledWidth;
    BOOL _onBatteryPower;
    NSString *_buildCommandRunning;
    double _timeBatteryChecked;
    double _timeBuildCommandsChecked;
    NSMutableArray *_engines;
    NSMutableDictionary *_hotFilesByEngine;
    NSMutableDictionary *_hotFileIndicesByEngine;
    NSMutableDictionary *_priorityIndicesByEngine;
    NSMutableDictionary *_waitingJobsByEngine;
    NSMutableArray *_runningJobs;
    id _buildNotifications[2];
    long long _nBuildOperations;
}

+ (id)sharedInstance;
+ (void)initialize;
@property(readonly, nonatomic) long long width; // @synthesize width=_width;
- (void).cxx_destruct;
- (void)_scheduleJobs;
- (long long)_throttledWidth;
- (long long)_adjustThrottledWidth:(long long)arg1;
- (void)_checkBuildCommands;
- (void)ping;
- (void)cancelJobsForEngine:(id)arg1;
- (void)scheduleJob:(id)arg1;
- (void)clearHotFilesForEngine:(id)arg1;
- (void)addHotFile:(id)arg1 forEngine:(id)arg2;
- (void)dealloc;
- (void)reportThrottledWidth:(CDUnknownBlockType)arg1 forEngine:(id)arg2;
- (id)init;

@end

@interface IDEIndexDBSQLStream : NSObject
{
}

- (void)willSubmitTransaction:(id)arg1;
- (id)newTransaction;
- (void)doSQL1:(id)arg1 withBindings:(CDUnknownBlockType)arg2;
- (void)doSQL:(id)arg1;
- (void)doBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) IDEIndexDBConnection *dbConnection;
@property(readonly, nonatomic) IDEIndexDatabase *database;

@end

@interface IDEVersionedFileManager : NSObject
{
    unsigned long long _batchEditModeCounter;
    NSMutableSet *_workingCopiesWeHaveTouchedInBatchEditMode;
    DVTDispatchLock *_batchEditLock;
}

+ (id)_errorWithUnderlyingErrors:(id)arg1 type:(int)arg2;
+ (id)_errorDescriptionForType:(int)arg1;
+ (void)_callCompletionBlockWithResult:(BOOL)arg1 error:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (void)_delegatePerformBlock:(CDUnknownBlockType)arg1;
+ (void)setDelegate:(id)arg1 withDispatchQueue:(id)arg2;
+ (void)initialize;
- (void).cxx_destruct;
- (void)moveItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 inContext:(id)arg3 completionBlockDispatchQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)copyItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 completionBlockDispatchQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)addItemsAtFilePaths:(id)arg1 workspace:(id)arg2 force:(BOOL)arg3 completionBlockDispatchQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_addItemsAtFilePaths:(id)arg1 workspace:(id)arg2 force:(BOOL)arg3;
- (void)_addPathStrings:(id)arg1 toWorkingTree:(id)arg2;
- (void)removeItemsAtFilePaths:(id)arg1 moveToTrash:(BOOL)arg2 completionBlockDispatchQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)createDirectoryAtFilePath:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 completionBlockDispatchQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)init;
- (void)dealloc;
- (void)setupBatchEditMode:(id)arg1;
- (BOOL)isInBatchEditMode;
- (void)endBatchEdits;
- (void)startBatchEdits;

@end

@interface IDEIndexCategorySymbol : IDEIndexContainerSymbol
{
}

- (id)relatedClass;
- (id)properties;
- (id)instanceVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEBuildOperationDescription : NSObject
{
    NSString *_objectToBuildName;
    NSString *_actionName;
    NSString *_actionInProgress;
}

+ (id)buildOperationDescriptionForSchemeCommand:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 objectToBuildName:(id)arg4;
+ (id)buildOperationDescriptionForSchemeCommand:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 blueprintName:(id)arg4;
+ (id)buildOperationDescriptionForSchemeCommand:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 fileName:(id)arg4;
+ (id)buildOperationDescriptionForSchemeCommand:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 schemeName:(id)arg4;
@property(readonly, copy) NSString *actionInProgress; // @synthesize actionInProgress=_actionInProgress;
@property(readonly, copy) NSString *actionName; // @synthesize actionName=_actionName;
@property(readonly, copy) NSString *objectToBuildName; // @synthesize objectToBuildName=_objectToBuildName;
- (void).cxx_destruct;
- (id)initWithObjectToBuildName:(id)arg1 actionName:(id)arg2 actionInProgress:(id)arg3;

@end

@interface _IDELegacyUserDefaultsImporter : NSObject <IDEInitialization>
{
}

+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;

@end

@interface IDEPosixSpawnLauncher : IDERunOperationPathWorker
{
    void *_file_actions;
    BOOL _startSuspended;
    BOOL _terminateCalled;
    BOOL _targetReallyDead;
    BOOL _responsibleForTermination;
    DVTDispatchLock *_atomizingLock;
}

@property BOOL startSuspended; // @synthesize startSuspended=_startSuspended;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (BOOL)_willUseExistingProcess:(id)arg1;
- (void)launchSessionDidRegisterForXPCDebugging:(id)arg1;
- (void)_setPIDOnMainThread:(int)arg1;
- (void)_forceQuit:(id)arg1;
- (BOOL)_convertCmdArgs:(id)arg1 intoPtrArray:(const char ***)arg2 andEnvVars:(id)arg3 intoPtrArray:(const char ***)arg4 andReturnStandardizedPath:(const char **)arg5 error:(id *)arg6;
- (void)_waitForChildExit;
- (void *)_setupPosixSpawnAttributesAndPTY:(id *)arg1;
- (void)dealloc;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

@end

@interface IDERemoteRunnable : IDERunnable <DVTXMLUnarchiving>
{
    NSString *_bundleIdentifier;
    DVTFilePath *_remotePath;
}

- (id)remotePath;
- (void)setBundleIdentifier:(id)arg1;
- (id)bundleIdentifier;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setRemotePathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (int)runnableType;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (id)toolTip;
- (id)displayName;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithRemotePath:(id)arg1 bundleIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEWorkspaceCore : IDEXMLPackageContainerCore <IDEContainerCore>
{
}


// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEScheme : NSObject <DVTInvalidation>
{
    IDEBuildSchemeAction *_buildSchemeAction;
    IDETestSchemeAction *_testSchemeAction;
    IDELaunchSchemeAction *_launchSchemeAction;
    IDEArchiveSchemeAction *_archiveSchemeAction;
    IDEProfileSchemeAction *_profileSchemeAction;
    IDEAnalyzeSchemeAction *_analyzeSchemeAction;
    IDEInstallSchemeAction *_installSchemeAction;
    IDEIntegrateSchemeAction *_integrateSchemeAction;
    NSString *_lastUpgradeVersion;
    NSString *_cachedLastUpgradeVersion;
    BOOL _hasRunUpgradeCheck;
    BOOL _wasUpgraded;
    IDERunnable *_oldFormatArchivedRunnable;
    IDERunContextManager *_runContextManager;
    IDEContainer<IDECustomDataStoring> *_customDataStoreContainer;
    DVTCustomDataSpecifier *_customDataSpecifier;
    NSArray *_availableRunDestinations;
    BOOL _isShown;
    unsigned long long _orderHint;
    BOOL _dataStoreClosed;
    BOOL _deferredSaveScheduled;
    BOOL _registeredForIsBuildableNotifications;
    NSNumber *_isArchivable;
    id _isArchivableNotificationToken;
    NSNumber *_isInstallable;
    id _isInstallableNotificationToken;
    id _buildablesToken;
    BOOL _hasUnsupportedArchiveData;
    BOOL _transient;
    BOOL _wasCreatedForAppExtension;
    IDEEntityIdentifier *_schemeIdentifier;
    NSError *_loadError;
}

+ (BOOL)automaticallyNotifiesObserversOfOrderHint;
+ (BOOL)automaticallyNotifiesObserversOfIsShown;
+ (id)keyPathsForValuesAffectingDisambiguatedName;
+ (BOOL)automaticallyNotifiesObserversOfCustomDataStoreContainer;
+ (id)keyPathsForValuesAffectingIntegratable;
+ (id)keyPathsForValuesAffectingTestable;
+ (id)keyPathsForValuesAffectingAnalyzable;
+ (id)keyPathsForValuesAffectingProfilable;
+ (id)keyPathsForValuesAffectingRunnable;
+ (void)initialize;
+ (id)schemeFromXMLData:(id)arg1 withRunContextManager:(id)arg2 customDataStoreContainer:(id)arg3 customDataSpecifier:(id)arg4 isShown:(BOOL)arg5 orderHint:(unsigned long long)arg6 error:(id *)arg7;
+ (id)schemeWithRunContextManager:(id)arg1 customDataStoreContainer:(id)arg2 customDataSpecifier:(id)arg3;
@property BOOL wasCreatedForAppExtension; // @synthesize wasCreatedForAppExtension=_wasCreatedForAppExtension;
@property(retain) NSError *loadError; // @synthesize loadError=_loadError;
@property(copy, nonatomic) IDEEntityIdentifier *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
@property(readonly) DVTCustomDataSpecifier *customDataSpecifier; // @synthesize customDataSpecifier=_customDataSpecifier;
@property(retain, nonatomic) IDEContainer<IDECustomDataStoring> *customDataStoreContainer; // @synthesize customDataStoreContainer=_customDataStoreContainer;
@property(retain) IDERunContextManager *runContextManager; // @synthesize runContextManager=_runContextManager;
@property(getter=isTransient) BOOL transient; // @synthesize transient=_transient;
@property BOOL wasUpgraded; // @synthesize wasUpgraded=_wasUpgraded;
@property BOOL hasRunUpgradeCheck; // @synthesize hasRunUpgradeCheck=_hasRunUpgradeCheck;
@property(copy) NSString *lastUpgradeVersion; // @synthesize lastUpgradeVersion=_lastUpgradeVersion;
@property(copy) NSString *cachedLastUpgradeVersion; // @synthesize cachedLastUpgradeVersion=_cachedLastUpgradeVersion;
@property(retain) IDEInstallSchemeAction *installSchemeAction; // @synthesize installSchemeAction=_installSchemeAction;
@property(retain) IDEIntegrateSchemeAction *integrateSchemeAction; // @synthesize integrateSchemeAction=_integrateSchemeAction;
@property(retain) IDEAnalyzeSchemeAction *analyzeSchemeAction; // @synthesize analyzeSchemeAction=_analyzeSchemeAction;
@property(retain) IDEProfileSchemeAction *profileSchemeAction; // @synthesize profileSchemeAction=_profileSchemeAction;
@property(retain) IDEArchiveSchemeAction *archiveSchemeAction; // @synthesize archiveSchemeAction=_archiveSchemeAction;
@property(retain) IDELaunchSchemeAction *launchSchemeAction; // @synthesize launchSchemeAction=_launchSchemeAction;
@property(retain) IDETestSchemeAction *testSchemeAction; // @synthesize testSchemeAction=_testSchemeAction;
@property(retain) IDEBuildSchemeAction *buildSchemeAction; // @synthesize buildSchemeAction=_buildSchemeAction;
- (void).cxx_destruct;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLaunchPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addArchiveAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addInstallAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addIntegrateAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAnalyzeAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addProfileAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLaunchAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setWasCreatedForAppExtensionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLastUpgradeVersionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
@property(readonly) NSData *xmlData;
- (BOOL)_executionActionsNeedCurrentArchiveVersion;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_groupAndImposeDependenciesForOrderedOperations:(id)arg1;
- (id)_buildOperationGroupForExecutionEnvironment:(id)arg1 buildConfiguration:(id)arg2 buildPurpose:(int)arg3 buildCommand:(int)arg4 schemeCommand:(id)arg5 overridingProperties:(id)arg6 destination:(id)arg7 buildLog:(id)arg8 filePath:(id)arg9 restorePersistedBuildResults:(BOOL)arg10 schemeActionRecord:(id)arg11 overridingBuildables:(id)arg12 error:(id *)arg13;
- (id)_executionOperationForExecutionEnvironment:(id)arg1 build:(BOOL)arg2 onlyBuild:(BOOL)arg3 buildPurpose:(int)arg4 buildCommand:(int)arg5 schemeCommand:(id)arg6 title:(id)arg7 overridingProperties:(id)arg8 destination:(id)arg9 buildLog:(id)arg10 filePath:(id)arg11 overridingBuildConfiguration:(id)arg12 restorePersistedBuildResults:(BOOL)arg13 invocationRecord:(id)arg14 overridingTestingSpecifiers:(id)arg15 error:(id *)arg16 actionCallbackBlock:(CDUnknownBlockType)arg17;
- (id)integrateWithExecutionContext:(id)arg1 destination:(id)arg2 overridingProperties:(id)arg3 schemeCommand:(id)arg4 commandName:(id)arg5 invocationRecord:(id)arg6 error:(id *)arg7;
- (id)integrateOperationWithExecutionContext:(id)arg1 destination:(id)arg2 overridingProperties:(id)arg3 schemeCommand:(id)arg4 invocationRecord:(id)arg5 error:(id *)arg6 buildLogCreationBlock:(CDUnknownBlockType)arg7 actionCallbackBlock:(CDUnknownBlockType)arg8;
- (id)installWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 schemeCommand:(id)arg5 commandName:(id)arg6 invocationRecord:(id)arg7 error:(id *)arg8;
- (id)archiveWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 schemeCommand:(id)arg5 commandName:(id)arg6 invocationRecord:(id)arg7 error:(id *)arg8;
- (id)archiveOperationWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 schemeCommand:(id)arg5 buildLog:(id)arg6 overridingBuildConfiguration:(id)arg7 invocationRecord:(id)arg8 name:(id)arg9 title:(id)arg10 error:(id *)arg11 actionCallbackBlock:(CDUnknownBlockType)arg12;
- (id)testWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 schemeCommand:(id)arg6 commandName:(id)arg7 overridingTestingSpecifiers:(id)arg8 buildLog:(id)arg9 invocationRecord:(id)arg10 error:(id *)arg11 completionBlock:(CDUnknownBlockType)arg12;
- (id)testOperationWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 overridingTestingSpecifiers:(id)arg6 schemeCommand:(id)arg7 buildLog:(id)arg8 overridingBuildConfiguration:(id)arg9 restorePersistedBuildResults:(BOOL)arg10 invocationRecord:(id)arg11 name:(id)arg12 title:(id)arg13 error:(id *)arg14 actionCallbackBlock:(CDUnknownBlockType)arg15;
- (id)profileWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 schemeCommand:(id)arg6 commandName:(id)arg7 overridingTestingSpecifiers:(id)arg8 invocationRecord:(id)arg9 error:(id *)arg10;
- (id)profileWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 schemeCommand:(id)arg6 commandName:(id)arg7 invocationRecord:(id)arg8 error:(id *)arg9;
- (id)runWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 schemeCommand:(id)arg6 commandName:(id)arg7 invocationRecord:(id)arg8 error:(id *)arg9;
- (id)analyzeWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 schemeCommand:(id)arg5 commandName:(id)arg6 invocationRecord:(id)arg7 error:(id *)arg8;
- (id)analyzeOperationWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 buildLog:(id)arg5 overridingBuildConfiguration:(id)arg6 restorePersistedBuildResults:(BOOL)arg7 invocationRecord:(id)arg8 name:(id)arg9 title:(id)arg10 error:(id *)arg11;
- (id)cleanWithExecutionContext:(id)arg1 destination:(id)arg2 overridingProperties:(id)arg3 schemeCommand:(id)arg4 commandName:(id)arg5 invocationRecord:(id)arg6 error:(id *)arg7;
- (void)_reportExecutionOperationNamed:(id)arg1 shouldBuild:(BOOL)arg2 onlyBuild:(BOOL)arg3 buildPurpose:(int)arg4;
- (id)buildWithPurpose:(int)arg1 buildCommand:(int)arg2 schemeCommand:(id)arg3 executionContext:(id)arg4 destination:(id)arg5 overridingProperties:(id)arg6 commandName:(id)arg7 filePath:(id)arg8 invocationRecord:(id)arg9 title:(id)arg10 error:(id *)arg11 completionBlock:(CDUnknownBlockType)arg12;
- (id)buildOperationWithPurpose:(int)arg1 buildCommand:(int)arg2 schemeCommand:(id)arg3 executionContext:(id)arg4 destination:(id)arg5 overridingProperties:(id)arg6 filePath:(id)arg7 buildLog:(id)arg8 overridingBuildConfiguration:(id)arg9 restorePersistedBuildResults:(BOOL)arg10 invocationRecord:(id)arg11 title:(id)arg12 error:(id *)arg13 completionBlock:(CDUnknownBlockType)arg14;
- (id)_addActionRecordToInvocationRecord:(id)arg1 shouldBuild:(BOOL)arg2 onlyBuild:(BOOL)arg3 schemeCommand:(id)arg4 runDestination:(id)arg5 title:(id)arg6;
- (void)_updateOrderHint:(unsigned long long)arg1;
@property unsigned long long orderHint;
- (void)_updateIsShown:(BOOL)arg1;
@property BOOL isShown;
@property BOOL isShared;
@property(readonly) NSString *disambiguatedName;
@property(copy) NSString *name;
- (void)_primitiveSetCustomDataStoreContainer:(id)arg1;
- (void)_updateCustomDataStoreContainer:(id)arg1 andSpecifier:(id)arg2;
- (void)_invalidateAvailableRunDestinations;
@property(readonly) NSArray *availableRunDestinations;
- (void)buildConfigurationDidChange:(id)arg1;
- (id)buildParametersForSchemeCommand:(id)arg1 destination:(id)arg2;
- (id)buildConfigurationForSchemeCommand:(id)arg1;
- (id)buildablesForSchemeCommand:(id)arg1;
- (id)runnablePathForSchemeCommand:(id)arg1 destination:(id)arg2;
- (id)schemeActionForSchemeCommand:(id)arg1;
@property(readonly, getter=isInstallable) BOOL installable;
@property(readonly, getter=isIntegratable) BOOL integratable;
@property(readonly, getter=isArchivable) BOOL archivable;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly, getter=isAnalyzable) BOOL analyzable;
@property(readonly, getter=isProfilable) BOOL profilable;
@property(readonly, getter=isRunnable) BOOL runnable;
@property(readonly, getter=isBuildable) BOOL buildable;
- (void)primitiveInvalidate;
@property(readonly) BOOL isClosed;
- (void)customDataStoreContainerClosing:(id)arg1;
- (void)performDelayedSave:(id)arg1;
- (void)markSchemeDirty;
- (void)resolveBuildablesFromImport;
@property(readonly, copy) NSString *description;
- (id)initFromUnarchiver:(BOOL)arg1 runContextManager:(id)arg2 customDataStoreContainer:(id)arg3 customDataSpecifier:(id)arg4 isShown:(BOOL)arg5 orderHint:(unsigned long long)arg6;
- (void)_createDefaultSchemeActions;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceControlOperation : DVTOperation
{
    NSArray *_result;
    IDESourceControlRequest *_request;
    NSString *_rawInput;
    NSString *_rawStandardOutput;
    NSString *_rawErrorOutput;
    unsigned int _scmPowerAssertion;
    BOOL _waitToParseData;
    BOOL _allowsSleep;
    BOOL _userInitiated;
}

@property BOOL userInitiated; // @synthesize userInitiated=_userInitiated;
@property BOOL allowsSleep; // @synthesize allowsSleep=_allowsSleep;
@property BOOL waitToParseData; // @synthesize waitToParseData=_waitToParseData;
@property(readonly) IDESourceControlRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
@property(retain) NSArray *result; // @synthesize result=_result;
- (void)cancel;
@property(retain) NSString *rawErrorOutput; // @synthesize rawErrorOutput=_rawErrorOutput;
@property(retain) NSString *rawStandardOutput; // @synthesize rawStandardOutput=_rawStandardOutput;
@property(retain) NSString *rawInput; // @synthesize rawInput=_rawInput;
- (void)main;
- (id)initWithRequest:(id)arg1;

@end

@interface IDESourceControlTreeItem : DVTModelTreeNode
{
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    IDESourceControlRevision *_headRevision;
    IDESourceControlRevision *_baseRevision;
    IDESourceControlRevision *_currentRevision;
    NSMutableDictionary *_revisions;
    NSString *_name;
    NSString *_pathString;
    unsigned long long _state;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentRevision;
+ (id)_revisionLock;
+ (void)initialize;
@property unsigned long long conflictStateForUpdateOrMerge; // @synthesize conflictStateForUpdateOrMerge=_conflictStateForUpdateOrMerge;
@property int sourceControlServerStatus; // @synthesize sourceControlServerStatus=_sourceControlServerStatus;
@property int sourceControlLocalStatus; // @synthesize sourceControlLocalStatus=_sourceControlLocalStatus;
@property unsigned long long state; // @synthesize state=_state;
@property(readonly) NSString *pathString; // @synthesize pathString=_pathString;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)exportToFileURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)clearAllRevisions;
- (id)revisionsWithStartingRevision:(id)arg1 endingRevision:(id)arg2 limit:(unsigned long long)arg3 branch:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
@property(readonly) NSArray *revisions;
- (id)revisionsDictionary;
- (void)addRevision:(id)arg1;
- (void)clearCurrentRevision;
- (id)currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setCurrentRevision:(id)arg1;
@property(readonly) IDESourceControlRevision *currentRevision;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (id)baseRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)headRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setBASERevision:(id)arg1;
- (void)setHEADRevision:(id)arg1;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly) NSString *repositoryURLString;
- (void)_setPathString:(id)arg1;
- (void)updateFileReferences:(id)arg1 withFilePaths:(id)arg2;
- (void)primitiveInvalidate;
- (id)initWithPathString:(id)arg1;

// Remaining properties
@property(readonly) IDESourceControlTreeGroup *parentGroup; // @dynamic parentGroup;
@property(readonly) IDESourceControlTree *sourceTree; // @dynamic sourceTree;

@end

@interface IDESourceControlTreeGroup : IDESourceControlTreeItem
{
    BOOL _areChildrenLoaded;
}

+ (id)keyPathsForValuesAffectingSparseChildren;
+ (void)initialize;
@property BOOL areChildrenLoaded; // @synthesize areChildrenLoaded=_areChildrenLoaded;
- (void)clearAllRevisions;
- (void)reload;
@property(readonly) NSMutableArray *mutableChildren; // @dynamic mutableChildren;
@property(copy) NSArray *children; // @dynamic children;
- (id)sparseChildren;
- (void)computeChildrenIfNeeded;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDESourceControlWorkingTreeItem : IDESourceControlTreeItem
{
    DVTFilePath *_filePath;
    NSMutableDictionary *_statusForKeyDictionary;
    BOOL _edited;
}

+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)setSourceControlStatus:(int)arg1 forKey:(id)arg2;
- (int)sourceControlStatusForKey:(id)arg1;
- (id)blameEntriesForRevisionNumber:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)temporaryFileForBranchName:(id)arg1 revisionNumber:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property BOOL edited; // @synthesize edited=_edited;
- (void)setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)setSourceControlServerStatus:(int)arg1;
- (void)setSourceControlLocalStatus:(int)arg1;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)repositoryURLString;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDESourceControlWorkingTreeGroup : IDESourceControlTreeGroup
{
    DVTFilePath *_filePath;
    NSMutableDictionary *_statusForKeyDictionary;
    BOOL _edited;
}

+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (void)setSourceControlStatus:(int)arg1 forKey:(id)arg2;
- (int)sourceControlStatusForKey:(id)arg1;
- (void)setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)setSourceControlServerStatus:(int)arg1;
- (void)setSourceControlLocalStatus:(int)arg1;
- (id)blameEntriesForRevisionNumber:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)temporaryFolderForBranchName:(id)arg1 revisionNumber:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)currentRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)computeChildrenIfNeeded;
@property BOOL edited; // @synthesize edited=_edited;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)repositoryURLString;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDESourceControlWorkingTreeItemHolder : NSObject
{
    NSMutableArray *_workingTreeItems;
}

- (void).cxx_destruct;
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (void)addFilePath:(id)arg1;
@property(readonly) NSMutableArray *workingTreeItems; // @synthesize workingTreeItems=_workingTreeItems;

@end

@interface IDESourceControlDummyItem : NSObject
{
    NSString *name;
}

@property(retain) NSString *name; // @synthesize name;
- (void).cxx_destruct;

@end

@interface IDEOCUnitTestOutputParser : NSObject
{
    id <IDEOCUnitTestOutputParserDelegate> _delegate;
    DVTRegularExpression *_testSuiteStartedRegex;
    DVTRegularExpression *_testSuiteFinishedRegex;
    DVTRegularExpression *_testSuiteExecutedRegex;
    DVTRegularExpression *_testCaseStartedRegex;
    DVTRegularExpression *_testCaseMeasuredPerformanceMetricRegex;
    DVTRegularExpression *_testCaseFinishedRegex;
    DVTRegularExpression *_testCaseFailedRegex;
    NSArray *_performanceTestParsers;
    NSObject<OS_dispatch_queue> *_processingQueue;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    BOOL _outputsToConsole;
}

+ (BOOL)_initializedForUserInteraction;
+ (void)_initializeRegularExpressionsIfNeeded;
@property BOOL outputsToConsole; // @synthesize outputsToConsole=_outputsToConsole;
@property __weak id <IDEOCUnitTestOutputParserDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)performDelegateBlock:(CDUnknownBlockType)arg1;
- (void)performParserBlock:(CDUnknownBlockType)arg1;
- (void)processConsoleText:(id)arg1;
- (id)filterTestSuiteIdentifierFromString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IDEDiagnosticActivityLogMessage : IDEActivityLogMessage
{
    DVTDispatchLock *_diagnosticFixItItemsLock;
    NSMutableArray *_diagnosticFixItItems;
    DVTWeakInterposer *_delegate_dvtWeakInterposer;
    DVTWeakInterposer *_representedObject_dvtWeakInterposer;
}

+ (id)keyPathsForValuesAffectingFixableDiagnosticItems;
+ (id)diagnosticMessageType;
@property(copy, nonatomic) NSArray *diagnosticFixItItems; // @synthesize diagnosticFixItItems=_diagnosticFixItItems;
- (void).cxx_destruct;
@property __weak id representedObject;
@property __weak id <IDEDiagnosticItemDelegate> delegate;
@property(readonly) NSArray *fixableDiagnosticItems;
@property(readonly, copy) NSArray *diagnosticFixItItemsSnapshot;
- (void)removeObjectFromDiagnosticFixItItemsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inDiagnosticFixItItemsAtIndex:(unsigned long long)arg2;
@property(readonly) NSMutableArray *mutableDiagnosticFixItItems;
@property(readonly) NSString *severityString;
@property(readonly) int diagnosticSeverity;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDiagnosticItem:(id)arg1;
- (BOOL)isEqualDisregardingTimestampToDiagnosticItem:(id)arg1;
- (BOOL)_isEqualToDiagnosticItem:(id)arg1 disregardingTimestamp:(BOOL)arg2;
- (BOOL)_array:(id)arg1 isEqualToArray:(id)arg2;
- (id)init;
- (id)initWithSeverity:(int)arg1 title:(id)arg2 location:(id)arg3;

@end

@interface IDEDiagnosticFixItItem : NSObject
{
    IDEDiagnosticActivityLogMessage *_diagnosticItem;
    NSString *_fixItString;
    DVTTextDocumentLocation *_replacementLocation;
}

@property(readonly) DVTTextDocumentLocation *replacementLocation; // @synthesize replacementLocation=_replacementLocation;
@property(readonly) NSString *fixItString; // @synthesize fixItString=_fixItString;
@property(nonatomic) __weak IDEDiagnosticActivityLogMessage *diagnosticItem; // @synthesize diagnosticItem=_diagnosticItem;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDiagnosticFixItItem:(id)arg1;
- (id)init;
- (id)initWithFixItString:(id)arg1 replacementLocation:(id)arg2;

@end

@interface IDESourceControlPatchManager : NSObject
{
    NSCache *_temporaryDirectoriesMap;
    NSMutableDictionary *_recentPatches;
    NSOperationQueue *_queue;
}

+ (id)sharedPatchManager;
- (void).cxx_destruct;
- (id)_managerDirectory;
- (id)uniqueTemporaryDirectory;
- (BOOL)_revertItem:(id)arg1 fromPatch:(id)arg2 atLocation:(id)arg3 withError:(id *)arg4;
- (id)baseRevisionForTree:(id)arg1 inPatch:(id)arg2;
- (id)importPatchAtURL:(id)arg1 toWorkspace:(id)arg2 withError:(id *)arg3;
- (void)modifiedFilePathsForRootFilePath:(id)arg1 patch:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)rootFilePathsForPatch:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)_applyPatchToFileFromNode:(id)arg1 toFilePath:(id)arg2;
- (id)_restoreUntouchedFileFromNode:(id)arg1 toFilePath:(id)arg2;
- (void)restoreAncestorItem:(id)arg1 fromPatch:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)restoreOriginalItem:(id)arg1 fromPatch:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)revertPatch:(id)arg1 inWorkspace:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)createPatchForItems:(id)arg1 inWorkspace:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)createPatchForWorkingTree:(id)arg1 inWorkspace:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)createPatchForDiffDescriptors:(id)arg1 comparisonDocumentLocation:(id)arg2 inWorkspace:(id)arg3 atFilePath:(id)arg4 withName:(id)arg5 withCompletionBlock:(CDUnknownBlockType)arg6;
- (id)_recentPatchPathStringsForWorkspace:(id)arg1;
- (void)_saveRecentPatches:(id)arg1 forWorkspace:(id)arg2;
- (void)removeRecentPatch:(id)arg1 fromWorkspace:(id)arg2;
- (void)addRecentPatch:(id)arg1 forWorkspace:(id)arg2;
- (void)createPatchForWorkspace:(id)arg1 withName:(id)arg2 message:(id)arg3 atFilePath:(id)arg4 withCompletionBlock:(CDUnknownBlockType)arg5;
- (void)createPatchForWorkspace:(id)arg1 withName:(id)arg2 message:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (id)listPatchesForWorkspace:(id)arg1;
- (id)init;

@end

@interface IDEIndexSymbolCollection : IDEIndexCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEActivityLogUnitTestSection : IDEActivityLogSection
{
    NSString *_testsPassedString;
    NSString *_durationString;
    NSString *_summaryString;
    NSString *_suiteName;
    NSString *_testName;
    NSString *_performanceTestOutputString;
    long long _testsPassedCount;
}

+ (Class)logRecorderClass;
+ (id)defaultLogSectionDomainType;
@property long long testsPassedCount; // @synthesize testsPassedCount=_testsPassedCount;
@property(copy) NSString *performanceTestOutputString; // @synthesize performanceTestOutputString=_performanceTestOutputString;
@property(copy) NSString *testName; // @synthesize testName=_testName;
@property(copy) NSString *suiteName; // @synthesize suiteName=_suiteName;
@property(copy) NSString *summaryString; // @synthesize summaryString=_summaryString;
@property(copy) NSString *durationString; // @synthesize durationString=_durationString;
@property(copy) NSString *testsPassedString; // @synthesize testsPassedString=_testsPassedString;
- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initUnitTestWithTitle:(id)arg1 location:(id)arg2;

@end

@interface IDERunDestination : NSObject <NSCopying>
{
    DVTObservingToken *_targetDeviceNameObservingToken;
    BOOL _isTargetDeviceEligible;
    DVTDevice *_targetDevice;
    NSString *_targetArchitecture;
    DVTSDK *_targetSDK;
    NSString *_targetIdentifier;
    NSError *_deviceIneligibilityError;
}

+ (id)fallbackActiveArchitectureForBuildArchitectures:(id)arg1;
+ (id)keyPathsForValuesAffectingFullDisplayName;
+ (id)keyPathsForValuesAffectingDisplayName;
@property(readonly) NSError *deviceIneligibilityError; // @synthesize deviceIneligibilityError=_deviceIneligibilityError;
@property(readonly) BOOL isTargetDeviceEligible; // @synthesize isTargetDeviceEligible=_isTargetDeviceEligible;
@property(readonly) NSString *targetIdentifier; // @synthesize targetIdentifier=_targetIdentifier;
@property(readonly) DVTSDK *targetSDK; // @synthesize targetSDK=_targetSDK;
@property(readonly, copy) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly) DVTDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)activeArchitectureForBuildArchitectures:(id)arg1;
- (void)didBecomeActiveRunDestinationForRunContext:(id)arg1;
- (id)runOperationForLaunchSession:(id)arg1 error:(id *)arg2;
- (id)runWorkerForLaunchSession:(id)arg1 error:(id *)arg2;
- (id)targetArchitectureForSorting;
- (id)targetSDKForSorting;
- (id)targetDeviceForSorting;
- (id)displayOrder;
- (BOOL)shouldPresentRunDestinationForScheme:(id)arg1 schemeTask:(int)arg2 schemeCommand:(id)arg3 executionEnvironment:(id)arg4 overridingTestingSpecifiers:(id)arg5 error:(id *)arg6;
- (BOOL)isValidRunDestinationForScheme:(id)arg1 schemeTask:(int)arg2 schemeCommand:(id)arg3 executionEnvironment:(id)arg4 overridingTestingSpecifiers:(id)arg5 error:(id *)arg6;
- (BOOL)_isValidRunDestinationForScheme:(id)arg1 schemeTask:(int)arg2 schemeCommand:(id)arg3 executionEnvironment:(id)arg4 overridingTestingSpecifiers:(id)arg5 forPresentation:(BOOL)arg6 error:(id *)arg7;
- (id)description;
@property(readonly, copy) NSString *fullDisplayName;
@property(readonly, copy) NSString *displayNameAdditions;
@property(readonly, copy) NSString *displayName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIneligibleTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3 deviceIneligibilityError:(id)arg4;
- (id)initWithTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;

@end

@interface IDEDistributionCopyInAppPurchaseContentStep : IDEDistributionProcessingStep
{
}

+ (id)processingStep;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;

@end

@interface IDEAlertEvent : NSObject
{
    NSString *_identifier;
    NSString *_title;
    NSString *_titleSortKey;
    NSString *_group;
    NSString *_groupSortKey;
    NSString *_iconName;
    NSMutableDictionary *_alerts;
    NSMutableDictionary *_observationTokensByAlert;
    BOOL _showInPreferences;
}

+ (id)alertEventsForGroup:(id)arg1;
+ (id)alertEventGroups;
+ (id)alertEvents;
+ (id)alertEventForIdentifier:(id)arg1;
+ (void)_cacheAlertEvents;
+ (void)_registerAlertEventExtension:(id)arg1;
@property BOOL showInPreferences; // @synthesize showInPreferences=_showInPreferences;
@property(retain) NSString *iconName; // @synthesize iconName=_iconName;
@property(readonly) NSDictionary *alerts; // @synthesize alerts=_alerts;
@property(retain, nonatomic) NSString *groupSortKey; // @synthesize groupSortKey=_groupSortKey;
@property(retain) NSString *group; // @synthesize group=_group;
@property(retain, nonatomic) NSString *titleSortKey; // @synthesize titleSortKey=_titleSortKey;
@property(retain) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)ide_setIdentifier:(id)arg1;
- (void)saveToUserDefaults;
- (id)propertyList;
- (id)propertyListForVersion:(int)arg1;
- (id)alertDefaults;
- (id)alertDefaultsKey;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)runInWorkspace:(id)arg1 context:(id)arg2;
- (void)runInWorkspace:(id)arg1 context:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)ide_initializeAlertContext:(id)arg1 forWorkspace:(id)arg2;
- (BOOL)hasEnabledAlerts;
- (void)removeAlert:(id)arg1;
- (void)addAlert:(id)arg1;
- (id)description;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 group:(id)arg3;
- (id)init;
- (void)ide_initializeAlertsFromDefaults:(id)arg1;

@end

@interface IDEVersionCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEShellXPCDebugSession : NSObject <IDEDebugSession>
{
    IDEShellXPCProcess *_process;
    BOOL hasExitCode;
    BOOL hasCrashed;
    BOOL profilingSupported;
    BOOL isDetached;
    BOOL _debuggerShouldAttachToTarget;
    BOOL _supportsMultiplePCAnnotation;
    BOOL _supportsPCAnnotationDragging;
    int state;
    long long exitCode;
    IDEShellXPCProcess *_targetProcess;
    DVTTextDocumentLocation *_instructionPointerLocation;
    DVTTextDocumentLocation *_instructionPointerLocationForDisassembly;
}

@property(readonly) BOOL supportsPCAnnotationDragging; // @synthesize supportsPCAnnotationDragging=_supportsPCAnnotationDragging;
@property(readonly) BOOL supportsMultiplePCAnnotation; // @synthesize supportsMultiplePCAnnotation=_supportsMultiplePCAnnotation;
@property(copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocationForDisassembly; // @synthesize instructionPointerLocationForDisassembly=_instructionPointerLocationForDisassembly;
@property(copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocation; // @synthesize instructionPointerLocation=_instructionPointerLocation;
@property(readonly) BOOL debuggerShouldAttachToTarget; // @synthesize debuggerShouldAttachToTarget=_debuggerShouldAttachToTarget;
@property(retain) IDEShellXPCProcess *targetProcess; // @synthesize targetProcess=_targetProcess;
@property(readonly) id <IDEDebugProcess> process; // @synthesize process=_process;
@property BOOL isDetached; // @synthesize isDetached;
@property(getter=isProfilingSupported) BOOL profilingSupported; // @synthesize profilingSupported;
@property BOOL hasCrashed; // @synthesize hasCrashed;
@property long long exitCode; // @synthesize exitCode;
@property BOOL hasExitCode; // @synthesize hasExitCode;
@property int state; // @synthesize state;
- (void).cxx_destruct;
- (void)requestLoadDylibAtPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (struct _NSRange)rangeOfExpressionForFullTextAtPrompt:(id)arg1;
- (BOOL)canContinueToLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2;
- (BOOL)consoleShouldTrackInputHistory;
- (void)evaluateExpression:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)evaluateExpression:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(id)arg4 resultHandler:(CDUnknownBlockType)arg5;
- (void)executeDebuggerCommand:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3;
- (BOOL)shouldAcceptFromDebugSession:(id)arg1 error:(id *)arg2;
- (BOOL)shouldRelinquishToDebugSession:(id)arg1 error:(id *)arg2;
- (void)requestFetchEvent;
- (void)requestDetach;
- (void)requestStop;
- (void)requestContinueToLocation:(id)arg1;
- (void)requestContinue;
- (void)requestPause;
- (void)requestStepOverSuspendOtherThreads;
- (void)requestStepInSuspendOtherThreads;
- (void)requestStepOverInstruction;
- (void)requestStepIntoInstruction;
- (void)requestStepOut;
- (void)requestStepOverLine;
- (void)requestStepIn;
- (BOOL)profilingSupported;
@property(readonly) int coalescedState;
- (id)initWithName:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEShellXPCProcess : NSObject <IDEDebugProcess>
{
    NSString *_name;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *loadedCodeModules;
- (id)contentDelegateUIExtensionIdentifier;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEGaugeDataProviderService : DVTDeviceService
{
    DVTMutableOrderedDictionary *_coordinatorsByPID;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_source> *_timer;
    _Bool _suspended;
}

+ (id)observableAttributes;
+ (id)capability;
- (void).cxx_destruct;
- (id)sampleAttributes:(id)arg1 forPIDs:(id)arg2;
- (void)stopSampling;
- (void)resumeSampling;
- (void)pauseSampling;
- (void)startSamplingAtTime:(double)arg1 withInterval:(double)arg2;
- (void)didStopSampling;
- (void)willResumeSampling;
- (void)didPauseSampling;
- (void)willStartSamplingAtTime:(double)arg1 withInterval:(double)arg2;
- (void)stopTimer;
- (void)resumeTimer;
- (void)pauseTimer;
- (void)startTimerAtTime:(double)arg1 withInterval:(double)arg2;
- (void)removeAssociatedQueryCoordinator:(id)arg1;
- (void)addAssociatedQueryCoordinator:(id)arg1;
- (void)performServiceQueueBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initForDevice:(id)arg1 extension:(id)arg2 capability:(id)arg3;

@end

@interface IDEActivityLogActionMessage : IDEActivityLogMessage
{
    NSString *_actionIdentifier;
}

@property(copy) NSString *actionIdentifier; // @synthesize actionIdentifier=_actionIdentifier;
- (void).cxx_destruct;
- (id)initWithAction:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;

@end

@interface IDEIndexSymbol : IDEIndexSymbolOccurrence <IDEAutoImportable>
{
    NSString *_name;
    NSString *_displayName;
    NSString *_qualifiedDisplayName;
    DVTSourceCodeSymbolKind *_symbolKind;
    DVTSourceCodeLanguage *_symbolLanguage;
    NSString *_resolution;
    long long _rawKind;
    long long _rawLanguage;
    BOOL _haveModelOccurrence;
    BOOL _isVirtual;
    NSString *_moduleName;
}

+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 moduleName:(id)arg4 resolution:(id)arg5 isVirtual:(BOOL)arg6 role:(long long)arg7 location:(id)arg8 forQueryProvider:(id)arg9;
+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 resolution:(id)arg4 isVirtual:(BOOL)arg5 role:(long long)arg6 location:(id)arg7 forQueryProvider:(id)arg8;
+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 resolution:(id)arg4 forQueryProvider:(id)arg5;
+ (id)newSymbolOfRawKind:(long long)arg1 rawLanguage:(long long)arg2 name:(id)arg3 resolution:(id)arg4 forQueryProvider:(id)arg5;
+ (id)newSymbolOfRawKind:(long long)arg1 kind:(id)arg2 rawLanguage:(long long)arg3 language:(id)arg4 name:(id)arg5 resolution:(id)arg6 forQueryProvider:(id)arg7;
+ (Class)classForSymbolKind:(id)arg1;
@property(copy, nonatomic) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(nonatomic) BOOL isVirtual; // @synthesize isVirtual=_isVirtual;
@property(readonly, nonatomic) long long rawLanguage; // @synthesize rawLanguage=_rawLanguage;
@property(readonly, nonatomic) DVTSourceCodeLanguage *symbolLanguage; // @synthesize symbolLanguage=_symbolLanguage;
@property(readonly, nonatomic) long long rawKind; // @synthesize rawKind=_rawKind;
@property(readonly, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(readonly, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isAutoImportable) BOOL autoImportable;
@property(readonly, nonatomic) DVTFilePath *filePathToHeaderToImport;
@property(readonly, nonatomic) NSString *completionString;
- (id)qualifiedDisplayName;
- (id)displayName;
- (id)references;
- (id)referencingFiles;
- (id)containerSymbol;
- (id)containerSymbols;
@property(readonly, nonatomic) IDEIndexCollection *definitions;
- (id)declarations;
- (id)occurrences;
- (id)correspondingSymbol;
- (id)location;
- (id)file;
- (long long)column;
- (long long)lineNumber;
- (long long)role;
- (long long)objectId;
- (id)occurrence;
@property(readonly, nonatomic) BOOL hasOccurrence;
- (void)setModelOccurrenceObjectId:(long long)arg1 role:(long long)arg2 lineNumber:(long long)arg3 column:(long long)arg4 file:(id)arg5;
- (void)setModelOccurrenceRole:(long long)arg1 location:(id)arg2;
- (void)setModelOccurrence:(id)arg1;
- (id)modelOccurrence;
@property(readonly, nonatomic, getter=isInProject) BOOL inProject;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)setRawKind:(long long)arg1 kind:(id)arg2 rawLanguage:(long long)arg3 language:(id)arg4 name:(id)arg5 resolution:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider;
@property(readonly) Class superclass;

@end

@interface IDEExecutionEnvironment : NSObject <DVTInvalidation>
{
    NSMutableArray *_executionTrackers;
    NSMutableArray *_executionTrackersForDisplay;
    NSMutableOrderedSet *_executedActionInvocationRecords;
    NSMutableArray *_queuedBuildOperationInfos;
    NSCountedSet *_activeBuildLogs;
    IDEBuildOperation *_currentBuildOperation;
    int _buildState;
    int _lastBuildResult;
    unsigned long long _disableSubmissionOfBuildOperationsCount;
    NSString *_disableBuildSubmissionsReason;
    NSMutableArray *_launchSessions;
    NSMapTable *_launchSessionRunnablePIDObservationTokens;
    IDELaunchSession *_currentLaunchSession;
    DVTMapTable *_productNamesToBuildableProductsMapping;
    IDELogStore *_logStore;
    IDEInMemoryLogStore *_interfaceBuilderLogStore;
    DVTMapTable *_ibLogsByBuildable;
    BOOL _handlingLaunchSessionStateChange;
    BOOL _settingLaunchSessionForTabChange;
    IDEExecutionTracker *_currentExecutionTracker;
    IDEWorkspaceArena *_workspaceArena;
    id <IDEClientTracking> _clientTracker;
    IDELaunchSession *_selectedLaunchSession;
    IDEBreakpointManager *_breakpointManager;
    DVTMapTable *_productNameStemsToBuildableProductsMapping;
    id <IDEPreBuildSavingDelegate> _preBuildSavingDelegate;
    NSOperationQueue *_operationQueue;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentLaunchSession;
+ (id)keyPathsForValuesAffectingLatestBuildLog;
+ (id)keyPathsForValuesAffectingLogRecords;
+ (BOOL)automaticallyNotifiesObserversForCurrentExecutionTracker;
+ (void)initialize;
@property(retain) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) id <IDEPreBuildSavingDelegate> preBuildSavingDelegate; // @synthesize preBuildSavingDelegate=_preBuildSavingDelegate;
@property(copy) DVTMapTable *productNameStemsToBuildableProductsMapping; // @synthesize productNameStemsToBuildableProductsMapping=_productNameStemsToBuildableProductsMapping;
@property(retain, nonatomic) IDEBreakpointManager *breakpointManager; // @synthesize breakpointManager=_breakpointManager;
@property(retain, nonatomic) IDELaunchSession *currentLaunchSession; // @synthesize currentLaunchSession=_currentLaunchSession;
@property(retain, nonatomic) IDELaunchSession *selectedLaunchSession; // @synthesize selectedLaunchSession=_selectedLaunchSession;
@property(retain) id <IDEClientTracking> clientTracker; // @synthesize clientTracker=_clientTracker;
@property(retain) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property(retain) IDEExecutionTracker *currentExecutionTracker; // @synthesize currentExecutionTracker=_currentExecutionTracker;
@property(copy) DVTMapTable *productNamesToBuildableProductsMapping; // @synthesize productNamesToBuildableProductsMapping=_productNamesToBuildableProductsMapping;
@property(readonly) int lastBuildResult; // @synthesize lastBuildResult=_lastBuildResult;
@property(readonly) int buildState; // @synthesize buildState=_buildState;
@property(readonly) NSArray *queuedBuildOperationInfos; // @synthesize queuedBuildOperationInfos=_queuedBuildOperationInfos;
@property(retain) IDEBuildOperation *currentBuildOperation; // @synthesize currentBuildOperation=_currentBuildOperation;
- (void).cxx_destruct;
- (id)queuedBuildOperationsDescription;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_addMissingErrorForFailedBuildToRecorder:(id)arg1 buildLog:(id)arg2;
- (void)_handleLaunchSession:(id)arg1 stateChange:(id)arg2;
- (void)_setStatusDisplayNameForLaunchSession:(id)arg1;
- (void)_setStatusDisplayNamesForExecutionTracker;
- (void)_noteLaunchSessionTargetOutputStateChanged:(id)arg1;
- (void)_addSyntheticLaunchSessionForDebuggingAdditionRun:(id)arg1;
- (void)_setSelectedLaunchSessionForTabChange:(id)arg1;
- (void)promoteXPCExecutionTrackerForDisplay:(id)arg1;
@property(readonly) NSArray *interfaceBuilderLogs;
@property(readonly) IDEActivityLogSection *latestBuildLog;
@property(readonly, copy) NSArray *logRecords;
- (void)_storeLogForOperation:(id)arg1;
- (id)executeOperation:(id)arg1 withCommandName:(id)arg2 invocationRecord:(id)arg3 error:(id *)arg4;
- (id)executeOperation:(id)arg1 withCommandName:(id)arg2 serviceTier:(int)arg3 invocationRecord:(id)arg4 error:(id *)arg5;
- (void)_startNextQueuedBuildOperationIfNecessary;
- (void)_startOperationForTracker:(id)arg1 commandName:(id)arg2 operationIncludesBuild:(BOOL)arg3;
@property(readonly) BOOL canSubmitBuildOperations;
- (void)enableSubmissionOfBuildOperations;
- (void)disableSubmissionOfBuildOperationsWithReason:(id)arg1;
@property(readonly) int currentBuildOperationServiceTier;
@property(readonly) BOOL hasUserInitiatedBuildOperations;
@property(readonly) BOOL hasQueuedBuildOperations;
@property(readonly) NSSet *queuedBuildOperations;
@property(readonly) NSArray *executionTrackersOfOperationsWithBuilds;
- (void)primitiveInvalidate;
- (id)initWithWorkspaceArena:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSSet *executedActionInvocationRecords; // @dynamic executedActionInvocationRecords;
@property(readonly, copy) NSArray *executionTrackers; // @dynamic executionTrackers;
@property(readonly, copy) NSArray *executionTrackersForDisplay; // @dynamic executionTrackersForDisplay;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSArray *launchSessions; // @dynamic launchSessions;
@property(readonly, copy) NSMutableOrderedSet *mutableExecutedActionInvocationRecords; // @dynamic mutableExecutedActionInvocationRecords;
@property(readonly, copy) NSMutableArray *mutableExecutionTrackers; // @dynamic mutableExecutionTrackers;
@property(readonly, copy) NSMutableArray *mutableExecutionTrackersForDisplay; // @dynamic mutableExecutionTrackersForDisplay;
@property(readonly, copy) NSMutableArray *mutableLaunchSessions; // @dynamic mutableLaunchSessions;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEQueuedOperationInfo : NSObject
{
    NSMutableArray *_buildOperations;
    BOOL _isRunning;
    NSString *_commandName;
    IDEExecutionOperationTracker *_tracker;
}

@property BOOL isRunning; // @synthesize isRunning=_isRunning;
@property(retain) IDEExecutionOperationTracker *tracker; // @synthesize tracker=_tracker;
@property(copy) NSString *commandName; // @synthesize commandName=_commandName;
- (void).cxx_destruct;
- (id)description;
- (void)removeBuildOperation:(id)arg1;
- (BOOL)containsBuildOperation:(id)arg1;
@property(readonly, copy) NSArray *buildOperations;
@property(readonly) DVTOperation *topLevelOperation;
- (id)initWithCommandName:(id)arg1 tracker:(id)arg2;
- (id)initWithCommandName:(id)arg1 tracker:(id)arg2 buildOperations:(id)arg3;

@end

@interface IDEBuildableSupportMixIn : NSObject <DVTInvalidation>
{
    id <IDEBuildable> _buildable;
    BOOL _hasRecursiveDependencyCycle;
}

+ (void)initialize;
- (void).cxx_destruct;
- (id)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (id)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(id)arg2;
- (BOOL)hasRecursiveDependencyCycle;
- (void)primitiveInvalidate;
- (id)initWithBuildable:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEAlert : NSObject
{
    NSSet *_cachedProperties;
    BOOL _enabled;
    NSString *_identifier;
    double _executionPriority;
}

+ (id)createAlertForAlertIdentifier:(id)arg1 propertyList:(id)arg2;
+ (id)createAlertForAlertIdentifier:(id)arg1;
+ (BOOL)canAlertWithIdentifierRunOnCurrentOS:(id)arg1;
+ (id)alertExtensionForAlertIdentifier:(id)arg1;
+ (id)alertIdentifiersForGroup:(id)arg1;
+ (id)alertGroups;
+ (id)alertIdentifiers;
+ (id)alertExtensions;
+ (void)_cacheAlerts;
+ (void)_registerAlert:(id)arg1;
+ (void)initialize;
@property double executionPriority; // @synthesize executionPriority=_executionPriority;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (int)alertPropertyListVersion;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (id)description;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)prepareToRunForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3;
- (id)valuesForProperty:(id)arg1;
- (BOOL)validatePropertyValues:(id)arg1;
- (void)enumeratePropertyPermutationsWithBlock:(CDUnknownBlockType)arg1;
- (void)_permuteAlert:(id)arg1 byVaryingProperty:(id)arg2 in:(id)arg3 values:(id)arg4 withBlock:(CDUnknownBlockType)arg5;
- (id)properties;
- (BOOL)canRunOnCurrentOS;
- (id)title;
- (id)group;

@end

@interface IDEArchiveProcessingOperation : DVTOperationGroup
{
    DVTFilePath *outputPath;
}

@property(retain) DVTFilePath *outputPath; // @synthesize outputPath;
- (void).cxx_destruct;

@end

@interface IDEArchivePackager : NSObject
{
    NSString *_identifier;
    NSString *_displayName;
}

+ (id)packagerForIdentifier:(id)arg1;
+ (id)packagerForPlatform:(id)arg1;
+ (id)allPackagers;
+ (id)_createPackagerFromExtension:(id)arg1;
+ (id)_identifiersToPackagersMapping;
+ (id)_platformsToPackagersMapping;
+ (id)_extensionLock;
+ (id)_extensionPoint;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 extraEntitlements:(id)arg4 includeSymbolCache:(BOOL)arg5 error:(id *)arg6;
- (id)signingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 extraEntitlements:(id)arg3 andError:(id *)arg4;
- (id)identitiesForBundleIdentifier:(id)arg1 andIdentityFilter:(id)arg2;
- (id)tokenForProvisioningProfileNamed:(id)arg1;
- (id)tokenForSigningIdentityNamed:(id)arg1;
- (id)refreshIdentity;
- (id)dontSignIdentity;
@property(readonly) _Bool supportsSymbolUploads;
@property(readonly) _Bool supportsInstallerSigning;
@property(readonly) _Bool supportsCodeSigning;

@end

@interface IDEArchiveIdentityFilter : NSObject
{
    NSString *_identifier;
}

+ (id)filterWithIdentifier:(id)arg1;
+ (id)filterWithExtension:(id)arg1;
+ (id)allFilters;
+ (id)_createFilterFromExtension:(id)arg1;
+ (id)_identifiersToFiltersMapping;
+ (id)_extensionLock;
+ (id)_extensionPoint;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly, copy) NSSet *allowedCertificateTypes;
- (CDUnknownBlockType)identityComparator;
- (_Bool)shouldIncludeIdentity:(id)arg1;
- (id)initWithExtension:(id)arg1;

@end

@interface IDEArchivePackagerEntitlementsMerger : NSObject
{
}

+ (id)genericallyDefinedProfileKeysToSkipWhenCopyingFromProfile;
+ (id)sharedMerger;
- (id)entitlementsByMergingProfileEntitlements:(id)arg1 appEntitlements:(id)arg2 bundleIdentifier:(id)arg3 warnings:(id)arg4 error:(id *)arg5;

@end

@interface IDEDistributionEmbedProfileStep : IDEDistributionProcessingStep
{
}

+ (id)processingStepWithDistributionItem:(id)arg1;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;

@end

@interface IDEIndexProductInfo : NSObject
{
    id <IDEIndexable> _indexable;
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_queue;
    NSDictionary *_buildSettings;
    NSString *_productNameKey;
    NSString *_productName;
    BOOL _unitTest;
    NSString *_targetIdentifier;
    NSString *_workspaceIdentifier;
    NSString *_productType;
}

@property(readonly, nonatomic, getter=isUnitTest) BOOL unitTest; // @synthesize unitTest=_unitTest;
@property(readonly, nonatomic) NSString *productType; // @synthesize productType=_productType;
@property(readonly, nonatomic) NSString *workspaceIdentifier; // @synthesize workspaceIdentifier=_workspaceIdentifier;
@property(readonly, nonatomic) NSString *targetIdentifier; // @synthesize targetIdentifier=_targetIdentifier;
- (void).cxx_destruct;
- (void)reportBuildSettings:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *productName;
- (void)productNameHint:(id)arg1;
- (void)unregisterTarget;
- (void)updateBuildSettings;
- (void)registerTarget;
- (id)userInfo;
- (void)dealloc;
- (id)initWithIndexable:(id)arg1 forIndex:(id)arg2;

@end

@interface IDELogStore : NSObject <DVTInvalidation>
{
    NSMutableArray *_logRecords;
}

+ (id)onDiskOrInMemoryLogStoreInWorkspaceArena:(id)arg1 prefix:(id)arg2;
+ (void)initialize;
- (void).cxx_destruct;
- (id)testableSummariesPlistFilePathForActivityLogSection:(id)arg1;
- (id)logRecordWithURL:(id)arg1;
- (id)addLog:(id)arg1 entityIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;
@property BOOL preserveOldLogs; // @dynamic preserveOldLogs;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEActivityLogRecord : NSObject
{
    IDEEntityIdentifier *_entityIdentifier;
}

+ (id)cacheLog:(id)arg1;
+ (void)uncacheLogRecord:(id)arg1;
+ (void)cacheLogRecord:(id)arg1;
+ (id)cachedLogRecordWithURL:(id)arg1;
@property(readonly) IDEEntityIdentifier *entityIdentifier; // @synthesize entityIdentifier=_entityIdentifier;
- (void).cxx_destruct;
- (id)testableSummariesForFilePath:(id)arg1 runDestinationRecord:(id *)arg2 error:(id *)arg3;
- (id)testableSummariesPlistFilePath;
- (id)initWithEntityIdentifier:(id)arg1;
- (long long)compareUsingTimeStartedRecording:(id)arg1;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly) BOOL isRemoved;
@property(readonly) BOOL isRecording;
@property(readonly) NSString *highLevelStatus;
@property(readonly) NSString *signature;
@property(readonly) DVTFileDataType *documentType;
@property(readonly, nonatomic) double timeStoppedRecording;
@property(readonly) double timeStartedRecording;
@property(readonly) NSString *title;
@property(readonly) IDETypeIdentifier *domainType;
@property(readonly) NSString *uniqueIdentifier;
@property(readonly) NSURL *logURL;

@end

@interface _IDEFolderRootGroup : IDEGroup
{
}

- (BOOL)subitemsAreEditable;

@end

@interface IDEFolder : IDEContainer
{
    DVTDispatchLock *_generationLock;
    int _superclassActivity;
    unsigned long long _updateOperationGeneration;
    BOOL _didSetSuperclassActivity;
    unsigned long long _readingCount;
}

+ (BOOL)supportsMultipleInstancesPerFilePath;
+ (BOOL)_observeContainerDataFilePathsForChanges;
+ (BOOL)_THREAD_shouldAddFileWithName:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (void)initialize;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_filePathDidChange:(id)arg1;
- (void)_decrementReadingCount;
- (void)_incrementReadingCount;
@property(readonly, nonatomic) BOOL isReading;
- (void)setActivity:(int)arg1;
- (id)_THREAD_fileNamesAtFilePath:(id)arg1;
- (void)_updateSubitemsWithFileNames:(id)arg1;
- (id)_itemBaseFilePathForFilePath:(id)arg1;
- (id)createRootGroup;

@end

@interface IDETypeIdentifier : NSObject
{
    NSString *_stringRepresentation;
    NSArray *_subTypes;
    IDETypeIdentifier *_parentType;
}

+ (id)typeIdentifierForStringRepresentation:(id)arg1;
+ (id)registerTypeIdentifierWithStringRepresentation:(id)arg1 basedOn:(id)arg2;
+ (id)_registerTypeIdentifierWithStringRepresentation:(id)arg1 basedOn:(id)arg2;
+ (id)_rootType;
+ (void)_registerBasicTypeIdentifiers;
@property(retain) IDETypeIdentifier *parentType; // @synthesize parentType=_parentType;
@property(retain) NSArray *subTypes; // @synthesize subTypes=_subTypes;
@property(copy) NSString *stringRepresentation; // @synthesize stringRepresentation=_stringRepresentation;
- (void).cxx_destruct;
- (id)typeIdentifierLineage;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isKindOfType:(id)arg1;
- (void)addSubType:(id)arg1;
- (id)description;
- (id)initWithStringRepresentation:(id)arg1;

@end

@interface IDEDataProvider : NSObject
{
}

+ (id)sharedDataProvider;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (id)supportedAttributes;

@end

@interface IDECodeModule : NSObject
{
    BOOL _isInBuiltProductDirectories;
    int _debugSymbolsLoadState;
    DVTFilePath *_filePath;
    NSString *_name;
    NSString *_frameworkNameIncludingExtension;
    NSString *_identifier;
    unsigned long long _address;
    NSString *_displayAddress;
    NSString *_path;
}

+ (id)frameworkNameIncludingExtensionFromPath:(id)arg1;
@property int debugSymbolsLoadState; // @synthesize debugSymbolsLoadState=_debugSymbolsLoadState;
@property(nonatomic) BOOL isInBuiltProductDirectories; // @synthesize isInBuiltProductDirectories=_isInBuiltProductDirectories;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
@property(readonly, nonatomic) NSString *displayAddress; // @synthesize displayAddress=_displayAddress;
@property unsigned long long address; // @synthesize address=_address;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy) NSString *frameworkNameIncludingExtension; // @synthesize frameworkNameIncludingExtension=_frameworkNameIncludingExtension;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
@property(retain) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIdentifier:(id)arg1 pathString:(id)arg2;

@end

@interface IDEAnalyzeCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;

@end

@interface IDEDeviceInstallWorkspaceMonitor : NSObject <DVTInvalidation>
{
    NSString *_appName;
    IDELogStore *_logStore;
    IDEActivityLogSectionRecorder *_logRecorder;
    IDEActivityLogSectionRecorder *_logSectionRecorder;
    NSString *_resultError;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (void)initialize;
@property(retain) NSString *resultError; // @synthesize resultError=_resultError;
@property(retain) IDEActivityLogSectionRecorder *logSectionRecorder; // @synthesize logSectionRecorder=_logSectionRecorder;
@property(retain) IDEActivityLogSectionRecorder *logRecorder; // @synthesize logRecorder=_logRecorder;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(retain) NSString *appName; // @synthesize appName=_appName;
- (void).cxx_destruct;
- (void)setResultErrorString:(id)arg1;
- (void)addOperationToActivityLog:(id)arg1 details:(id)arg2;
- (void)stopActivityLog;
- (void)startActivityLogForAppNamed:(id)arg1 deviceNamed:(id)arg2;
- (void)loadDeviceInstallLogsForWorkspace:(id)arg1;
@property(readonly) NSArray *logRecords;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEGaugeDataQueryCoordinator : NSObject
{
    DVTDevice *_device;
    NSNumber *_pid;
    NSMutableOrderedSet *_queries;
    NSMutableOrderedSet *_services;
    NSCountedSet *_attributes;
}

+ (id)sharedQueryCoordinatorWithPID:(id)arg1 onDevice:(id)arg2;
@property(retain, nonatomic) NSCountedSet *attributes; // @synthesize attributes=_attributes;
@property(retain, nonatomic) NSMutableOrderedSet *services; // @synthesize services=_services;
@property(retain, nonatomic) NSMutableOrderedSet *queries; // @synthesize queries=_queries;
@property(retain) NSNumber *pid; // @synthesize pid=_pid;
@property(retain) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)handleResultDict:(id)arg1;
- (void)query:(id)arg1 didAddObservedAttributes:(id)arg2 andRemoveObservedAttributes:(id)arg3;
- (void)removeQuery:(id)arg1;
- (void)addQuery:(id)arg1;
- (void)noteAttributesDidChange;
- (id)initForProcessWithPID:(id)arg1 onDevice:(id)arg2;

@end

@interface IDEIndexUniqueStringMap : NSObject
{
    NSMapTable *_mapTable;
}

- (void).cxx_destruct;
- (id)stringWithString:(id)arg1;
- (id)stringWithUTF8String:(const char *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IDEConsoleAdaptor : NSObject
{
    NSString *_type;
    NSObject<OS_dispatch_queue> *_writeSerialQueue;
    NSTimer *_endOfStandardOutputReadTimer;
    NSTimer *_endOfStandardErrorReadTimer;
    BOOL _finishedReceivingData;
    BOOL _ignoreFutureOutput;
    NSFileHandle *_standardInput;
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    NSMutableData *_currentOutputOverflow;
    NSMutableData *_currentErrorOverflow;
    NSTimer *_targetOutputOverflowTimer;
    id <IDEConsoleAdaptorDelegateProtocol> _delegate;
    unsigned long long _currNumStoredChars;
    struct __CFDictionary *_completeContent;
    struct __CFArray *_completeContentSequences;
    struct __CFArray *_standardInputSequences;
    struct __CFArray *_standardOutputSequences;
    struct __CFArray *_standardErrorSequences;
    NSMutableArray *_fileReadTokenArray;
}

+ (id)standardErrorItemsForAdaptors:(id)arg1;
+ (id)standardOutputItemsForAdaptors:(id)arg1;
+ (id)standardInputItemsForAdaptors:(id)arg1;
+ (id)allConsoleItemsForAdaptors:(id)arg1;
+ (id)_itemsForAdaptors:(id)arg1 sequencesSelector:(SEL)arg2;
+ (unsigned long long)_nextContentSequence;
+ (void)initialize;
@property(readonly) struct __CFArray *standardErrorSequences; // @synthesize standardErrorSequences=_standardErrorSequences;
@property(readonly) struct __CFArray *standardOutputSequences; // @synthesize standardOutputSequences=_standardOutputSequences;
@property(readonly) struct __CFArray *standardInputSequences; // @synthesize standardInputSequences=_standardInputSequences;
@property(readonly) struct __CFArray *completeContentSequences; // @synthesize completeContentSequences=_completeContentSequences;
@property(readonly) struct __CFDictionary *completeContent; // @synthesize completeContent=_completeContent;
@property(retain) id <IDEConsoleAdaptorDelegateProtocol> delegate; // @synthesize delegate=_delegate;
@property BOOL ignoreFutureOutput; // @synthesize ignoreFutureOutput=_ignoreFutureOutput;
@property BOOL finishedReceivingData; // @synthesize finishedReceivingData=_finishedReceivingData;
@property(readonly) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)standardErrorItems;
- (id)standardOutputItems;
- (id)standardInputItems;
- (id)allConsoleItems;
- (id)_itemsForSequences:(struct __CFArray *)arg1;
- (void)_setStandardError:(id)arg1;
- (void)_setStandardOutput:(id)arg1;
- (void)_addObserverToReadCompletion:(id)arg1 selector:(SEL)arg2;
- (void)_getError:(id)arg1;
- (void)_getOutput:(id)arg1;
- (void)_timerFiredToCheckEndOfRead:(id)arg1;
- (void)_fileHandleCompletedRead:(id)arg1;
- (id)_getData:(id)arg1 overflowBuffer:(id *)arg2;
- (void)_timerFiredForTargetOutputOverflow:(id)arg1;
- (void)_setStandardInput:(id)arg1;
- (void)outputForStandardError:(id)arg1;
- (void)outputForStandardOutput:(id)arg1;
- (void)outputForStandardOutput:(id)arg1 isPrompt:(BOOL)arg2 isOutputRequestedByUser:(BOOL)arg3;
- (void)_postOnMainThreadForNotification:(id)arg1 consoleItem:(id)arg2;
- (void)inputForStandardInput:(id)arg1;
- (void)inputFromConsole:(id)arg1 echo:(BOOL)arg2;
- (void)makeExpired;
- (void)_makeExpired;
- (void)_addToCompleteContent:(id)arg1 andSupportingSequences:(struct __CFArray *)arg2;
- (BOOL)_removeSequence:(unsigned long long)arg1 fromSupportingSequences:(struct __CFArray *)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithType:(id)arg1 standardInput:(id)arg2 standardOutput:(id)arg3 standardError:(id)arg4;

@end

@interface IDEIndexSymbolWithDefiningOccurrenceCollection : IDEIndexSymbolWithOccurrenceCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDERefactoringBuildSettings : NSObject
{
    int _status;
    NSDictionary *_headerMappings;
}

+ (id)plistFileSettings;
+ (id)dataModelFileSettings;
+ (id)nibFileSettings;
+ (id)fileInNoIndexables;
+ (id)noBuildSettingsFound;
@property(readonly) NSDictionary *headerMappings; // @synthesize headerMappings=_headerMappings;
@property int status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)pathForFileName:(id)arg1 includedByFiles:(id)arg2 usingQuotes:(BOOL)arg3;
@property(readonly) BOOL alwaysSearchUserPaths;
@property(readonly) NSNumber *arcMode;
@property(readonly) NSString *languageDialect;
@property(readonly) NSArray *undefinedMacroNames;
@property(readonly) NSArray *predefinedMacroNamesAndDefs;
@property(readonly) NSArray *userIncludePaths;
@property(readonly) NSArray *systemIncludePaths;
@property(readonly) NSArray *frameworkSearchPaths;
@property(readonly) NSSet *plistFilePaths;
@property(readonly) NSArray *preincludeFiles;
- (id)init;

@end

@interface IDEIndexFileCollection : IDEIndexCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDETestBlueprintHostSettings : NSObject
{
    BOOL _hasBundleLoader;
    NSString *_hostBlueprintIdentifier;
}

@property(readonly) BOOL hasBundleLoader; // @synthesize hasBundleLoader=_hasBundleLoader;
@property(readonly) NSString *hostBlueprintIdentifier; // @synthesize hostBlueprintIdentifier=_hostBlueprintIdentifier;
- (void).cxx_destruct;
- (id)initWithHostBlueprintIdentifier:(id)arg1 hasBundleLoader:(BOOL)arg2;

@end

@interface IDESourceControlTaskOperation : IDESourceControlOperation
{
    DVTTask *_task;
    DVTTask *_pipeTask;
    NSString *_launchPath;
    NSString *_currentDirectoryPath;
    NSArray *_arguments;
    NSMutableData *_data;
    NSMutableData *_errorData;
    DVTPerformanceMetric *_metric;
    BOOL _readyToParseData;
    CDUnknownBlockType _standardOutputFeedbackBlock;
    CDUnknownBlockType _standardErrorFeedbackBlock;
}

+ (id)_authenticationAgentExecutablePath;
+ (id)sourceControlTaskOperationLogAspect;
@property(copy) CDUnknownBlockType standardErrorFeedbackBlock; // @synthesize standardErrorFeedbackBlock=_standardErrorFeedbackBlock;
@property(copy) CDUnknownBlockType standardOutputFeedbackBlock; // @synthesize standardOutputFeedbackBlock=_standardOutputFeedbackBlock;
@property BOOL readyToParseData; // @synthesize readyToParseData=_readyToParseData;
@property(retain) NSMutableData *errorData; // @synthesize errorData=_errorData;
@property(retain) NSMutableData *data; // @synthesize data=_data;
@property(retain) NSArray *arguments; // @synthesize arguments=_arguments;
@property(copy) NSString *currentDirectoryPath; // @synthesize currentDirectoryPath=_currentDirectoryPath;
@property(copy) NSString *launchPath; // @synthesize launchPath=_launchPath;
@property(retain) DVTTask *pipeTask; // @synthesize pipeTask=_pipeTask;
@property(readonly) DVTTask *task; // @synthesize task=_task;
- (void).cxx_destruct;
- (void)parseDataOrGenerateErrorForTask:(id)arg1 operation:(id)arg2;
- (void)setWaitToParseData:(BOOL)arg1;
- (void)_real_main;
- (void)main;
- (id)readDataFromFileHandle:(id)arg1 intoBuffer:(id)arg2 runloopMode:(id)arg3 outstandingOperationCounter:(long long *)arg4 dataParsingBlock:(CDUnknownBlockType)arg5;
- (id)pipeToOperation;
- (id)rawErrorOutput;
- (id)rawStandardOutput;
- (id)rawInput;
- (id)errorFromErrorMessage:(id)arg1;
- (void)parseData;

@end

@interface IDEIssueTypeGroup : NSObject
{
    IDEIssueProvider *_issueProvider;
    id _issueTypeIdentifier;
    NSMutableArray *_issues;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    int _issueType;
}

@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
@property(readonly) id issueTypeIdentifier; // @synthesize issueTypeIdentifier=_issueTypeIdentifier;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void).cxx_destruct;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_updateIssueType;
- (id)_initWithIssueProvider:(id)arg1 issueTypeIdentifier:(id)arg2;
- (id)init;

@end

@interface IDEBuildOperation : DVTOperation <IDEExecutingOperationTrackable>
{
    IDEBuildOperationDescription *_buildOperationDescription;
    int _purpose;
    int _buildCommand;
    NSArray *_buildables;
    IDEBuildParameters *_buildParameters;
    DVTMapTable *_buildParametersForBuildable;
    BOOL _parallelizeBuildables;
    BOOL _buildImplicitDependencies;
    BOOL _restorePersistedBuildResults;
    BOOL _dontActuallyRunCommands;
    unsigned long long _clangSessionTimestamp;
    int _state;
    int _result;
    IDEActivityLogSection *_buildLog;
    float _percentComplete;
    IDEBuildOperationStatus *_buildStatus;
    BOOL _isFinished;
    DVTDispatchLock *_operationLock;
    NSOperationQueue *_builderQueue;
    IDEBuildOperationQueueSet *_buildTaskQueueSet;
    DVTMapTable *_buildablesToBuilders;
    DVTMapTable *_buildableOperationManagers;
    unsigned long long _buildersBuilt;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    NSMutableSet *_generatedFileInfo;
    NSMutableDictionary *_copiedFilePathsMap;
    NSMutableArray *_buildSetupErrorStrings;
    NSMutableArray *_buildSetupWarningStrings;
    NSMutableArray *_buildSetupNoticeStrings;
    IDEExecutionOperationTracker *_mainExecutionTracker;
    IDEExecutionEnvironment *_executionEnvironment;
    IDEEntityIdentifier *_schemeIdentifier;
    IDESchemeActionResult *_schemeActionResult;
    NSDate *_startTime;
    NSDate *_stopTime;
    IDEBuildStatisticsSection *_buildStatisticsSection;
    DVTDynamicLogController *_builderTimingDataLogController;
}

+ (CDUnknownBlockType)buildStatisticsEmissionSummaryBlock;
+ (id)buildParametersForPurpose:(int)arg1 configurationName:(id)arg2 workspaceArena:(id)arg3 overridingProperties:(id)arg4 activeRunDestination:(id)arg5 activeArchitecture:(id)arg6;
+ (id)buildParametersForPurpose:(int)arg1 schemeCommand:(id)arg2 configurationName:(id)arg3 workspaceArena:(id)arg4 overridingProperties:(id)arg5 activeRunDestination:(id)arg6 activeArchitecture:(id)arg7;
+ (long long)defaultQualityOfServiceClass;
+ (void)setDefaultBuildStatisticsSectionParent:(id)arg1;
+ (void)initialize;
@property(retain) DVTDynamicLogController *builderTimingDataLogController; // @synthesize builderTimingDataLogController=_builderTimingDataLogController;
@property unsigned long long buildersBuilt; // @synthesize buildersBuilt=_buildersBuilt;
@property(readonly) DVTMapTable *buildablesToBuilders; // @synthesize buildablesToBuilders=_buildablesToBuilders;
@property(readonly) IDEBuildOperationQueueSet *buildTaskQueueSet; // @synthesize buildTaskQueueSet=_buildTaskQueueSet;
@property(readonly) NSOperationQueue *builderQueue; // @synthesize builderQueue=_builderQueue;
@property(readonly) BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property(retain) IDEBuildStatisticsSection *buildStatisticsSection; // @synthesize buildStatisticsSection=_buildStatisticsSection;
@property(copy) NSDate *stopTime; // @synthesize stopTime=_stopTime;
@property(copy) NSDate *startTime; // @synthesize startTime=_startTime;
@property(retain) IDEBuildOperationStatus *buildStatus; // @synthesize buildStatus=_buildStatus;
@property float percentComplete; // @synthesize percentComplete=_percentComplete;
@property(readonly) int result; // @synthesize result=_result;
@property(readonly) int state; // @synthesize state=_state;
@property(retain, nonatomic) IDESchemeActionResult *schemeActionResult; // @synthesize schemeActionResult=_schemeActionResult;
@property(readonly, copy, nonatomic) IDEEntityIdentifier *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
@property(readonly) IDEActivityLogSection *buildLog; // @synthesize buildLog=_buildLog;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) BOOL dontActuallyRunCommands; // @synthesize dontActuallyRunCommands=_dontActuallyRunCommands;
@property(readonly) BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
@property(readonly) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(readonly) NSArray *buildables; // @synthesize buildables=_buildables;
@property(readonly) int buildCommand; // @synthesize buildCommand=_buildCommand;
@property(readonly) IDEBuildOperationDescription *buildOperationDescription; // @synthesize buildOperationDescription=_buildOperationDescription;
@property(readonly) int purpose; // @synthesize purpose=_purpose;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)registerTracker:(id)arg1;
- (void)_postDistributedProgressNotification;
- (void)stopWithResultCode:(int)arg1;
- (void)lastBuilderDidFinish;
- (void)_cancelAllBuilders;
- (void)cancel;
- (void)start;
- (void)addOperationsForBuildables;
- (id)_addOperationForBuildableIfNeeded:(id)arg1;
- (id)_addOperationForBuildableIfNeeded:(id)arg1 recursionDetectionArray:(id)arg2;
- (void)setupCallbackBlocksOnNewBuilder:(id)arg1;
- (void)_updateBuildStatusWithStateDescription:(id)arg1 fileProgressString:(id)arg2;
- (void)_takeMemorySnapshotsWithLog:(id)arg1;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isConcurrent;
- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)arg1;
- (id)copiedFilePathsMap;
- (void)addCopiedFilePathsFromDictionary:(id)arg1;
- (void)addBuildSetupNoticeString:(id)arg1;
- (void)addBuildSetupWarningString:(id)arg1;
- (void)addBuildSetupErrorString:(id)arg1;
- (void)addGeneratedFileInfo:(id)arg1;
@property(readonly) double duration;
@property(retain) NSString *localizedStateDescription;
@property(readonly, copy) NSString *activeArchitecture;
@property(readonly) IDERunDestination *activeRunDestination;
@property(readonly) IDEOverridingBuildProperties *overridingProperties;
@property(readonly) NSString *configurationName;
- (id)_buildParametersForBuildable:(id)arg1;
- (void)setBuildParameters:(id)arg1 forBuildable:(id)arg2;
- (id)harvestedInfoForBuildable:(id)arg1;
- (void)dealloc;
- (id)initWithBuildOperationDescription:(id)arg1 purpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(id)arg4 configurationName:(id)arg5 buildables:(id)arg6 buildLog:(id)arg7 executionEnvironment:(id)arg8 overridingProperties:(id)arg9 activeRunDestination:(id)arg10 activeArchitecture:(id)arg11 parallelizeBuildables:(BOOL)arg12 dontActuallyRunCommands:(BOOL)arg13 buildImplicitDependencies:(BOOL)arg14 restorePersistedBuildResults:(BOOL)arg15 schemeIdentifier:(id)arg16 schemeActionRecord:(id)arg17;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildOperationGroup : DVTOperationGroup
{
    IDEBuildOperation *_buildOperation;
}

+ (id)operationGroupWithSuboperations:(id)arg1;
+ (id)operationGroupWithBuildOperation:(id)arg1 otherOperations:(id)arg2;
@property(readonly) IDEBuildOperation *buildOperation; // @synthesize buildOperation=_buildOperation;
- (void).cxx_destruct;

@end

@interface IDEBuildOperationStatus : NSObject
{
    NSString *_stateDescription;
    NSString *_fileProgressString;
}

@property(copy) NSString *fileProgressString; // @synthesize fileProgressString=_fileProgressString;
@property(copy) NSString *stateDescription; // @synthesize stateDescription=_stateDescription;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStateDescription:(id)arg1;

@end

@interface IDEDistributionMethodAppStore : IDEDistributionMethod
{
}

- (BOOL)isAppStoreBound;
- (id)orderedDistributionStepClassNamesForTask:(int)arg1;
- (id)orderedDistributionStepClassNames;
- (id)exportStepName;
- (id)availableICloudEnvironmentsOverride;
- (id)taskNoun;
- (id)taskVerb;

@end

@interface IDESourceControlCredentialsValidator : NSObject <DVTInvalidation>
{
    NSURLAuthenticationChallenge *_challenge;
    NSURLConnection *_connection;
    NSMutableData *m_receivedData;
    BOOL _testSSLCertificate;
    BOOL _wasOriginallyAuthenticationRequest;
    IDESourceControlRequest *_currentRequest;
    BOOL _canShowCertificatePanel;
    int _requestType;
    IDESourceControlRepository *_repository;
    DVTOperation *_completionOperation;
    NSError *_currentError;
}

+ (void)initialize;
@property(retain) NSError *currentError; // @synthesize currentError=_currentError;
@property int requestType; // @synthesize requestType=_requestType;
@property(retain) DVTOperation *completionOperation; // @synthesize completionOperation=_completionOperation;
@property(readonly) __weak IDESourceControlRepository *repository; // @synthesize repository=_repository;
@property BOOL canShowCertificatePanel; // @synthesize canShowCertificatePanel=_canShowCertificatePanel;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)cancel;
- (void)callCompletionBlockWithError:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)writeAuthenticationHintsForChallenge:(id)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)showCertificatePanelForChallenge:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)performTestOfType:(int)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)validateCredentialsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithRepository:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexGenericQueryProvider : NSObject <IDEIndexQueryProvider>
{
    IDEIndexDatabase *_db;
    NSDictionary *_settings;
    DVTFilePath *_mainFilePath;
    NSString *_target;
    NSDictionary *_coveredFiles;
    double _lastAccess;
}

+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(retain, nonatomic) NSDictionary *coveredFiles; // @synthesize coveredFiles=_coveredFiles;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(copy, nonatomic) DVTFilePath *mainFilePath; // @synthesize mainFilePath=_mainFilePath;
@property double lastAccess; // @synthesize lastAccess=_lastAccess;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_db;
- (void).cxx_destruct;
- (id)definitionsForSymbolWithResolutionOffset:(long long)arg1;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2 forIndex:(id)arg3;
- (id)allAutoImportCompletionItemsMatchingKind:(id)arg1 forIndex:(id)arg2;
- (id)completionStringForSymbol:(id)arg1;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)calleesForSymbolOccurrence:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)containingSymbolForOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)getterForProperty:(id)arg1;
- (id)setterForProperty:(id)arg1;
- (id)callsForCallable:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)typeOfArgument:(unsigned long long)arg1 forCallable:(id)arg2;
- (unsigned long long)numArgumentsForCallable:(id)arg1;
- (id)returnTypeForCallable:(id)arg1;
- (id)propertyForCallable:(id)arg1;
- (id)overridingSymbolsForCallable:(id)arg1;
- (id)overriddenSymbolsForCallable:(id)arg1;
- (id)referencesForSymbol:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)classesWithReferencesToSymbols:(id)arg1 forIndex:(id)arg2;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2 forIndex:(id)arg3;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3 forIndex:(id)arg4;
- (id)testMethodsForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSubClassesForClasses:(id)arg1 forIndex:(id)arg2;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forIndex:(id)arg7;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3 forIndex:(id)arg4;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
@property(readonly, nonatomic) BOOL hasAST; // @dynamic hasAST;
@property(readonly, nonatomic) NSString *pchFile; // @dynamic pchFile;
@property(readonly, nonatomic) NSString *mainFile;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildFolder : NSObject
{
    NSString *_path;
    IDEBuilder *_currentBuilder;
}

+ (id)sharedBuildFolderWithPath:(id)arg1 error:(id *)arg2;
@property(retain) IDEBuilder *currentBuilder; // @synthesize currentBuilder=_currentBuilder;
@property(readonly) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)description;
- (void)unregisterCurrentBuilder:(id)arg1;
- (void)registerCurrentBuilder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEUnitTestsActivityLogBuilder : NSObject <IDEUnitTestsObserver>
{
    NSMutableArray *_subSectionRecorders;
    BOOL _aBundleDidNotFinishSuccessfully;
    BOOL _testsFinishedSuccessfully;
    IDEActivityLogSection *_activityLogSection;
    IDETestManager *_testManager;
}

@property BOOL testsFinishedSuccessfully; // @synthesize testsFinishedSuccessfully=_testsFinishedSuccessfully;
@property(retain, nonatomic) IDETestManager *testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
- (void).cxx_destruct;
- (id)identifierForTestClass:(id)arg1 method:(id)arg2;
- (void)testOperationGroupDidFinish;
- (void)testOperation:(id)arg1 willFinishWithSuccess:(BOOL)arg2 withError:(id)arg3;
- (void)_finishSubSectionRecorders:(id)arg1 error:(id)arg2;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidMeasurePerformanceMetricForTestClass:(id)arg1 method:(id)arg2 performanceMetric:(id)arg3 rawOutput:(id)arg4;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)testOperationDidStartExecution:(id)arg1;
- (void)_appendAndPropagateUpText:(id)arg1 startingWithRecorder:(id)arg2;
- (void)_popRecorderWithMessageForReason:(id)arg1 error:(id)arg2;
- (void)_popRecorder;
- (void)_pushRecorder:(id)arg1;
- (id)_currentSubSectionRecorder;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEFileBuildOperation : IDEBuildOperation
{
    DVTFilePath *_filePath;
}

@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (void)addOperationsForBuildables;
- (id)_buildableWhichIncludesFilePath:(id)arg1 startingWithBuildable:(id)arg2 recursionDetectionSet:(id)arg3;
- (id)initWithBuildOperationDescription:(id)arg1 purpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(id)arg4 configurationName:(id)arg5 buildables:(id)arg6 buildLog:(id)arg7 executionEnvironment:(id)arg8 overridingProperties:(id)arg9 activeRunDestination:(id)arg10 activeArchitecture:(id)arg11 parallelizeBuildables:(BOOL)arg12 dontActuallyRunCommands:(BOOL)arg13 buildImplicitDependencies:(BOOL)arg14 restorePersistedBuildResults:(BOOL)arg15;
- (id)initWithBuildOperationDescription:(id)arg1 purpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(id)arg4 configurationName:(id)arg5 buildables:(id)arg6 filePath:(id)arg7 buildLog:(id)arg8 executionEnvironment:(id)arg9 overridingProperties:(id)arg10 activeRunDestination:(id)arg11 activeArchitecture:(id)arg12 considerImplicitDependencies:(BOOL)arg13 restorePersistedBuildResults:(BOOL)arg14 schemeIdentifier:(id)arg15 schemeActionRecord:(id)arg16;

@end

@interface IDEDistributionProcessingStep : NSObject
{
    DVTExtension *_extension;
    _Bool _supportsDryRun;
    IDEDistributionItem *_distributionItem;
    NSArray *_inputs;
    NSArray *_outputs;
}

+ (id)processingStepWithExtension:(id)arg1;
+ (id)processingStepWithExtension:(id)arg1 andDistributionItem:(id)arg2;
@property(copy) NSArray *outputs; // @synthesize outputs=_outputs;
@property(copy) NSArray *inputs; // @synthesize inputs=_inputs;
@property(readonly) _Bool supportsDryRun; // @synthesize supportsDryRun=_supportsDryRun;
@property(readonly) IDEDistributionItem *distributionItem; // @synthesize distributionItem=_distributionItem;
- (void).cxx_destruct;
@property(readonly, copy) NSString *name;
- (_Bool)isAllowedOutput:(id)arg1;
- (_Bool)isRequiredInput:(id)arg1;
- (id)requiredInputs;
- (_Bool)isAllowedInput:(id)arg1;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)initWithExtension:(id)arg1 andDistributionItem:(id)arg2;

@end

@interface IDEOnDiskActivityLogRecord : IDEActivityLogRecord <DVTInvalidation>
{
    IDEOnDiskLogStore_Impl *_logStore;
    IDEActivityLogSection *_strongFullLog;
    IDEActivityLogSection *_weakFullLog;
    IDEActivityLogSection *_recorderLog;
    DVTObservingToken *_recorderLogObservingToken;
    NSString *_uniqueIdentifier;
    IDETypeIdentifier *_domainType;
    NSString *_title;
    double _timeStartedRecording;
    double _timeStoppedRecording;
    DVTFileDataType *_documentType;
    NSString *_signature;
    NSString *_highLevelStatus;
}

+ (id)keyPathsForValuesAffectingIsRecording;
+ (void)initialize;
@property(retain, nonatomic) IDEActivityLogSection *recorderLog; // @synthesize recorderLog=_recorderLog;
@property(nonatomic) double timeStoppedRecording; // @synthesize timeStoppedRecording=_timeStoppedRecording;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)highLevelStatus;
- (id)signature;
- (id)documentType;
- (double)timeStartedRecording;
- (id)title;
- (id)domainType;
- (id)uniqueIdentifier;
- (BOOL)isRecording;
- (void)_setRemovedState;
- (void)_makeWeak;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isRemoved;
- (void)primitiveInvalidate;
- (id)initWithUUID:(id)arg1 store:(id)arg2 cacheEntry:(id)arg3 updatedCache:(char *)arg4 error:(id *)arg5;
- (id)initWithLog:(id)arg1 entityIdentifier:(id)arg2 store:(id)arg3;
- (id)testableSummariesPlistFilePath;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEOnDiskLogStore_Impl : IDEOnDiskLogStore
{
    NSString *_rootDirectoryPath;
    NSMutableDictionary *_cache;
    NSMutableDictionary *_cachedLogs;
    NSOperationQueue *_asyncOperations;
    BOOL _preserveOldLogs;
}

+ (void)initialize;
- (BOOL)preserveOldLogs;
- (void).cxx_destruct;
- (id)description;
- (void)setPreserveOldLogs:(BOOL)arg1;
- (id)_pathForUniqueIdentifier:(id)arg1;
- (void)_removeAllButTheLatestLog;
- (void)_pruneLogsToLogStoreSizeLimit;
- (void)_removeLogRecord:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_moveToRootDirectoryAtPath:(id)arg1 errorBlock:(CDUnknownBlockType)arg2;
- (id)addLog:(id)arg1 entityIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_saveLog:(id)arg1 logRecord:(id)arg2 toPath:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (BOOL)_saveCacheWithError:(id *)arg1;
- (id)_cachePath;
- (id)testableSummariesPlistFilePathForActivityLogSection:(id)arg1;
- (id)rootDirectoryPath;
- (void)primitiveInvalidate;
- (id)initWithRootDirectoryAtPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEOnDiskLogStore : IDELogStore
{
}

+ (id)onDiskStoreInWorkspaceArena:(id)arg1 atSubPath:(id)arg2 error:(id *)arg3;
+ (id)onDiskStoreWithRootDirectoryAtPath:(id)arg1 error:(id *)arg2;
@property(readonly, copy) NSString *rootDirectoryPath;
- (void)primitiveInvalidate;

@end

@interface IDEContainerReadOnlyItem : NSObject <IDEReadOnlyItem>
{
    int _readOnlyStatus;
    IDEContainer *_container;
    DVTFilePath *_filePath;
}

@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void).cxx_destruct;
- (BOOL)makeWritableWithError:(id *)arg1;
- (void)updateReadOnlyStatus;
@property(readonly) NSURL *readOnlyItemURL;
@property(readonly, copy) NSString *description;
- (id)initWithFilePath:(id)arg1 container:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEContainerReadOnlyListeningItem : IDEContainerReadOnlyItem <DVTInvalidation>
{
}

+ (void)initialize;
- (void)parentFilePathDidChange;
- (void)filePathDidChange;
- (void)primitiveInvalidate;
- (id)initWithFilePath:(id)arg1 container:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESourceControlProject : NSObject
{
    NSMutableArray *_workingCopyConfigurations;
    unsigned long long _wccHash;
    BOOL _favorite;
    NSString *_name;
    NSString *_uniqueIdentifier;
    NSURL *_projectURL;
    NSString *_relativePathToProject;
    IDESourceControlWorkingCopyConfiguration *_projectWCC;
    unsigned long long _type;
    NSMutableArray *_configurationsInCurrentWorkspace;
    DVTCustomDataSpecifier *_customDataSpecifier;
    NSMutableDictionary *_originForConfigurationDictionary;
    NSMutableDictionary *_relativeInstallPathForConfigurationDictionary;
    NSMutableDictionary *_repositoryRootForConfigurationDictionary;
    NSMutableDictionary *_requiredConfigurationsDictionary;
}

@property(retain) NSMutableDictionary *requiredConfigurationsDictionary; // @synthesize requiredConfigurationsDictionary=_requiredConfigurationsDictionary;
@property(retain) NSMutableDictionary *repositoryRootForConfigurationDictionary; // @synthesize repositoryRootForConfigurationDictionary=_repositoryRootForConfigurationDictionary;
@property(retain) NSMutableDictionary *relativeInstallPathForConfigurationDictionary; // @synthesize relativeInstallPathForConfigurationDictionary=_relativeInstallPathForConfigurationDictionary;
@property(retain) NSMutableDictionary *originForConfigurationDictionary; // @synthesize originForConfigurationDictionary=_originForConfigurationDictionary;
@property(retain) DVTCustomDataSpecifier *customDataSpecifier; // @synthesize customDataSpecifier=_customDataSpecifier;
@property(getter=isFavorite) BOOL favorite; // @synthesize favorite=_favorite;
@property(retain) NSMutableArray *configurationsInCurrentWorkspace; // @synthesize configurationsInCurrentWorkspace=_configurationsInCurrentWorkspace;
@property unsigned long long type; // @synthesize type=_type;
@property(retain) IDESourceControlWorkingCopyConfiguration *projectWCC; // @synthesize projectWCC=_projectWCC;
@property(copy) NSString *relativePathToProject; // @synthesize relativePathToProject=_relativePathToProject;
@property(copy) NSURL *projectURL; // @synthesize projectURL=_projectURL;
@property(readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) NSString *displayURL;
- (void)getRepositoryForConfiguration:(id)arg1 sourceControlManager:(id)arg2;
- (id)missingConfigurationsForWorkspace:(id)arg1;
- (id)checkoutURLForConfiguration:(id)arg1;
- (void)setState:(unsigned long long)arg1 forWorkingTree:(id)arg2 withWorkspace:(id)arg3;
- (unsigned long long)stateForWorkingCopyConfiguration:(id)arg1;
- (void)setState:(unsigned long long)arg1 forWorkingCopyConfigurationStateDictionary:(id)arg2;
- (id)stateDictionaryForWorkingCopyConfiguration:(id)arg1;
- (unsigned long long)stateForWorkingTree:(id)arg1;
- (id)_workingCopyConfigurationForRepositoryOrigin:(id)arg1 withWorkingCopyConfigurations:(id)arg2;
- (id)workingCopyConfigurationForRepositoryOrigin:(id)arg1;
- (id)repositoryRootForConfiguration:(id)arg1;
- (void)setRelativeInstallPath:(id)arg1 forConfiguration:(id)arg2;
- (id)relativeInstallPathForConfiguration:(id)arg1;
- (void)setOrigin:(id)arg1 forConfiguration:(id)arg2;
- (id)originForConfiguration:(id)arg1;
- (void)removeWorkingCopyConfiguration:(id)arg1;
- (void)addWorkingCopyConfiguration:(id)arg1;
@property(retain) NSArray *workingCopyConfigurations; // @synthesize workingCopyConfigurations=_workingCopyConfigurations;
@property(readonly) NSSet *relativeWorkingCopyPaths;
- (id)bestMatchForConfiguration:(id)arg1 ofProject:(id)arg2 inOtherProject:(id)arg3;
- (void)mergeWithProject:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)writeToFilePath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (void)writeToBundleOfWorkspace:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)removeFromBundleOfWorkspace:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (BOOL)readFromBundleOfWorkspace:(id)arg1 error:(id *)arg2;
- (BOOL)readFromDictionary:(id)arg1 sourceControlManager:(id)arg2 error:(id *)arg3;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlManager:(id)arg2;
- (void)_setupProjectInfoForNewWorkingTree:(id)arg1 withWorkspace:(id)arg2;
- (void)_sortConfigurations;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

@end

@interface _IDELocalizedStringsAdaptorReadContext : IDELocalizationWorkContext <IDELocalizationWorkReadStrings>
{
    DVTFilePath *IDELocalizationWork_path;
    NSDictionary *IDELocalizationWork_strings;
    NSDictionary *IDELocalizationWork_comments;
    IDELocalizedStringsAdaptor *_adaptor;
    DVTLocale *_language;
}

@property(retain) DVTLocale *language; // @synthesize language=_language;
@property(retain) IDELocalizedStringsAdaptor *adaptor; // @synthesize adaptor=_adaptor;
@property(retain) NSDictionary *IDELocalizationWork_comments; // @synthesize IDELocalizationWork_comments;
@property(retain) NSDictionary *IDELocalizationWork_strings; // @synthesize IDELocalizationWork_strings;
@property(retain) DVTFilePath *IDELocalizationWork_path; // @synthesize IDELocalizationWork_path;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface _IDELocalizedStringsAdaptorWriteContext : IDELocalizationWorkContext <IDELocalizationWorkWriteStrings>
{
    BOOL IDELocalizationWork_createdNewSubitem;
    NSDictionary *IDELocalizationWork_strings;
    NSDictionary *IDELocalizationWork_comments;
    IDEContainer<IDELocalizedContainer> *IDELocalizationWork_container;
    IDEGroup<IDELocalizedGroup> *IDELocalizationWork_group;
    DVTLocale *IDELocalizationWork_language;
    DVTFilePath *IDELocalizationWork_path;
}

@property(retain) DVTFilePath *IDELocalizationWork_path; // @synthesize IDELocalizationWork_path;
@property BOOL IDELocalizationWork_createdNewSubitem; // @synthesize IDELocalizationWork_createdNewSubitem;
@property(retain) DVTLocale *IDELocalizationWork_language; // @synthesize IDELocalizationWork_language;
@property(retain) IDEGroup<IDELocalizedGroup> *IDELocalizationWork_group; // @synthesize IDELocalizationWork_group;
@property(retain) IDEContainer<IDELocalizedContainer> *IDELocalizationWork_container; // @synthesize IDELocalizationWork_container;
@property(retain) NSDictionary *IDELocalizationWork_comments; // @synthesize IDELocalizationWork_comments;
@property(retain) NSDictionary *IDELocalizationWork_strings; // @synthesize IDELocalizationWork_strings;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizedStringsAdaptor : IDELocalizedResourceAdaptor
{
    NSString *_tableName;
    NSDictionary *_baseStrings;
    NSDictionary *_baseComments;
    NSMutableDictionary *_stringsCache;
}

+ (id)writeWorkForContext:(id)arg1 langauge:(id)arg2;
+ (id)readWorkForContext:(id)arg1;
- (void).cxx_destruct;
- (id)target;
- (id)expectedSuperitem;
- (id)expectedDirectoryPath;
- (id)expectedFileName;
- (id)tableName;
- (id)commentsByKey;
- (void)setStringsByKey:(id)arg1 forLanguage:(id)arg2;
- (id)stringsByKeyForLanguage:(id)arg1;
- (void)updateBaseStrings:(id)arg1 updateBaseComments:(id)arg2;
- (id)initWithLocalizedContainer:(id)arg1 localizedGroup:(id)arg2 tableName:(id)arg3 baseStrings:(id)arg4 baseComments:(id)arg5;

@end

@interface IDESourceControlWorkspaceMonitor : NSObject <DVTInvalidation>
{
    IDESourceControlManager *_sourceControlManager;
    IDEWorkspace *_workspace;
    IDEContainerQuery *_query;
    NSMutableDictionary *_workspaceSCMInfo;
    NSMutableSet *_fileRefSet;
    NSMutableSet *_workspaceFolders;
    NSObject<OS_dispatch_queue> *_scanningQueue;
    BOOL _resumedScanningQueue;
    NSDate *_startDate;
    NSMutableSet *_repositoriesWarnedAreNewer;
    NSMutableSet *_workingCopies;
    NSMutableArray *_workingCopiesNeedingUpgrade;
    NSMutableArray *_workingTrees;
    DVTDispatchLock *_workingTreesLock;
    NSMutableSet *_workingTreeBranchTokens;
    DVTDispatchLock *_workingTreeBranchTokensLock;
    DVTMapTable *_workspaceRootForWorkingTreeMapTable;
    DVTDispatchLock *_workspaceRootMapTableLock;
    IDELogStore *_logStore;
    DVTObservingToken *_containerQueryMatchesObserver;
    NSOperationQueue *_scmFileEventQueue;
    NSObject<OS_dispatch_queue> *_scmQueue;
    NSObject<OS_dispatch_group> *_scmGroup;
    IDESourceControlRequest *_sourceControlInfoRequest;
    double _serverStatusUpdateInterval;
    NSTimer *_statusUpdateTimer;
    NSString *_developerFolderPathString;
    BOOL _localStatusCheckingEnabled;
    BOOL _remoteStatusCheckingEnabled;
    BOOL _idleNotificationPosted;
    BOOL _hasConfiguredTBTForWorkingCopies;
    BOOL _hasMergedProjectData;
    unsigned long long _workingTreesCount;
    unsigned long long _workingTreesConfigured;
    BOOL _shouldAskForNewWorkingCopies;
    BOOL _shouldSaveLegacyBlueprint;
    DVTDispatchLock *_derivedDataLock;
    DVTFilePath *_derivedDataFilePath;
    DVTObservingToken *_deriviedDataObservationToken;
    DVTFilePath *_intermediatesFilePath;
    DVTObservingToken *_intermediatesObservationToken;
    DVTFilePath *_productsFilePath;
    DVTObservingToken *_productsObservationToken;
    DVTNotificationToken *_sourceControlEnabledToken;
    DVTSourceControlWorkspace *_sourceControlWorkspace;
    unsigned long long _state;
    DVTSourceControlWorkspaceBlueprint *_cachedBlueprint;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (id)keyPathsForValuesAffectingDidScanWorkspace;
+ (id)keyPathsForValuesAffectingIsPerformingInitialWorkspaceScan;
+ (void)initialize;
@property(retain) DVTSourceControlWorkspaceBlueprint *cachedBlueprint; // @synthesize cachedBlueprint=_cachedBlueprint;
@property unsigned long long state; // @synthesize state=_state;
@property(retain) DVTSourceControlWorkspace *sourceControlWorkspace; // @synthesize sourceControlWorkspace=_sourceControlWorkspace;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(copy) NSTimer *statusUpdateTimer; // @synthesize statusUpdateTimer=_statusUpdateTimer;
@property double serverStatusUpdateInterval; // @synthesize serverStatusUpdateInterval=_serverStatusUpdateInterval;
@property(readonly) DVTMapTable *workspaceRootForWorkingTreeMapTable; // @synthesize workspaceRootForWorkingTreeMapTable=_workspaceRootForWorkingTreeMapTable;
@property(retain) IDESourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
- (void).cxx_destruct;
- (void)loadSourceControlLogsForWorkspace:(id)arg1;
- (void)updateLogsWithRequest:(id)arg1;
@property(readonly) NSArray *logRecords;
- (id)rootDirectoryOfAllWorkingCopies;
- (unsigned long long)stateForWorkingCopyConfiguration:(id)arg1;
- (unsigned long long)stateForRemoteRepository:(id)arg1;
- (unsigned long long)stateForWorkingTree:(id)arg1;
- (void)setState:(unsigned long long)arg1 forWorkingCopyConfigurationStateDictionary:(id)arg2;
- (void)setState:(unsigned long long)arg1 forRemoteRepository:(id)arg2;
- (void)setState:(unsigned long long)arg1 forWorkingTree:(id)arg2;
- (void)checkForMissingCheckouts;
- (void)checkForAdditionalCheckouts;
- (void)writeToSCMInfoToWorkspaceWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)saveSCMInfo;
- (id)getSCMInfoObjectforKey:(id)arg1;
- (void)setSCMInfoObject:(id)arg1 forSCMKey:(id)arg2;
- (void)setSuppressMissingCheckoutsAlert:(BOOL)arg1;
- (BOOL)suppressMissingCheckoutsAlert;
@property BOOL suppressWorkingCopyUpgrade;
- (BOOL)_saveWorkspaceSCMInfo;
- (id)_loadWorkspaceSCMInfo;
- (id)_SCMInfoFilePath;
- (void)_updateLocalStatusForWorkingTreesWithForce:(BOOL)arg1 modifiedSinceDate:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)forceUpdateLocalStatusForWorkingTreesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateLocalStatusForWorkingTreesModifiedSinceDate:(id)arg1;
- (void)updateLocalStatusForWorkingTrees;
- (void)_updateCurrentBranchForWorkingTreesModifiedSinceDate:(id)arg1;
- (void)_updateServerStatusForWorkingTreesWithForce:(BOOL)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)forceUpdateServerStatusForWorkingTreesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateServerStatusForWorkingTrees;
@property BOOL remoteStatusCheckingEnabled; // @synthesize remoteStatusCheckingEnabled=_remoteStatusCheckingEnabled;
- (void)endPeriodicServerStatusUpdates;
- (void)beginPeriodicServerStatusUpdates;
@property BOOL localStatusCheckingEnabled; // @synthesize localStatusCheckingEnabled=_localStatusCheckingEnabled;
- (void)endObservingWorkingTree:(id)arg1;
- (void)beginObservingWorkingTree:(id)arg1;
- (id)itemsWithStatusInWorkspaceForWorkingTree:(id)arg1;
- (void)evaluateWorkspaceRootForWorkingTree:(id)arg1 relativeToFilePath:(id)arg2;
- (id)rootDirectoryInWorkspaceForWorkingTree:(id)arg1;
- (id)rootDirectoryFilePathInWorkspaceForWorkingTree:(id)arg1;
- (void)_scanFinished;
- (void)startScanningWorkspace:(id)arg1;
- (void)_startScanningWorkspace:(id)arg1;
- (void)_processFileRefsBatch:(id)arg1;
- (void)upgradedWorkingCopy:(id)arg1;
- (void)scanForWorkingCopyInFilePath:(id)arg1;
- (void)addWorkspaceFilePathToCheck:(id)arg1;
- (void)scanWorkspaceFolders;
- (BOOL)_filePathIsInDerivedDataFolder:(id)arg1;
@property(readonly) BOOL didScanWorkspace;
@property(readonly) BOOL isPerformingInitialWorkspaceScan;
- (void)addWorkingTree:(id)arg1;
- (void)_sortWorkingCopies;
@property(readonly) NSArray *workingTrees; // @synthesize workingTrees=_workingTrees;
@property(readonly) NSArray *workingCopiesNeedingUpgrade; // @synthesize workingCopiesNeedingUpgrade=_workingCopiesNeedingUpgrade;
- (void)primitiveInvalidate;
- (void)_disableSourceControlMonitor;
- (id)initWithSCMManager:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDELocationScenario : NSObject
{
    NSString *_identifier;
    NSArray *_locations;
    BOOL _autorepeat;
    NSNumber *_speed;
    DVTFilePath *_filePath;
    BOOL _hasLoadedContent;
    BOOL _valid;
    BOOL _isCurrentLocation;
}

+ (id)builtInScenarioWithIdentifier:(id)arg1;
+ (id)defaultScenarios;
+ (id)currentLocationScenario;
@property(readonly) BOOL isCurrentLocationScenario; // @synthesize isCurrentLocationScenario=_isCurrentLocation;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSNumber *speed; // @synthesize speed=_speed;
@property(readonly) BOOL autorepeat; // @synthesize autorepeat=_autorepeat;
- (void).cxx_destruct;
@property(readonly, getter=isDefaultScenario) BOOL defaultScenario;
- (id)description;
@property(readonly) BOOL isValid;
@property(readonly) NSString *name;
@property(readonly) NSArray *locations; // @dynamic locations;
- (id)_locationsFromReferencedGPXFileWithError:(id *)arg1;
- (id)initWithWorkspace:(id)arg1 referencingFilePath:(id)arg2;
- (id)initWithIdentifier:(id)arg1 referencingFilePath:(id)arg2;
- (id)initWithIdentifier:(id)arg1 locations:(id)arg2 speed:(id)arg3 autorepeat:(BOOL)arg4;
- (id)initWithIdentifier:(id)arg1 locations:(id)arg2;

// Remaining properties
@property(readonly) NSMutableArray *mutableLocations; // @dynamic mutableLocations;

@end

@interface IDESchemeActionTestPerformanceMetricSummary : NSObject
{
    NSString *_identifier;
    NSString *_displayName;
    NSString *_unitOfMeasurement;
    NSArray *_measurements;
    NSString *_baselineName;
    NSNumber *_baselineAverage;
    NSNumber *_maxPercentRegression;
    NSNumber *_maxPercentRelativeStandardDeviation;
    NSNumber *_maxRegression;
    NSNumber *_maxStandardDeviation;
}

+ (id)missingBaselineDescriptionForPerformanceMetricWithName:(id)arg1;
@property(readonly) NSNumber *maxStandardDeviation; // @synthesize maxStandardDeviation=_maxStandardDeviation;
@property(readonly) NSNumber *maxRegression; // @synthesize maxRegression=_maxRegression;
@property(readonly) NSNumber *maxPercentRelativeStandardDeviation; // @synthesize maxPercentRelativeStandardDeviation=_maxPercentRelativeStandardDeviation;
@property(readonly) NSNumber *maxPercentRegression; // @synthesize maxPercentRegression=_maxPercentRegression;
@property(readonly) NSNumber *baselineAverage; // @synthesize baselineAverage=_baselineAverage;
@property(readonly) NSString *baselineName; // @synthesize baselineName=_baselineName;
@property(readonly, copy) NSArray *measurements; // @synthesize measurements=_measurements;
@property(readonly, copy) NSString *unitOfMeasurement; // @synthesize unitOfMeasurement=_unitOfMeasurement;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)isEqualToTestPerformanceMetricSummary:(id)arg1;
@property(readonly) double relativeStandardDeviationOfMeasurements;
@property(readonly) double meanAverageOfMeasurements;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithPerformanceMetricName:(id)arg1 unitOfMeasurement:(id)arg2 measurements:(id)arg3 identifier:(id)arg4 baselineName:(id)arg5 baselineAverage:(id)arg6 maxPercentRegression:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10;

@end

@interface IDESchemeActionTestFailureSummary : NSObject
{
    BOOL _isPerformanceFailure;
    NSString *_message;
    NSString *_fileName;
    long long _lineNumber;
}

@property(readonly) BOOL isPerformanceFailure; // @synthesize isPerformanceFailure=_isPerformanceFailure;
@property(readonly) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, copy) NSString *fileName; // @synthesize fileName=_fileName;
@property(readonly, copy) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (BOOL)isEqualToTestFailureSummary:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithMessage:(id)arg1 fileName:(id)arg2 lineNumber:(long long)arg3 isPerformanceFailure:(BOOL)arg4;

@end

@interface IDESchemeActionAbstractTestSummaryObject : NSObject
{
    NSString *_name;
}

@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly) unsigned long long status;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1;

@end

@interface IDESchemeActionTestSummary : IDESchemeActionAbstractTestSummaryObject
{
    unsigned long long _status;
    NSString *_identifier;
    NSString *_testSummaryGUID;
    NSArray *_failureSummaries;
    NSArray *_performanceMetrics;
}

+ (unsigned long long)testStatusForString:(id)arg1;
+ (id)stringForTestStatus:(unsigned long long)arg1;
@property(copy) NSArray *performanceMetrics; // @synthesize performanceMetrics=_performanceMetrics;
@property(copy) NSArray *failureSummaries; // @synthesize failureSummaries=_failureSummaries;
@property(copy) NSString *testSummaryGUID; // @synthesize testSummaryGUID=_testSummaryGUID;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property unsigned long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 identifier:(id)arg2 status:(unsigned long long)arg3 failureSummaries:(id)arg4 performanceMetrics:(id)arg5;

// Remaining properties
@property(copy) NSString *name;

@end

@interface IDESchemeActionTestableSummary : IDESchemeActionAbstractTestSummaryObject <IDESchemeActionTestSummaryContainer>
{
    NSMutableArray *_tests;
    NSString *_blueprintProviderPath;
    NSString *_blueprintName;
}

+ (void)_countOfSuccessfulTests:(unsigned long long *)arg1 failingTests:(unsigned long long *)arg2 mixedTests:(unsigned long long *)arg3 inSummaryContainer:(id)arg4;
+ (void)countOfSuccessfulTests:(unsigned long long *)arg1 failingTests:(unsigned long long *)arg2 mixedTests:(unsigned long long *)arg3 inSummaries:(id)arg4;
+ (void)_coalesceTestSummariesInContainers:(id)arg1 intoAggregateContainer:(id)arg2;
+ (id)coalescedTestableSummaryForTestableSummariesForSameTestable:(id)arg1;
+ (BOOL)includeDummyTestSummaryInTestableSummary;
+ (void)initialize;
@property(copy) NSString *blueprintName; // @synthesize blueprintName=_blueprintName;
@property(copy) NSString *blueprintProviderPath; // @synthesize blueprintProviderPath=_blueprintProviderPath;
- (void).cxx_destruct;
- (BOOL)isSummaryForSameTestableAsSummary:(id)arg1;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
@property(readonly) NSMutableArray *mutableContainedTestSummaries;
@property(readonly) NSArray *containedTestSummaries;
- (id)dictionaryRepresentation;
- (id)addNewTestSummaryGroupWithName:(id)arg1 identifier:(id)arg2;
- (id)addNewTestSummaryWithName:(id)arg1 identifier:(id)arg2 status:(unsigned long long)arg3 failureSummaries:(id)arg4 performanceMetrics:(id)arg5;
- (unsigned long long)status;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 blueprintProviderPath:(id)arg2 blueprintName:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(copy) NSMutableArray *mutableTests; // @dynamic mutableTests;
@property(copy) NSString *name;
@property(readonly) Class superclass;
@property(copy) NSArray *tests; // @dynamic tests;

@end

@interface IDESchemeActionTestSummaryGroup : IDESchemeActionAbstractTestSummaryObject <IDESchemeActionTestSummaryContainer>
{
    NSMutableArray *_subtests;
    NSString *_identifier;
}

+ (void)initialize;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly) NSMutableArray *mutableContainedTestSummaries;
@property(readonly) NSArray *containedTestSummaries;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)addNewTestSummaryGroupWithName:(id)arg1 identifier:(id)arg2;
- (id)addNewTestSummaryWithName:(id)arg1 identifier:(id)arg2 status:(unsigned long long)arg3 failureSummaries:(id)arg4 performanceMetrics:(id)arg5;
- (unsigned long long)status;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 identifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(copy) NSMutableArray *mutableSubtests; // @dynamic mutableSubtests;
@property(copy) NSString *name;
@property(copy) NSArray *subtests; // @dynamic subtests;
@property(readonly) Class superclass;

@end

@interface IDESchemeActionDummyTestSummary : IDESchemeActionAbstractTestSummaryObject
{
    NSString *_sentinelGUID;
}

- (void).cxx_destruct;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (unsigned long long)status;
- (id)identifier;
- (id)init;

@end

@interface IDEIndexTestMethodCollection : IDEIndexSymbolWithDefiningOccurrenceCollection
{
    NSObject<NSFastEnumeration> *_classes;
    NSDictionary *_classesByID;
}

- (void).cxx_destruct;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;
- (void)setClasses:(id)arg1;

@end

@interface IDEDataProvider_NetworkStatistics : IDEDataProvider
{
    struct __NStatManager *_netstatManager;
    NSObject<OS_dispatch_queue> *_netstatQueue;
    struct unordered_map<int, ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ProcessInfo>>> _processInfoByPID;
    struct unordered_map<__NStatSource *, SourceInfo, std::__1::hash<__NStatSource *>, std::__1::equal_to<__NStatSource *>, std::__1::allocator<std::__1::pair<__NStatSource *const, SourceInfo>>> _sourceInfosBySrcRef;
}

+ (id)sharedDataProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (void)dealloc;
- (BOOL)captureAttributes:(id)arg1 toDictionary:(id)arg2 forPID:(id)arg3;
- (id)supportedAttributes;

@end

@interface IDERunOperationPathWorker : IDERunOperationWorker
{
}

@property(readonly) NSMutableDictionary *compositeEnvironmentVariables;
@property(readonly) DVTFilePath *filePath;

@end

@interface IDEConsoleItem : NSObject <DVTSimpleSerialization, NSSecureCoding>
{
    NSString *_adaptorType;
    NSString *_content;
    double _timestamp;
    int _kind;
}

+ (BOOL)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingOutputRequestedByUser;
+ (id)keyPathsForValuesAffectingPrompt;
+ (id)keyPathsForValuesAffectingOutput;
+ (id)keyPathsForValuesAffectingInput;
@property int kind; // @synthesize kind=_kind;
@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly) NSString *content; // @synthesize content=_content;
@property(readonly) NSString *adaptorType; // @synthesize adaptorType=_adaptorType;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@property(readonly, getter=isError) BOOL error;
- (void)setError:(BOOL)arg1;
@property(readonly, getter=isOutputRequestedByUser) BOOL outputRequestedByUser;
- (void)setOutputRequestedByUser:(BOOL)arg1;
@property(readonly, getter=isPrompt) BOOL prompt;
- (void)setPrompt:(BOOL)arg1;
@property(readonly, getter=isOutput) BOOL output;
- (void)setOutput:(BOOL)arg1;
@property(readonly, getter=isInput) BOOL input;
- (void)setInput:(BOOL)arg1;
- (id)description;
- (id)initWithAdaptorType:(id)arg1 content:(id)arg2 kind:(int)arg3;

@end

@interface IDEContainerCore : NSObject <IDEContainerCore>
{
    DVTFilePath *_filePath;
    DVTExtension *_containerExtension;
    int _currentActivity;
}

+ (void)_invalidateContainerCore:(id)arg1;
+ (void)_releaseContainerCore:(id)arg1;
+ (void)_retainContainerCore:(id)arg1;
+ (BOOL)_closeContainerCoreIfNeeded:(id)arg1;
+ (void)_removeReferencesToContainerCore:(id)arg1;
+ (void)_decrementCountForContainerCore:(id)arg1;
+ (void)_incrementCountForContainerCore:(id)arg1;
+ (unsigned long long)_countForContainerCore:(id)arg1;
+ (id)_openContainerCores;
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)containerFileType;
+ (BOOL)isContainerCoreOpenForFilePath:(id)arg1;
+ (id)retainedContainerCoreForFilePath:(id)arg1;
+ (id)retainedContainerCoreAtFilePath:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
+ (id)containerExtensionForFileDataType:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (id)filePath;
- (id)containerExtension;
- (id)rootGroup;
- (int)currentActivity;
- (void)primitiveInvalidate;
- (void)releaseContainerCore;
- (void)retainContainerCore;
- (void)_saveContainerCoreIfNeeded;
- (id)init;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECommandLineEnvironment : NSObject
{
    NSArray *_arguments;
    NSDictionary *_environment;
    DVTFilePath *_workingDirectory;
    NSDictionary *_commandLineOptions;
    NSArray *_commandLineUnparsedArguments;
    NSFileHandle *_standardInput;
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    IDEWorkspace *_workspace;
    IDEContainer<IDEBlueprintProvider> *_primaryBlueprintProvider;
    IDEScheme *_scheme;
    NSSet *_blueprints;
    IDEMutableOverridingBuildProperties *_buildProperties;
    NSString *_buildConfiguration;
    IDERunDestination *_runDestination;
}

@property(retain, nonatomic) IDERunDestination *runDestination; // @synthesize runDestination=_runDestination;
@property(copy, nonatomic) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(retain, nonatomic) IDEMutableOverridingBuildProperties *buildProperties; // @synthesize buildProperties=_buildProperties;
@property(copy, nonatomic) NSSet *blueprints; // @synthesize blueprints=_blueprints;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
@property(retain, nonatomic) IDEContainer<IDEBlueprintProvider> *primaryBlueprintProvider; // @synthesize primaryBlueprintProvider=_primaryBlueprintProvider;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain, nonatomic) NSFileHandle *standardError; // @synthesize standardError=_standardError;
@property(retain, nonatomic) NSFileHandle *standardOutput; // @synthesize standardOutput=_standardOutput;
@property(retain, nonatomic) NSFileHandle *standardInput; // @synthesize standardInput=_standardInput;
@property(copy, nonatomic) NSArray *commandLineUnparsedArguments; // @synthesize commandLineUnparsedArguments=_commandLineUnparsedArguments;
@property(copy, nonatomic) NSDictionary *commandLineOptions; // @synthesize commandLineOptions=_commandLineOptions;
@property(retain, nonatomic) DVTFilePath *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property(copy, nonatomic) NSDictionary *environment; // @synthesize environment=_environment;
@property(copy, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
- (void).cxx_destruct;

@end

@interface IDEDistributionProvisioningSnapshot : NSObject
{
    DVTMutableOrderedDictionary *_itemToSigningInfoMap;
    IDEDistributionItemSigningInfo *_installerSigningInfo;
}

@property(retain) IDEDistributionItemSigningInfo *installerSigningInfo; // @synthesize installerSigningInfo=_installerSigningInfo;
@property(retain) DVTMutableOrderedDictionary *itemToSigningInfoMap; // @synthesize itemToSigningInfoMap=_itemToSigningInfoMap;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDEIndexDBStringStorage : NSObject
{
    NSURL *_fileURL;
    DVTDispatchLock *_lock;
    NSHashTable *_hashTable;
    NSMutableData *_data;
    long long _fileSize;
}

+ (void)initialize;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (void)findStringsContaining:(const char *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 forEachResult:(CDUnknownBlockType)arg5;
- (id)findStringAtOffset:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (id)writeChangesToDisk;
- (long long)offsetOfString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (void)close;
- (id)open;
- (id)initWithFileURL:(id)arg1;

@end

@interface IDENotifyingLocalizedGroup : NSObject <DVTInvalidation>
{
    IDEGroup<IDELocalizedGroup> *_group;
    NSDictionary *_variantFileReferences;
    DVTObservingToken *_subitemsObservationToken;
    DVTObservingToken *_resolvedFilePathObservationToken;
}

+ (id)keyPathsForValuesAffectingAvailableLanguages;
+ (id)keyPathsForValuesAffectingDevelopmentFileReference;
+ (id)keyPathsForValuesAffectingBaseFileReference;
+ (void)initialize;
- (void).cxx_destruct;
- (id)availableLanguagesForFileReferencesConformingToType:(id)arg1;
- (id)availableLanguages;
- (id)targetLanguages;
- (id)developmentLanguage;
- (id)fileReferenceForLanguage:(id)arg1;
- (id)developmentFileReference;
- (id)baseFileReference;
- (id)group;
- (void)primitiveInvalidate;
- (void)_update;
- (id)initWithLocalizedGroup:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionCopySwiftSupportStep : IDEDistributionProcessingStep
{
}

+ (id)processingStep;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;

@end

@interface IDEIndexTestPlistDataSource : IDEIndexDataSource
{
    IDEIndexImportSession *_session;
    NSString *_target;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)_processFile:(id)arg1 newFiles:(id)arg2;
- (id)_newFilesForDictionaries:(id)arg1;
- (void)_processSymbol:(id)arg1 inFile:(id)arg2 container:(id)arg3 containerName:(id)arg4;
- (BOOL)generateDataForJob:(id)arg1;
- (void)generateDataForPlist:(id)arg1;
- (id)initWithSession:(id)arg1 target:(id)arg2;

@end

@interface IDEWorkspaceArena : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    DVTFilePath *_cachedDerivedDataLocation;
    DVTFilePath *_cachedBuildFolderPath;
    DVTFilePath *_cachedBuildProductsFolderPath;
    DVTFilePath *_cachedBuildIntermediatesFolderPath;
    NSString *_cachedWorkspaceArenaFolderName;
    BOOL _hasWorkspaceRelativeDerivedDataLocation;
    BOOL didSetUpCachedWorkspaceArenaFolderNameObservations;
    id _derivedDataFolderForWorkspaceObservingToken;
    id _derivedDataNotificationToken;
    id _derivedDataSourceTreesNotificationToken;
    id _derivedDataOverrideNotificationToken;
    IDEWorkspaceArenaSnapshot *_cachedSnapshot;
}

+ (id)defaultBuildSubdirectoryName;
+ (id)defaultWorkspaceRelativeDerivedDataDirLocation;
+ (BOOL)shouldUniqueWorkspaceFoldersInStandardDerivedDataLocation;
+ (id)standardWorkspaceDerivedDataLocationForWorkspace:(id)arg1;
+ (id)_standardDerivedDataLocationPathFragment;
+ (id)keyPathsForValuesAffectingWorkspaceArenaInfo;
+ (id)keyPathsForValuesAffectingTestResultsFolderPath;
+ (id)keyPathsForValuesAffectingLogFolderPath;
+ (id)keyPathsForValuesAffectingIndexPrecompiledHeadersFolderPath;
+ (id)keyPathsForValuesAffectingIndexFolderPath;
+ (id)keyPathsForValuesAffectingTextIndexFolderPath;
+ (id)buildIntermediatesFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)buildProductsFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)keyPathsForValuesAffectingPrecompiledHeadersFolderPath;
+ (id)keyPathsForValuesAffectingIBLiveViewsBuildFolderPath;
+ (id)keyPathsForValuesAffectingPGOBuildFolderPath;
+ (id)keyPathsForValuesAffectingInstallingBuildFolderPath;
+ (id)keyPathsForValuesAffectingArchivingBuildFolderPath;
+ (id)keyPathsForValuesAffectingBuildIntermediatesFolderPath;
+ (id)keyPathsForValuesAffectingBuildProductsFolderPath;
+ (void)_buildResultsPathForBuildResultsType:(int)arg1 settings:(id)arg2 workspaceArena:(id)arg3 returningFilePath:(id *)arg4 orReturningPathString:(id *)arg5 withPlaceholder:(int *)arg6;
+ (id)_resolvedBuildFolderSettingsGivenSettings:(id)arg1;
+ (id)keyPathsForValuesAffectingPath;
+ (id)keyPathsForValuesAffectingDerivedDataFolderForWorkspace;
+ (id)nameForWorkspaceArenaWithBaseName:(id)arg1 gristInput:(id)arg2;
+ (void)initialize;
@property BOOL hasWorkspaceRelativeDerivedDataLocation; // @synthesize hasWorkspaceRelativeDerivedDataLocation=_hasWorkspaceRelativeDerivedDataLocation;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)createWorkspaceArenaFolderIfNecessary;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithWorkspace:(id)arg1;
@property(readonly) IDEWorkspaceArenaInfo *workspaceArenaInfo;
@property(readonly) DVTFilePath *testResultsFolderPath;
@property(readonly) DVTFilePath *logFolderPath;
@property(readonly) DVTFilePath *indexPrecompiledHeadersFolderPath;
@property(readonly) DVTFilePath *indexFolderPath;
@property(readonly) DVTFilePath *textIndexFolderPath;
@property(readonly) DVTFilePath *precompiledHeadersFolderPath;
@property(readonly) DVTFilePath *IBLiveViewsBuildFolderPath;
@property(readonly) DVTFilePath *pgoBuildFolderPath;
@property(readonly) DVTFilePath *installingBuildFolderPath;
@property(readonly) DVTFilePath *archivingBuildFolderPath;
@property(readonly) DVTFilePath *buildIntermediatesFolderPath;
- (id)buildIntermediatesFolderPathForSettings:(id)arg1;
@property(readonly) DVTFilePath *buildProductsFolderPath;
- (id)buildProductsFolderPathForSettings:(id)arg1;
- (id)_buildResultsPathForBuildResultsType:(int)arg1 settings:(id)arg2;
@property(readonly) DVTFilePath *buildFolderPath;
- (id)_buildFolderPathForSettings:(id)arg1;
- (void)buildFolderSettingsDidChange:(id)arg1;
- (id)presumptiveBuildFolderPathWithName:(id)arg1 baseBuildFolderLocation:(id)arg2;
- (id)_derivedDataFolderPathOverride;
- (id)path;
@property(readonly) DVTFilePath *derivedDataFolderForWorkspace;
- (BOOL)_shouldUniqueWorkspaceInDerivedDataForDerivedDataLocationStyle:(int)arg1 customDerivedDataLocation:(id)arg2;
@property(readonly) DVTFilePath *derivedDataLocation;
- (id)workspaceArenaFolderName;
- (void)primitiveInvalidate;
@property(readonly) IDEWorkspaceArenaSnapshot *currentSnapshot;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildFolderSettings : NSObject
{
    int buildLocationStyle;
    NSString *sharedBuildFolderName;
    int customBuildLocationType;
    NSString *customBuildProductsPath;
    NSString *customBuildIntermediatesPath;
}

+ (id)buildFolderSettingsForWorkspaceSettings:(id)arg1;
- (void).cxx_destruct;
- (id)description;

@end

@interface IDEWorkspaceArenaInfo : NSObject
{
    NSDictionary *_infoDict;
    DVTFilePath *_workspacePath;
}

+ (id)workspaceArenaInfoFromFileAtPath:(id)arg1 error:(id *)arg2;
+ (id)workspaceArenaInfoWithWorkspacePath:(id)arg1;
- (void).cxx_destruct;
- (BOOL)writeToFileAtPath:(id)arg1 withRelativeWorkspacePath:(BOOL)arg2 error:(id *)arg3;
@property(readonly) DVTFilePath *workspacePath;

@end

@interface IDEWorkspaceArenaSnapshot : NSObject
{
    DVTFilePath *_derivedDataFolderPath;
    DVTFilePath *_buildProductsFolderPath;
    DVTFilePath *_buildIntermediatesFolderPath;
    DVTFilePath *_precompiledHeadersFolderPath;
    DVTFilePath *_indexFolderPath;
    DVTFilePath *_indexPrecompiledHeadersFolderPath;
    DVTFilePath *_logFolderPath;
    DVTFilePath *_textIndexFolderPath;
    unsigned long long _hash;
}

+ (id)workspaceArenaSnapshotForWorkspaceArena:(id)arg1;
@property(readonly) DVTFilePath *textIndexFolderPath; // @synthesize textIndexFolderPath=_textIndexFolderPath;
@property(readonly) DVTFilePath *logFolderPath; // @synthesize logFolderPath=_logFolderPath;
@property(readonly) DVTFilePath *indexPrecompiledHeadersFolderPath; // @synthesize indexPrecompiledHeadersFolderPath=_indexPrecompiledHeadersFolderPath;
@property(readonly) DVTFilePath *indexFolderPath; // @synthesize indexFolderPath=_indexFolderPath;
@property(readonly) DVTFilePath *precompiledHeadersFolderPath; // @synthesize precompiledHeadersFolderPath=_precompiledHeadersFolderPath;
@property(readonly) DVTFilePath *buildIntermediatesFolderPath; // @synthesize buildIntermediatesFolderPath=_buildIntermediatesFolderPath;
@property(readonly) DVTFilePath *buildProductsFolderPath; // @synthesize buildProductsFolderPath=_buildProductsFolderPath;
@property(readonly) DVTFilePath *derivedDataFolderPath; // @synthesize derivedDataFolderPath=_derivedDataFolderPath;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)copy;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface IDESourceControlMultipleStepInvalidationToken : NSObject <DVTCancellable>
{
    IDESourceControlRequest *_currentRequest;
    BOOL _isCancelled;
}

@property __weak IDESourceControlRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
- (void).cxx_destruct;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDECleanCommandLineVerb : IDESchemeBasedCommandLineVerb
{
}

+ (BOOL)_cleanFolderAtPath:(id)arg1 withDisplayName:(id)arg2 environment:(id)arg3;
+ (id)_overridingValueForProperty:(id)arg1 inOverridingProperties:(id)arg2;
+ (BOOL)requiresScheme;
+ (int)performWithEnvironment:(id)arg1;
+ (int)cleanBuildFolderForWorkspace:(id)arg1 inEnvironment:(id)arg2;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDESchemeBasedCommandLineVerb : IDEWorkspaceBasedCommandLineVerb
{
}

+ (id)_schemeWithName:(id)arg1 blueprints:(id)arg2 inWorkspace:(id)arg3;
+ (BOOL)requiresScheme;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEIndexDataSource : NSObject
{
    DVTPerformanceMetric *_generatorMetric;
    NSString *_source;
}

+ (const char *)builtinClassResolutionCString;
+ (id)builtinClassResolution;
+ (const char *)builtinIdResolutionCString;
+ (id)builtinIdResolution;
+ (const char *)builtinVoidResolutionCString;
+ (id)builtinVoidResolution;
+ (id)dataSourceVersion;
@property(retain, nonatomic) DVTPerformanceMetric *generatorMetric; // @synthesize generatorMetric=_generatorMetric;
@property(readonly, nonatomic) NSString *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (BOOL)generateDataForJob:(id)arg1;
- (BOOL)processJob:(id)arg1;
- (id)initWithSource:(id)arg1;

@end

@interface IDEIssueFileGroup : NSObject
{
    IDEIssueProvider *_issueProvider;
    NSURL *_documentURL;
    NSMutableArray *_issues;
    unsigned long long _testFailureCount;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    int _issueType;
}

@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void).cxx_destruct;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_updateIssueType;
- (id)_initWithIssueProvider:(id)arg1 documentURL:(id)arg2;
- (id)init;

@end

@interface IDEWorkspaceSettings : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_workspaceSettings;
    BOOL _loadedExistingSettings;
}

+ (void)initialize;
@property(readonly) BOOL loadedExistingSettings; // @synthesize loadedExistingSettings=_loadedExistingSettings;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadSettings;
- (void)saveSettings;
- (id)customDataSpecifier;
- (id)settingsOwnership;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (BOOL)boolForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEEntitlementsDictionary : NSObject <NSCopying>
{
    _Bool _frozen;
    id _storage;
    IDEEntitlementsDictionary *_parent;
}

+ (id)whiteoutMarker;
@property(readonly) IDEEntitlementsDictionary *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setDictionary:(id)arg1;
- (void)removeObjectsForKeys:(id)arg1;
- (void)removeAllObjects;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(readonly) unsigned long long count;
@property(readonly, copy) NSSet *allValues;
@property(readonly, copy) NSSet *allKeys;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (id)deltaRepresentation;
- (id)flatRepresentation;
- (id)mutableChildByApplyingDelta:(id)arg1;
- (void)applyDelta:(id)arg1;
- (id)mutableChild;
- (void)freeze;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface IDEEntitlementsWhiteOutMarker : NSObject
{
}

+ (id)marker;

@end

@interface IDETestFailureBreakpoint : IDEBreakpoint
{
}

- (id)symbolNames;
- (id)displayName;
- (id)init;

@end

@interface IDETestSchemeAction : IDESchemeAction
{
    NSMutableArray *_testableReferences;
    NSMutableArray *_loadingTestableReferences;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    DVTObservingToken *_testablesObservingToken;
    DVTObservingToken *_skippedTestsObservingToken;
    DVTObservingToken *_workspaceRunnableProductsToken;
    DVTNotificationToken *_buildablesToken;
    NSString *_buildConfiguration;
    NSArray *_hostBuildableReferences;
    IDESchemeBuildableReference *_testBuildableReferenceToUseForMacroExpansion;
}

+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (id)keyPathsForValuesAffectingTestBuildableReferences;
+ (BOOL)_initializedForUserInteraction;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (void).cxx_destruct;
- (void)setTestOrTestable:(id)arg1 enabled:(BOOL)arg2;
- (void)_disableTestOrTestable:(id)arg1;
- (void)_enableTestOrTestable:(id)arg1;
- (void)_postEnabledStateNotification;
- (BOOL)isTestOrTestableEnabled:(id)arg1;
- (id)_testableReferenceForTest:(id)arg1;
- (BOOL)_isEnabledTestable:(id)arg1;
- (BOOL)_isEnabledTest:(id)arg1;
- (BOOL)_isTestEditable:(id)arg1;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (BOOL)needsNewSchemeVersionForAppDataPackages;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)primitiveInvalidate;
- (id)_expandMacrosInString:(id)arg1;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (id)buildableReferenceToUseForMacroExpansion;
- (BOOL)_shouldDebugAppExtensions;
- (BOOL)_shouldDebugXPCServices;
@property(readonly) NSDictionary *environmentVariables;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
@property(readonly) NSArray *commandLineArguments;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
- (void)_updateTestActionBuildableToUseForMacroExpansion;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
- (void)setRunContext:(id)arg1;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly) NSArray *testBuildableReferences;
@property(readonly) NSArray *hostBuildableReferences;
- (void)testableDidChangeHost:(id)arg1;
- (id)testOperationWithTestManager:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 schemeCommand:(id)arg5 actionRecord:(id)arg6 overridingTestingSpecifiers:(id)arg7 outError:(id *)arg8 actionCallbackBlock:(CDUnknownBlockType)arg9;
- (id)filePathForOptimizationProfileFile:(id)arg1 withBuildParameters:(id)arg2 schemeCommand:(id)arg3;
- (id)firstBuildableContainingBuildSetting:(id)arg1 withBuildParameters:(id)arg2 schemeCommand:(id)arg3;
- (id)effectiveBlueprintForOptimizationProfileGenerationForSchemeCommand:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableTestableReferences; // @dynamic mutableTestableReferences;
@property(copy) NSArray *testableReferences; // @dynamic testableReferences;

@end

@interface _IDELocalizationExporterConfig : IDELocalizationWorkContext <IDELocalizationWorkSystemTask, IDELocalizationWorkWriteData>
{
    NSURL *IDELocalizationWork_url;
    NSData *IDELocalizationWork_data;
    DVTFilePath *IDELocalizationWork_launchPath;
    NSArray *IDELocalizationWork_arguments;
    NSNumber *IDELocalizationWork_exitStatus;
}

@property(retain) NSNumber *IDELocalizationWork_exitStatus; // @synthesize IDELocalizationWork_exitStatus;
@property(retain) NSArray *IDELocalizationWork_arguments; // @synthesize IDELocalizationWork_arguments;
@property(retain) DVTFilePath *IDELocalizationWork_launchPath; // @synthesize IDELocalizationWork_launchPath;
@property(retain) NSData *IDELocalizationWork_data; // @synthesize IDELocalizationWork_data;
@property(retain) NSURL *IDELocalizationWork_url; // @synthesize IDELocalizationWork_url;
- (void).cxx_destruct;

@end

@interface IDELocalizationBundleExportContext : IDELocalizationWorkContext
{
    NSURL *_destinationUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSString *_sourceLanguage;
    NSArray *_targetLanguages;
}

@property(retain) NSArray *targetLanguages; // @synthesize targetLanguages=_targetLanguages;
@property(retain) NSString *sourceLanguage; // @synthesize sourceLanguage=_sourceLanguage;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *destinationUrl; // @synthesize destinationUrl=_destinationUrl;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizationLanguageExportContext : IDELocalizationWorkContext
{
    IDELocalizedResourcePopulationContext *_populationContext;
    NSURL *_destinationUrl;
    IDEContainer<IDELocalizedContainer> *_container;
    NSString *_sourceLanguage;
    NSString *_targetLanguage;
    NSXMLDocument *_exportXLIFF;
}

@property(retain) NSXMLDocument *exportXLIFF; // @synthesize exportXLIFF=_exportXLIFF;
@property(retain) NSString *targetLanguage; // @synthesize targetLanguage=_targetLanguage;
@property(retain) NSString *sourceLanguage; // @synthesize sourceLanguage=_sourceLanguage;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(retain) NSURL *destinationUrl; // @synthesize destinationUrl=_destinationUrl;
@property(retain) IDELocalizedResourcePopulationContext *populationContext; // @synthesize populationContext=_populationContext;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizationExporter : NSObject <IDELocalizationWorkProgress, DVTInvalidation>
{
    IDELocalizationStream *_exportWork;
    IDELocalizationBundleExportContext *_exportContext;
    long long _workDone;
    long long _workOutstanding;
    DVTNotificationToken *_localizationPhaseObserver;
    DVTNotificationToken *_localizationWorkItemIncrementObserver;
    DVTNotificationToken *_localizationWorkItemDecrementObserver;
    id <DVTCancellable> _workToken;
    BOOL _complete;
    long long _progress;
    NSString *_phase;
    NSString *_workTitle;
    CDUnknownBlockType _onErrorBlock;
    CDUnknownBlockType _onCompletedBlock;
}

+ (void)initialize;
+ (id)exporterToURL:(id)arg1 container:(id)arg2 sourceLanguage:(id)arg3 targetLanguages:(id)arg4;
+ (id)exportWorkForBundleExportContext:(id)arg1;
+ (id)exportWorkForLanguageExportContext:(id)arg1;
@property(copy) CDUnknownBlockType onCompletedBlock; // @synthesize onCompletedBlock=_onCompletedBlock;
@property(copy) CDUnknownBlockType onErrorBlock; // @synthesize onErrorBlock=_onErrorBlock;
@property(readonly) NSString *workTitle; // @synthesize workTitle=_workTitle;
@property(retain) NSString *phase; // @synthesize phase=_phase;
@property BOOL complete; // @synthesize complete=_complete;
@property long long progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (void)primitiveInvalidate;
- (id)initWithExportWork:(id)arg1 withContext:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESchemeActionRecord : NSObject
{
    int _schemeTask;
    IDESchemeCommand *_schemeCommand;
    NSString *_title;
    NSDate *_startedTime;
    NSDate *_endedTime;
    IDESchemeActionResult *_buildResult;
    IDESchemeActionResult *_actionResult;
    IDESchemeActionRunDestinationRecord *_runDestinationRecord;
    DVTFilePath *_localRecordDirectoryFilePath;
    DVTFilePath *_creatingWorkspaceFilePath;
}

+ (int)schemeTaskForString:(id)arg1;
+ (id)stringForSchemeTask:(int)arg1;
+ (id)schemeCommandForString:(id)arg1;
+ (id)keyPathsForValuesAffectingTestsFailedCount;
+ (id)keyPathsForValuesAffectingTestsCount;
+ (id)keyPathsForValuesAffectingAnalyzerWarningCount;
+ (id)keyPathsForValuesAffectingErrorCount;
+ (id)keyPathsForValuesAffectingWarningCount;
+ (id)keyPathsForValuesAffectingStatus;
+ (BOOL)getSchemeTask:(int *)arg1 fromDictionaryRepresentation:(id)arg2;
@property(retain, nonatomic) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(retain, nonatomic) DVTFilePath *localRecordDirectoryFilePath; // @synthesize localRecordDirectoryFilePath=_localRecordDirectoryFilePath;
@property(readonly, nonatomic) IDESchemeActionRunDestinationRecord *runDestinationRecord; // @synthesize runDestinationRecord=_runDestinationRecord;
@property(retain, nonatomic) IDESchemeActionResult *actionResult; // @synthesize actionResult=_actionResult;
@property(retain, nonatomic) IDESchemeActionResult *buildResult; // @synthesize buildResult=_buildResult;
@property(copy, nonatomic) NSDate *endedTime; // @synthesize endedTime=_endedTime;
@property(copy, nonatomic) NSDate *startedTime; // @synthesize startedTime=_startedTime;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) int schemeTask; // @synthesize schemeTask=_schemeTask;
@property(retain, nonatomic) IDESchemeCommand *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long testsFailedCount;
@property(readonly, nonatomic) unsigned long long testsCount;
@property(readonly, nonatomic) unsigned long long analyzerWarningCount;
@property(readonly, nonatomic) unsigned long long errorCount;
@property(readonly, nonatomic) unsigned long long warningCount;
@property(readonly, nonatomic) int status;
- (id)description;
- (void)close;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1 forSchemeActionsInvocationRecord:(id)arg2;
- (id)dictionaryRepresentationForSchemeActionsInvocationRecord:(id)arg1;
- (BOOL)saveReturningError:(id *)arg1;
- (void)recordRunDestination:(id)arg1;
- (id)init;
- (id)initWithLocalRecordDirectoryFilePath:(id)arg1 creatingWorkspaceFilePath:(id)arg2 schemeTask:(int)arg3;

@end

@interface IDESchemeActionDeviceRecord : NSObject
{
    BOOL _concreteDevice;
    NSString *_name;
    NSString *_operatingSystemVersion;
    NSString *_operatingSystemVersionWithBuildNumber;
    NSString *_nativeArchitecture;
    NSString *_modelName;
    NSString *_modelCode;
    NSString *_modelUTI;
    NSString *_identifier;
    NSString *_cpuKind;
    unsigned long long _cpuCount;
    unsigned long long _cpuSpeedInMHz;
    unsigned long long _busSpeedInMHz;
    unsigned long long _ramSizeInMegabytes;
    unsigned long long _physicalCPUCoresPerPackage;
    unsigned long long _logicalCPUCoresPerPackage;
    IDESchemeActionPlatformRecord *_platformRecord;
}

@property(readonly, nonatomic) IDESchemeActionPlatformRecord *platformRecord; // @synthesize platformRecord=_platformRecord;
@property unsigned long long logicalCPUCoresPerPackage; // @synthesize logicalCPUCoresPerPackage=_logicalCPUCoresPerPackage;
@property unsigned long long physicalCPUCoresPerPackage; // @synthesize physicalCPUCoresPerPackage=_physicalCPUCoresPerPackage;
@property unsigned long long ramSizeInMegabytes; // @synthesize ramSizeInMegabytes=_ramSizeInMegabytes;
@property unsigned long long busSpeedInMHz; // @synthesize busSpeedInMHz=_busSpeedInMHz;
@property unsigned long long cpuSpeedInMHz; // @synthesize cpuSpeedInMHz=_cpuSpeedInMHz;
@property unsigned long long cpuCount; // @synthesize cpuCount=_cpuCount;
@property(copy) NSString *cpuKind; // @synthesize cpuKind=_cpuKind;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy, nonatomic) NSString *modelUTI; // @synthesize modelUTI=_modelUTI;
@property(readonly, copy, nonatomic) NSString *modelCode; // @synthesize modelCode=_modelCode;
@property(readonly, copy, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
@property(readonly, copy) NSString *nativeArchitecture; // @synthesize nativeArchitecture=_nativeArchitecture;
@property(readonly, copy, nonatomic) NSString *operatingSystemVersionWithBuildNumber; // @synthesize operatingSystemVersionWithBuildNumber=_operatingSystemVersionWithBuildNumber;
@property(readonly, copy) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
@property(readonly, getter=isConcreteDevice) BOOL concreteDevice; // @synthesize concreteDevice=_concreteDevice;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (id)initWithDeviceName:(id)arg1 isConcreteDevice:(BOOL)arg2 nativeArchitecture:(id)arg3 operatingSystemVersion:(id)arg4 operatingSystemVersionWithBuildNumber:(id)arg5 modelName:(id)arg6 modelCode:(id)arg7 modelUTI:(id)arg8 identifier:(id)arg9 cpuKind:(id)arg10 cpuCount:(unsigned long long)arg11 cpuSpeedInMHz:(unsigned long long)arg12 busSpeedInMHz:(unsigned long long)arg13 ramSizeInMegabytes:(unsigned long long)arg14 physicalCPUCoresPerPackage:(unsigned long long)arg15 logicalCPUCoresPerPackage:(unsigned long long)arg16 platformRecord:(id)arg17;

@end

@interface IDESchemeActionRunDestinationRecord : NSObject
{
    NSString *_displayName;
    NSString *_targetArchitecture;
    IDESchemeActionDeviceRecord *_targetDeviceRecord;
    IDESchemeActionDeviceRecord *_localComputerRecord;
    IDESchemeActionSDKRecord *_targetSDKRecord;
}

+ (id)recordForRunDestination:(id)arg1;
@property(readonly, nonatomic) IDESchemeActionSDKRecord *targetSDKRecord; // @synthesize targetSDKRecord=_targetSDKRecord;
@property(readonly, nonatomic) IDESchemeActionDeviceRecord *localComputerRecord; // @synthesize localComputerRecord=_localComputerRecord;
@property(readonly, nonatomic) IDESchemeActionDeviceRecord *targetDeviceRecord; // @synthesize targetDeviceRecord=_targetDeviceRecord;
@property(readonly, copy) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithDisplayName:(id)arg1 targetArchitecture:(id)arg2 targetDevice:(id)arg3 targetSDK:(id)arg4 localComputer:(id)arg5;

@end

@interface IDESchemeActionPlatformRecord : NSObject
{
    NSString *_userDescription;
    NSString *_identifier;
}

@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy) NSString *userDescription; // @synthesize userDescription=_userDescription;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithUserDescription:(id)arg1 identifier:(id)arg2;

@end

@interface IDESchemeActionSDKRecord : NSObject
{
    BOOL _internal;
    NSString *_displayName;
    NSString *_canonicalName;
    NSString *_operatingSystemVersion;
}

@property(readonly, getter=isInternal) BOOL internal; // @synthesize internal=_internal;
@property(readonly, copy) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
@property(readonly, copy) NSString *canonicalName; // @synthesize canonicalName=_canonicalName;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithSDK:(id)arg1;
- (id)initWithDisplayName:(id)arg1 canonicalName:(id)arg2 operatingSystemVersion:(id)arg3 isInternal:(BOOL)arg4;

@end

@interface IDESourceControlManager : NSObject <DVTDeveloperProfileAccountProvider>
{
    NSMutableArray *_repositories;
    NSMutableArray *_workingCopyConfigurations;
    NSMutableArray *_workingTrees;
    NSMutableArray *_projects;
    NSMutableArray *_extensions;
    NSOperationQueue *_operationQueue;
    NSMutableArray *_holdingQueue;
    DVTDispatchLock *_holdingQueueLock;
    long long _maxConcurrentOperationCount;
    long long _automaticallyScanWorkspaces;
    long long _authenticationRetryAttempts;
    BOOL _enableSourceControl;
    BOOL _localStatusCheckingEnabled;
    BOOL _remoteStatusCheckingEnabled;
    BOOL _automaticallyAddNewFiles;
    BOOL _waitingForAuthentication;
    BOOL _shouldLoadRepositories;
    double _minimumLocalStatusRequestDelay;
    NSString *_pathOfWorkspaceJustCheckedOut;
}

+ (id)keyPathsForValuesAffectingRepositories;
+ (id)sourceControlProfilingLogAspect;
+ (id)sourceControlAuthenticationLogAspect;
+ (id)sourceControlFileScanningLogAspect;
+ (id)sourceControlReachabilityLogAspect;
+ (id)sourceControlLogAspect;
+ (id)sharedSourceControlManager;
@property(retain) NSString *pathOfWorkspaceJustCheckedOut; // @synthesize pathOfWorkspaceJustCheckedOut=_pathOfWorkspaceJustCheckedOut;
@property(readonly) double minimumLocalStatusRequestDelay; // @synthesize minimumLocalStatusRequestDelay=_minimumLocalStatusRequestDelay;
@property(readonly) BOOL shouldLoadRepositories; // @synthesize shouldLoadRepositories=_shouldLoadRepositories;
@property(readonly) NSArray *extensions; // @synthesize extensions=_extensions;
- (void).cxx_destruct;
- (void)cancelRequest:(id)arg1;
- (void)performRequest:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)performRequest:(id)arg1 waitUntilFinished:(BOOL)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)handleError:(id)arg1 forRequest:(id)arg2 operation:(id)arg3 waitUntilFinished:(BOOL)arg4 withCompletionBlock:(CDUnknownBlockType)arg5;
- (BOOL)validateRequest:(id)arg1 error:(id *)arg2;
@property BOOL waitingForAuthentication; // @synthesize waitingForAuthentication=_waitingForAuthentication;
@property long long maxConcurrentOperationCount; // @synthesize maxConcurrentOperationCount=_maxConcurrentOperationCount;
- (void)_finishLogForRequest:(id)arg1 operation:(id)arg2 withResult:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_startLogForRequest:(id)arg1 operation:(id)arg2;
- (void)removeAssociatedRepositoryRoot:(id)arg1 withFilePath:(id)arg2;
- (void)associateRepositoryRoot:(id)arg1 withFilePath:(id)arg2;
- (void)workingTreeRootForFilePath:(id)arg1 sourceControlExtension:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_upgradableSVNWorkingTreeRootForFilePath:(id)arg1;
- (id)_svnOriginURLForFilePath:(id)arg1;
- (void)workingTreeRootForFilePath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)workingTreeForFilePath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)workingTreeForFilePath:(id)arg1;
- (id)extensionForRequest:(id)arg1;
- (id)commonExtensionForPaths:(id)arg1;
- (id)extensionForURL:(id)arg1;
- (id)extensionToUseForFilePath:(id)arg1;
- (void)scanForExtensionsInFilePath:(id)arg1;
- (id)extensionsAtFilePath:(id)arg1;
- (void)invalidateExtensionsRecursivelyForFilePath:(id)arg1;
- (void)invalidateExtensionsForFilePath:(id)arg1;
- (id)extensionsAssociatedWithFilePath:(id)arg1;
- (void)removeAssociatedExtension:(id)arg1 withPath:(id)arg2;
- (void)associateExtension:(id)arg1 withPath:(id)arg2;
- (id)extensionMatchingDirectoryIdentifier:(id)arg1;
- (id)extensionsMatchingProtocol:(id)arg1;
- (id)extensionMatchingIdentifier:(id)arg1;
- (void)removeRepository:(id)arg1 removePasswordFromKeychain:(BOOL)arg2;
- (void)addRepository:(id)arg1;
- (void)addWorkingCopyConfiguration:(id)arg1;
- (void)removeSourceControlProject:(id)arg1;
- (void)addSourceControlProject:(id)arg1;
- (void)removeWorkingTree:(id)arg1;
- (void)addWorkingTree:(id)arg1;
- (void)updateUserDefaults;
@property(readonly) NSArray *workingTrees; // @synthesize workingTrees=_workingTrees;
- (id)arrayOfWorkingCopyConfigurationDictionaries;
- (id)workingCopyConfigurations;
- (id)arrayOfProjectDictionaries;
- (id)arrayOfRepositoryDictionaries;
@property(readonly) NSArray *repositories; // @synthesize repositories=_repositories;
- (id)repositoryWithRoot:(id)arg1 sourceControlExtension:(id)arg2;
- (void)repositoryRootForRepository:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)repositoryForURL:(id)arg1 sourceControlExtension:(id)arg2;
@property BOOL automaticallyAddNewFiles;
@property BOOL remoteStatusCheckingEnabled; // @synthesize remoteStatusCheckingEnabled=_remoteStatusCheckingEnabled;
@property BOOL localStatusCheckingEnabled; // @synthesize localStatusCheckingEnabled=_localStatusCheckingEnabled;
@property long long automaticallyScanWorkspaces;
@property BOOL enableSourceControl;
- (id)_blacklistedDirectories;
- (id)_directoryIdentifiers;
- (void)loadProjects;
@property(readonly) NSArray *projects; // @synthesize projects=_projects;
- (void)loadRepositories;
- (void)_fixVersion100Xcode5SCMPreferences;
- (void)loadXcode40RepositoriesFromArray:(id)arg1;
- (id)loadRepositoriesFromArray:(id)arg1 error:(id *)arg2;
- (BOOL)importAccountsFromKeychain:(struct OpaqueSecKeychainRef *)arg1 propertyList:(id)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
- (BOOL)exportAccountsToKeychain:(struct OpaqueSecKeychainRef *)arg1 propertyList:(id *)arg2 numberOfAccounts:(unsigned long long *)arg3 error:(id *)arg4;
@property(readonly) NSString *typeIdentifier;
- (void)loadExtensions;
- (id)defaultExtension;
- (id)initWithSavedRepositories:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexClassSymbol : IDEIndexContainerSymbol
{
    IDEIndexCollection *_subClasses;
}

- (void).cxx_destruct;
- (id)allInterfaces;
- (id)interfaces;
- (id)allProtocols;
- (id)protocols;
- (id)allOccurrencesOfMembers:(id)arg1;
- (id)allSubclasses;
- (id)subclasses;
- (id)allSuperclasses;
- (id)superclasses;
- (id)categories;
- (id)ibOutletCollectionProperties;
- (id)ibOutletCollectionVariables;
- (id)ibOutletCollections;
- (id)ibOutletProperties;
- (id)ibOutletVariables;
- (id)ibOutlets;
- (id)ibActionMethods;
- (id)properties;
- (id)instanceVariables;
- (id)classVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEIndexProtocolSymbol : IDEIndexContainerSymbol
{
}

- (id)allImplementingClasses;
- (id)implementingClasses;
- (id)subProtocols;
- (id)allSuperProtocols;
- (id)superProtocols;
- (id)properties;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEDebuggerSpecifier : NSObject
{
    DVTExtension *_extension;
    NSString *_correspondingLauncherIdentifier;
}

+ (BOOL)_isDefaultNonDebuggerLauncher:(id)arg1;
+ (id)_launcherExtensions;
+ (BOOL)requiresDebuggerForDevice:(id)arg1;
+ (id)defaultDebuggerSpecifierForWorkspace:(id)arg1;
+ (id)_launcherPluginIdentifierForDebuggerPlugin:(id)arg1;
+ (id)allDebuggerSpecifiersIncludingNone;
+ (id)allDebuggerSpecifiers;
+ (id)_specifierWithIdentifier:(id)arg1 inArray:(id)arg2;
+ (id)specifierWithIdentifierInAllDebuggerSpecifiersIncludingNone:(id)arg1;
+ (id)specifierWithIdentifierInAllSpecifiers:(id)arg1;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
@property(readonly) NSString *correspondingLauncherIdentifier;
@property(readonly) NSString *identifier;
@property(readonly) NSString *displayName;
- (id)_initWithExtension:(id)arg1;

@end

@interface IDEArchivedInAppContent : IDEArchivedContent
{
}

+ (id)keyPathsForValuesAffectingInAppContentPath;
+ (id)archivedContentPathPlistKey;
+ (id)archivedContentPropertiesPlistKey;
+ (BOOL)fillInfoDictionary:(id)arg1 forContentAtPath:(id)arg2 inArchiveProductsDirectory:(id)arg3;
+ (id)soleArchivedContentRelativePathInDirectory:(id)arg1;
- (long long)autodetectedFormatForPackaging;
- (BOOL)supportsPackagingAsFormat:(long long)arg1;
- (id)packager;
@property(readonly) DVTFilePath *inAppContentPath;

@end

@interface IDETestBundleBaselineRecord : NSObject
{
    NSMutableDictionary *_infoDict;
    NSMutableDictionary *_baselinesByRunDestinationUUIDDict;
}

+ (BOOL)_validatePropertyList:(id)arg1 errorString:(id *)arg2;
+ (id)_baselineRecordForBlueprint:(id)arg1 withRunDestinationRecord:(id)arg2 createIfNecessary:(BOOL)arg3 versionedFileManager:(id)arg4 filePath:(id *)arg5 error:(id *)arg6;
+ (id)baselineRecordForBlueprint:(id)arg1 withRunDestinationRecord:(id)arg2 createIfNecessary:(BOOL)arg3 versionedFileManager:(id)arg4 filePath:(id *)arg5 error:(id *)arg6;
+ (id)baselineRecordForBlueprint:(id)arg1 withRunDestinationRecord:(id)arg2 filePath:(id *)arg3 error:(id *)arg4;
+ (id)_baselineRecordFilePathInBundleBaselineWithFilePath:(id)arg1 withRunDestinationRecord:(id)arg2 createIfNecessary:(BOOL)arg3 workspace:(id)arg4 versionedFileManager:(id)arg5 error:(id *)arg6;
+ (id)_baselineRecordFilePathInBundleBaselineWithFilePath:(id)arg1 withRunDestinationRecord:(id)arg2 error:(id *)arg3;
+ (void)initialize;
- (void).cxx_destruct;
- (void)unionWithBundleBaselineRecord:(id)arg1;
- (void)setBaselineRecord:(id)arg1 forRunDestination:(id)arg2;
- (id)baselineRecordForRunDestination:(id)arg1;
- (id)runDestinations;
@property unsigned long long version;
- (BOOL)writeToFilePath:(id)arg1 workspace:(id)arg2 versionedFileManager:(id)arg3 error:(id *)arg4;
- (id)initWithFilePath:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface IDEScriptingElement : NSObject
{
    id _container;
    id _accessor;
}

@property(retain) id accessor; // @synthesize accessor=_accessor;
@property(retain) id container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)objectSpecifier;
- (id)objectSpecifierAsProperty;
- (id)objectSpecifierByIndex;
- (id)objectSpecifierByName:(id)arg1;
- (id)objectSpecifierByID:(id)arg1;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (void)setScriptingID:(id)arg1;
- (void)setName:(id)arg1;
- (id)description;

@end

@interface IDEScriptingWrapper : IDEScriptingElement
{
    id _client;
}

+ (id)wrapSingleton:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItems:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItem:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
@property(retain) id client; // @synthesize client=_client;
- (void).cxx_destruct;
- (id)objectSpecifier;
- (BOOL)isEqual:(id)arg1;
- (id)scriptingID;
- (id)name;
- (id)description;

@end

@interface IDEScriptingProxy : IDEScriptingElement
{
    id _key;
    id _collection;
}

+ (id)wrapDictionary:(id)arg1 inProxy:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItemOfDictionary:(id)arg1 forKey:(id)arg2 inProxy:(Class)arg3 forContainer:(id)arg4 andAccessor:(id)arg5;
@property(retain) id collection; // @synthesize collection=_collection;
@property(retain) id key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)objectSpecifier;
- (BOOL)isEqual:(id)arg1;
- (void)setValue:(id)arg1;
- (id)value;
- (id)scriptingID;
- (id)name;
- (id)description;

@end

@interface IDESchemeActionResult : NSObject
{
    DVTObservingToken *_logRecordingToken;
    NSMutableArray *_warningSummaries;
    NSMutableArray *_errorSummaries;
    NSMutableArray *_analyzerWarningSummaries;
    NSMutableArray *_testFailureSummaries;
    NSMutableArray *_testableSummaries;
    BOOL _localLogFileIsCurrent;
    BOOL _remoteLogNeedsFetch;
    BOOL _remoteTestSummaryNeedsFetch;
    int _status;
    NSString *_resultName;
    NSError *_error;
    IDEActivityLogSection *_log;
    id _remoteLogIdentifier;
    unsigned long long _warningCount;
    unsigned long long _errorCount;
    unsigned long long _analyzerWarningCount;
    unsigned long long _testsCount;
    unsigned long long _testsFailedCount;
    id _remoteTestSummaryIdentifier;
    NSString *_testSummaryPath;
    NSString *_logPath;
    DVTFilePath *_localResultDirectoryFilePath;
    DVTFilePath *_creatingWorkspaceFilePath;
}

+ (int)actionResultStatusForString:(id)arg1;
+ (id)stringForActionResultStatus:(int)arg1;
+ (id)testableSummariesForFilePath:(id)arg1 runDestinationRecord:(id *)arg2 error:(id *)arg3;
+ (BOOL)automaticallyNotifiesObserversOfLog;
@property(retain, nonatomic) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(retain, nonatomic) DVTFilePath *localResultDirectoryFilePath; // @synthesize localResultDirectoryFilePath=_localResultDirectoryFilePath;
@property(copy, nonatomic) NSString *logPath; // @synthesize logPath=_logPath;
@property(copy, nonatomic) NSString *testSummaryPath; // @synthesize testSummaryPath=_testSummaryPath;
@property(nonatomic) BOOL remoteTestSummaryNeedsFetch; // @synthesize remoteTestSummaryNeedsFetch=_remoteTestSummaryNeedsFetch;
@property(copy, nonatomic) id remoteTestSummaryIdentifier; // @synthesize remoteTestSummaryIdentifier=_remoteTestSummaryIdentifier;
@property(nonatomic) unsigned long long testsFailedCount; // @synthesize testsFailedCount=_testsFailedCount;
@property(nonatomic) unsigned long long testsCount; // @synthesize testsCount=_testsCount;
@property(nonatomic) unsigned long long analyzerWarningCount; // @synthesize analyzerWarningCount=_analyzerWarningCount;
@property(nonatomic) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(nonatomic) unsigned long long warningCount; // @synthesize warningCount=_warningCount;
@property(nonatomic) BOOL remoteLogNeedsFetch; // @synthesize remoteLogNeedsFetch=_remoteLogNeedsFetch;
@property(copy, nonatomic) id remoteLogIdentifier; // @synthesize remoteLogIdentifier=_remoteLogIdentifier;
@property(nonatomic) BOOL localLogFileIsCurrent; // @synthesize localLogFileIsCurrent=_localLogFileIsCurrent;
@property(retain, nonatomic) IDEActivityLogSection *log; // @synthesize log=_log;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) int status; // @synthesize status=_status;
@property(copy, nonatomic) NSString *resultName; // @synthesize resultName=_resultName;
@property(retain, nonatomic) NSArray *testableSummaries; // @synthesize testableSummaries=_testableSummaries;
@property(retain, nonatomic) NSArray *testFailureSummaries; // @synthesize testFailureSummaries=_testFailureSummaries;
@property(retain, nonatomic) NSArray *analyzerWarningSummaries; // @synthesize analyzerWarningSummaries=_analyzerWarningSummaries;
@property(retain, nonatomic) NSArray *errorSummaries; // @synthesize errorSummaries=_errorSummaries;
@property(retain, nonatomic) NSArray *warningSummaries; // @synthesize warningSummaries=_warningSummaries;
- (void).cxx_destruct;
- (BOOL)updateLocalTestSummaryWithRemoteTestSummary:(id)arg1 forSchemeActionRecord:(id)arg2 error:(id *)arg3;
- (BOOL)saveTestSummariesForTestableSummaryFilePath:(id)arg1 runDestinationRecord:(id)arg2 error:(id *)arg3;
- (BOOL)saveTestSummariesForSchemeActionRecord:(id)arg1 error:(id *)arg2;
- (id)testSummaryFormatVersionString;
@property(readonly, nonatomic) DVTFilePath *localTestSummaryFilePath;
- (void)_readIssueSummaries;
- (id)_issueSummaryForMessage:(id)arg1 blueprint:(id)arg2;
- (BOOL)waitUntilBuildLogHasBeenClosed:(id)arg1 error:(id *)arg2;
- (BOOL)loadInMemoryLogFromLocalLogFileReturningError:(id *)arg1;
- (BOOL)flushInMemoryLogIfPossibleReturningError:(id *)arg1;
- (BOOL)saveInMemoryLogReturningError:(id *)arg1;
- (BOOL)updateLocalLogWithRemoteLogData:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) DVTFilePath *localLogFilePath;
- (id)description;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1 forSchemeActionsInvocationRecord:(id)arg2;
- (id)dictionaryRepresentationForSchemeActionsInvocationRecord:(id)arg1;
- (BOOL)saveForSchemeActionRecord:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithResultName:(id)arg1 localResultDirectoryFilePath:(id)arg2 creatingWorkspaceFilePath:(id)arg3;

@end

@interface IDEUIATestScriptAgentCommunicator : NSObject <UIAInstrumentAuthorizedAPI>
{
    DTXChannel *_deviceChannel;
    BOOL _isAgentReady;
    BOOL _shouldRunAsInternal;
    IDELaunchSession *_appLaunchSession;
    NSString *_testManagerSessionUUID;
    DVTDevice *_targetDevice;
    NSString *_targetBundleID;
    NSString *_agentReadableStatus;
    unsigned long long _agentStatus;
}

+ (void)initialize;
@property unsigned long long agentStatus; // @synthesize agentStatus=_agentStatus;
@property(retain) NSString *agentReadableStatus; // @synthesize agentReadableStatus=_agentReadableStatus;
@property(retain) NSString *targetBundleID; // @synthesize targetBundleID=_targetBundleID;
@property(retain) DVTDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain) NSString *testManagerSessionUUID; // @synthesize testManagerSessionUUID=_testManagerSessionUUID;
@property BOOL shouldRunAsInternal; // @synthesize shouldRunAsInternal=_shouldRunAsInternal;
@property(retain) IDELaunchSession *appLaunchSession; // @synthesize appLaunchSession=_appLaunchSession;
@property BOOL isAgentReady; // @synthesize isAgentReady=_isAgentReady;
- (void).cxx_destruct;
- (void)_stopTestingWithReason:(int)arg1;
- (void)_stopPlayingWithException:(id)arg1 causeTrackError:(BOOL)arg2;
- (void)_handleDataMessage:(id)arg1;
- (id)deviceChannel;
- (void)_stopAndReportExceptionOnMainThread:(id)arg1;
- (void)_updateBundleStatusOnMainThread:(id)arg1;
- (void)_updateScriptStatusOnMainThread:(id)arg1;
- (void)_mainThreadAddSample:(id)arg1;
- (void)notifyMonitoredPidIsDead:(id)arg1;
- (id)performTaskOnHost:(id)arg1 withArguments:(id)arg2 timeout:(id)arg3;
- (void)scriptDidThrowException:(id)arg1;
- (void)agentIsGone:(id)arg1;
- (void)stopPlayingWithException:(id)arg1;
- (void)updateBundleStatus:(id)arg1;
- (void)updateScriptStatus:(id)arg1;
- (void)agentIsReady;
- (void)runTestBundleAtPath:(id)arg1 withRunDictionary:(id)arg2 andArgumentsDictionary:(id)arg3;
- (void)readyScriptAgentForAppWithPID:(id)arg1;
- (id)initWithDevice:(id)arg1 andAppTargetBundleID:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEGroupCore : IDEContainerItemCore <IDEGroupCore>
{
    id <IDEContainerCore> _parentContainer;
    NSString *_name;
    NSArray *_subitems;
}

@property(copy) NSArray *subitems; // @synthesize subitems=_subitems;
@property(copy) NSString *name; // @synthesize name=_name;
- (void)setParentContainer:(id)arg1;
@property(readonly) id <IDEContainerCore> parentContainer;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) id <IDEGroupCore> parentGroup;
@property(copy) NSString *path;
@property(readonly) Class superclass;

@end

@interface IDEInstallCommandLineVerb : IDEBuildCommandLineVerb
{
}

+ (id)synthesizedOverridingBuildPropertiesWithEnvironment:(id)arg1;

@end

@interface IDEContainerItem : DVTModelObject <DVTInvalidation, DVTReferenceResolverClient>
{
    IDEGroup *_superitem;
    NSMutableDictionary *_properties;
    NSString *_path;
    DVTReferenceResolver *_resolver;
    struct {
        unsigned int observingForBuildProductsRelative:1;
        unsigned int observingForCurrentSDKRelative:1;
        unsigned int observingForSourceTreeRelative:1;
    } _flags;
}

+ (id)keyPathsForValuesAffectingExpectedFilePath;
+ (id)keyPathsForValuesAffectingWrapsLines;
+ (id)keyPathsForValuesAffectingIndentWidth;
+ (id)keyPathsForValuesAffectingTabWidth;
+ (id)keyPathsForValuesAffectingUsesTabs;
+ (BOOL)automaticallyNotifiesObserversOfContainer;
+ (id)supportedCustomResolutionStrategies;
+ (id)supportedResolutionStrategies;
+ (void)initialize;
@property(readonly) NSString *path; // @synthesize path=_path;
@property(readonly) DVTReferenceResolver *resolver; // @synthesize resolver=_resolver;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)_takePathAndResolutionStrategiesFromContainerItem:(id)arg1;
@property(readonly) DVTFilePath *expectedFilePath;
@property(readonly) DVTFilePath *resolvedFilePath;
- (BOOL)_getPathAndResolutionStrategiesForAbsolutePath:(id)arg1 path:(id *)arg2 resolutionStrategies:(id *)arg3;
- (BOOL)_getPath:(id *)arg1 forStrategies:(id)arg2;
- (BOOL)_getPath:(id *)arg1 forStrategies:(id)arg2 absolutePath:(id)arg3;
- (id)_absolutePath;
- (id)resolutionContextForStrategies:(id)arg1;
@property(readonly) unsigned long long aggregateSourceControlConflictStatus;
@property(readonly) int aggregateSourceControlServerStatus;
@property(readonly) int aggregateSourceControlLocalStatus;
@property(readonly) unsigned long long conflictStateForUpdateOrMerge;
@property(readonly) int sourceControlServerStatus;
@property(readonly) int sourceControlLocalStatus;
- (void)_setContainerItemEdited;
@property(readonly, copy) NSString *description;
- (void)debugPrintStructure;
- (void)debugPrintInnerStructure;
@property(copy) DVTSourceCodeLanguage *language;
@property BOOL wrapsLines;
@property long long indentWidth;
@property long long tabWidth;
@property BOOL usesTabs;
@property unsigned long long textEncoding;
@property unsigned long long lineEndings;
- (id)_textPreferences;
- (void)_setProperty:(id)arg1 forKey:(id)arg2;
- (id)_propertyForKey:(id)arg1 searchParent:(BOOL)arg2;
- (id)_propertiesCreatingIfNeeded;
@property(readonly) NSDictionary *properties;
- (id)name;
@property(readonly, getter=isEditable) BOOL editable;
- (void)_didSetContainer;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
@property(readonly) IDEContainer *container;
- (void)_setSuperitem:(id)arg1;
@property(readonly) IDEGroup *superitem;
- (void)setPath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)primitiveChangePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)resolverStrategiesDidChange:(id)arg1;
- (void)_configureReferenceResolutionStrategySpecificObservations;
- (void)_clearAllReferenceResolutionStrategySpecificObservations;
- (void)_setupSourceTreeRelativeObservations;
- (void)_clearSourceTreeRelativeObservations;
- (void)_setupCurrentSDKRelativeObservations;
- (void)_clearCurrentSDKRelativeObservations;
- (void)_setupBuildProductsRelativeObservations;
- (void)_clearBuildProductsRelativeObservations;
- (void)_workspaceBuildProductsLocationDidChange:(id)arg1;
- (void)_invalidateResolvedFilePath;
- (id)relativePathForPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)initWithPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)init;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)setReferenceStrategyFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLocationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPathFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setReferenceStyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEContainerItemWrapper : IDEScriptingWrapper
{
}

- (void)setProject:(id)arg1;
- (id)project;
- (void)setScriptingID:(id)arg1;
- (id)scriptingID;
- (void)setScriptingContainer:(id)arg1;
- (id)scriptingContainer;

@end

@interface ProjectItemWrapper : IDEContainerItemWrapper
{
}

@end

@interface IDEItemReferenceWrapper : IDEContainerItemWrapper
{
}

- (void)setUsesTabs:(BOOL)arg1;
- (BOOL)usesTabs;
- (void)setTabWidth:(long long)arg1;
- (long long)tabWidth;
- (void)setRealPath:(id)arg1;
- (id)realPath;
- (void)setPath:(id)arg1;
- (id)path;
- (void)setLineEnding:(unsigned int)arg1;
- (unsigned int)lineEnding;
- (void)setIndentWidth:(long long)arg1;
- (long long)indentWidth;
- (void)setGroup:(id)arg1;
- (id)group;
- (void)setFullPath:(id)arg1;
- (id)fullPath;
- (void)setFileEncoding:(unsigned int)arg1;
- (unsigned int)fileEncoding;
- (void)setEntireContents:(id)arg1;
- (id)entireContents;
- (void)setContents:(id)arg1;
- (id)contents;
- (id)name;

@end

@interface IDEPosixSpawnLaunchLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEPosixSpawnLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDEDistributionItem : NSObject <NSCopying>
{
    BOOL _canHaveProvisioningProfile;
    IDEArchive *_archive;
    DVTFilePath *_path;
    IDEDistributionItem *_parent;
    NSArray *_childItems;
    NSString *_teamID;
    NSString *_appID;
    NSString *_appIDWithoutPrefix;
    NSDictionary *_infoDictionary;
    NSDictionary *_entitlements;
    NSDictionary *_archivedUserEntitlements;
}

+ (id)flattenDistributionItems:(id)arg1;
+ (id)embeddedProvisioningProfileForItemAtPath:(id)arg1 error:(id *)arg2;
+ (id)canHaveProvisioningProfileForItemAtPath:(id)arg1 logAspect:(id)arg2 error:(id *)arg3;
+ (unsigned int)machOFileTypeAtPath:(id)arg1 error:(id *)arg2;
+ (id)archivedUserEntitlementsForItemAtPath:(id)arg1 archive:(id)arg2 error:(id *)arg3;
+ (id)infoDictionaryForItemAtPath:(id)arg1 error:(id *)arg2;
+ (id)itemWithArchive:(id)arg1 path:(id)arg2 childItems:(id)arg3 logAspect:(id)arg4 error:(id *)arg5;
@property(readonly, nonatomic) BOOL canHaveProvisioningProfile; // @synthesize canHaveProvisioningProfile=_canHaveProvisioningProfile;
@property(readonly, nonatomic) NSDictionary *archivedUserEntitlements; // @synthesize archivedUserEntitlements=_archivedUserEntitlements;
@property(readonly, nonatomic) NSDictionary *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly, nonatomic) NSDictionary *infoDictionary; // @synthesize infoDictionary=_infoDictionary;
@property(readonly, nonatomic) NSString *appIDWithoutPrefix; // @synthesize appIDWithoutPrefix=_appIDWithoutPrefix;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(readonly, nonatomic) NSString *teamID; // @synthesize teamID=_teamID;
@property(readonly, nonatomic) NSArray *childItems; // @synthesize childItems=_childItems;
@property __weak IDEDistributionItem *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
@property(readonly, nonatomic) IDEArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSString *bundleID;
- (id)initWithArchive:(id)arg1 path:(id)arg2 infoDictionary:(id)arg3 canHaveProvisioningProfile:(BOOL)arg4 teamID:(id)arg5 appID:(id)arg6 appIDWithoutPrefix:(id)arg7 entitlements:(id)arg8 archivedUserEntitlements:(id)arg9 childItems:(id)arg10;

@end

@interface IDERunOperationWorker : NSObject <DVTInvalidation>
{
    NSString *_extensionIdentifier;
    IDELaunchSession *_launchSession;
    id <IDERunOperationWorkerDelegate> _runOperation;
    id <IDERunOperationWorkerTracker> _runnableTracker;
    DVTDispatchLock *_lock;
}

+ (void)initialize;
@property(retain) id <IDERunOperationWorkerTracker> runnableTracker; // @synthesize runnableTracker=_runnableTracker;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(readonly) NSString *extensionIdentifier; // @synthesize extensionIdentifier=_extensionIdentifier;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (void)terminate;
- (void)finishedWithError:(id)arg1;
- (void)start;
- (void)setRunOperation:(id)arg1;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEBuildParameters : NSObject <NSCopying, NSMutableCopying>
{
    IDEWorkspaceArenaSnapshot *_workspaceArenaSnapshot;
    NSString *_buildAction;
    IDESchemeCommand<IDEPrimitiveSchemeCommand> *_schemeCommand;
    NSString *_configurationName;
    IDERunDestination *_activeRunDestination;
    NSString *_activeArchitecture;
    IDEOverridingBuildProperties *_overridingProperties;
    NSString *_stateKey;
    unsigned long long _hash;
}

@property(readonly, copy) IDEOverridingBuildProperties *overridingProperties; // @synthesize overridingProperties=_overridingProperties;
@property(readonly, copy) NSString *activeArchitecture; // @synthesize activeArchitecture=_activeArchitecture;
@property(readonly) IDERunDestination *activeRunDestination; // @synthesize activeRunDestination=_activeRunDestination;
@property(readonly, copy) NSString *configurationName; // @synthesize configurationName=_configurationName;
@property(readonly) IDESchemeCommand<IDEPrimitiveSchemeCommand> *schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property(readonly, copy) NSString *buildAction; // @synthesize buildAction=_buildAction;
@property(readonly, copy) IDEWorkspaceArenaSnapshot *workspaceArenaSnapshot; // @synthesize workspaceArenaSnapshot=_workspaceArenaSnapshot;
- (void).cxx_destruct;
- (id)dvt_detailedDebugDescription;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)_componentPropertyNames;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copyWithMutability:(BOOL)arg1;
- (id)init;

@end

@interface IDEMutableBuildParameters : IDEBuildParameters
{
}

@property(copy) IDEOverridingBuildProperties *overridingProperties; // @dynamic overridingProperties;
@property(copy) NSString *activeArchitecture; // @dynamic activeArchitecture;
@property(retain) IDERunDestination *activeRunDestination; // @dynamic activeRunDestination;
@property(copy) NSString *configurationName; // @dynamic configurationName;
@property(retain) IDESchemeCommand<IDEPrimitiveSchemeCommand> *schemeCommand; // @dynamic schemeCommand;
@property(copy) NSString *buildAction; // @dynamic buildAction;
@property(copy) IDEWorkspaceArenaSnapshot *workspaceArenaSnapshot; // @dynamic workspaceArenaSnapshot;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEEnergyLogScoreFormatter : NSFormatter
{
}

+ (id)defaultFormatter;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;

@end

@interface IDEDirectoryBasedCustomDataStore : DVTDirectoryBasedCustomDataStore
{
}

- (void)addSpecifier:(id)arg1 inWorkspace:(id)arg2 toSCMWithCompletionBlock:(CDUnknownBlockType)arg3;
- (void)scmStatusForSpecifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface IDEUIATestHostTask : NSObject
{
    BOOL _isTaskOuputComplete;
    BOOL _isTaskErrorComplete;
    NSString *_taskOutputString;
    NSString *_taskErrorString;
    NSDictionary *_results;
    NSString *_path;
    NSArray *_arguments;
    NSNumber *_timeout;
}

+ (void)initialize;
@property(retain) NSNumber *timeout; // @synthesize timeout=_timeout;
@property(retain) NSArray *arguments; // @synthesize arguments=_arguments;
@property(retain) NSString *path; // @synthesize path=_path;
@property(retain) NSDictionary *results; // @synthesize results=_results;
@property(retain) NSString *taskErrorString; // @synthesize taskErrorString=_taskErrorString;
@property(retain) NSString *taskOutputString; // @synthesize taskOutputString=_taskOutputString;
@property BOOL isTaskErrorComplete; // @synthesize isTaskErrorComplete=_isTaskErrorComplete;
@property BOOL isTaskOuputComplete; // @synthesize isTaskOuputComplete=_isTaskOuputComplete;
- (void).cxx_destruct;
- (BOOL)run;
- (void)_getTaskErrorData:(id)arg1;
- (void)_getTaskOutputData:(id)arg1;
- (id)initWithPath:(id)arg1 withArguments:(id)arg2 timeout:(id)arg3;
- (id)init;

@end

@interface IDEBuildOperationQueueSet : NSObject
{
    NSString *_identifier;
    NSOperationQueue *_copyTaskQueue;
    unsigned long long _slidingMaxNumberOfConcurrentCompileTasks;
    BOOL _didReduceConcurrencyDueToResourcePressure;
    NSOperationQueue *_compileTaskQueue;
    NSOperationQueue *_linkTaskQueue;
    DVTDispatchLock *_updateConcurrencyLock;
    NSDate *_lastCheckedResourcePressure;
    NSDate *_lastIncreasedConcurrency;
    NSObject<OS_dispatch_queue> *_addOperationQueue;
}

+ (id)sharedBuildTaskQueueSet;
+ (unsigned long long)maxNumberOfConcurrentCompileTasks;
+ (void)setMaxNumberOfConcurrentCompileTasks:(unsigned long long)arg1;
+ (void)initialize;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)dealloc;
- (void)addLinkTaskOperation:(id)arg1 forCommand:(id)arg2;
- (void)addCopyTaskOperation:(id)arg1 forCommand:(id)arg2;
- (void)addCompileTaskOperation:(id)arg1 forCommand:(id)arg2;
- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)arg1;
- (void)resetOperationConcurrency;
- (void)updateOperationConcurrency;
- (id)initWithIdentifier:(id)arg1;

@end

@interface IDEBatchFindManager : NSObject <DVTInvalidation>
{
    NSMutableArray *_history;
    unsigned long long _maxHistoryCount;
    NSString *_archivePath;
}

+ (void)initialize;
@property(readonly) NSArray *findHistory; // @synthesize findHistory=_history;
@property(nonatomic) unsigned long long maxHistoryCount; // @synthesize maxHistoryCount=_maxHistoryCount;
- (void).cxx_destruct;
- (void)loadHistory;
- (void)saveHistory;
- (id)historyItemForDescription:(id)arg1;
- (void)clearHistory;
- (void)_removeHistoryFile;
- (void)addHistoryItem:(id)arg1;
- (void)_removeExtraHistory;
- (void)primitiveInvalidate;
- (id)initWithDerivedDataFolderPath:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEIndexingJob : NSObject
{
    IDEIndexingEngine *_engine;
    id <IDEIndexable> _indexable;
    DVTFilePath *_file;
    NSSet *_dirtyFiles;
    IDEIndexImportSession *_session;
    NSDictionary *_settings;
    BOOL _canceled;
    BOOL _completed;
    BOOL _deferred;
    BOOL _treatAsDeferred;
    BOOL _onHold;
    BOOL _highPriority;
    NSSet *_oldDirtyFiles;
}

+ (void)initialize;
@property(readonly, nonatomic) NSSet *oldDirtyFiles; // @synthesize oldDirtyFiles=_oldDirtyFiles;
@property(nonatomic, getter=isHighPriority) BOOL highPriority; // @synthesize highPriority=_highPriority;
@property(nonatomic, getter=isOnHold) BOOL onHold; // @synthesize onHold=_onHold;
@property(nonatomic, getter=isDeferred) BOOL deferred; // @synthesize deferred=_deferred;
@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) IDEIndexImportSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) NSSet *dirtyFiles; // @synthesize dirtyFiles=_dirtyFiles;
@property(readonly, nonatomic) DVTFilePath *file; // @synthesize file=_file;
@property(readonly, nonatomic) id <IDEIndexable> indexable; // @synthesize indexable=_indexable;
@property(readonly, nonatomic) __weak IDEIndexingEngine *engine; // @synthesize engine=_engine;
- (void).cxx_destruct;
- (void)didCompleteWithLanguage:(id)arg1 pch:(BOOL)arg2;
- (void)didComplete;
- (BOOL)shouldContinue;
- (id)newMainFileWithSource:(id)arg1 modified:(id)arg2;
- (void)indexFile:(id)arg1 indexable:(id)arg2;
- (void)cancel;
- (void)run;
- (void)treatAsDeferred;
@property(readonly, nonatomic, getter=isModuleJob) BOOL moduleJob;
@property(readonly, nonatomic) NSString *target;
@property(readonly, nonatomic) IDEIndex *index;
- (void)addDirtyFile:(id)arg1;
- (id)initWithEngine:(id)arg1 indexable:(id)arg2 file:(id)arg3;
- (id)initWithEngine:(id)arg1 indexable:(id)arg2;

@end

@interface IDEIndexContainerSymbol : IDEIndexSymbol
{
}

- (id)children;

@end

@interface IDEFileReference : IDEContainerItem <IDEStructureEditing>
{
    DVTFileDataType *_assignedFileDataType;
    DVTFilePath *_watchedFilePath;
    DVTFilePath *_oldWatchedFilePath;
    DVTFilePath *_resolvedFilePath;
    DVTFileDataType *_presumedFileDataType;
    DVTFileDataType *_lastKnownFileDataType;
    DVTFileDataType *_lastDiscoveredFileDataType;
    DVTFileDataType *_discoveredFileDataType;
    DVTExtension *_referencedContainerExtension;
    IDEContainer *_referencedContainer;
    BOOL _workaroundForProblem8727051;
    BOOL _stopResolvingReferencedContainers;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    int _aggregateSourceControlLocalStatus;
    int _aggregateSourceControlServerStatus;
    unsigned long long _aggregateSourceControlConflictStatus;
    BOOL _sourceControlLocalStatusNeedsUpdate;
    BOOL _sourceControlServerStatusNeedsUpdate;
    BOOL _sourceControlConflictStatusNeedsUpdate;
    BOOL _waitingForChangeNotificationsToResume;
    id <NSObject> _modelObjectGraphDidCoalesceNotificationToken;
}

+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlConflictStatus;
+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlLocalStatus;
+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
+ (id)keyPathsForValuesAffectingExpectedFilePath;
+ (id)keyPathsForValuesAffectingName;
+ (id)fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2;
+ (id)fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2 workspace:(id)arg3;
+ (id)_fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2 workspace:(id)arg3;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingIdeModelObjectTypeIdentifier;
@property(copy, nonatomic) DVTFileDataType *assignedFileDataType; // @synthesize assignedFileDataType=_assignedFileDataType;
- (void).cxx_destruct;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (void)_performMove:(id)arg1 newFilePath:(id)arg2 newPath:(id)arg3 inContext:(id)arg4;
- (id)_structureEditNameForSuggestedName:(id)arg1;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (BOOL)allowRemovingContainerGroup;
- (void)fileReferenceWasConfigured;
- (void)_takeConfigurationFromFileReference:(id)arg1;
- (void)primitiveInvalidate;
- (void)debugPrintInnerStructure;
- (void)_updateSourceControlStatusIfNeeded;
- (void)_updateAggregateSourceControlConflictStatus;
- (void)_updateAggregateSourceControlServerStatus;
- (void)_updateAggregateSourceControlLocalStatus;
- (void)_setAggregateSourceControlConflictStatus:(unsigned long long)arg1;
- (void)_setAggregateSourceControlServerStatus:(int)arg1;
- (void)_setAggregateSourceControlLocalStatus:(int)arg1;
- (void)_updateConflictStateForUpdateOrMerge;
@property unsigned long long conflictStateForUpdateOrMerge;
- (void)_updateSourceControlServerStatus;
@property int sourceControlServerStatus;
- (void)_updateSourceControlLocalStatus;
- (void)_updateSourceControlStatus;
@property int sourceControlLocalStatus;
- (unsigned long long)aggregateSourceControlConflictStatus;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (BOOL)isReferencedContainerLoaded;
- (void)_invalidateReferencedContainer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_referencedContainer;
@property(readonly) IDEContainer *referencedContainer;
- (void)_recalculateReferencedContainer;
- (BOOL)_workaroundForProblem8727051;
@property(readonly) DVTExtension *referencedContainerExtension;
- (BOOL)_isBuildProductReference;
- (void)_invalidateFileDataType;
@property(readonly) DVTFileDataType *discoveredFileDataType;
@property(readonly) DVTFileDataType *lastKnownFileDataType;
@property(readonly) DVTFileDataType *presumedFileDataType;
- (void)_assignedFileDataTypeDidChange;
@property(readonly) DVTFilePath *expectedFilePath;
- (BOOL)_resolvedFilePathIsValid;
- (void)_resolvedFilePathDidChange:(id)arg1;
- (void)_invalidateResolvedFilePathUsingPath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_invalidateResolvedFilePath;
- (void)_resolvedFilePathWasInvalidated;
- (id)_resolvedFilePathIfAvailable;
@property(readonly) DVTFilePath *resolvedFilePath;
@property(readonly) NSString *name;
- (void)_invalidateStartingWith:(id)arg1 changeBlock:(CDUnknownBlockType)arg2;
- (void)_invalidateStartingWith:(id)arg1;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_setContainer:(id)arg1;
- (id)init;
@property(readonly) NSString *sourceControlRepositoryURLString;
@property(readonly) NSString *sourceControlCurrentRevision;
@property(readonly) NSString *sourceControlCurrentBranchString;
@property(readonly) IDESourceControlExtension *sourceControlExtension;
@property(readonly) IDESourceControlRepository *sourceControlRepository;
- (id)ideModelObjectTypeIdentifier;
- (void)setAssignedFileDataTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;

@end

@interface IDEFileReferenceWrapper : IDEItemReferenceWrapper
{
}

- (void)setTag:(id)arg1;
- (void)setStatus:(int)arg1;
- (void)setRevisionNumber:(id)arg1;
- (void)setHeadRevisionNumber:(id)arg1;
- (void)setFileKind:(id)arg1;

@end

@interface IDEExecutionTracker : NSObject
{
    NSString *_statusDisplayName;
    DVTFilePath *_statusImageFilePath;
    IDELaunchSession *_launchSession;
    NSMutableArray *_subtrackers;
    BOOL _isFinished;
    int _serviceTier;
    int _cancellationReason;
    NSError *_error;
    NSString *_debugName;
}

+ (void)initialize;
@property(copy) NSString *debugName; // @synthesize debugName=_debugName;
@property int cancellationReason; // @synthesize cancellationReason=_cancellationReason;
@property(retain) NSError *error; // @synthesize error=_error;
@property int serviceTier; // @synthesize serviceTier=_serviceTier;
@property(retain) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain) DVTFilePath *statusImageFilePath; // @synthesize statusImageFilePath=_statusImageFilePath;
@property(retain) NSString *statusDisplayName; // @synthesize statusDisplayName=_statusDisplayName;
@property BOOL isFinished; // @synthesize isFinished=_isFinished;
- (void).cxx_destruct;
- (id)description;
- (void)setStatusDisplayName:(id)arg1 statusImageFilePath:(id)arg2;
- (void)addSubtracker:(id)arg1;
- (void)_updateIsFinished;
- (void)cancel;
- (void)cancelWithReason:(int)arg1;
@property(readonly) BOOL statusChanged;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableSubtrackers; // @dynamic mutableSubtrackers;
@property(readonly) NSArray *subtrackers; // @dynamic subtrackers;

@end

@interface IDEBuildStatisticsData : NSObject <IDEBuildStatisticsData>
{
    NSString *_commandString;
    NSString *_title;
    unsigned long long _ordinal;
    DVTSystemStatisticsMeasurement *_startSystemStats;
    DVTSystemStatisticsMeasurement *_endSystemStats;
    double _elapsedUserTime;
    double _elapsedSystemTime;
}

@property double elapsedSystemTime; // @synthesize elapsedSystemTime=_elapsedSystemTime;
@property double elapsedUserTime; // @synthesize elapsedUserTime=_elapsedUserTime;
@property(retain) DVTSystemStatisticsMeasurement *endSystemStats; // @synthesize endSystemStats=_endSystemStats;
@property(retain) DVTSystemStatisticsMeasurement *startSystemStats; // @synthesize startSystemStats=_startSystemStats;
@property unsigned long long ordinal; // @synthesize ordinal=_ordinal;
@property(copy) NSString *title; // @synthesize title=_title;
@property(copy) NSString *commandString; // @synthesize commandString=_commandString;
- (void).cxx_destruct;
- (void)emitContentsForAspect:(id)arg1 logLevel:(int)arg2 indentLevel:(unsigned long long)arg3 withBlock:(CDUnknownBlockType)arg4;
- (id)defaultEmissionStringWithIndentLevel:(unsigned long long)arg1;
@property(readonly) long long numberOfVMPageouts;
@property(readonly) long long numberOfVMPageins;
@property(readonly) double elapsedWallClockTime;
@property(readonly) double endWallClockTime;
@property(readonly) double startWallClockTime;
- (id)initWithTitle:(id)arg1 commandString:(id)arg2 ordinal:(unsigned long long)arg3 startSystemStatisticsMeasurement:(id)arg4 endSystemStatisticsMeasurement:(id)arg5 elapsedUserTime:(double)arg6 elapsedSystemTime:(double)arg7;

@end

@interface IDESourceControlPatch : NSObject
{
    NSArray *_nodes;
    NSDictionary *_itemNodes;
    NSDictionary *_index;
    DVTFilePath *_location;
    NSString *_name;
    NSString *_message;
    NSString *_workspaceName;
    NSDictionary *_treeNodes;
}

+ (id)patchesDirectoryForWorkspace:(id)arg1;
+ (id)patchExtension;
@property(retain) NSDictionary *treeNodes; // @synthesize treeNodes=_treeNodes;
@property(copy) NSString *workspaceName; // @synthesize workspaceName=_workspaceName;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *name; // @synthesize name=_name;
@property(retain) DVTFilePath *location; // @synthesize location=_location;
@property(retain) NSDictionary *index; // @synthesize index=_index;
@property(retain) NSDictionary *itemNodes; // @synthesize itemNodes=_itemNodes;
- (void).cxx_destruct;
- (id)initWithNodes:(id)arg1;
- (id)nodeForItem:(id)arg1;
- (id)modifiedItems;
@property(readonly) NSString *fileName;

@end

@interface IDESourceControlPatchItemNode : NSObject <IDESourceControlPatchNode>
{
    BOOL _reverseDiff;
    IDESourceControlWorkingTreeItem *_item;
    NSString *_format;
    DVTFilePath *_diffFilePath;
    DVTFilePath *_baseFilePath;
    NSString *_diffString;
    DVTFileWrapper *_wrapper;
    NSString *_status;
    NSString *_baseRevisionIdentifier;
}

@property BOOL reverseDiff; // @synthesize reverseDiff=_reverseDiff;
@property(copy) NSString *baseRevisionIdentifier; // @synthesize baseRevisionIdentifier=_baseRevisionIdentifier;
@property(copy) NSString *status; // @synthesize status=_status;
@property(retain) DVTFileWrapper *wrapper; // @synthesize wrapper=_wrapper;
@property(copy) NSString *diffString; // @synthesize diffString=_diffString;
@property(copy) DVTFilePath *baseFilePath; // @synthesize baseFilePath=_baseFilePath;
@property(copy) DVTFilePath *diffFilePath; // @synthesize diffFilePath=_diffFilePath;
@property(copy) NSString *format; // @synthesize format=_format;
@property(readonly) __weak IDESourceControlWorkingTreeItem *item; // @synthesize item=_item;
- (void).cxx_destruct;
- (id)initWithItem:(id)arg1;
- (id)representedObject;
- (id)modifiedItems;
- (id)children;
- (BOOL)resolved;
- (id)indexInfo;
- (id)fileWrapper;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDESourceControlPatchWorkingTreeNode : NSObject <IDESourceControlPatchNode>
{
    IDESourceControlWorkingTree *_workingTree;
    NSMutableArray *_children;
    IDESourceControlManager *_scm;
    NSString *_baseRevision;
}

@property(copy) NSString *baseRevision; // @synthesize baseRevision=_baseRevision;
@property(readonly) NSMutableArray *children; // @synthesize children=_children;
@property(readonly) IDESourceControlWorkingTree *workingTree; // @synthesize workingTree=_workingTree;
@property __weak IDESourceControlManager *scm; // @synthesize scm=_scm;
- (void).cxx_destruct;
- (id)initWithTree:(id)arg1;
- (void)addNodes:(id)arg1;
- (id)modifiedItems;
- (BOOL)resolved;
- (id)representedObject;
- (id)fileWrapper;
- (id)indexInfo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDETestingSystem : NSObject
{
    NSString *_name;
    NSString *_identifier;
    Class _testableClass;
}

+ (id)testingSystems;
+ (id)testingSystemForIdentifier:(id)arg1;
+ (id)_testingSystemForExtension:(id)arg1;
+ (void)initialize;
@property(readonly) Class testableClass; // @synthesize testableClass=_testableClass;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTestingSystemExtension:(id)arg1;

@end

@interface IDETestIdentifierResolver : NSObject
{
}

+ (id)defaultResolver;
- (id)resolvedTestSuiteIdentifierForInputSuiteIdentifier:(id)arg1;
- (id)resolvedTestMethodNameForInputClassName:(id)arg1 methodName:(id)arg2;
- (id)resolvedTestClassNameForInputClassName:(id)arg1;

@end

@interface IDESnapshotsRestoreContext : NSObject
{
    IDESnapshotItem *_snapshot;
    DVTFilePath *_repositoryPath;
    DVTFilePath *_exportLocation;
    NSArray *_pathsToRestore;
}

+ (id)contextWithSnapshot:(id)arg1 repositoryPath:(id)arg2 exportLocation:(id)arg3 pathsToRestore:(id)arg4;
@property(retain) NSArray *pathsToRestore; // @synthesize pathsToRestore=_pathsToRestore;
@property(retain) DVTFilePath *exportLocation; // @synthesize exportLocation=_exportLocation;
@property(retain) DVTFilePath *repositoryPath; // @synthesize repositoryPath=_repositoryPath;
@property(retain) IDESnapshotItem *snapshot; // @synthesize snapshot=_snapshot;
- (void).cxx_destruct;

@end

@interface IDESnapshotsEngine : NSObject
{
}

+ (void)fileAndDirectoryDifferencesBetweenPath:(id)arg1 andPath:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)beginRestoreOfSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (void)finishRestoreOfSnapshotWithContext:(id)arg1 exportedSnapshotLocation:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)exportSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (id)_exportSnapshot:(id)arg1 toLocation:(id)arg2 tmpExportLocation:(id)arg3;
+ (id)_pathForTmpFiles;
+ (id)_removeFilePaths:(id)arg1 inPath:(id)arg2;
+ (id)_copyOrReplaceFilePaths:(id)arg1 fromPath:(id)arg2 toPath:(id)arg3;
+ (BOOL)isPathValidForSnapshots:(id)arg1;
+ (id)_firstInterestingFilePathInLocation:(id)arg1;
+ (id)exportRequestForSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3;
+ (BOOL)commitSnapshot:(id)arg1 withCommitMessage:(id)arg2 error:(id *)arg3;
+ (BOOL)snapshotFiles:(id)arg1 toRepository:(id)arg2 error:(id *)arg3;
+ (id)filesToSnapshotInWorkspace:(id)arg1;
+ (id)consolidatedFilePathFromPaths:(id)arg1 workingTreesRoots:(id)arg2;
+ (BOOL)createSnapshotRepositoryAtPath:(id)arg1 forWorkspace:(id)arg2 error:(id *)arg3;
+ (void)performSyncGitRequest:(int)arg1 files:(id)arg2 repositoryPath:(id)arg3 message:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;

@end

@interface IDELaunchSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    NSMutableArray *_additionalSourceCodeEntries;
    NSMutableArray *_additionalDSYMEntries;
    DVTNotificationToken *_buildablesToken;
    NSMutableDictionary *_additionalSchemeSettings;
    DVTObservingToken *_launchSessionObservingToken;
    BOOL _askForAppToLaunch;
    BOOL _debugXPCServices;
    BOOL _useCustomWorkingDirectory;
    BOOL _allowLocationSimulation;
    BOOL _showNonLocalizedStrings;
    BOOL _ignoresPersistentStateOnLaunch;
    BOOL _debugDocumentVersioning;
    BOOL _enableGPUValidationMode;
    BOOL _viewDebuggingEnabled;
    unsigned int _debugProcessAsUID;
    int _launchStyle;
    int _launchAutomaticallySubstyle;
    int _enableGPUFrameCaptureMode;
    int _internalIOSLaunchStyle;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    IDERunnable *_runnable;
    NSString *_resolvedCustomWorkingDirectory;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    NSDictionary *_additionalOptionEntriesDict;
    NSString *_customWorkingDirectory;
    NSString *_buildConfiguration;
    NSString *_language;
    NSString *_region;
    IDELocationScenarioReference *_locationScenarioReference;
    IDESchemeOptionReference *_routingCoverageFileReference;
    NSNumber *_simulatorIPhoneDisplay;
    NSNumber *_simulatorIPadDisplay;
    NSString *_internalIOSSubstitutionApp;
    NSString *_debugAsWhichUser;
}

+ (id)keyPathsForValuesAffectingDebugProcessAsUID;
+ (id)keyPathsForValuesAffectingLaunchDueToFetchEvent;
+ (id)keyPathsForValuesAffectingRunnable;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(copy) NSString *debugAsWhichUser; // @synthesize debugAsWhichUser=_debugAsWhichUser;
@property BOOL viewDebuggingEnabled; // @synthesize viewDebuggingEnabled=_viewDebuggingEnabled;
@property(copy) NSString *internalIOSSubstitutionApp; // @synthesize internalIOSSubstitutionApp=_internalIOSSubstitutionApp;
@property int internalIOSLaunchStyle; // @synthesize internalIOSLaunchStyle=_internalIOSLaunchStyle;
@property(retain) NSDictionary *additionalSchemeSettings; // @synthesize additionalSchemeSettings=_additionalSchemeSettings;
@property BOOL enableGPUValidationMode; // @synthesize enableGPUValidationMode=_enableGPUValidationMode;
@property int enableGPUFrameCaptureMode; // @synthesize enableGPUFrameCaptureMode=_enableGPUFrameCaptureMode;
@property BOOL debugDocumentVersioning; // @synthesize debugDocumentVersioning=_debugDocumentVersioning;
@property BOOL ignoresPersistentStateOnLaunch; // @synthesize ignoresPersistentStateOnLaunch=_ignoresPersistentStateOnLaunch;
@property(retain) NSNumber *simulatorIPadDisplay; // @synthesize simulatorIPadDisplay=_simulatorIPadDisplay;
@property(retain) NSNumber *simulatorIPhoneDisplay; // @synthesize simulatorIPhoneDisplay=_simulatorIPhoneDisplay;
@property(retain) IDESchemeOptionReference *routingCoverageFileReference; // @synthesize routingCoverageFileReference=_routingCoverageFileReference;
@property(retain) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property(copy, nonatomic) NSString *region; // @synthesize region=_region;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
@property BOOL showNonLocalizedStrings; // @synthesize showNonLocalizedStrings=_showNonLocalizedStrings;
@property BOOL allowLocationSimulation; // @synthesize allowLocationSimulation=_allowLocationSimulation;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(copy, nonatomic) NSString *customWorkingDirectory; // @synthesize customWorkingDirectory=_customWorkingDirectory;
@property BOOL useCustomWorkingDirectory; // @synthesize useCustomWorkingDirectory=_useCustomWorkingDirectory;
@property(nonatomic) int launchAutomaticallySubstyle; // @synthesize launchAutomaticallySubstyle=_launchAutomaticallySubstyle;
@property(nonatomic) int launchStyle; // @synthesize launchStyle=_launchStyle;
@property BOOL debugXPCServices; // @synthesize debugXPCServices=_debugXPCServices;
@property(nonatomic) unsigned int debugProcessAsUID; // @synthesize debugProcessAsUID=_debugProcessAsUID;
@property(readonly) NSDictionary *additionalOptionEntriesDict; // @synthesize additionalOptionEntriesDict=_additionalOptionEntriesDict;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference; // @synthesize deviceAppDataReference=_deviceAppDataReference;
@property BOOL askForAppToLaunch; // @synthesize askForAppToLaunch=_askForAppToLaunch;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
- (void).cxx_destruct;
@property int enableOpenGLPerformanceAnalysisMode;
@property int enableOpenGLFrameCaptureMode;
- (void)addRoutingCoverageFileReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLocationScenarioReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addDeviceAppData:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalDSYMFilesAndDirs:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalSourceCodeFilesAndDirs:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalOptions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (BOOL)needsNewSchemeVersionForInternalIOSLaunchStyleAndOthers;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (BOOL)needsNewSchemeVersionForAppDataPackage;
- (void)setAskForAppToLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
@property(readonly) BOOL shouldAllowGPUOptions;
- (void)setViewDebuggingEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLaunchAutomaticallySubstyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setInternalIOSLaunchStyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setInternalIOSSubstitutionAppFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSimulatorIPadDisplayFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSimulatorIPhoneDisplayFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setRegionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLanguageFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShowNonLocalizedStringsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAllowLocationSimulationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableGPUValidationModeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableGPUFrameCaptureModeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomLaunchCommandFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugXPCServicesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugDocumentVersioningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)runOperationForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 schemeCommand:(id)arg5 schemeActionRecord:(id)arg6 outError:(id *)arg7 actionCallbackBlock:(CDUnknownBlockType)arg8;
- (BOOL)hasAppExtensionsInTargets;
- (id)filePathsForContainersAndExtensions;
- (void)_setupRecordedFramesInEnvironmentVariables:(id)arg1 runDestination:(id)arg2;
- (id)_realAppNameForRunnablePath:(id)arg1;
@property(readonly, nonatomic) BOOL debugAppExtensions;
@property(retain) NSString *customLaunchCommand;
- (id)customLaunchCommandMacroExpanded;
- (void)setLaunchDueToFetchEvent:(BOOL)arg1;
- (BOOL)launchDueToFetchEvent;
@property(retain) IDERunnable *runnable; // @synthesize runnable=_runnable;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(readonly) NSArray *additionalDSYMFilePaths;
@property(readonly) NSArray *additionalSourceCodeFilePaths;
- (id)_additionalOptions;
- (id)_additionalOptionEntries;
- (id)_expandMacrosInString:(id)arg1;
@property(readonly) NSString *resolvedCustomWorkingDirectory; // @synthesize resolvedCustomWorkingDirectory=_resolvedCustomWorkingDirectory;
@property(readonly) NSDictionary *environmentVariables;
- (id)commandLineArgumentsForDevice:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_updateBuildableToUseForMacroExpansion;
- (void)setRunContext:(id)arg1;
- (void)primitiveInvalidate;
- (id)_initAdditionalOptionsDict;
- (void)_commonInit;
- (BOOL)internalSettings;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(copy) NSArray *additionalDSYMEntries; // @dynamic additionalDSYMEntries;
@property(copy) NSArray *additionalSourceCodeEntries; // @dynamic additionalSourceCodeEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
@property(readonly) unsigned long long hash;
@property(readonly) NSMutableArray *mutableAdditionalDSYMEntries; // @dynamic mutableAdditionalDSYMEntries;
@property(readonly) NSMutableArray *mutableAdditionalSourceCodeEntries; // @dynamic mutableAdditionalSourceCodeEntries;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(readonly) Class superclass;

@end

@interface IDECommandLineArgumentEntry : NSObject
{
    BOOL _isEnabled;
    NSString *_argument;
}

+ (id)argumentEntriesForLegacyValues:(id)arg1;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *argument; // @synthesize argument=_argument;
- (void).cxx_destruct;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setArgumentFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)description;
- (id)init;
- (id)initWithArgument:(id)arg1 enabled:(BOOL)arg2;

@end

@interface IDEEnvironmentVariableEntry : NSObject
{
    BOOL _isEnabled;
    NSString *_key;
    NSString *_value;
}

+ (id)environmentEntriesForLegacyValues:(id)arg1;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *value; // @synthesize value=_value;
@property(copy) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setValueFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setKeyFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)description;
- (id)init;
- (id)initWithKey:(id)arg1 value:(id)arg2 enabled:(BOOL)arg3;

@end

@interface IDELaunchRunPhasePathEntry : NSObject
{
    BOOL _isEnabled;
    NSString *_path;
}

@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
@property(readonly) DVTFilePath *filePath;
- (id)description;
- (id)init;
- (id)initWithPathString:(id)arg1 enabled:(BOOL)arg2;

@end

@interface IDEDataMatrix : NSObject
{
    const struct _IDEDataMatrixDescriptor *_descriptor;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property(readonly, nonatomic) struct _IDEDataMatrixDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (void)executeRowOperation:(const struct _IDEDataMatrixRowOp *)arg1 overColumns:(id)arg2;
@property(readonly) unsigned long long rowCount;
- (long long)SInt64AtRow:(unsigned long long)arg1 column:(unsigned char)arg2;
- (void)enumerateInt64Range:(struct _NSRange)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addSInt64Rows:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithCapacity:(unsigned long long)arg1 descriptor:(struct _IDEDataMatrixDescriptor *)arg2;

@end

@interface IDEDataMatrixSIn64 : IDEDataMatrix
{
    struct vector<long long, std::__1::allocator<long long>> *_columns;
}

- (unsigned long long)rowCount;
- (void)executeRowOperation:(const struct _IDEDataMatrixRowOp *)arg1 overColumns:(id)arg2;
- (long long)SInt64AtRow:(unsigned long long)arg1 column:(unsigned char)arg2;
- (void)addSInt64Rows:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateInt64Range:(struct _NSRange)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1 descriptor:(struct _IDEDataMatrixDescriptor *)arg2;

@end

@interface IDEIndexQPManager : NSObject
{
    IDEIndex *_index;
    NSObject<OS_dispatch_queue> *_qp_queue;
    NSMutableArray *_masterBlocks;
    NSMutableArray *_recentQueryProviders;
    NSTimer *_purgeTimer;
}

+ (void)initialize;
@property(readonly, nonatomic) IDEIndex *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (void)_logRecents;
- (void)_cancelPurgeTimer;
- (void)_purgeTimeout:(id)arg1;
- (void)_scheduleQPPurge;
- (void)_addQueryProviderToRecents:(id)arg1 highPriority:(BOOL)arg2;
- (void)purgeQPsUsingPCH:(id)arg1;
- (void)purgeAllQPs;
- (id)queryProviderForFile:(id)arg1 highPriority:(BOOL)arg2;
- (void)dealloc;
- (id)initWithIndex:(id)arg1;

@end

@interface IDEEntityIdentifier : NSObject <NSCopying>
{
    unsigned long long _hashValue;
    int _sharedState;
    int _entityType;
    NSString *_entityName;
    NSString *_containerName;
    NSString *_entityGUID;
}

+ (id)entityIdentifierFromEntityName:(id)arg1 entityType:(int)arg2 containerName:(id)arg3;
+ (id)entityIdentifierFromEntityName:(id)arg1 entityType:(int)arg2 containerName:(id)arg3 isShared:(BOOL)arg4;
+ (id)entityIdentifierFromGUID:(id)arg1 entityName:(id)arg2 entityType:(int)arg3 containerName:(id)arg4;
+ (id)entityIdentifierFromGUID:(id)arg1 entityName:(id)arg2 entityType:(int)arg3 containerName:(id)arg4 isShared:(BOOL)arg5;
@property(readonly, copy) NSString *entityGUID; // @synthesize entityGUID=_entityGUID;
@property(readonly) int entityType; // @synthesize entityType=_entityType;
@property(readonly, copy) NSString *containerName; // @synthesize containerName=_containerName;
@property(readonly, copy) NSString *entityName; // @synthesize entityName=_entityName;
@property(readonly) int sharedState; // @synthesize sharedState=_sharedState;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isSimilarToEntityIdentifier:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)initWithGUID:(id)arg1 entityName:(id)arg2 entityType:(int)arg3 containerName:(id)arg4 shared:(int)arg5;

@end

@interface IDEIndexNewFile : NSObject <IDEIndexNewFileBase>
{
    DVTFilePath *_path;
    NSURL *_moduleURL;
    NSDate *_modified;
    IDEIndexNewFile *_includer;
    long long _fileId;
    long long _groupId;
    char **_vectorSegments;
    int _nVectorSegments;
    int _vectorBytesRemaining;
    NSMutableArray *_containers;
    IDEIndexDBFactory *_symbolFactory;
    IDEIndexDBFactory *_referenceFactory;
    BOOL _hasSkippedBodies;
    BOOL _hasUnskippedBodies;
    void *_digestContext;
    void *_digestContext_inBody;
    NSString *_signature;
    NSString *_signature_inBody;
    IDEIndexNewMainFile *_mainFile;
}

+ (void)poolFree:(void *)arg1;
+ (void *)poolMalloc:(unsigned long long)arg1;
+ (void)_pushSegment:(void *)arg1;
+ (void)_poolDelayedFree;
+ (void *)_popSegment;
+ (void)initialize;
@property(readonly, nonatomic) BOOL hasUnskippedBodies; // @synthesize hasUnskippedBodies=_hasUnskippedBodies;
@property(readonly, nonatomic) BOOL hasSkippedBodies; // @synthesize hasSkippedBodies=_hasSkippedBodies;
@property(nonatomic) long long groupId; // @synthesize groupId=_groupId;
@property(nonatomic) long long fileId; // @synthesize fileId=_fileId;
@property(readonly, nonatomic) IDEIndexNewMainFile *mainFile; // @synthesize mainFile=_mainFile;
@property(readonly, nonatomic) NSDate *modified; // @synthesize modified=_modified;
@property(retain, nonatomic) NSURL *moduleURL; // @synthesize moduleURL=_moduleURL;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *signature_inBody;
@property(readonly, nonatomic) NSString *signature;
- (id)newFileWithPath:(id)arg1 modified:(id)arg2;
- (id)newSymbolWithName:(id)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(id)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(id)arg9 completionString:(void *)arg10 container:(id)arg11;
- (void)addSymbolWithName:(id)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(id)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(id)arg9 completionString:(void *)arg10 container:(id)arg11;
- (id)newSymbolWithCName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(const char *)arg9 completionString:(void *)arg10 container:(id)arg11;
- (void)addSymbolWithCName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(const char *)arg9 completionString:(void *)arg10 container:(id)arg11;
- (void)createSymbolWithName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 column:(long long)arg7 locator:(id)arg8 receiver:(const char *)arg9 completionString:(void *)arg10 container:(id)arg11 pSymbol:(id *)arg12;
- (id)description;
- (void)freeMemory;
@property(readonly, nonatomic) BOOL hasBodies;
- (void)willAddBodySkipped:(BOOL)arg1;
- (void)dontSubmitSymbols;
- (long long)submitSymbolsTo:(id)arg1 nReferences:(long long *)arg2;
- (long long)realSymbolIdForId:(long long)arg1;
@property(readonly, nonatomic) long long realGroupId;
@property(readonly, nonatomic) long long realFileId;
@property __weak IDEIndexNewFile *includer;
- (void)dealloc;
- (id)initWithPath:(id)arg1 modified:(id)arg2;

@end

@interface IDEActivityLogSection : NSObject <NSCopying>
{
    IDEActivityLogSectionRecorder *_recorder;
    IDETypeIdentifier *_domainType;
    NSString *_title;
    double _timeStartedRecording;
    double _timeStoppedRecording;
    NSMutableArray *_subsections;
    NSMutableString *_text;
    NSMutableArray *_messages;
    id _representedObject;
    NSString *_subtitle;
    DVTDocumentLocation *_location;
    NSString *_signature;
    NSString *_commandDetailDesc;
    unsigned short _totalTestFailureCount;
    unsigned short _totalErrorCount;
    unsigned short _totalWarningCount;
    unsigned short _totalAnalyzerWarningCount;
    unsigned short _totalAnalyzerResultCount;
    unsigned short _sectionType;
    unsigned short _sectionAuthority;
    unsigned short _resultCode;
    BOOL _wasCancelled;
    BOOL _isQuiet;
    BOOL _wasFetchedFromCache;
    BOOL _hasAddedIssueMessage;
    NSString *_uniqueIdentifier;
    NSString *_localizedResultString;
    int _lock;
}

+ (id)sectionWithContentsOfFile:(id)arg1 error:(id *)arg2;
+ (id)sectionByDeserializingData:(id)arg1 error:(id *)arg2;
+ (unsigned long long)serializationFormatVersion;
+ (id)UUIDWithURL:(id)arg1;
+ (id)URLWithUUID:(id)arg1;
+ (id)defaultMainLogDomainType;
+ (id)defaultLogSectionDomainType;
+ (Class)logRecorderClass;
+ (void)initialize;
@property(readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy) NSString *localizedResultString; // @synthesize localizedResultString=_localizedResultString;
@property BOOL hasAddedIssueMessage; // @synthesize hasAddedIssueMessage=_hasAddedIssueMessage;
@property BOOL wasFetchedFromCache; // @synthesize wasFetchedFromCache=_wasFetchedFromCache;
@property(readonly) IDETypeIdentifier *domainType; // @synthesize domainType=_domainType;
@property unsigned short sectionAuthority; // @synthesize sectionAuthority=_sectionAuthority;
- (void).cxx_destruct;
- (id)indexPathForMessageOrSection:(id)arg1;
- (id)indexPathForMessageOrSection:(id)arg1 messageOrSectionEqualityTest:(CDUnknownBlockType)arg2;
- (id)messageOrSectionAtIndexPath:(id)arg1;
- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)serializedData;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)addObserverUsingBlock:(CDUnknownBlockType)arg1;
- (id)enumerateMessagesUsingBlock:(CDUnknownBlockType)arg1;
- (id)enumerateSubsectionsRecursivelyUsingPreorderBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateSubsectionsRecursivelyUsingPreorderBlock:(CDUnknownBlockType)arg1 returningFilteredSections:(id)arg2;
@property(readonly) NSURL *logSectionURL;
- (id)emittedOutputText;
- (void)logRecorder:(id)arg1 setCommandDetailDescription:(id)arg2;
@property(readonly) NSString *commandDetailDescription;
@property(readonly) DVTDocumentLocation *location;
- (void)logRecorder:(id)arg1 setWasFetchedFromCache:(BOOL)arg2;
- (void)logRecorder:(id)arg1 setIsQuiet:(BOOL)arg2;
@property(readonly) BOOL isQuiet;
- (void)logRecorder:(id)arg1 adjustMessageCountsWithTestFailureDelta:(long long)arg2 errorCountDelta:(long long)arg3 warningCountDelta:(long long)arg4 analyzerWarningDelta:(long long)arg5 analyzerResultDelta:(long long)arg6;
@property(readonly) unsigned long long totalNumberOfAnalyzerResults;
@property(readonly) unsigned long long totalNumberOfAnalyzerWarnings;
@property(readonly) unsigned long long totalNumberOfWarnings;
@property(readonly) unsigned long long totalNumberOfErrors;
@property(readonly) unsigned long long totalNumberOfTestFailures;
- (id)description;
- (void)logRecorder:(id)arg1 didStopRecordingWithInfo:(id)arg2;
- (void)checkMessageCounts;
@property(readonly) IDEActivityLogSectionRecorder *recorder;
@property(readonly) BOOL isRecording;
- (void)logRecorder:(id)arg1 setWasCancelled:(BOOL)arg2;
@property(readonly) long long resultCode;
@property(readonly) BOOL wasCancelled;
- (void)logRecorder:(id)arg1 addMessage:(id)arg2;
@property(readonly) NSArray *messages;
- (void)logRecorder:(id)arg1 appendText:(id)arg2;
- (void)setAdditionalDescription:(id)arg1;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *text;
- (void)logRecorder:(id)arg1 addSubsection:(id)arg2;
@property(readonly) NSArray *subsections;
@property(readonly) double timeStoppedRecording;
@property(readonly) double timeStartedRecording;
@property(copy) NSString *signature;
@property(readonly) NSString *title;
@property(readonly) id representedObject;
- (void)setRepresentedObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
@property(readonly) unsigned long long sectionType;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (id)initWithSectionType:(unsigned long long)arg1 domainType:(id)arg2 title:(id)arg3;
- (id)initCommandInvocationWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3 filePath:(id)arg4;
- (id)initCommandInvocationWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3 location:(id)arg4;
- (id)initMajorGroupWithDomainType:(id)arg1 title:(id)arg2 representedObject:(id)arg3 subtitle:(id)arg4;
- (id)initMainLogWithDomainType:(id)arg1 title:(id)arg2;
- (id)initWithSectionType:(unsigned long long)arg1 domainType:(id)arg2 title:(id)arg3 location:(id)arg4;

@end

@interface IDERunnable : NSObject
{
    DVTFileDataType *_dataType;
    NSError *_dataTypeDetectionError;
    IDEScheme *_scheme;
    NSString *_bundleIdentifier;
    DVTFilePath *_remotePath;
}

@property(readonly, copy) DVTFilePath *remotePath; // @synthesize remotePath=_remotePath;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
- (int)runnableType;
- (void)resolveBuildableFromImport;
@property(readonly) BOOL hasRunnablePath;
@property(readonly) id <IDEBuildableProduct> buildableProduct;
- (id)runnableUTIType:(id *)arg1;
- (id)pathToRunnableForBuildParameters:(id)arg1;
@property(readonly, copy) NSString *toolTip;
@property(readonly, copy) NSString *displayName;

@end

@interface IDEDistributionCreateDestRootStep : IDEDistributionProcessingStep
{
}

+ (id)processingStep;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (id)name;

@end

@interface IDEIndexCodeCompletionContext : NSObject
{
    unsigned long long _contexts;
    unsigned int _containerKind;
    NSString *_containerUSR;
    BOOL _containerIsIncomplete;
    NSString *_partialSelector;
    NSSet *_includedFiles;
}

@property(copy) NSSet *includedFiles; // @synthesize includedFiles=_includedFiles;
@property(copy) NSString *partialSelector; // @synthesize partialSelector=_partialSelector;
@property BOOL containerIsIncomplete; // @synthesize containerIsIncomplete=_containerIsIncomplete;
@property(copy) NSString *containerResolution; // @synthesize containerResolution=_containerUSR;
@property unsigned int containerKind; // @synthesize containerKind=_containerKind;
@property unsigned long long contexts; // @synthesize contexts=_contexts;
- (void).cxx_destruct;

@end

@interface IDEIndexGenericSymbolFormatter : NSObject <IDEIndexSymbolFormatter>
{
}

- (id)qualifiedDisplayNameForSymbol:(id)arg1;
- (id)displayNameForSymbol:(id)arg1;
- (id)initWithSourceCodeLanguage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEIndexScannerDataSource : IDEIndexDataSource
{
}

- (BOOL)generateDataForJob:(id)arg1;

@end

@interface IDEIndexCallableSymbol : IDEIndexSymbol
{
    IDEIndexContainerSymbol *_containerSymbol;
}

- (void).cxx_destruct;
- (id)callsCancelWhen:(CDUnknownBlockType)arg1;
- (id)calls;
- (id)typeOfArgument:(unsigned long long)arg1;
- (unsigned long long)numArguments;
- (id)returnType;
- (id)property;
- (id)overridingSymbols;
- (id)overriddenSymbols;
- (void)setContainerSymbol:(id)arg1;
- (id)containerSymbol;

@end

@interface IDESnapshotsManager : NSObject
{
    BOOL _areSnapshotsEnabled;
    DVTPerformanceMetric *_metric;
}

+ (id)sourceControlSystemUsedForSnapshotsWithError:(id *)arg1;
+ (id)snapshotsLogAspect;
+ (id)sharedManager;
- (void).cxx_destruct;
- (id)restoreSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)tmpFileForFileAtOriginalLocation:(id)arg1 fromSnapshot:(id)arg2 fromRepositoryAtPath:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)modifiedFilesBetweenSnapshot:(id)arg1 andPreviousSnapshot:(id)arg2 fromRepositoryAtPath:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)snapshotsForRepositoryAtPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property BOOL areSnapshotsEnabled; // @synthesize areSnapshotsEnabled=_areSnapshotsEnabled;
- (id)snapshotsFolderPath;
- (id)snapshotExtension;

@end

@interface IDEPathRunnable : IDERunnable <DVTXMLUnarchiving>
{
    NSString *_bundleIdentifier;
    DVTFilePath *_filePath;
}

+ (id)keyPathsForValuesAffectingHasRunnablePath;
@property(readonly, copy) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void)setBundleIdentifier:(id)arg1;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setFilePathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (int)runnableType;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (id)toolTip;
- (id)bundleIdentifier;
- (id)displayName;
@property(readonly, copy) NSString *description;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithFilePath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEExecutionRunnableTracker : IDEExecutionTracker <IDERunOperationWorkerTracker>
{
    IDERunOperationWorker *_worker;
    BOOL _finishedRunning;
}

- (void).cxx_destruct;
- (void)runningDidFinish:(id)arg1 withError:(id)arg2;
- (void)cancel;
- (BOOL)isFinished;
- (id)initWithWorker:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDataProvider_procinfo : IDEDataProvider
{
    struct unordered_map<int, ProcessInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, ProcessInfo>>> _processInfoByPID;
}

+ (id)sharedDataProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)captureAttributes:(id)arg1 forPIDs:(id)arg2;
- (BOOL)captureAttributes:(id)arg1 toDictionary:(id)arg2 forPID:(id)arg3;
- (id)supportedAttributes;

@end

@interface IDEIndex : NSObject <IDEIndexDatabaseDelegate>
{
    IDEWorkspace *_workspace;
    DVTFilePath *_databaseFile;
    IDEIndexingPrebuildController *_prebuildController;
    IDEIndexingEngine *_engine;
    IDEIndexQPManager *_qpManager;
    NSMutableDictionary *_identifiersToIndexables;
    NSMutableDictionary *_indexablesToProductHeaders;
    NSMutableDictionary *_copiedHeadersToSources;
    NSMutableDictionary *_sourceHeadersToIndexables;
    NSSet *_preferredTargets;
    NSSet *_priorityTargets;
    IDEIndexDatabase *_workspaceDatabase;
    long long _purgeCount;
    DVTDispatchLock *_stateLock;
    DVTDispatchLock *_pchCreationLock;
    NSMutableDictionary *_pchFiles;
    NSDate *_lastErrorTime;
    BOOL _isInvalid;
    BOOL _isCancelled;
    BOOL _isInErrorRecoveryMode;
    BOOL _isReadOnly;
    BOOL _cleanedUpOldPCHs;
    BOOL _didSetKeyPathObservers;
    id _indexableFileWasAddedNotificationObservingToken;
    id _indexableFileWillBeRemovedNotificationObservingToken;
    id _indexableDidRenameFileNotificationObservingToken;
    id _buildablesDidChangeNotificationObservingToken;
    id _buildSettingsDidChangeNotificationObservingToken;
    id _buildOperationDidStopNotificationObservingToken;
}

+ (BOOL)languageSupportsSymbolColoring:(id)arg1;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
+ (id)pathToClang;
+ (id)_dataSourceExtensionForFile:(id)arg1 withLanguage:(id)arg2;
+ (void)createIndexForWorkspace:(id)arg1 withState:(id)arg2;
+ (id)_databaseFolderForWorkspace:(id)arg1;
+ (void)syncPerformBlockOnMainThread:(CDUnknownBlockType)arg1;
+ (void)initialize;
+ (BOOL)includeAutoImportResults;
+ (id)schedulingLogAspect;
+ (id)clangInvocationLogAspect;
+ (id)symbolAdditionLogAspect;
+ (id)deferredMetricLogAspect;
+ (id)metricLogAspect;
+ (id)logAspect;
@property(retain) IDEIndexingPrebuildController *prebuildController; // @synthesize prebuildController=_prebuildController;
@property(readonly, nonatomic) DVTFilePath *databaseFile; // @synthesize databaseFile=_databaseFile;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_workspaceDatabase;
@property(readonly, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (id)symbolDumpForFile:(id)arg1;
- (id)targetIdentifiersForFile:(id)arg1;
- (id)mainFilesForFile:(id)arg1;
- (id)sdkForFile:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (void)_buildOperationDidStop:(id)arg1;
- (void)_buildSettingsDidChange:(id)arg1;
- (void)_activeRunDestinationDidChange:(id)arg1;
- (void)_activeRunContextDidChange:(id)arg1;
- (void)_clearAllCachedBuildSettings;
- (void)_computePreferredTargets;
- (BOOL)isPreferredTarget:(id)arg1 priority:(char *)arg2;
- (BOOL)isPreferredTarget:(id)arg1;
- (id)databaseQueryProvider;
- (id)queryProviderForLocation:(id)arg1 highPriority:(BOOL)arg2;
- (void)dontDeferJobForFile:(id)arg1 indexable:(id)arg2;
- (void)registerHotFile:(id)arg1;
- (id)queryProviderForFile:(id)arg1 highPriority:(BOOL)arg2;
- (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
- (id)indexableForCopiedHeader:(id)arg1;
- (id)originalPathsForPaths:(id)arg1;
- (id)effectivePathForHeader:(id)arg1;
- (void)_initCopiedHeaders;
- (void)indexModuleIfNeeded:(id)arg1 settings:(id)arg2;
- (void)indexModuleIfNeeded:(id)arg1;
- (void)_cleanupOldPCHs;
- (void)didCancelIndexingPCHFile:(id)arg1;
- (BOOL)createPCHFile:(id)arg1 arguments:(id)arg2 hashCriteria:(id)arg3 target:(id)arg4 session:(id)arg5 willIndex:(BOOL)arg6 translationUnit:(id *)arg7;
- (void)database:(id)arg1 reportAutoQueryProgress:(double)arg2;
- (void)clearPCHFailuresForDatabase:(id)arg1;
- (void)databaseDidReportError:(id)arg1;
- (void)databaseDidLoad:(id)arg1;
- (void)databaseDidOpen:(id)arg1;
- (id)databaseProvidersAndVersions:(id)arg1;
- (void)database:(id)arg1 didForgetFiles:(id)arg2;
- (void)database:(id)arg1 didEndImportSession:(id)arg2;
- (void)databaseDidSave:(id)arg1;
- (void)databaseDidIndexHotFile:(id)arg1;
- (void)_respondToFileChangeNotification:(id)arg1;
@property(readonly, nonatomic) DVTFilePath *workspaceFile;
@property(readonly, nonatomic) NSString *workspaceName;
- (id)dataSourceExtensionForFile:(id)arg1 settings:(id)arg2;
- (id)_dataSourceExtensionForFile:(id)arg1 withSettings:(id)arg2;
- (id)settingsForFile:(id)arg1 indexable:(id)arg2;
- (id)_waitForSettingsForFile:(id)arg1 object:(id)arg2;
- (id)_waitForSettingsFromObject:(id)arg1;
- (void)waitForBuildSystem:(id)arg1;
- (id)workspaceHeadersForIndexable:(id)arg1;
- (void)gatherProductHeadersForIndexable:(id)arg1;
- (long long)purgeCount;
- (void)purgeFileCaches;
- (void)close;
- (void)editorWillSaveFile:(id)arg1;
- (void)expediteIndexing;
- (void)_stopIndexing;
- (void)setThrottleFactor:(double)arg1;
- (void)resumeIndexing;
- (void)suspendIndexing;
@property(readonly, nonatomic) BOOL shouldAllowRefactoring;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)doWhenFilesReady:(CDUnknownBlockType)arg1;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (id)indexableForIdentifier:(id)arg1;
- (void)unregisterObject:(id)arg1;
- (void)registerObject:(id)arg1;
- (void)postNotificationName:(id)arg1;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
- (id)description;
- (void)setIndexState:(id)arg1;
- (id)indexState;
@property(readonly) DVTFilePath *workspaceBuildProductsDirPath;
@property(readonly) DVTFilePath *headerMapFilePath;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setKeyPathObservers:(id)arg1;
- (BOOL)isCurrentForWorkspace:(id)arg1;
- (void)beginTextIndexing;
- (id)initWithFolder:(id)arg1;
- (id)initWithFolder:(id)arg1 forWorkspace:(id)arg2 withState:(id)arg3;
- (void)_cleanupOldIndexFoldersForWorkspace:(id)arg1;
- (double)_atime:(struct stat *)arg1;
- (BOOL)_stat:(struct stat *)arg1 filePath:(id)arg2;
- (id)_databaseFileURLForFolder:(id)arg1;
- (id)_databaseFolderForWorkspace:(id)arg1;
- (BOOL)_reopenDatabaseWithRemoval:(BOOL)arg1;
- (BOOL)_createDatabaseFolder;
- (void)_setupObservers;
- (id)allAutoImportItemsMatchingKind:(id)arg1 symbolLanguage:(id)arg2;
- (id)allAutoImportItemsMatchingKind:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2;
- (id)classesWithReferencesToSymbols:(id)arg1;
- (id)allClassesWithMembers:(id)arg1;
- (id)classesWithMembers:(id)arg1;
- (id)allMethodsMatchingMethod:(id)arg1 forReceiver:(id)arg2;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2;
- (id)symbolsForResolutions:(id)arg1;
- (id)parsedCodeCommentAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 completionContext:(id *)arg3;
- (id)allParentsOfSymbols:(id)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelSymbolsInFile:(id)arg1;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(CDUnknownBlockType)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (id)allSymbolsMatchingKind:(id)arg1;
- (id)testMethodsForClasses:(id)arg1;
- (id)allSubClassesForClasses:(id)arg1;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2;
- (id)allProtocolsMatchingName:(id)arg1;
- (id)allClassesMatchingName:(id)arg1;
- (id)impliedHeadersForModuleImportLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)importedFilesAtDocument:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)messageReceiverInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1;
- (id)topLevelProtocols;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(CDUnknownBlockType)arg2;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1;
- (id)topLevelClasses;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6;
- (id)filesIncludedByFile:(id)arg1;
- (id)filesIncludingFile:(id)arg1;
- (id)mainFileForSelectionFilePath:(id)arg1 buildSettings:(id *)arg2;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
- (id)_localizedPhraseForDependentObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2 sharedLanguageIdentifier:(id)arg3 sharedIndexableObject:(id)arg4;
- (id)_localizedDescriptionForObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2;
- (BOOL)_errorLanguages:(id *)arg1 forFilePath:(id)arg2 indexableObjects:(id)arg3;

@end

@interface IDEFileReferenceCore : IDEContainerItemCore <IDEFileReferenceCore>
{
    DVTFileDataType *_assignedDataType;
}

@property(copy) DVTFileDataType *assignedDataType; // @synthesize assignedDataType=_assignedDataType;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) id <IDEContainerCore> parentContainer;
@property(retain) id <IDEGroupCore> parentGroup;
@property(copy) NSString *path;
@property(readonly) Class superclass;

@end

@interface IDEDeviceInstallLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDEIndexCollection : NSObject <NSFastEnumeration>
{
    IDEIndexDBTempTable *_tempTable;
    NSArray *_instantiatedRows;
    Class _expectedClass;
}

@property(readonly, nonatomic) IDEIndexDBTempTable *tempTable; // @synthesize tempTable=_tempTable;
- (void).cxx_destruct;
- (id)uniqueObjects;
- (id)onlyObject;
- (id)firstObject;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;
- (id)allObjects;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)instantiateRowsUpto:(unsigned long long)arg1;
- (void)dealloc;
- (void)dropTempTable;
- (id)description;
- (void)setExpectedClass:(Class)arg1;
- (BOOL)_checkExpectedClass:(id)arg1;
- (id)initWithConnection:(id)arg1;
- (id)initWithArrayNoCopy:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithObject:(id)arg1;
- (id)init;

@end

@interface IDELocalizedResourceAdaptorWorkContext : IDELocalizationWorkContext
{
    IDELocalizedResourceAdaptor *_adaptor;
}

@property(retain) IDELocalizedResourceAdaptor *adaptor; // @synthesize adaptor=_adaptor;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizedResourcePopulationContext : IDELocalizationWorkContext
{
    IDEContainer<IDELocalizedContainer> *_container;
    NSDictionary *_adaptorsByName;
}

@property(retain) NSDictionary *adaptorsByName; // @synthesize adaptorsByName=_adaptorsByName;
@property(retain) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface IDELocalizedResourceAdaptor : NSObject <DVTInvalidation>
{
    IDENotifyingLocalizedGroup *_localizedGroup;
    IDEContainer<IDELocalizedContainer> *_container;
}

+ (id)writeWorkForContext:(id)arg1 langauge:(id)arg2;
+ (id)readWorkForContext:(id)arg1;
+ (id)populatedAdaptorsForContext:(id)arg1;
+ (id)adaptedResourcesForLocalizedContainer:(id)arg1 plugInManager:(id)arg2;
+ (id)adaptedResourcesForLocalizedContainer:(id)arg1;
+ (void)initialize;
@property(readonly) IDEContainer<IDELocalizedContainer> *container; // @synthesize container=_container;
@property(readonly) IDENotifyingLocalizedGroup *localizedGroup; // @synthesize localizedGroup=_localizedGroup;
- (void).cxx_destruct;
- (void)setCommentsByKey:(id)arg1;
- (id)commentsByKey;
- (void)setStringsByKey:(id)arg1 forLanguage:(id)arg2;
- (id)stringsByKeyForLanguage:(id)arg1;
- (id)localizedGroupIdentifier;
- (id)initWithContainer:(id)arg1 localizedGroup:(id)arg2;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEDistributionSymbolsStep : IDEDistributionProcessingStep
{
}

+ (id)processingStepWithDistributionItem:(id)arg1;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;
- (BOOL)shouldProcessSymbolsForItem:(id)arg1 archive:(id)arg2;
- (id)name;

@end

@interface IDECommandLineBuildLogRecorder : IDEActivityLogSectionRecorder
{
    NSMutableArray *_activeSections;
    DVTMapTable *_emittedSubsectionsBySection;
}

+ (void)initialize;
@property(retain) DVTMapTable *emittedSubsectionsBySection; // @synthesize emittedSubsectionsBySection=_emittedSubsectionsBySection;
@property(retain) NSMutableArray *activeSections; // @synthesize activeSections=_activeSections;
- (void).cxx_destruct;
- (void)noteDescendantLogSectionDidClose:(id)arg1 inSupersection:(id)arg2;
- (BOOL)_findNewEffectiveSectionFromSubsectionsOfSection:(id)arg1;
- (BOOL)_findNewEffectiveSectionFromSubsectionsOfSection:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAppendText:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)_noteLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)_emitSection:(id)arg1 inSupersection:(id)arg2;
- (void)_cleanupClosedSection:(id)arg1 inSupersection:(id)arg2;
- (void)_emitString:(id)arg1 withNewlineIfNeeded:(BOOL)arg2;
@property(readonly) IDEActivityLogSection *effectiveSection;
- (id)section;
- (id)initWithLogSection:(id)arg1;

@end

@interface IDEFrameworkCore : IDEContainerCore <IDEFrameworkCore>
{
}


// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEExtendedPlatformInfo : NSObject
{
    NSDictionary *_productTypeIdentifiersToInterfaceBuilderDocumentUTIs;
    BOOL _supportsDeviceSelection;
    BOOL _wantsIntegrityCheckForApplicationCategory;
    BOOL _wantsHiDPIArtworkTargetUpgrade;
    BOOL _canBeJetsamedDuringGPUTracing;
    BOOL _tryOtherArchWhenDesignatedArchFails;
    BOOL _hasQualityOfService;
    BOOL _requiresGameCenterDeviceCompatibilityInfoPlistEntry;
    BOOL _requiresLocalGameCenterEntitlement;
    BOOL _onlySupportsAppStoreDeployment;
    BOOL _appStoreArchivesRequirePreciseSizeEstimate;
    BOOL _distributionShouldCopySwiftSupport;
    NSString *_platformIdentifier;
    NSString *_bundleFormatApplicationPathFormatString;
    NSString *_embeddedProvisioningProfileName;
    NSString *_deploymentTargetSettingName;
    NSString *_deploymentTargetSettingHumanReadableNameTitleCase;
    NSString *_deploymentTargetSettingHumanReadableNameSentenceCase;
    NSString *_appStoreNameTitleCase;
    NSArray *_hiDPIArtworkTargetUpgradeProductTypesToExclude;
    NSString *_debuggingPlatformName;
    NSString *_gaugeCPUMeterScale;
    NSString *_recordedFramesMinimumVersionString;
    NSString *_codeSignIdentityDefaultAutomaticSelector;
    NSArray *_codeSignIdentityAutomaticSelectors;
    NSString *_conditionalSDKPostfix;
    NSString *_sdkName;
    NSString *_internalSDKName;
    NSArray *_productTypesRequiringProvisioning;
}

+ (void)_initializePlatformInfo:(id)arg1 fromExtension:(id)arg2;
+ (id)extendedPlatformInfoForPlatformIdentifier:(id)arg1;
@property(readonly) BOOL distributionShouldCopySwiftSupport; // @synthesize distributionShouldCopySwiftSupport=_distributionShouldCopySwiftSupport;
@property(readonly) BOOL appStoreArchivesRequirePreciseSizeEstimate; // @synthesize appStoreArchivesRequirePreciseSizeEstimate=_appStoreArchivesRequirePreciseSizeEstimate;
@property(readonly) NSArray *productTypesRequiringProvisioning; // @synthesize productTypesRequiringProvisioning=_productTypesRequiringProvisioning;
@property(readonly) BOOL onlySupportsAppStoreDeployment; // @synthesize onlySupportsAppStoreDeployment=_onlySupportsAppStoreDeployment;
@property(readonly, copy) NSString *internalSDKName; // @synthesize internalSDKName=_internalSDKName;
@property(readonly, copy) NSString *sdkName; // @synthesize sdkName=_sdkName;
@property(readonly) BOOL requiresLocalGameCenterEntitlement; // @synthesize requiresLocalGameCenterEntitlement=_requiresLocalGameCenterEntitlement;
@property(readonly) BOOL requiresGameCenterDeviceCompatibilityInfoPlistEntry; // @synthesize requiresGameCenterDeviceCompatibilityInfoPlistEntry=_requiresGameCenterDeviceCompatibilityInfoPlistEntry;
@property(readonly, copy) NSString *conditionalSDKPostfix; // @synthesize conditionalSDKPostfix=_conditionalSDKPostfix;
@property(readonly, copy) NSArray *codeSignIdentityAutomaticSelectors; // @synthesize codeSignIdentityAutomaticSelectors=_codeSignIdentityAutomaticSelectors;
@property(readonly, copy) NSString *codeSignIdentityDefaultAutomaticSelector; // @synthesize codeSignIdentityDefaultAutomaticSelector=_codeSignIdentityDefaultAutomaticSelector;
@property(readonly) BOOL hasQualityOfService; // @synthesize hasQualityOfService=_hasQualityOfService;
@property(readonly, copy) NSString *recordedFramesMinimumVersionString; // @synthesize recordedFramesMinimumVersionString=_recordedFramesMinimumVersionString;
@property(readonly) BOOL tryOtherArchWhenDesignatedArchFails; // @synthesize tryOtherArchWhenDesignatedArchFails=_tryOtherArchWhenDesignatedArchFails;
@property(readonly) BOOL canBeJetsamedDuringGPUTracing; // @synthesize canBeJetsamedDuringGPUTracing=_canBeJetsamedDuringGPUTracing;
@property(readonly, copy) NSString *gaugeCPUMeterScale; // @synthesize gaugeCPUMeterScale=_gaugeCPUMeterScale;
@property(readonly, copy) NSString *debuggingPlatformName; // @synthesize debuggingPlatformName=_debuggingPlatformName;
@property(readonly, copy) NSArray *hiDPIArtworkTargetUpgradeProductTypesToExclude; // @synthesize hiDPIArtworkTargetUpgradeProductTypesToExclude=_hiDPIArtworkTargetUpgradeProductTypesToExclude;
@property(readonly) BOOL wantsHiDPIArtworkTargetUpgrade; // @synthesize wantsHiDPIArtworkTargetUpgrade=_wantsHiDPIArtworkTargetUpgrade;
@property(readonly, copy) NSString *appStoreNameTitleCase; // @synthesize appStoreNameTitleCase=_appStoreNameTitleCase;
@property(readonly) BOOL wantsIntegrityCheckForApplicationCategory; // @synthesize wantsIntegrityCheckForApplicationCategory=_wantsIntegrityCheckForApplicationCategory;
@property(readonly, copy) NSString *deploymentTargetSettingHumanReadableNameSentenceCase; // @synthesize deploymentTargetSettingHumanReadableNameSentenceCase=_deploymentTargetSettingHumanReadableNameSentenceCase;
@property(readonly, copy) NSString *deploymentTargetSettingHumanReadableNameTitleCase; // @synthesize deploymentTargetSettingHumanReadableNameTitleCase=_deploymentTargetSettingHumanReadableNameTitleCase;
@property(readonly, copy) NSString *deploymentTargetSettingName; // @synthesize deploymentTargetSettingName=_deploymentTargetSettingName;
@property(readonly) BOOL supportsDeviceSelection; // @synthesize supportsDeviceSelection=_supportsDeviceSelection;
@property(readonly, copy) NSString *embeddedProvisioningProfileName; // @synthesize embeddedProvisioningProfileName=_embeddedProvisioningProfileName;
@property(readonly, copy) NSString *bundleFormatApplicationPathFormatString; // @synthesize bundleFormatApplicationPathFormatString=_bundleFormatApplicationPathFormatString;
@property(readonly, copy) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
- (void).cxx_destruct;
- (id)supportedInterfaceBuilderDocumentUTIsForProductType:(id)arg1;
@property(readonly) Class portalEntitlementsCoordinatorPlatformClass;

@end

@interface IDEDistributionProcessingPipeline : NSObject <IDEDistributionProcessingPipelineContext>
{
    NSMutableDictionary *_contextData;
    DVTLogAspect *_logAspect;
    NSArray *_pipelineSteps;
    IDEDistributionProcessingStep *_currentStep;
}

+ (id)pipelineWithPipelineSteps:(id)arg1 initialContextData:(id)arg2 andLogAspect:(id)arg3;
+ (id)pipelineWithArchive:(id)arg1 archivedInAppContent:(id)arg2 distributionMethod:(id)arg3 andLogAspect:(id)arg4;
+ (id)pipelineWithArchive:(id)arg1 distributionItems:(id)arg2 distributionMethod:(id)arg3 provisioningSnapshot:(id)arg4 entitlementsMap:(id)arg5 wantsSymbols:(_Bool)arg6 dryRun:(_Bool)arg7 andLogAspect:(id)arg8;
+ (id)pipelineWithArchive:(id)arg1 distributionItems:(id)arg2 distributionMethod:(id)arg3 provisioningSnapshot:(id)arg4 entitlementsMap:(id)arg5 andLogAspect:(id)arg6;
@property(retain) IDEDistributionProcessingStep *currentStep; // @synthesize currentStep=_currentStep;
@property(readonly, copy) NSArray *pipelineSteps; // @synthesize pipelineSteps=_pipelineSteps;
@property(readonly) DVTLogAspect *logAspect; // @synthesize logAspect=_logAspect;
- (void).cxx_destruct;
@property(copy, nonatomic) NSMutableDictionary *contextData;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDictionaryForKey:(id)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)resultsForDistributionItem:(id)arg1;
@property(readonly) DVTFilePath *finalDestinationRootPath;
@property(readonly) DVTFilePath *finalPackagePath;
- (_Bool)process:(id *)arg1;
- (id)initWithPipelineSteps:(id)arg1 initialContextData:(id)arg2 andLogAspect:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEWorkspaceBasedCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEIndexCompletionItem : NSObject
{
    void *_completionResult;
    NSString *_displayText;
    NSString *_displayType;
    NSString *_completionText;
    NSAttributedString *_descriptionText;
    NSString *_parentText;
    DVTSourceCodeSymbolKind *_symbolKind;
    double _priority;
    NSString *_name;
    BOOL _notRecommended;
}

@property double priority; // @synthesize priority=_priority;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) BOOL notRecommended;
@property(readonly) DVTSourceCodeSymbolKind *symbolKind;
@property(readonly) NSAttributedString *descriptionText;
@property(readonly, copy) NSString *parentText;
@property(readonly) NSString *completionText;
@property(readonly) NSString *displayType;
@property(readonly) NSString *displayText;
- (void)_fillInTheRest;
- (id)description;
- (id)initWithCompletionResult:(void *)arg1;

@end

@interface IDEContainer : DVTModelObject <DVTInvalidation, IDEIntegrityLogDataSource, IDEReadOnlyItem, DVTDirectoryBasedCustomDataStoreDelegate, IDEUpgradeableItem>
{
    id <IDEContainerCore> _containerCore;
    IDEWorkspace *_workspace;
    DVTFilePath *_filePath;
    IDEGroup *_rootGroup;
    DVTFilePath *_itemBaseFilePath;
    DVTExtension *_extension;
    DVTOperation *_willReadOperation;
    DVTOperation *_readOperation;
    DVTOperation *_didReadOperation;
    id <DVTCancellable> _resolvePendingFilesCancellableToken;
    int _activity;
    int _transitionActivity;
    NSMutableDictionary *_sessionIdentifiersToFilePaths;
    NSMutableDictionary *_containerLoadingTokens;
    NSMutableSet *_pendingFileReferences;
    NSDictionary *_containerDataFilePaths;
    int _autosaveBehavior;
    int _saveIssue;
    NSTimer *_pendingSaveTimer;
    NSString *_sessionIdentifier;
    NSMutableDictionary *_filePathToReadOnlyItemMap;
    NSMapTable *_readOnlyItemToStatusObserverMap;
    id <IDEContainerDelegate> _containerDelegate;
    DVTMapTable *_pendingFilePathChangeDictionary;
    int _readOnlyStatus;
    BOOL _hasTransitionedToIdle;
    BOOL _containerEdited;
}

+ (BOOL)_shouldTrackReadOnlyStatus;
+ (id)unlockingDelegate;
+ (void)setUnlockingDelegate:(id)arg1;
+ (id)reloadingDelegate;
+ (void)setReloadingDelegate:(id)arg1;
+ (id)errorPresenter;
+ (void)setErrorPresenter:(id)arg1;
+ (BOOL)supportsMultipleInstancesPerFilePath;
+ (BOOL)automaticallyNotifiesObserversOfFilePath;
+ (BOOL)automaticallyNotifiesObserversOfActivity;
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)_errorSavingContainer:(id)arg1 code:(int)arg2;
+ (double)_defaltSlowAutosaveDelay;
+ (double)_defaltAutosaveDelay;
+ (BOOL)automaticallyNotifiesObserversOfContainerEdited;
+ (void)resumeFilePathChangeNotifications;
+ (void)suspendFilePathChangeNotifications;
+ (id)_containersWithPendingFilePathChanges;
+ (BOOL)_observeContainerDataFilePathsForChanges;
+ (id)_containerForSessionIdentifier:(id)arg1;
+ (void)_invalidateContainer:(id)arg1;
+ (void)_releaseContainer:(id)arg1;
+ (void)_retainContainer:(id)arg1;
+ (BOOL)_closeContainerIfNeeded:(id)arg1;
+ (void)_removeReferencesToContainer:(id)arg1;
+ (void)_decreaseCountForContainer:(id)arg1;
+ (void)_increaseCountForContainer:(id)arg1;
+ (unsigned long long)_countForContainer:(id)arg1;
+ (id)_openContainers;
+ (BOOL)isContainerOpenForFilePath:(id)arg1;
+ (id)retainedWrappedWorkspaceForContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 error:(id *)arg3;
+ (id)containersForFilePath:(id)arg1;
+ (id)retainedContainerForFilePath:(id)arg1 workspace:(id)arg2;
+ (id)retainedContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
+ (id)_containerOpenInAnotherWorkspaceErrorForPath:(id)arg1;
+ (id)_noContainerClassForFileTypeError:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (id)containerExtensionForFileDataType:(id)arg1;
+ (id)containerLoadingModelObjectGraph;
+ (void)initialize;
@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) IDEGroup *rootGroup; // @synthesize rootGroup=_rootGroup;
@property(copy, nonatomic) DVTFilePath *itemBaseFilePath; // @synthesize itemBaseFilePath=_itemBaseFilePath;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) id <IDEContainerCore> containerCore; // @synthesize containerCore=_containerCore;
@property(retain) id <IDEContainerDelegate> containerDelegate; // @synthesize containerDelegate=_containerDelegate;
- (void).cxx_destruct;
- (void)customDataStore:(id)arg1 removeItemAtFilePath:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)customDataStore:(id)arg1 moveItemAtFilePath:(id)arg2 toFilePath:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)customDataStore:(id)arg1 makeFilePathsWritable:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_unlockReadOnlyItems:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_readOnlyItemsToUnlock;
- (void)_addReadOnlyItemPath:(id)arg1;
- (void)_removeAllReadOnlyItemPaths;
- (void)_removeReadOnlyItemPath:(id)arg1;
- (void)_updateSharedReadOnlyItemStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@property(readonly) NSURL *readOnlyItemURL;
- (void)debugPrintStructure;
- (void)debugPrintInnerStructure;
@property(readonly, copy) NSString *description;
- (void)collectMessageTracerStatisticsIntoDictionary:(id)arg1;
@property(readonly) IDEActivityLogSection *integrityLog;
- (void)analyzeModelIntegrity;
- (void)enumerateUpgradeTasksWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, getter=isFolderLike) BOOL folderLike;
@property(readonly, getter=isMajorGroup) BOOL majorGroup;
@property(readonly, getter=isEditable) BOOL editable;
- (void)_initRootGroup;
- (id)createRootGroup;
- (id)_itemBaseFilePathForFilePath:(id)arg1;
- (void)_makeRelativeFileReferencesInGroup:(id)arg1 relativeToNewBasePath:(id)arg2 oldBaseFilePath:(id)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (BOOL)setContainerFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_setContainerFilePath:(id)arg1 strict:(BOOL)arg2 error:(id *)arg3;
- (void)_setFilePath:(id)arg1;
- (void)_setFilePath:(id)arg1 strict:(BOOL)arg2 createContainerDataFilePathsToModDateMap:(BOOL)arg3;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (void)_makeAbsoluteFileReferencesInGroup:(id)arg1 relativeToFolderFilePath:(id)arg2 withPathString:(id)arg3;
@property(readonly) NSString *displayName;
- (void)_setTransitioningToNewFilePath:(BOOL)arg1;
- (void)_setExtension:(id)arg1;
- (void)_didUpdateActivity;
- (void)_willUpdateActivity;
- (void)_didTransitionToActivity:(int)arg1;
- (void)_containerDidLoad;
@property int activity;
- (BOOL)writeToFilePath:(id)arg1 forceWrite:(BOOL)arg2 error:(id *)arg3;
- (BOOL)didReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)willReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_readAsyncIfPossibleFromFilePath:(id)arg1 error:(id *)arg2;
- (id)_didReadOperationWithFilePath:(id)arg1;
- (id)_willReadOperationWithFilePath:(id)arg1;
- (id)_readOperationWithFilePath:(id)arg1;
- (BOOL)_canClosePreflightWithCheckedContainers:(id)arg1 error:(id *)arg2;
- (BOOL)_canClosePreflightOrError:(id *)arg1;
- (BOOL)ignoreLocalChanges;
- (void)_setContainerEdited;
- (void)_containerEditedDidChange;
- (BOOL)_saveContainerForAction:(int)arg1 error:(id *)arg2;
- (void)_scheduleAutosaveTimer;
- (void)_saveContainerPeriodically;
@property BOOL containerEdited;
- (id)_containerDataFilePaths;
- (id)_lastKnownModDateForContainerDataFile:(id)arg1;
- (void)_updateContainerDataFilePathsToModDateMap;
- (void)_createContainerDataFilePathsToModDateMap;
- (id)_modificationDateForFilePath:(id)arg1;
- (void)_clearContainerDataFilePathsToModDateMap;
- (void)_unregisterForChangesToContainerDataFilePath:(id)arg1;
- (void)_registerForChangesToContainerDataFilePath:(id)arg1;
- (void)_filePathDidChangeWithPendingChangeDictionary;
- (void)primitiveInvalidate;
- (void)invalidate;
- (id)_sessionIdentifier;
- (void)_invalidateContainerToDiscardInMemoryRepresentation:(BOOL)arg1;
- (void)_willInvalidateContainerToDiscardInMemoryRepresentation;
- (void)releaseContainer;
- (void)retainContainer;
- (void)_saveContainerIfNeeded;
- (id)init;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_removeSubcontainer:(id)arg1;
- (void)_addSubcontainer:(id)arg1;
- (void)_setContainerLoadingTokenForContainer:(id)arg1;
- (void)_removeContainerLoadingTokenForContainer:(id)arg1;
- (void)_locateFileReferencesRecursively;
- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
- (void)_scheduleResolvePendingFileReferencesOperation;
- (void)_handleContainerResolutionFailureForFileReference:(id)arg1;
- (void)_locateFileReferencesRecursivelyInGroup:(id)arg1;
- (void)_removePendingFileReference:(id)arg1;
- (void)_addPendingFileReference:(id)arg1;
- (id)_containerInstanceDescription;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEContainerWrapper : IDEScriptingWrapper
{
}

- (void)setRootGroup:(id)arg1;
- (void)setRealPath:(id)arg1;
- (void)setReadOnly:(BOOL)arg1;
- (void)setPath:(id)arg1;
- (void)setFullPath:(id)arg1;

@end

@interface IDEUnitTestContainerUnlockingDelegate : NSObject <IDEContainerUnlockingDelegate>
{
}

- (void)container:(id)arg1 attemptToUnlockItems:(id)arg2 workspace:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;

@end

@interface IDEDistributionCreateIPAStep : IDEDistributionProcessingStep
{
    NSString *name;
}

+ (id)processingStep;
@property(copy) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (_Bool)processWithContext:(id)arg1 andError:(id *)arg2;

@end

@interface IDEHelpCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (void)printDetailedUsageInformationForCommandVerbExtension:(id)arg1 withEnvironment:(id)arg2;
+ (void)printBasicUsageInformationWithEnvironment:(id)arg1;

@end

@interface IDEDistributionLogging : NSObject
{
    NSMutableDictionary *_nameToAspect;
    NSString *_path;
}

@property(readonly, copy) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)logAspectWithName:(id)arg1 wantsDistinctFilesPerLogLevel:(BOOL)arg2;
- (BOOL)_createLoggingBundleAtPath:(id)arg1;
- (id)_loggingBundlePathForArchiveNamed:(id)arg1;
- (id)initWithArchiveName:(id)arg1;
- (id)init;

@end

@interface IDETest : NSObject <IDETestContainer, DVTInvalidation>
{
    NSMutableSet *_subtests;
    NSMutableArray *_cachedArrangedSubtests;
    NSMutableArray *_performanceMetricsForPreviousRun;
    BOOL _canHaveSubtests;
    BOOL _indexLocationWasSet;
    id <IDETestable> _testable;
    NSString *_identifier;
    NSString *_name;
    NSArray *_errorLocations;
    IDETest *_supertest;
    DVTDocumentLocation *_indexLocation;
    NSArray *_recentErrorLocations;
}

+ (id)keyPathsForValuesAffectingLocation;
+ (id)keyPathsForValuesAffectingIsAdHocRunnable;
+ (void)initialize;
@property BOOL indexLocationWasSet; // @synthesize indexLocationWasSet=_indexLocationWasSet;
@property(copy) NSArray *recentErrorLocations; // @synthesize recentErrorLocations=_recentErrorLocations;
@property(copy, nonatomic) DVTDocumentLocation *indexLocation; // @synthesize indexLocation=_indexLocation;
@property BOOL canHaveSubtests; // @synthesize canHaveSubtests=_canHaveSubtests;
@property(readonly) IDETest *supertest; // @synthesize supertest=_supertest;
@property(readonly, copy) NSArray *errorLocations; // @synthesize errorLocations=_errorLocations;
@property(readonly, copy) NSString *name; // @synthesize name=_name;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) id <IDETestable> testable; // @synthesize testable=_testable;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *arrangedSubtests; // @dynamic arrangedSubtests;
- (void)_primitiveRemoveSubtest:(id)arg1;
- (void)_primitiveAddSubtest:(id)arg1;
- (void)_setErrorLocations:(id)arg1;
- (void)_setIndexLocation:(id)arg1;
@property(readonly, copy, nonatomic) DVTDocumentLocation *location; // @dynamic location;
- (void)setPerformanceMetricsForPreviousRun:(id)arg1;
- (id)performanceMetricsForPreviousRun;
@property(readonly) BOOL isAdHocRunnable;
- (long long)localizedStandardCompare:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithTestable:(id)arg1 identifier:(id)arg2;
- (void)primitiveInvalidate;
- (BOOL)_isInFile:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableSet *mutableSubtests; // @dynamic mutableSubtests;
@property(readonly, copy) NSSet *subtests; // @dynamic subtests;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEExecutionAction : NSObject <DVTXMLUnarchiving>
{
    NSString *_title;
    IDEScheme *_runContext;
}

+ (id)actionType;
@property(retain) IDEScheme *runContext; // @synthesize runContext=_runContext;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)schemeObjectGraphSetupComplete;
@property(readonly) BOOL needsCurrentArchiveVersion;
- (void)setTitleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)operationForExecutionWithBuildParameters:(id)arg1 error:(id *)arg2;
@property(readonly) NSDictionary *actionEnvironmentVariables;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEDistributionMethodExportArchive : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDECommandLineVerb : NSObject
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (CDUnknownBlockType)fallbackOptionHandlerBlockWithEnvironment:(id)arg1 options:(id)arg2;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDEBatchFindHistoryItem : NSObject <DVTInvalidation>
{
    NSAttributedString *_findAttributedString;
    NSAttributedString *_itemDescription;
    id _payload;
    int _findType;
}

+ (void)initialize;
@property(readonly) int findType; // @synthesize findType=_findType;
@property(retain, nonatomic) id payload; // @synthesize payload=_payload;
@property(readonly) NSAttributedString *itemDescription; // @synthesize itemDescription=_itemDescription;
@property(readonly) NSAttributedString *findAttributedString; // @synthesize findAttributedString=_findAttributedString;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)primitiveInvalidate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFindAttributedString:(id)arg1 description:(id)arg2 payload:(id)arg3 findType:(int)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDESchemeActionIssueSummary : NSObject
{
    NSString *_issueType;
    NSString *_message;
    NSString *_producingTarget;
    DVTDocumentLocation *_documentLocationInCreatingWorkspace;
    DVTFilePath *_creatingWorkspaceFilePath;
}

@property(retain) DVTFilePath *creatingWorkspaceFilePath; // @synthesize creatingWorkspaceFilePath=_creatingWorkspaceFilePath;
@property(copy) DVTDocumentLocation *documentLocationInCreatingWorkspace; // @synthesize documentLocationInCreatingWorkspace=_documentLocationInCreatingWorkspace;
@property(copy) NSString *producingTarget; // @synthesize producingTarget=_producingTarget;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *issueType; // @synthesize issueType=_issueType;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)documentLocationInLocalWorkspace:(id)arg1;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 creatingWorkspaceFilePath:(id)arg2;
- (id)initWithIssueType:(id)arg1 message:(id)arg2 producingTarget:(id)arg3 documentLocation:(id)arg4 creatingWorkspaceFilePath:(id)arg5;

@end

@interface IDESchemeActionTestFailureIssueSummary : IDESchemeActionIssueSummary
{
    NSString *_testCaseName;
}

@property(copy) NSString *testCaseName; // @synthesize testCaseName=_testCaseName;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)updateWithDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1 creatingWorkspaceFilePath:(id)arg2;
- (id)initWithIssueType:(id)arg1 message:(id)arg2 producingTarget:(id)arg3 documentLocation:(id)arg4 creatingWorkspaceFilePath:(id)arg5 testCaseName:(id)arg6;
- (id)initWithIssueType:(id)arg1 message:(id)arg2 producingTarget:(id)arg3 documentLocation:(id)arg4 creatingWorkspaceFilePath:(id)arg5;

@end

@interface IDEIndexModulesIndexable : NSObject <IDEIndexable>
{
}

+ (id)sharedInstance;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)settingsForFile:(id)arg1;
- (id)buildSettingsForMainFile:(id)arg1 workspace:(id)arg2;
- (id)localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 workspace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (BOOL)requiresMainThread;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
- (id)indexableFiles;
- (id)indexName;
- (id)identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) __weak id <IDEIndexable> proxy;
@property(readonly) Class superclass;

@end

@interface IDESourceControlRevision : NSObject
{
    NSString *_revision;
    NSString *_author;
    NSDate *_date;
    NSString *_message;
    BOOL _isHEAD;
    BOOL _isBASE;
    BOOL _isCurrent;
}

+ (id)inMemoryRevision;
+ (id)localRevision;
+ (id)keyPathsForValuesAffectingLongRevisionString;
@property BOOL isCurrent; // @synthesize isCurrent=_isCurrent;
@property BOOL isBASE; // @synthesize isBASE=_isBASE;
@property BOOL isHEAD; // @synthesize isHEAD=_isHEAD;
@property(readonly) NSString *message; // @synthesize message=_message;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) NSString *author; // @synthesize author=_author;
@property(readonly) NSString *revision; // @synthesize revision=_revision;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) NSString *longRevisionString;
- (id)ideModelObjectTypeIdentifier;
- (id)description;
- (id)initWithRevision:(id)arg1 author:(id)arg2 date:(id)arg3 message:(id)arg4;

@end

@interface IDESourceControlRevisionWrapper : IDEScriptingWrapper
{
}

- (void)setTimestamp:(id)arg1;
- (id)timestamp;
- (void)setTag:(id)arg1;
- (id)tag;
- (void)setRevision:(id)arg1;
- (id)revision;
- (id)name;
- (void)setCommitMessage:(id)arg1;
- (id)commitMessage;
- (void)setAuthor:(id)arg1;
- (id)author;

@end

@interface IDEIssue : NSObject <IDEDiagnosticItemDelegate>
{
    IDEIssueProvider *_issueProvider;
    NSArray *_documentLocations;
    NSObject *_issueTypeIdentifier;
    NSString *_fullMessage;
    unsigned long long _severity;
    unsigned long long _sequenceNumber;
    NSArray *_subissues;
    IDEActivityLogMessage *_representedMessage;
    IDEActivityLogMessage *_originatingMessage;
    IDEActivityLogRecord *_originatingLogRecord;
    IDEIssue *_parentIssue;
    int _issueType;
    NSNumber *_lineNumber;
    BOOL _frozen;
    BOOL _valid;
    BOOL _coalesced;
    BOOL _wasFetchedFromCache;
    BOOL _vended;
    NSArray *_filteredSubissues;
    DVTDocumentLocation *_primaryDocumentLocation;
}

@property(readonly) NSNumber *_lineNumber; // @synthesize _lineNumber;
@property(getter=_isVended) BOOL _vended; // @synthesize _vended;
@property(getter=_isCoalesced) BOOL _coalesced; // @synthesize _coalesced;
@property BOOL valid; // @synthesize valid=_valid;
@property(readonly) DVTDocumentLocation *primaryDocumentLocation; // @synthesize primaryDocumentLocation=_primaryDocumentLocation;
@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property BOOL wasFetchedFromCache; // @synthesize wasFetchedFromCache=_wasFetchedFromCache;
@property(readonly) __weak IDEIssue *parentIssue; // @synthesize parentIssue=_parentIssue;
@property(readonly) IDEActivityLogRecord *originatingLogRecord; // @synthesize originatingLogRecord=_originatingLogRecord;
@property(readonly) IDEActivityLogMessage *originatingMessage; // @synthesize originatingMessage=_originatingMessage;
@property(retain, nonatomic) IDEActivityLogMessage *representedMessage; // @synthesize representedMessage=_representedMessage;
@property(copy, nonatomic) NSArray *subissues; // @synthesize subissues=_subissues;
@property(readonly) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
@property(readonly) NSString *fullMessage; // @synthesize fullMessage=_fullMessage;
@property(retain) NSObject *issueTypeIdentifier; // @synthesize issueTypeIdentifier=_issueTypeIdentifier;
@property(readonly) NSArray *documentLocations; // @synthesize documentLocations=_documentLocations;
@property(retain, nonatomic) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void).cxx_destruct;
@property(readonly, nonatomic) IDEIssue *representativeSubIssue;
- (BOOL)isEqualDisregardingLocationTimestamps:(id)arg1;
- (id)_firstCommonLocationFromArray:(id)arg1 andArray:(id)arg2;
- (void)diagnosticItemWasFixed:(id)arg1;
- (long long)compareByLineNumber:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) BOOL isLiveIssue;
@property(retain) IDEIssue *_parentIssue;
@property(readonly) NSString *formattedStringRepresentation;
@property(readonly, copy) NSString *description;
- (id)_severityString;
- (void)_freeze;
@property(readonly) NSArray *fixableDiagnosticItems;
- (void)_setRepresentedMessage:(id)arg1 force:(BOOL)arg2;
@property(readonly) NSArray *filteredSubissues; // @synthesize filteredSubissues=_filteredSubissues;
- (void)_setSubissues:(id)arg1 force:(BOOL)arg2;
- (void)_setSequenceNumber:(unsigned long long)arg1;
- (id)initWithIssueProvider:(id)arg1 message:(id)arg2 wasFetchedFromCache:(BOOL)arg3;
- (id)initWithIssueProvider:(id)arg1 message:(id)arg2 originatingLogRecord:(id)arg3 wasFetchedFromCache:(BOOL)arg4;
- (id)initWithIssueProvider:(id)arg1 documentLocations:(id)arg2 issueTypeIdentifier:(id)arg3 fullMessage:(id)arg4 severity:(unsigned long long)arg5 representedMessage:(id)arg6;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELocalizationManagerContext : NSObject
{
}

- (id)createController;

@end

@interface IDELocalizationManager : NSObject <DVTInvalidation>
{
    IDELocalizationManagerContext *_context;
    NSObject<IDELocalizationController><DVTInvalidation> *_controller;
    id <IDEClientTrackingToken> _token;
    DVTObservingToken *_controllerCompleteObserver;
    IDEWorkspace *_workspace;
}

+ (id)keyPathsForValuesAffectingCurrentLocalizationProgress;
+ (void)initialize;
@property(retain) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) DVTObservingToken *controllerCompleteObserver; // @synthesize controllerCompleteObserver=_controllerCompleteObserver;
@property(retain) id <IDEClientTrackingToken> token; // @synthesize token=_token;
@property(retain) NSObject<IDELocalizationController><DVTInvalidation> *controller; // @synthesize controller=_controller;
@property(retain) IDELocalizationManagerContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)_complete;
@property(readonly) NSObject<IDELocalizationWorkProgress> *currentLocalizationProgress;
- (void)startLocalizationOperation:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEExecutionOperationTracker : IDEExecutionTracker
{
    DVTOperation *_operation;
    DVTObservingToken *_isFinishedObservingToken;
    BOOL _operationFinished;
}

@property(nonatomic) BOOL operationFinished; // @synthesize operationFinished=_operationFinished;
@property(retain) DVTOperation *operation; // @synthesize operation=_operation;
- (void).cxx_destruct;
- (BOOL)isFinished;
- (void)cancelWithReason:(int)arg1;
- (id)initWithOperation:(id)arg1;
- (id)initWithOperation:(id)arg1 serviceTier:(int)arg2;

@end

@interface IDEActivityLogContextInfoMessage : IDEActivityLogMessage
{
}

@end

@interface IDEActivityLogHeaderInclusionMessage : IDEActivityLogMessage
{
}

@end

@interface IDEDistributionMethodManager : NSObject
{
}

+ (id)defaultDistributionMethodManager;
- (id)orderedDistributionMethodsForTask:(int)arg1 archive:(id)arg2;
- (id)_orderedDistributionMethods;

@end

@interface IDEDistributionMethod : NSObject
{
    double _sortOrder;
    NSString *_group;
    NSSet *_requiredTeamTypes;
}

@property(readonly) NSSet *requiredTeamTypes; // @synthesize requiredTeamTypes=_requiredTeamTypes;
@property(readonly) NSString *group; // @synthesize group=_group;
@property(readonly) double sortOrder; // @synthesize sortOrder=_sortOrder;
- (void).cxx_destruct;
@property(readonly) NSString *packagingStepIdentifier;
@property(readonly) NSString *exportStepName;
@property(readonly) NSDictionary *requiredProfileEntitlements;
@property(readonly) unsigned long long provisioningProfileType;
@property(readonly) NSArray *availableICloudEnvironmentsOverride;
@property(readonly) BOOL wantsProvisioningProfiles;
@property(readonly) NSString *installerCertificateKind;
@property(readonly) NSString *certificateKind;
@property(readonly) NSArray *orderedDistributionStepClassNames;
@property(readonly) NSArray *entitlementsProcessorClasses;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *shortTitle;
@property(readonly) NSString *title;
@property(readonly, getter=isAppStoreBound) BOOL appStoreBound;
@property(readonly) int supportedTask;
- (_Bool)supportsDistributionOfArchive:(id)arg1;
@property(readonly) NSString *taskNoun;
@property(readonly) NSString *taskVerb;
- (id)initWithExtension:(id)arg1;

@end

@interface _IDETestableState : NSObject <DVTInvalidation>
{
    NSMutableSet *_testableObservers;
    NSMutableDictionary *_testResults;
    NSMutableDictionary *_performanceMetricsByTestIdentifier;
    id <IDETestable> _testable;
    IDETestableIssueProvider *_issueProvider;
}

+ (void)initialize;
@property(readonly) IDETestableIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(readonly) __weak id <IDETestable> testable; // @synthesize testable=_testable;
- (void).cxx_destruct;
- (id)_performanceMetricsForTest:(id)arg1;
- (unsigned long long)_stateOfTest:(id)arg1;
- (unsigned long long)_testableStateForTestable:(id)arg1;
- (unsigned long long)_compositeStateOfSubTests:(id)arg1;
- (void)_clearAllResults;
- (void)_addAllTestsForTestable:(id)arg1 intoSet:(id)arg2;
- (void)_processNewTestResults:(id)arg1;
- (void)_clearCachedResultsForTest:(id)arg1 andNoteParentIn:(id)arg2;
- (void)_notifyWorkspaceReferencedTestableChanged;
- (void)_notifyTestableChanged:(id)arg1;
- (BOOL)_hasObservers;
- (void)_removeObserver:(id)arg1;
- (void)_addObserver:(id)arg1;
- (void)primitiveInvalidate;
- (id)_initWithTestable:(id)arg1 andWorkspace:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDETestFileChangeBroker : NSObject <IDETestsInTestableObserver, DVTInvalidation>
{
    IDETestManager *_testManager;
    NSURL *_url;
    NSMutableSet *_fileObservers;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)_notifyWorkspaceReferencedTestableChanged;
- (void)_notifyObserversTestsInFileUpdated;
- (void)workspaceReferencedTestablesChanged;
- (void)testablesChanged:(id)arg1;
- (void)testsChanged:(id)arg1;
- (void)_updateObservation;
- (void)removeTestFileObserver:(id)arg1;
- (void)addTestFileObserver:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithURL:(id)arg1 testManager:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _IDETestRunPerTestableSessionState : NSObject
{
    NSArray *_skippedTestIDList;
    NSMutableSet *_skippedTestIDs;
    NSMutableSet *_pendingRunTestIDs;
    NSMutableSet *_alreadyRunTestIDs;
}

@property(readonly, retain) NSMutableSet *alreadyRunTestIDs; // @synthesize alreadyRunTestIDs=_alreadyRunTestIDs;
@property(readonly, retain) NSMutableSet *pendingRunTestIDs; // @synthesize pendingRunTestIDs=_pendingRunTestIDs;
@property(readonly, retain) NSMutableSet *skippedTestIDs; // @synthesize skippedTestIDs=_skippedTestIDs;
@property(readonly, retain) NSArray *skippedTestIDList; // @synthesize skippedTestIDList=_skippedTestIDList;
- (void).cxx_destruct;
- (BOOL)_testIsPendingRun:(id)arg1;
- (void)_updateStatisticsForTestable:(id)arg1;
- (void)_addRunTest:(id)arg1;
- (id)initWithSkippedTestList:(id)arg1;

@end

@interface IDETestRunSession : NSObject <IDETestsInTestableObserver, DVTInvalidation, DVTProgressReporting>
{
    IDETestManager *_testManager;
    unsigned long long _lastReportedMax;
    IDETest *_currentTest;
    NSDictionary *_sessionStateByTestableName;
    unsigned long long _totalNumberOfTests;
    unsigned long long _currentTestNumber;
    unsigned long long _sessionGenerationCount;
}

+ (void)initialize;
+ (id)keyPathsForValuesAffectingProgress;
@property(readonly) unsigned long long sessionGenerationCount; // @synthesize sessionGenerationCount=_sessionGenerationCount;
@property(nonatomic) unsigned long long currentTestNumber; // @synthesize currentTestNumber=_currentTestNumber;
@property(nonatomic) unsigned long long totalNumberOfTests; // @synthesize totalNumberOfTests=_totalNumberOfTests;
@property(retain) NSDictionary *sessionStateByTestableName; // @synthesize sessionStateByTestableName=_sessionStateByTestableName;
@property(retain) IDETest *currentTest; // @synthesize currentTest=_currentTest;
- (void).cxx_destruct;
- (void)workspaceReferencedTestablesChanged;
- (void)testsChanged:(id)arg1;
- (void)testablesChanged:(id)arg1;
- (unsigned long long)_calculateTestsReported;
- (void)_updateStatisticsForTestable:(id)arg1;
- (void)_updateRunningTests:(id)arg1;
- (void)_updateWithTest:(id)arg1;
- (BOOL)_testableIsPendingRun:(id)arg1;
- (BOOL)_testIsPendingRun:(id)arg1;
- (void)_watchTestRunner:(id)arg1;
@property(readonly) long long progress;
- (void)_stopMonitoringTestables;
- (void)_startMonitoringTestablesWithSkippedTests:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithTestManager:(id)arg1 sessionGenerationCount:(unsigned long long)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDETestManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableArray *_testRunners;
    NSMutableArray *_testRunnerObservationTokens;
    NSMutableSet *_testRunSessions;
    NSCountedSet *_runningTests;
    NSMutableSet *_searchedTestables;
    NSMutableSet *_testableObservingTokens;
    DVTMapTable *_subtestObservingTokenMapTable;
    DVTNotificationToken *_blueprintsChangedObserver;
    DVTNotificationToken *_buildOperationObserver;
    DVTNotificationToken *_cleanBuildFolderObserver;
    DVTNotificationToken *_testableChangedHackNotification;
    NSMutableSet *_changedTestables;
    BOOL _forcingReloadAll;
    NSMutableDictionary *_dataSources;
    NSMutableDictionary *_testRunGenerationCountsByID;
    BOOL _loadingComplete;
    IDELogStore *_logStore;
    NSSet *_testsLastRun;
    NSSet *_testsLastProfiled;
    DVTFilePath *_baselineFilePath;
    DVTFilePath *_actionResultsBundleWithBaselineOverridesFilePath;
    IDEUnitTestsOperationsObserver *_runOperationsObserver;
    NSMutableDictionary *_testableStateByTestableName;
    NSMutableDictionary *_fileChangeBrokersByFileURL;
    NSMutableDictionary *_testablesByFileURL;
    unsigned long long _testSessionGenereationCounter;
}

+ (BOOL)_initializedForUserInteraction;
+ (id)_stringForCurrentTime;
+ (void)initialize;
@property unsigned long long testSessionGenereationCounter; // @synthesize testSessionGenereationCounter=_testSessionGenereationCounter;
@property(readonly) NSMutableDictionary *testablesByFileURL; // @synthesize testablesByFileURL=_testablesByFileURL;
@property(readonly) NSMutableDictionary *fileChangeBrokersByFileURL; // @synthesize fileChangeBrokersByFileURL=_fileChangeBrokersByFileURL;
@property(readonly) NSMutableDictionary *testableStateByTestableName; // @synthesize testableStateByTestableName=_testableStateByTestableName;
@property(retain) IDEUnitTestsOperationsObserver *runOperationsObserver; // @synthesize runOperationsObserver=_runOperationsObserver;
@property(retain) DVTFilePath *actionResultsBundleWithBaselineOverridesFilePath; // @synthesize actionResultsBundleWithBaselineOverridesFilePath=_actionResultsBundleWithBaselineOverridesFilePath;
@property(retain) DVTFilePath *baselineFilePath; // @synthesize baselineFilePath=_baselineFilePath;
@property BOOL loadingComplete; // @synthesize loadingComplete=_loadingComplete;
@property(retain) NSSet *testsLastProfiled; // @synthesize testsLastProfiled=_testsLastProfiled;
@property(retain) NSSet *testsLastRun; // @synthesize testsLastRun=_testsLastRun;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(readonly) NSArray *testRunners; // @synthesize testRunners=_testRunners;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)asyncApplyBaselineRecord:(id)arg1 forTestBundleRunDestinationRecord:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (id)_testablesForFileURL:(id)arg1;
- (id)testForIdentifier:(id)arg1;
- (id)fileURLForTestIdentifier:(id)arg1;
- (id)testsForFileURL:(id)arg1;
- (id)testableDataSourceForTestingSystemWithIdentifier:(id)arg1;
- (void)setTestableDataSource:(id)arg1 forTestingSystemWithIdentifier:(id)arg2;
- (id)testOperationForTestingSpecification:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 runDestination:(id)arg5 workspace:(id)arg6 actionRecord:(id)arg7 schemeIdentifier:(id)arg8 outSchemeActionResultOperation:(id *)arg9 error:(id *)arg10 launchParametersBlock:(CDUnknownBlockType)arg11 actionCallbackBlock:(CDUnknownBlockType)arg12;
- (id)testRunnerForTestingSpecifier:(id)arg1;
- (void)_purgeInvalidRDTsForTestable:(id)arg1 withSkippedTests:(id)arg2;
- (void)_purgeInvalidRDTsForTest:(id)arg1 withSkippedTests:(id)arg2;
- (BOOL)_shouldPurgeRDTTestResultForTest:(id)arg1;
- (unsigned long long)_latestGenerationForAncestorsOfTest:(id)arg1;
- (void)_writeTestResultsBundleForTestRunners:(id)arg1 successCount:(unsigned long long *)arg2 failureCount:(unsigned long long *)arg3;
- (id)_createResultsObserverForRunner:(id)arg1;
- (void)_updateObservedTestResults;
- (unsigned long long)stateOfTestable:(id)arg1;
- (id)performanceMetricsForTest:(id)arg1;
- (unsigned long long)stateOfTest:(id)arg1;
- (BOOL)isTestablePendingRun:(id)arg1;
- (BOOL)isTestPendingRun:(id)arg1;
- (void)_cancelAndRemoveAllTestObservingTokens;
- (void)_unregisterSubtestsObservanceForTest:(id)arg1 inTestable:(id)arg2;
- (void)_registerSubtestsObservance:(id)arg1 forTest:(id)arg2 inTestable:(id)arg3;
- (void)_loadTestsForTestable:(id)arg1;
- (void)_checkLoadingComplete;
- (void)_updateTestsLastRunOrProfiledForRemovedTests:(id)arg1;
- (void)_diffPrevious:(id)arg1 current:(id)arg2 onlyNew:(id *)arg3 onlyOld:(id *)arg4;
- (void)_forceReloadAllTestables;
- (void)_delayedForceReloadAllTestables;
- (void)_notifyObserversOfChangedTestable:(id)arg1;
- (void)_delayedNotifyObserversOfChangedTestables;
- (void)_notifyUpdatedTestFilesForTestable:(id)arg1 addedFiles:(id)arg2 removedFiles:(id)arg3;
- (void)removeObserver:(id)arg1 ofFile:(id)arg2;
- (void)addObserver:(id)arg1 ofFile:(id)arg2;
- (void)setTestablesObserved:(id)arg1 byObserver:(id)arg2;
- (id)_stateForTestable:(id)arg1;
- (void)_notifyWorkspaceReferencedTestablesObservers;
- (void)_buildOperationDidStop:(id)arg1;
- (void)_cleanBuildFolder:(id)arg1;
- (void)_blueprintsDidChange:(id)arg1;
- (unsigned long long)_lastRunSessionGenerationCountForTestable:(id)arg1;
- (unsigned long long)_lastRunSessionGenerationCountForTest:(id)arg1;
- (void)_setLastRunSessionGenerationCount:(unsigned long long)arg1 forTest:(id)arg2;
- (void)_removeRunningTest:(id)arg1;
- (void)_addRunningTest:(id)arg1;
- (void)_removeInvalidTestableStateForInvalidTestables:(id)arg1;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableSet *mutableTestRunSessions; // @dynamic mutableTestRunSessions;
@property(readonly) Class superclass;
@property(readonly, copy) NSSet *testRunSessions; // @dynamic testRunSessions;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDECommandLineBuildTask : IDEBuildTask
{
    NSTask *_task;
}

+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 command:(id)arg3;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 commandLine:(id)arg3;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 commandLine:(id)arg3 workingDirectory:(id)arg4 environmentEntries:(id)arg5;
- (void).cxx_destruct;
- (id)description;
- (void)main;
@property(readonly) NSString *workingDirectory;
@property(readonly) NSDictionary *environmentEntries;
@property(readonly) NSArray *commandLine;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDESymbolicBreakpoint : IDEBreakpoint
{
    NSString *_symbolName;
    NSString *_moduleName;
}

+ (id)keyPathsForValuesAffectingLocationsProvideAdditionalInformation;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(copy) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void).cxx_destruct;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (BOOL)locationsProvideAdditionalInformation;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)initWithSymbolName:(id)arg1 moduleName:(id)arg2;
- (id)init;

@end

@interface IDESymbolicBreakpointWrapper : IDEBreakpointWrapper
{
}

- (void)setSymbolName:(id)arg1;
- (id)symbolName;

@end

@interface IDEBreakpointAction : NSObject <DVTXMLUnarchiving>
{
    NSString *_displayName;
    NSArray *_expressions;
    BOOL _displayable;
    BOOL _displyable;
}

+ (id)_expressionsInString:(id)arg1;
+ (id)propertiesAffectingPersistenceState;
+ (id)_replace:(id)arg1 with:(id)arg2 inString:(id)arg3;
+ (id)_expandMacrosInString:(id)arg1 usingBreakpoint:(id)arg2;
+ (void)initialize;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(getter=isDisplayable) BOOL displayable; // @synthesize displayable=_displyable;
- (void).cxx_destruct;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)_expandExpressionsInString:(id)arg1;
- (void)extractAndSetExpressionsFromString:(id)arg1;
- (void)extractAndAddExpressionsFromString:(id)arg1;
- (void)clearExpressions;
- (id)expandExpressionsAndMacrosInString:(id)arg1 usingBreakpoint:(id)arg2;
- (BOOL)haveExpressionsBeenEvaluated;
- (void)resetExpressionResults;
- (void)performActionUsingContext:(id)arg1 andBreakpoint:(id)arg2;
- (void)_breakpointActionCommonInit;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy) NSArray *expressions; // @dynamic expressions;
@property(readonly) unsigned long long hash;
@property(readonly) NSMutableArray *mutableExpressions; // @dynamic mutableExpressions;
@property(readonly) Class superclass;

@end

@interface IDEBreakpointActionEvaluationContext : NSObject
{
    id <IDEDebugSession> _debugSession;
    IDEConsoleAdaptor *_consoleAdaptor;
    unsigned long long _selectedThreadIndex;
    unsigned long long _selectedFrameIndex;
}

@property(readonly) unsigned long long selectedFrameIndex; // @synthesize selectedFrameIndex=_selectedFrameIndex;
@property(readonly) unsigned long long selectedThreadIndex; // @synthesize selectedThreadIndex=_selectedThreadIndex;
@property(readonly) IDEConsoleAdaptor *consoleAdaptor; // @synthesize consoleAdaptor=_consoleAdaptor;
@property(readonly) id <IDEDebugSession> debugSession; // @synthesize debugSession=_debugSession;
- (void).cxx_destruct;
- (id)initWithDebugSession:(id)arg1 consoleAdaptor:(id)arg2 selectedThreadIndex:(unsigned long long)arg3 selectedFrameIndex:(unsigned long long)arg4;

@end

@interface IDERunOperationWorkerGroup : IDERunOperationWorker <IDERunOperationWorkerDelegate, IDERunOperationWorkerTracker>
{
    NSArray *_subworkers;
    unsigned long long _finishedSubworkers;
    BOOL _shouldStartNextWorker;
    unsigned long long _currentWorkerIndex;
}

- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, copy) NSString *description;
- (void)allSubworkersDidFinishWithError:(id)arg1;
- (void)runningDidFinish:(id)arg1 withError:(id)arg2;
- (void)workerDidComplete:(id)arg1 withError:(id)arg2;
- (void)terminate;
- (void)start;
- (void)_startNextWorker;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;
- (id)initWithWorkers:(id)arg1 launchSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEActivityLogMessage : NSObject <NSCopying>
{
    NSString *_title;
    NSString *_shortTitle;
    double _timeEmitted;
    IDEActivityLogSection *_supersection;
    struct _NSRange _rangeInSectionText;
    IDEActivityLogMessage *_supermessage;
    NSMutableArray *_submessages;
    unsigned long long _severity;
    IDETypeIdentifier *_type;
    DVTDocumentLocation *_location;
    NSString *_categoryIdent;
    NSArray *_secondaryLocations;
    NSString *_additionalDescription;
    int _lock;
}

+ (id)messageWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4 lineNumber:(unsigned long long)arg5;
+ (id)messageWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;
@property(readonly) IDETypeIdentifier *type; // @synthesize type=_type;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@property(readonly) unsigned long long totalNumberOfAnalyzerResults;
@property(readonly) unsigned long long totalNumberOfAnalyzerWarnings;
@property(readonly) unsigned long long totalNumberOfWarnings;
@property(readonly) unsigned long long totalNumberOfErrors;
@property(readonly) unsigned long long totalNumberOfTestFailures;
- (void)setSecondaryLocations:(id)arg1;
@property(readonly) NSArray *secondaryLocations;
@property(readonly) NSString *additionalDescription;
- (void)setCategoryIdentifier:(id)arg1;
@property(readonly) NSString *categoryIdentifier;
@property(readonly) DVTDocumentLocation *location;
- (void)setShortTitle:(id)arg1;
@property(readonly) NSString *shortTitle;
- (void)logRecorder:(id)arg1 addSectionTextRange:(struct _NSRange)arg2;
- (void)logRecorder:(id)arg1 setSectionTextRange:(struct _NSRange)arg2;
@property(readonly) NSString *logMessageString;
- (void)logRecorder:(id)arg1 addSubmessage:(id)arg2;
- (void)addSubmessage:(id)arg1;
@property(readonly) NSArray *submessages;
- (void)_setSupermessage:(id)arg1;
@property(readonly) __weak IDEActivityLogMessage *supermessage;
- (void)setSectionTextRange:(struct _NSRange)arg1;
@property(readonly) struct _NSRange rangeInSectionText;
- (void)_setSupersection:(id)arg1;
@property(readonly) __weak IDEActivityLogSection *supersection;
- (id)description;
@property(readonly) double timeEmitted;
@property(readonly) NSString *title;
- (BOOL)_hasEqualTitleLocationsSubmessages:(id)arg1 disregardingTimestamp:(BOOL)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4 lineNumber:(unsigned long long)arg5;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3;

@end

@interface IDEArchive : NSObject
{
    DVTFilePath *_path;
    NSMutableDictionary *_infoDictionary;
    IDEArchivedContent *_archivedContent;
    BOOL _savePending;
    BOOL _estimateInProgress;
    NSArray *_topLevelDistributionItems;
}

+ (long long)_computedApproximateAppStoreFileSizeForArchiveContentPath:(id)arg1 forPlatform:(id)arg2;
+ (long long)_fileSizeForPathString:(id)arg1;
+ (BOOL)_zipDirectoryAtPath:(id)arg1 destination:(id)arg2 excluding:(id)arg3;
+ (id)_availableArchivePathInDirectory:(id)arg1 withName:(id)arg2 creationDate:(id)arg3 usingFileManager:(id)arg4;
+ (id)_archivePathOverride;
+ (id)_archivePlistPathForArchivePath:(id)arg1;
+ (BOOL)_copyProductDefinitionPlistFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (BOOL)_copydSYMsFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (id)_createArchiveWithName:(id)arg1 usingFileManager:(id)arg2 error:(id *)arg3;
+ (id)_folderPathForArchiveWithDate:(id)arg1;
+ (id)createArchiveWithName:(id)arg1 schemeName:(id)arg2 platform:(id)arg3 products:(id)arg4 auxiliaryFiles:(id)arg5 usingFileManager:(id)arg6 error:(id *)arg7;
+ (id)installArchiveWithArchivePath:(id)arg1 usingFileManager:(id)arg2;
+ (id)archiveWithArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingProductDefinitionPlistPath;
+ (id)_productDefinitionPlistPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingDSYMDirectoryPath;
+ (id)_dSYMDirectoryPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingProductsDirectoryPath;
+ (id)_productsDirectoryPathForArchivePath:(id)arg1;
@property BOOL estimateInProgress; // @synthesize estimateInProgress=_estimateInProgress;
@property(readonly) IDEArchivedContent *archivedContent; // @synthesize archivedContent=_archivedContent;
@property(retain) DVTFilePath *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)topLevelDistributionItemsWithLogAspect:(id)arg1 error:(id *)arg2;
- (id)_distributionItemForPath:(id)arg1 pathsToItems:(id)arg2 pathsToChildPaths:(id)arg3 logAspect:(id)arg4 error:(id *)arg5;
- (id)expandedCustomEntitlementsForItemAtPath:(id)arg1 error:(id *)arg2;
- (void)estimateSizeInBackgroundForPlatform:(id)arg1;
- (void)_saveArchive:(id)arg1;
- (void)markDirty;
- (id)objectForEnterpriseDistributionKey:(id)arg1;
- (void)setObject:(id)arg1 forEnterpriseDistributionKey:(id)arg2;
@property(copy) NSDictionary *enterpriseDistributionManifest;
@property(copy) NSString *statusString;
@property(copy) NSString *comment;
@property long long estimatedAppStoreFileSize;
@property BOOL estimatedAppStoreFileSizeIsValid;
@property(readonly) NSDate *creationDate;
@property(readonly) unsigned long long version;
@property(readonly) NSString *schemeName;
@property(copy) NSString *name;
@property(readonly) DVTFilePath *productDefinitionPlistPath;
@property(readonly) DVTFilePath *dSYMDirectoryPath;
@property(readonly) DVTFilePath *productsDirectoryPath;
@property(readonly) NSMutableDictionary *infoDictionary;
@property(readonly) IDEArchivedApplication *application;
- (id)_initWithPath:(id)arg1 infoDictionary:(id)arg2;

@end

@interface IDEActivityLogChangeEvent : NSObject
{
    IDEActivityLogSection *_section;
}

+ (id)stopRecordingEventWithSection:(id)arg1 supersections:(id)arg2;
+ (id)setValueEventWithSection:(id)arg1 key:(id)arg2 value:(id)arg3;
+ (id)appendTextEventWithSection:(id)arg1 textString:(id)arg2;
+ (id)addSubmessageEventWithSection:(id)arg1 supermessage:(id)arg2 submessage:(id)arg3;
+ (id)addSubsectionEventWithSection:(id)arg1 subsection:(id)arg2;
@property(readonly) IDEActivityLogSection *section; // @synthesize section=_section;
- (void).cxx_destruct;
- (id)description;
- (id)addedChild;
- (id)changedParent;
- (id)initWithSection:(id)arg1;

@end

@interface IDEActivityLogAddSubsectionChangeEvent : IDEActivityLogChangeEvent
{
    IDEActivityLogSection *_subsection;
}

@property(readonly) IDEActivityLogSection *subsection; // @synthesize subsection=_subsection;
- (void).cxx_destruct;
- (id)description;
- (id)addedChild;
- (id)initWithSection:(id)arg1 subsection:(id)arg2;

@end

@interface IDEActivityLogAddSubmessageChangeEvent : IDEActivityLogChangeEvent
{
    IDEActivityLogMessage *_supermessage;
    IDEActivityLogMessage *_submessage;
}

@property(readonly) IDEActivityLogMessage *submessage; // @synthesize submessage=_submessage;
@property(readonly) IDEActivityLogMessage *supermessage; // @synthesize supermessage=_supermessage;
- (void).cxx_destruct;
- (id)description;
- (id)addedChild;
- (id)changedParent;
- (id)initWithSection:(id)arg1 supermessage:(id)arg2 submessage:(id)arg3;
- (id)initWithSection:(id)arg1 submessage:(id)arg2;

@end

@interface IDEActivityLogAppendTextChangeEvent : IDEActivityLogChangeEvent
{
    NSString *_textString;
}

@property(readonly) NSString *textString; // @synthesize textString=_textString;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSection:(id)arg1 textString:(id)arg2;

@end

@interface IDEActivityLogSetKeyValueChangeEvent : IDEActivityLogChangeEvent
{
    NSString *_key;
    NSValue *_value;
}

@property(readonly) NSValue *value; // @synthesize value=_value;
@property(readonly) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSection:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface IDEActivityLogStopRecordingChangeEvent : IDEActivityLogChangeEvent
{
    NSSet *_supersections;
}

@property(readonly) NSSet *supersections; // @synthesize supersections=_supersections;
- (void).cxx_destruct;
- (id)description;
- (id)initWithSection:(id)arg1 supersections:(id)arg2;

@end

@interface IDEAnalyzeSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSString *_buildConfiguration;
}

+ (void)insertsynthesizedMacrosIntoOverridingProperties:(id)arg1;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)shouldAllowCustomPhaseActions;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (void).cxx_destruct;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)buildOperationForExecutionEnvironment:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(id)arg4 filePath:(id)arg5 buildConfiguration:(id)arg6 buildLog:(id)arg7 overridingProperties:(id)arg8 activeRunDestination:(id)arg9 activeArchitecture:(id)arg10 restorePersistedBuildResults:(BOOL)arg11 schemeActionRecord:(id)arg12 error:(id *)arg13;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)mutablePostPhaseExecutionActions;
- (id)postPhaseExecutionActions;
- (id)mutablePrePhaseExecutionActions;
- (id)prePhaseExecutionActions;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDETestIssue : IDEIssue
{
    IDETest *_test;
    NSArray *_performanceMetrics;
    unsigned long long _issueGeneration;
}

@property(readonly) unsigned long long issueGeneration; // @synthesize issueGeneration=_issueGeneration;
@property(readonly) NSArray *performanceMetrics; // @synthesize performanceMetrics=_performanceMetrics;
@property(readonly) IDETest *test; // @synthesize test=_test;
- (void).cxx_destruct;
- (id)_documentLocationForFilePath:(id)arg1 lineNumber:(id)arg2 timestamp:(id)arg3;
- (id)initWithIssueProvider:(id)arg1 test:(id)arg2 performanceMetrics:(id)arg3 testResultMessage:(id)arg4 timestamp:(id)arg5 issueTypeIdentifier:(id)arg6 issueGeneration:(unsigned long long)arg7;

@end

@interface IDETestableIssueProvider : IDEIssueProvider <IDETestsInTestableObserver>
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_issuesByTestID;
    NSMutableArray *_genericIssues;
    unsigned long long _currentIssueGeneration;
    NSMutableSet *_observedTestables;
}

- (void).cxx_destruct;
- (void)_processResult:(id)arg1;
- (void)_addIssuesForTest:(id)arg1 issues:(id)arg2 isGeneric:(BOOL)arg3;
- (void)_clearIssuesForTest:(id)arg1;
- (void)_postTestIssue:(id)arg1 forTestable:(id)arg2;
- (id)_documentLocationForFilePath:(id)arg1 lineNumber:(id)arg2 timestamp:(id)arg3;
- (id)_headingNameForTest:(id)arg1;
- (void)_beginNewIssueGeneration;
- (BOOL)_filterIssuesByActiveScheme;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)testsChanged:(id)arg1;
- (void)testablesChanged:(id)arg1;
- (void)workspaceReferencedTestablesChanged;
- (void)_updateObservedTestablesForTest:(id)arg1;
- (void)primitiveInvalidate;
- (id)_initWithWorkspace:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEWorkspaceInfoCommandLineVerb : IDEWorkspaceBasedCommandLineVerb
{
}

+ (void)_printBlueprintProviderInfo:(id)arg1 withEnvironment:(id)arg2 showAllProjects:(BOOL)arg3 showTargets:(BOOL)arg4 showSchemes:(BOOL)arg5 showConfigurations:(BOOL)arg6 indentationLevel:(unsigned long long)arg7;
+ (void)_printSchemesForContainer:(id)arg1 withEnvironment:(id)arg2 indentationLevel:(unsigned long long)arg3;
+ (void)_indentToLevel:(unsigned long long)arg1 withEnvironment:(id)arg2;
+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;

@end

@interface IDERefactoring : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    id _willIndexNotificationObservingToken;
    id _didIndexNotificationObservingToken;
    BOOL _refactoringAllowed;
    id _domainObject;
}

+ (void)initialize;
@property(retain) id domainObject; // @synthesize domainObject=_domainObject;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEActivityLogAnalyzerWarningMessage : IDEActivityLogMessage
{
}

+ (id)analyzerWarningType;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (unsigned long long)totalNumberOfAnalyzerWarnings;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerWarningMessage;

@end

@interface IDEActivityLogAnalyzerResultMessage : IDEActivityLogMessage
{
    NSString *_resultType;
    long long _keyEventIndex;
}

+ (id)analyzerMessageType;
@property long long keyEventIndex; // @synthesize keyEventIndex=_keyEventIndex;
- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)resultCategory;
- (id)resultType;
- (void)setResultType:(id)arg1;
- (unsigned long long)totalNumberOfAnalyzerResults;
- (unsigned long long)totalNumberOfWarnings;

@end

@interface IDEActivityLogAnalyzerStepMessage : IDEActivityLogMessage
{
    long long _parentIndex;
}

@property long long parentIndex; // @synthesize parentIndex=_parentIndex;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerStepMessage;

@end

@interface IDEActivityLogAnalyzerControlFlowStepMessage : IDEActivityLogAnalyzerStepMessage
{
    DVTTextDocumentLocation *_endLocation;
    NSArray *_edges;
}

- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (void)setEdges:(id)arg1;
- (id)edges;
- (id)endLocation;
- (id)startLocation;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerControlFlowStepMessage;
- (id)initWithTitle:(id)arg1 startLocation:(id)arg2 endLocation:(id)arg3;

@end

@interface IDEActivityLogAnalyzerControlFlowStepEdge : NSObject
{
    DVTTextDocumentLocation *_startLocation;
    DVTTextDocumentLocation *_endLocation;
}

- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)description;
- (id)endLocation;
- (id)startLocation;
- (id)initWithStartLocation:(id)arg1 endLocation:(id)arg2;

@end

@interface IDEActivityLogAnalyzerEventStepMessage : IDEActivityLogAnalyzerStepMessage
{
    NSString *_description;
    unsigned long long _callDepth;
}

- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)locations;
- (void)setCallDepth:(unsigned long long)arg1;
- (unsigned long long)callDepth;
- (void)setDescription:(id)arg1;
- (id)description;
- (unsigned long long)totalNumberOfWarnings;

@end

@interface IDEBreakpointLocation : IDEBreakpoint
{
    IDEBreakpoint *_parentBreakpoint;
    NSString *_urlString;
    NSString *_timestampString;
    long long _startingColumnNumber;
    long long _endingColumnNumber;
    long long _startingLineNumber;
    long long _endingLineNumber;
    NSString *_characterRangeString;
    DVTTextDocumentLocation *_documentLocation;
    NSString *_symbolName;
    NSString *_moduleName;
    unsigned long long _address;
    unsigned long long _offsetFromSymbolStart;
}

@property unsigned long long offsetFromSymbolStart; // @synthesize offsetFromSymbolStart=_offsetFromSymbolStart;
@property(readonly) unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(readonly) NSString *symbolName; // @synthesize symbolName=_symbolName;
@property(readonly) DVTTextDocumentLocation *documentLocation; // @synthesize documentLocation=_documentLocation;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@property(retain) IDEBreakpoint *parentBreakpoint;
- (BOOL)_isTextDocumentLocationEqual:(id)arg1;
- (BOOL)isBreakpointLocationTheSameDisregardingAddress:(id)arg1;
- (id)mutableLocations;
- (id)locations;
@property(readonly) DVTTextDocumentLocation *zeroBasedDocumentLocation;
- (id)displayName;
- (id)initWithDocumentTextLocation:(id)arg1 symbolName:(id)arg2 moduleName:(id)arg3 address:(unsigned long long)arg4;

@end

@interface IDEInstallSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSString *_buildConfiguration;
    NSString *_customInstallName;
    NSArray *_killProcessList;
}

+ (id)keyPathsForValuesAffectingKillProcessListString;
+ (id)keyPathsForValuesAffectingDefaultInstallName;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)allowInstallSchemeAction;
@property(copy) NSArray *killProcessList; // @synthesize killProcessList=_killProcessList;
@property(copy) NSString *customInstallName; // @synthesize customInstallName=_customInstallName;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (void).cxx_destruct;
- (void)setKillProcessesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomInstallNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)hasDefaultValues;
- (id)overridingMacrosForInstallBuildForWorkspaceArena:(id)arg1 destination:(id)arg2;
- (id)installOperationWithExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 schemeActionRecord:(id)arg4 outError:(id *)arg5 actionCallbackBlock:(CDUnknownBlockType)arg6;
@property(copy) NSString *killProcessListString;
@property(readonly) NSString *defaultInstallName;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDEBuildableProductSupportMixIn : NSObject <DVTInvalidation>
{
    id <IDEBuildableProduct> _buildableProduct;
}

+ (void)initialize;
- (void).cxx_destruct;
- (id)toolTip;
- (id)displayName;
- (id)filePathForBuildParameters:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithBuildableProduct:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEArchivingOperation : DVTOperationGroup
{
    NSString *_archiveName;
    NSString *_schemeName;
    DVTPlatform *_platform;
    DVTFilePath *_archiveBuildFolder;
    DVTFilePath *_dstrootPath;
    DVTFilePath *_symrootPath;
    DVTFilePath *_objrootPath;
    DVTFilePath *_sharedPrecompsPath;
    IDEArchivePathsSnapshot *_archiveSnapshot;
    BOOL _revealCreatedArchive;
}

+ (id)overridingMacrosForArchiveBuildWithSchemeName:(id)arg1 workspaceArena:(id)arg2;
+ (void)_calculateArchiveBuildFolder:(id *)arg1 dstrootPath:(id *)arg2 symrootPath:(id *)arg3 objrootPath:(id *)arg4 sharedPrecompsPath:(id *)arg5 givenSchemeName:(id)arg6 workspaceArena:(id)arg7;
@property(readonly) IDEArchivePathsSnapshot *archiveSnapshot; // @synthesize archiveSnapshot=_archiveSnapshot;
- (void).cxx_destruct;
- (void)main;
- (id)preperatoryOperationForArchiveBuild;
- (id)initWithArchiveName:(id)arg1 schemeName:(id)arg2 workspaceArena:(id)arg3 platform:(id)arg4 revealCreatedArchive:(BOOL)arg5;

@end

@interface IDEArchivingOperationGroup : DVTOperationGroup
{
    IDEArchivingOperation *_archivingOperation;
    IDEBuildOperationGroup *_buildForArchiveOperation;
}

+ (id)operationGroupWithSuboperations:(id)arg1;
+ (id)operationGroupWithArchivingOperation:(id)arg1 otherOperations:(id)arg2;
@property(retain) IDEBuildOperationGroup *buildForArchiveOperation; // @synthesize buildForArchiveOperation=_buildForArchiveOperation;
@property(readonly) IDEArchivingOperation *archivingOperation; // @synthesize archivingOperation=_archivingOperation;
- (void).cxx_destruct;

@end

@interface IDESimulateLocationService : DVTDeviceService
{
}

+ (id)capability;
- (BOOL)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2 error:(id *)arg3;
- (BOOL)stopLocationSimulationWithError:(id *)arg1;

@end

@interface IDEFileBreakpoint : IDEBreakpoint
{
    NSURL *_documentURL;
    DVTTextDocumentLocation *_location;
    NSString *_filePath;
    NSString *_timestampString;
    long long _startingColumnNumber;
    long long _endingColumnNumber;
    long long _startingLineNumber;
    long long _endingLineNumber;
    NSString *_characterRangeString;
    NSString *_landmarkName;
    unsigned long long _landmarkType;
    DVTObservingToken *_fileReferenceToken;
    DVTObservingToken *_workspaceToken;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (BOOL)automaticallyNotifiesObserversOfLocation;
+ (id)propertiesAffectingPersistenceState;
@property unsigned long long landmarkType; // @synthesize landmarkType=_landmarkType;
@property(copy) NSString *landmarkName; // @synthesize landmarkName=_landmarkName;
@property(copy, nonatomic) DVTTextDocumentLocation *location; // @synthesize location=_location;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)zeroBasedLocation;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)_updateFilePath;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)description;
- (void)setLocationFromZeroBasedLocation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (void)baseSetLocation:(id)arg1;
- (void)_watchNewURL:(id)arg1;
- (void)_watchFileRefs:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithDocumentTextLocation:(id)arg1;

@end

@interface IDEFileBreakpointWrapper : IDEBreakpointWrapper
{
}

- (void)setLineNumber:(long long)arg1;
- (long long)lineNumber;
- (void)setFileReference:(id)arg1;
- (id)fileReference;

@end

@interface IDEFindCommandLineVerb : IDECommandLineVerb
{
}

+ (int)performWithEnvironment:(id)arg1;
+ (id)optionDefinitionsWithEnvironment:(id)arg1;
+ (id)filePathForLibraryWithName:(id)arg1 commandLineToolchainNames:(id)arg2 environmentVariables:(id)arg3 sdk:(id)arg4 diagnostics:(id *)arg5;
+ (id)filePathForExecutableWithName:(id)arg1 commandLineToolchainNames:(id)arg2 environmentVariables:(id)arg3 sdk:(id)arg4 diagnostics:(id *)arg5;

@end

@interface DVTDocumentLocation (IDEFoundationAdditions)
- (id)ide_copyInWorkspace:(id)arg1 fromWorkspaceAtRepresentingPath:(id)arg2;
@end

@interface NSError (DVTDeviceIneligibility)
+ (id)dvt_errorWithDeviceIneligibilityErrorCode:(long long)arg1 device:(id)arg2 buildable:(id)arg3 buildParameters:(id)arg4;
@property(readonly, nonatomic) NSString *dvt_deviceIneligibilityTokenDescription;
@end

@interface DVTDevice (IDEFoundationAdditions)
- (id)actualRunnablePathForRunnableLocation:(id)arg1;
- (id)testingFrameworkPathsForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)deviceForRunningUnitTestsWithHost:(id)arg1 error:(id *)arg2;
- (void)modifyTestingEnvironmentVariables:(id)arg1 host:(id)arg2 testBundlePath:(id)arg3;
- (id)testArchitectureForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)testHostPathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
@property(readonly) BOOL supportsFileSpecifyingTestScopes;
@property(readonly) BOOL supportsInverseTestScopes;
@property(readonly) BOOL supportsMultipleTestScopes;
- (id)analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 workingDirectory:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
- (void)createInstallWithName:(id)arg1 path:(id)arg2 buildables:(id)arg3 buildParameters:(id)arg4 killProcesses:(id)arg5 workspace:(id)arg6;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (id)scriptingEnvironment;
- (id)closestRelativeOfTargetArchitecture:(id)arg1 forBuildArchitectures:(id)arg2;
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (void)didBecomeActiveDeviceForRunContext:(id)arg1;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForPathRunnableWithArchitecture:(id)arg1;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)displayNameAdditionsWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
- (id)displayNameWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
@end

@interface DVTSourceControlWorkspace (IDEFoundationClassAdditions)
- (void)setState:(unsigned long long)arg1 forWorkingTree:(id)arg2;
- (unsigned long long)stateForWorkingTree:(id)arg1;
- (id)workingCopyForWorkingTree:(id)arg1;
@end

@interface DVTLocalComputer (IDEFoundationAdditions)
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
@end

@interface NSArray (IDELocalizationStreamArrayUtilities)
- (id)IDELocalizationStream_collect;
- (id)IDELocalizationStream_join;
- (id)IDELocalizationStream_asyncMap:(CDUnknownBlockType)arg1;
- (id)IDELocalizationStream_map:(CDUnknownBlockType)arg1;
@end

@interface NSLocale (IDELocDisplayName)
- (id)ideloc_displayNameForKey:(id)arg1 value:(id)arg2 options:(unsigned long long)arg3;
@end

@interface NSLocale (IDELoc_IPPrivateMethods)
+ (id)_ideloc_containingRegionOfType:(int)arg1 forRegion:(id)arg2;
+ (id)ideloc_containingSubcontinentOfRegion:(id)arg1;
+ (id)ideloc_containingContinentOfRegion:(id)arg1;
+ (id)_ideloc_availableRegionsOfType:(int)arg1;
+ (id)ideloc_availableSubcontinents;
+ (id)ideloc_availableContinents;
+ (id)ideloc_localeIdentifierFromLanguageIdentifier:(id)arg1 countryCode:(id)arg2;
+ (id)ideloc_addLikelySubtagsToLocaleIdentifier:(id)arg1;
+ (id)ideloc_languageAndScriptFromLocaleIdentifier:(id)arg1;
+ (id)ideloc_languageIdentifierFromLocaleIdentifier:(id)arg1;
@end

@interface DVTFilePath (IDESourceControlStatus_Private)
- (id)IDESourceControl_importantFileReferences;
@end

@interface DVTFilePath (IDESourceControlStatus)
+ (id)containerTypeIdentifiersKeyedByImportantSubpaths;
+ (id)importantSubpathsKeyedByContainerTypeIdentifier;
@property(readonly) NSArray *IDESourceControl_importantSubpaths;
- (id)IDESourceControl_containerFilePathIncludingAssetCatalogs:(BOOL)arg1;
@property(readonly) DVTFilePath *IDESourceControl_containerFilePath;
- (void)removeAssociatedWorkingTree:(id)arg1;
- (void)associateWorkingTree:(id)arg1;
- (id)workingTree;
- (void)removeAssociatedWorkingTreeItem:(id)arg1;
- (void)associateWorkingTreeItem:(id)arg1;
- (id)workingTreeItem_createIfNecessary:(BOOL)arg1;
- (id)workingTreeItem;
- (void)workingTreeItemWithCompletionBlock:(CDUnknownBlockType)arg1;
@end

@interface DVTExtension (DVTExtensionTypeIdentificationUtilities)
+ (id)typeIdentifierExtensionForString:(id)arg1;
- (BOOL)isKindOfExtension:(id)arg1;
- (id)closestRelatedExtensionAmongExtensions:(id)arg1;
@end

@interface NSObject (IDEModelObjectTypeIdentification)
- (id)ideModelObjectTypeIdentifier;
@end

@interface DVTSourceControlSystem (IDESourceControlSystem)
+ (id)systemWithExtension:(id)arg1;
@end

@interface DVTFilePath (PersistenceFSEventsMonitoring)
- (BOOL)subpathsChangedSinceDate:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)relativePathOnVolume;
- (void)doneAddingChangedFilesFromStream:(struct __FSEventStream *)arg1;
- (void)addChangedFilePath:(char *)arg1;
@end

@interface DVTToolsInfo (IDEDVTToolsInfoAdditions)
- (id)ide_buildInfoRevisionString;
@end

@interface NSFileManager (IDESourceControlUtilities)
- (BOOL)idescm_fileExistsAtFilePathCaseSensitive:(id)arg1;
@end

@interface DVTFilePath (IDESourceControlUtilities)
- (BOOL)idescm_isSameFileAsFilePathCaseSensitive:(id)arg1;
@end

@interface DVTSourceControlWorkspaceBlueprint (IDEFoundationClassAdditions)
+ (void)blueprintWithWorkspace:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)sourceControlProject;
- (void)setState:(unsigned long long)arg1 forWorkingCopyConfigurationStateDictionary:(id)arg2;
- (unsigned long long)stateForWorkingCopyConfiguration:(id)arg1;
- (void)setState:(unsigned long long)arg1 forRemoteRepository:(id)arg2;
- (unsigned long long)stateForRemoteRepository:(id)arg1;
- (id)workingCopyConfigurationForRemoteRepository:(id)arg1 sourceControlManager:(id)arg2;
- (id)workingCopyConfigurationForWorkingCopy:(id)arg1 origin:(id)arg2 sourceControlManager:(id)arg3;
- (void)saveToWorkspace:(id)arg1 saveLegacy:(BOOL)arg2;
@end

@interface NSString (IDEIndexAdditions)
- (id)ideIndex_resolvedFilePath;
- (id)ideIndex_stringByResolvingSymlinksInPath;
- (id)ideIndex_firstNonPrefixString;
- (id)ideIndex_normalizedFoldedString;
@end

@interface DVTSourceControlManager (IDESourceControlManager)
- (void)updateRemoteRepositories:(id)arg1;
@end

@interface DVTExtension (DVTExtensionSortAdditions)
- (long long)nameCompare:(id)arg1;
@end

@interface DVTFilePath (IDESourceControlPatchAdditions)
- (id)relativePathStringForDescendentFilePath:(id)arg1;
@end

@interface DVTPlatform (IDEExtendedPlatformInfo)
@property(readonly) IDEExtendedPlatformInfo *ide_extendedInfo;
@end

@interface DVTTask (IDEDistributionProcessingPipelineTasks)
- (_Bool)runLoggingOutputWithLogAspect:(id)arg1 error:(id *)arg2;
@end

@interface DVTDocumentLocation (IDEActivityLogMessageAdditions)
- (id)activityLogMessage_locationString;
@end

@interface DVTTextDocumentLocation (IDEActivityLogMessageAdditions)
- (id)activityLogMessage_locationString;
@end

@interface DVTAbstractMacDevice (IDEFoundationAdditions)
- (id)testingFrameworkPathsForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)testHostPathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
@end

@interface NSNumber (IDESourceControlAdditions)
- (int)ideSourceControlStatusValue;
@end

