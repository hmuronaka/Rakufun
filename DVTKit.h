//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct NSEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _DVTFindBarFlags {
    unsigned int findResultsValid:1;
    unsigned int userIsChangingFindString:1;
    unsigned int userIsChangingReplaceString:1;
    unsigned int userIsRestoringHistory:1;
    unsigned int dismissRestoresSelection:1;
    unsigned int ignoreNextInvalidate:1;
    unsigned int viewIsInstalled:1;
    unsigned int _reserved:29;
};

struct _DVTGraphBounds {
    double minX;
    double maxX;
    double minY;
    double maxY;
};

struct _DVTGraphInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _DVTIncrementalFindBarFlags {
    unsigned int currentResultSet:1;
    unsigned int foundResultsSet:1;
    unsigned int textFindableImplementsSupportedMatchingOptions;
    unsigned int _reserved:30;
};

struct _DVTLayoutManagerFlags {
    unsigned int disableAnnotationAdjustment:1;
    unsigned int severeBubbleAnnotationsMiniaturized:1;
    unsigned int temporaryLinkIsAlternate:1;
};

struct _DVTTextChangeEntry {
    struct _NSRange _field1;
    long long _field2;
    struct _NSRange _field3;
    long long _field4;
    double _field5;
};

struct _DVTTextLineOffsetTable {
    unsigned long long capacity;
    unsigned long long count;
    unsigned long long *offsets;
    unsigned long long deferredAdjustmentIndex;
    long long deferredAdjustment;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    double minX;
    double maxX;
    double minY;
    double maxY;
} CDStruct_bf6d4a14;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/SharedFrameworks/DVTKit.framework/Versions/A/DVTKit
// UUID: 78101DF6-C7E4-3655-97D7-B7249521C24E
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6604.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTAnnotationManagerDelegate <NSObject>
- (void)didRemoveAnnotations:(NSArray *)arg1;
- (void)didInsertAnnotations:(NSArray *)arg1;
@end

@protocol DVTAssetDetailViewDelegate <NSObject>
- (void)assetDetailView:(DVTAssetDetailView *)arg1 userDidSelectTab:(DVTChoice *)arg2;
- (void)assetDetailView:(DVTAssetDetailView *)arg1 didInstallDetailController:(DVTLibraryDetailController *)arg2;
- (void)assetDetailView:(DVTAssetDetailView *)arg1 sizeViewController:(DVTViewController *)arg2 toFitSuggestedSize:(struct CGSize)arg3;
- (void)assetDetailView:(DVTAssetDetailView *)arg1 wasDoubleClickedInHeader:(NSEvent *)arg2;
- (void)assetDetailView:(DVTAssetDetailView *)arg1 beginDraggingWithMouseDownEvent:(NSEvent *)arg2 andMouseDraggedEvent:(NSEvent *)arg3;
@end

@protocol DVTCancellable <NSObject>
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;
@end

@protocol DVTClickableLayer <NSObject>
@property BOOL disableClickHandler;
@property BOOL showsClickedState;
@property(copy) CDUnknownBlockType clickHandlerBlock;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;
- (void)fireClickHandler;
@end

@protocol DVTComparisonScrollContentAreaDelegate <NSObject>
- (void)contentAreaWindowOrderedOut;
- (void)contentAreaWindowOrderedIn;
- (void)contentAreaMovedToNewWindow;
- (void)contentAreaRemovedFromSuperview;
- (void)contentAreaDidHide;
- (void)mouseExitedContentArea;
- (void)mouseMovedInContentArea;
- (void)mouseEnteredContentArea;
- (void)contentAreaWillDraw;
@end

@protocol DVTCompletingTextViewDelegate <NSTextViewDelegate>

@optional
- (void)setupTextViewContextMenuWithMenu:(NSMenu *)arg1;
- (BOOL)completingTextViewHandleCancel:(DVTCompletingTextView *)arg1;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForWritingSelectionToPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (unsigned long long)textView:(DVTCompletingTextView *)arg1 lineEndingForReadingSelectionFromPasteboard:(NSPasteboard *)arg2 type:(NSString *)arg3;
- (void)textView:(DVTCompletingTextView *)arg1 layoutManager:(NSLayoutManager *)arg2 didLayoutGlyphsUpToCharacterIndex:(unsigned long long)arg3;
- (DVTTextDocumentLocation *)completingTextView:(DVTCompletingTextView *)arg1 documentLocationForWordStartLocation:(unsigned long long)arg2;
- (void)completingTextView:(DVTCompletingTextView *)arg1 willPassContextToStrategies:(NSMutableDictionary *)arg2 atWordStartLocation:(unsigned long long)arg3;
@end

@protocol DVTControllerContentViewViewControllerAdditions
- (void)_willUninstallContentView:(DVTControllerContentView *)arg1;
- (void)_didInstallContentView:(DVTControllerContentView *)arg1;
@end

@protocol DVTDelayedMenuButtonDelegate <NSObject>

@optional
- (NSMenu *)updatedMenuForDelayedMenuButton:(DVTDelayedMenuButton *)arg1;
- (NSMenuItem *)delayedMenuButton:(DVTDelayedMenuButton *)arg1 willSetCurrentMenuItem:(NSMenuItem *)arg2;
@end

@protocol DVTDelegateValidator <NSObject>
- (void)dvt_validateDelegate;
@end

@protocol DVTDeviceApplicationInstaller <DVTDeviceApplicationProvider>
- (BOOL)uploadApplicationDataWithPath:(NSString *)arg1 forInstalledApplicationWithBundleIdentifier:(NSString *)arg2 error:(id *)arg3;
- (BOOL)downloadApplicationDataToPath:(NSString *)arg1 forInstalledApplicationWithBundleIdentifier:(NSString *)arg2 error:(id *)arg3;
- (NSError *)uninstallApplicationWithBundleIdentifierSync:(NSString *)arg1;
@end

@protocol DVTDeviceApplicationProvider <NSObject>
@property(readonly) NSSet *applications;

@optional
@property(readonly) NSSet *systemApplications;
@end

@protocol DVTDevicesWindowDetailViewController <DVTInvalidation>
@property(retain) DVTDevice *device;

@optional
- (void)detailViewDidDisappear;
- (void)detailViewDidAppear;
@end

@protocol DVTDisclosureHeaderViewDelegate <NSObject>
- (void)disclosureHeaderView:(DVTDisclosureHeaderView *)arg1 didChangeDisclosedState:(BOOL)arg2;
@end

@protocol DVTDraggableView <NSObject>
- (struct CGRect)draggingRect;
@end

@protocol DVTDraggingInfo <NSDraggingInfo>
- (void)invalidateObjectAtEndOfDragLoop:(id <DVTInvalidation>)arg1;
- (struct CGPoint)draggingLocationOnScreen;
- (NSDictionary *)draggingSourceContext;
- (void)setDraggedImageStateNeedsUpdate:(BOOL)arg1;
- (struct CGSize)draggingStickiness;
- (void)setDraggingStickiness:(struct CGSize)arg1;
- (DVTDraggedImageState *)draggedImageState;
@end

@protocol DVTDynamicTableRowViewSupport <NSObject>

@optional
@property(getter=isRemoved) BOOL removed;
@end

@protocol DVTEditor <NSObject>
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(NSMutableArray *)arg2;
@end

@protocol DVTFilteringMenuSearchViewDelegate <NSObject>
- (void)filteringSearchView:(DVTFilteringMenuSearchView *)arg1 makeSearchFieldKey:(DVTSearchField *)arg2;
@end

@protocol DVTFindPatternField <NSObject>
@property id <DVTFindPatternManager> findPatternManager;
- (NSMenu *)menuForFindPatternAttachment:(DVTFindPatternAttachmentCell *)arg1;
- (NSString *)plainTextValue;
- (void)setFindPatternPropertyList:(id)arg1;
- (id)findPatternPropertyList;
- (BOOL)hasFindPattern;
- (NSString *)replacementExpression;
- (NSString *)regularExpression;
- (NSArray *)findPatternArray;
- (void)setFindPatternArray:(NSArray *)arg1;
- (void)insertNewFindPattern:(DVTFindPattern *)arg1;
- (BOOL)removeFindPattern:(DVTFindPattern *)arg1;
@end

@protocol DVTFindPatternManager <NSObject>
- (id <DVTFindPatternField>)replaceFieldForField:(id <DVTFindPatternField>)arg1;
- (id <DVTFindPatternField>)findFieldForField:(id <DVTFindPatternField>)arg1;

@optional
- (BOOL)supportsPatterns;
- (void)findPatternField:(id <DVTFindPatternField>)arg1 findPatternDoubleClicked:(DVTFindPattern *)arg2;
@end

@protocol DVTFirstResponderShowingView <NSObject>
- (void)setShowsFirstResponder:(BOOL)arg1;
@end

@protocol DVTFoldingLayoutManagerDelegate <NSLayoutManagerDelegate>

@optional
- (void)foldingLayoutManagerFoldsChanged:(DVTFoldingLayoutManager *)arg1;
@end

@protocol DVTFoldingManagerDelegate <NSObject>
- (void)foldingManager:(DVTFoldingManager *)arg1 didUnfoldRange:(struct _NSRange)arg2;
- (void)foldingManager:(DVTFoldingManager *)arg1 didFoldRange:(struct _NSRange)arg2;
@end

@protocol DVTFontTextFieldDataSource <NSObject>
- (BOOL)fontTextField:(DVTFontTextField *)arg1 value:(id)arg2 isEqualToValue:(id)arg3;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 displaySizeForValue:(id)arg2;
- (double)fontTextField:(DVTFontTextField *)arg1 pointSizeForValue:(id)arg2;
- (id)fontTextField:(DVTFontTextField *)arg1 fontNameForValue:(id)arg2;
- (id)fontTextField:(DVTFontTextField *)arg1 familyForValue:(id)arg2;
- (id)fontTextField:(DVTFontTextField *)arg1 transformValue:(id)arg2 toHavePointSize:(double)arg3;
- (id)fontTextField:(DVTFontTextField *)arg1 transformValue:(id)arg2 toHaveSize:(id)arg3;
- (id)fontTextField:(DVTFontTextField *)arg1 transformValue:(id)arg2 toHaveFontName:(id)arg3;
- (id)fontTextField:(DVTFontTextField *)arg1 transformValue:(id)arg2 toHaveFamily:(id)arg3;
- (NSArray *)fontTextField:(DVTFontTextField *)arg1 fontNamesForFontFamily:(id)arg2;
- (NSArray *)fontFamiliesForFontTextField:(DVTFontTextField *)arg1;
- (NSArray *)fontValuesForFontTextField:(DVTFontTextField *)arg1;

@optional
- (BOOL)fontTextFieldCanShowFontPanel:(DVTFontTextField *)arg1;
- (NSFont *)fontTextField:(DVTFontTextField *)arg1 displayFontForFamily:(id)arg2 andValue:(id)arg3;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 displayNameForValue:(id)arg2;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 sizePlaceholderForValue:(id)arg2;
- (id)fontTextField:(DVTFontTextField *)arg1 transformValue:(id)arg2 toFontValue:(id)arg3;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 descriptionForFontName:(id)arg2;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 descriptionForFamily:(id)arg2;
- (unsigned long long)fontTextField:(DVTFontTextField *)arg1 settableAttributesForValue:(id)arg2;
- (BOOL)fontTextField:(DVTFontTextField *)arg1 isValueSpecial:(id)arg2;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 descriptionForValue:(id)arg2 type:(int *)arg3;
- (NSString *)fontTextField:(DVTFontTextField *)arg1 descriptionForValue:(id)arg2;
- (id)validateFontValue:(id)arg1;
@end

@protocol DVTGradientStyleButton <NSObject>
@property int borderSides;
@property int gradientStyle;
@end

@protocol DVTGraphLayer <NSObject>
@property(readonly) BOOL wantsClipping;
@property(readonly) DVTGraphLayerSelectionDetails *selectionDetails;
- (void)clearSelection;
- (BOOL)selectNext;
- (BOOL)selectPrevious;
- (void)selectDataAtIndex:(unsigned long long)arg1;
- (BOOL)selectDataAtPoint:(struct CGPoint)arg1;
- (void)drawLayerWithVisibleBounds:(struct _DVTGraphBounds)arg1;
- (id)initWithGraph:(DVTGraph *)arg1;
@end

@protocol DVTIconOverrideProvider <NSObject>
+ (NSImage *)overridingIconForFileType:(NSString *)arg1;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTIssueDisplayingView <NSObject>
@property(copy) NSDictionary *issueInfoDictionary;
@end

@protocol DVTLayoutManagerDelegate <DVTFoldingLayoutManagerDelegate>

@optional
- (NSColor *)layoutManager:(DVTLayoutManager *)arg1 shouldUseTextBackgroundColor:(NSColor *)arg2 rectArray:(struct CGRect *)arg3 count:(unsigned long long)arg4 forCharacterRange:(struct _NSRange)arg5;
@end

@protocol DVTLibraryGroupObserver <NSObject>
- (void)libraryGroupDidChangeAssets:(DVTAbstractLibraryGroup *)arg1;
@end

@protocol DVTLineGraphLayerDataSource <NSObject>
- (NSArray *)lineDataForBounds:(struct _DVTGraphBounds)arg1;
@end

@protocol DVTMorphingDragImageDropTarget <NSObject>
- (BOOL)morphingDragImage:(DVTMorphingDragImageController *)arg1 performDragOperation:(id <NSDraggingInfo>)arg2;
- (void)morphingDragImage:(DVTMorphingDragImageController *)arg1 draggingExited:(id <NSDraggingInfo>)arg2;
- (unsigned long long)morphingDragImage:(DVTMorphingDragImageController *)arg1 draggingUpdated:(id <NSDraggingInfo>)arg2;
- (unsigned long long)morphingDragImage:(DVTMorphingDragImageController *)arg1 draggingEntered:(id <NSDraggingInfo>)arg2;
@end

@protocol DVTPainter <NSObject>
- (void)drawInRect:(struct CGRect)arg1 forView:(id)arg2;
@end

@protocol DVTPlistOutlineViewDelegate <NSOutlineViewDelegate>
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 handleTabKey:(unsigned short)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 handleReturnKey:(unsigned short)arg2;
- (void)textDidEndEditingColumn:(long long)arg1 row:(long long)arg2 withMovement:(long long)arg3;
- (void)toggleEditRawKeysAndValues:(id)arg1;
- (void)setPlistTypeDate:(id)arg1;
- (void)setPlistTypeData:(id)arg1;
- (void)setPlistTypeBoolean:(id)arg1;
- (void)setPlistTypeNumber:(id)arg1;
- (void)setPlistTypeString:(id)arg1;
- (void)setPlistTypeDictionary:(id)arg1;
- (void)setPlistTypeArray:(id)arg1;
- (void)shiftRowRight:(id)arg1;
- (void)shiftRowLeft:(id)arg1;
- (void)DVTPlist_unfoldAll:(id)arg1;
- (void)DVTPlist_unfold:(id)arg1;
- (void)DVTPlist_foldAll:(id)arg1;
- (void)DVTPlist_fold:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)addAction:(id)arg1;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)cancel:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
@end

@protocol DVTPlistViewControllerProtocol <NSObject>
- (void)revealNode:(DVTPlistNode *)arg1;
- (void)propertyListChanged:(DVTPlistNode *)arg1;

@optional
- (void)selectDocumentLocations:(NSArray *)arg1;
- (void)setSelection:(DVTPlistSelection *)arg1 edit:(BOOL)arg2;
- (DVTPlistSelection *)currentSelection;
- (BOOL)commitEdits;
- (BOOL)editInProgress;
@end

@protocol DVTPreferenceSet <DVTInvalidation>
+ (NSString *)titleForNewPreferenceSetFromTemplate;
+ (NSString *)preferenceSetsListHeader;
+ (NSString *)preferenceSetsFileExtension;
+ (NSString *)defaultKeyForExcludedBuiltInPreferenceSets;
+ (NSString *)defaultKeyForCurrentPreferenceSet;
+ (NSURL *)builtInPreferenceSetsDirectoryURL;
+ (id <DVTPreferenceSet>)systemPreferenceSet;
+ (NSString *)preferenceSetGroupingName;
+ (DVTPreferenceSetManager *)preferenceSetsManager;
@property BOOL contentNeedsSaving;
@property(readonly, getter=isBuiltIn) BOOL builtIn;
@property(retain) DVTCustomDataSpecifier *customDataSpecifier;
@property(retain) NSImage *image;
@property(readonly, copy) NSString *localizedName;
@property(readonly, copy) NSString *name;
- (NSData *)dataRepresentationWithError:(id *)arg1;
- (id)initWithCustomDataSpecifier:(DVTCustomDataSpecifier *)arg1 basePreferenceSet:(id <DVTPreferenceSet>)arg2;
- (id)initWithName:(NSString *)arg1 dataURL:(NSURL *)arg2;

@optional
+ (NSString *)titleForManagePreferenceSets;
@end

@protocol DVTProgressIndicatorProvidingView <NSObject>
- (NSProgressIndicator *)progressIndicatorForItem:(id)arg1 createIfNecessary:(BOOL)arg2 progressIndicatorStyle:(unsigned long long)arg3;

@optional
- (void)clearProgressIndicators;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTScopeBarContentController <NSObject>
@property(readonly) double preferredViewHeight;

@optional
- (BOOL)shouldCloseOnEscape;
- (void)didPressDismissOnScopeBar:(DVTScopeBarController *)arg1;
- (void)wasAssociatedWithScopeBarController:(DVTScopeBarController *)arg1;
@end

@protocol DVTShadowDrawing <NSObject>
@property(copy) NSColor *shadowColor;
@property int shadowSides;
- (BOOL)isShowingShadow;
@end

@protocol DVTSourceBufferProvider <NSObject>
- (unsigned long long)leadingWhitespacePositionsForLine:(unsigned long long)arg1;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (unsigned long long)length;
- (NSString *)string;

@optional
- (void)scheduleLazyInvalidationForRange:(struct _NSRange)arg1;
- (NSString *)stringForItem:(DVTSourceModelItem *)arg1;
- (DVTSourceCodeLanguage *)language;
@end

@protocol DVTSourceCodeComparisonAnnotationContext <NSObject>
@property(readonly) __weak DVTDiffSession *diffSession;
@property(readonly) __weak DVTDiffDescriptor *diffDescriptor;
@property(readonly) int dataSourceType;
@property(readonly) NSURL *documentURL;
@end

@protocol DVTSourceLandmarkItemDelegate <NSObject>
- (NSString *)landmarkItemTypeNameForReference:(void *)arg1;
- (NSString *)landmarkItemNameForReference:(void *)arg1 nameRange:(struct _NSRange *)arg2;
@end

@protocol DVTSourceLanguageServiceDelegate <NSObject>
@property(readonly, nonatomic) NSDictionary *sourceLanguageServiceContext;
- (void)serviceAvailabilityNotification:(BOOL)arg1 message:(NSString *)arg2;
- (void)scheduleLazyInvalidationForRange:(struct _NSRange)arg1;
- (void)updateAttributesInRange:(struct _NSRange)arg1;
- (void)invalidateAllLandmarks;
- (DVTSourceLandmarkItem *)sourceLandmarkAtCharacterIndex:(unsigned long long)arg1;
- (long long)syntaxTypeForItem:(DVTSourceModelItem *)arg1 context:(NSDictionary *)arg2;
- (DVTSourceCodeLanguage *)language;
- (unsigned long long)leadingWhitespacePositionsForLine:(unsigned long long)arg1;
- (struct _NSRange)currentWordAtIndex:(unsigned long long)arg1;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (NSString *)string;
- (BOOL)isSyntaxColoringEnabled;
- (BOOL)isDoingBatchEdit;
@end

@protocol DVTSourceLanguageSourceModelService <NSObject>
- (long long)languageIdentifierAtLocation:(unsigned long long)arg1;
- (NSString *)stringForItem:(DVTSourceModelItem *)arg1;
- (DVTSourceModelItem *)commonSourceModelItemAtRange:(struct _NSRange)arg1;
- (DVTSourceModelItem *)sourceModelItemAtCharacterIndex:(unsigned long long)arg1;
- (DVTSourceModelItem *)sourceModelItemAtCharacterIndex:(unsigned long long)arg1 affinity:(unsigned long long)arg2;
- (DVTSourceModel *)sourceModelWithoutParsing;
- (DVTSourceModel *)sourceModel;
@end

@protocol DVTSourceLanguageSyntaxTypeService <NSObject>
- (void)generateLandmarkItemsForParent:(DVTSourceLandmarkItem *)arg1 matchingType:(BOOL (^)(int))arg2 altParent:(DVTSourceLandmarkItem *)arg3 matchingAltType:(BOOL (^)(int))arg4;
- (struct _NSRange)textCompletionSession:(DVTTextCompletionSession *)arg1 replacementRangeForSuggestedRange:(struct _NSRange)arg2;
- (NSArray *)scopeLanguageSpecificationIdentifiersAtLocation:(unsigned long long)arg1;
- (NSArray *)functionAndMethodRanges;
- (NSArray *)commentBlockRanges;
- (BOOL)isInTokenizableCodeAtLocation:(unsigned long long)arg1;
- (BOOL)isInPlainCodeAtLocation:(unsigned long long)arg1;
- (BOOL)isInKeywordAtLocation:(unsigned long long)arg1;
- (BOOL)isIncompletionPlaceholderAtLocation:(unsigned long long)arg1;
- (BOOL)isInNumberConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInCharacterConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInIdentifierAtLocation:(unsigned long long)arg1;
- (BOOL)isInStringConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInIncludeStatementAtLocation:(unsigned long long)arg1;
- (BOOL)isInPreprocessorStatementAtLocation:(unsigned long long)arg1;
- (BOOL)isInDocCommentAtLocation:(unsigned long long)arg1;
- (BOOL)isInCommentAtLocation:(unsigned long long)arg1;
- (long long)syntaxTypeAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 context:(NSDictionary *)arg3;
@end

@protocol DVTSourceTextScrollViewDelegate <NSObject>

@optional
- (NSScroller *)scrollView:(DVTSourceTextScrollView *)arg1 pointInVisibleScroller:(struct CGPoint)arg2;
- (void)scrollViewDidSetFrameSize:(DVTSourceTextScrollView *)arg1;
- (void)scrollViewDidEndLiveResize:(DVTSourceTextScrollView *)arg1;
- (void)scrollViewWillStartLiveResize:(DVTSourceTextScrollView *)arg1;
- (BOOL)scrollView:(DVTSourceTextScrollView *)arg1 shouldHandleScrollWheelEvent:(NSEvent *)arg2;
@end

@protocol DVTSourceTextViewDelegate <DVTCompletingTextViewDelegate>

@optional
- (double)textView:(DVTSourceTextView *)arg1 constrainAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMaxAccessoryAnnotationWidth:(double)arg2;
- (double)textView:(DVTSourceTextView *)arg1 constrainMinAccessoryAnnotationWidth:(double)arg2;
- (NSString *)textViewWillReturnPrintJobTitle:(DVTSourceTextView *)arg1;
- (void)textViewDidScroll:(DVTSourceTextView *)arg1;
- (void)setupGutterContextMenuWithMenu:(NSMenu *)arg1;
- (void)tokenizableRangesWithRange:(struct _NSRange)arg1 completionBlock:(void (^)(NSArray *))arg2;
- (void)textViewDidFinishAnimatingScroll:(DVTSourceTextView *)arg1;
- (void)textViewDidLoadAnnotationProviders:(DVTSourceTextView *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didRemoveAnnotations:(NSArray *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 didAddAnnotations:(NSArray *)arg2;
- (DVTAnnotationContext *)annotationContextForTextView:(DVTSourceTextView *)arg1;
- (NSDictionary *)syntaxColoringContextForTextView:(DVTSourceTextView *)arg1;
- (void)textViewDidChangeFolding:(NSNotification *)arg1;
- (void)textViewWillChangeFolding:(NSNotification *)arg1;
- (void)textView:(DVTSourceTextView *)arg1 didClickOnTemporaryLinkAtCharacterIndex:(unsigned long long)arg2 event:(NSEvent *)arg3 isAltEvent:(BOOL)arg4;
- (BOOL)textView:(DVTSourceTextView *)arg1 shouldShowTemporaryLinkForCharacterAtIndex:(unsigned long long)arg2 proposedRange:(struct _NSRange)arg3 effectiveRanges:(id *)arg4;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidExitSidebar:(NSEvent *)arg2;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDidMoveOverSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
- (void)textView:(DVTSourceTextView *)arg1 handleMouseDownInSidebar:(NSEvent *)arg2 atLineNumber:(unsigned long long)arg3;
@end

@protocol DVTSplitViewDelegate <NSSplitViewDelegate>

@optional
- (NSArray *)splitView:(NSSplitView *)arg1 additionalEffectiveRectsOfDividerAtIndex:(long long)arg2;
- (void)splitViewDidEndLiveResize:(DVTSplitView *)arg1;
- (void)splitViewWillStartLiveResize:(DVTSplitView *)arg1;
- (NSArray *)splitView:(DVTSplitView *)arg1 needsRectanglesForViewsWithState:(NSArray *)arg2 forSize:(struct CGSize)arg3;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(DVTSplitViewItem *)arg1;
@end

@protocol DVTStatefulObject <NSObject>
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(NSMutableDictionary *)arg1;
- (void)commitStateToDictionary:(NSMutableDictionary *)arg1;
- (void)revertStateWithDictionary:(NSDictionary *)arg1;
- (void)setStateToken:(DVTStateToken *)arg1;
@end

@protocol DVTTabChooserViewDelegate <NSObject>
- (void)tabChooserView:(DVTTabChooserView *)arg1 userDidChooseChoice:(DVTChoice *)arg2;
@end

@protocol DVTTabbedWindowControlling <NSObject>
- (BOOL)isInFullScreenMode;
- (BOOL)closeKeyEquivalentClosesTab;
- (void)_closeWindowIfNoTabs;
- (void)_closeTabWithoutConfirming:(DVTTabbedWindowTabViewItem *)arg1 andInvalidate:(BOOL)arg2;
- (void)_closeTabWithoutConfirming:(DVTTabbedWindowTabViewItem *)arg1;
- (double)tabBarHeight;
- (void)moveTabFromOtherWindow:(DVTTabbedWindowTabViewItem *)arg1 toIndex:(unsigned long long)arg2 andSelect:(BOOL)arg3;
- (void)replaceEmptyTabWithTabs:(NSArray *)arg1;
- (void)closeOtherTabs:(DVTTabbedWindowTabViewItem *)arg1;
- (void)closeTabOrWindow:(NSView *)arg1;
- (void)closeTab:(DVTTabbedWindowTabViewItem *)arg1;
- (void)moveTabToNewWindowFromMenu:(id)arg1;
- (void)closeOtherTabsFromMenu:(id)arg1;
- (void)closeTabFromMenu:(id)arg1;
- (void)selectTab:(NSView *)arg1;
- (DVTTabbedWindowTabViewItem *)createTabWithViewController:(DVTViewController *)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (NSView *)createInactiveTabWithFrameName:(NSString *)arg1;
- (NSView *)createInactiveTab;
- (NSView *)createTabWithFrameName:(NSString *)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (NSView *)createTabWithFrameName:(NSString *)arg1;
- (NSView *)createTab;
- (unsigned long long)selectedTabIndex;
- (DVTTabbedWindowTabViewItem *)selectedTab;
- (NSArray *)orderedTabViewItems;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)isTabBarVisible;
- (void)cancelUpdateTabTitlesSoon;
- (void)tabBarViewUpdateTabTitlesNow;
- (void)tabBarViewUpdateTabTitlesSoon;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(NSWindow *)arg2;
- (struct CGRect)adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)canReceiveDragFromTabbedWindowControlling:(id <DVTTabbedWindowControlling>)arg1;
- (BOOL)canCreateNewTab;
- (BOOL)canCloseSelectedTab;
- (void)toggleTabBar:(id)arg1;
- (void)newTab:(id)arg1;
@end

@protocol DVTTableViewDelegate <NSTableViewDelegate>

@optional
- (void)tableView:(DVTTableView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidEnd:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidUpdate:(id <NSDraggingInfo>)arg2;
- (void)tableView:(DVTTableView *)arg1 draggingDidEnter:(id <NSDraggingInfo>)arg2;
- (unsigned long long)tableView:(DVTTableView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)tableView:(DVTTableView *)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTTextCompletionDataSourceDelegate
- (void)completionsChangedForDataSource:(DVTTextCompletionDataSource *)arg1;
@end

@protocol DVTTextCompletionItem <NSObject>
@property(readonly) BOOL notRecommended;
@property double priority;
@property(readonly) unsigned long long priorityComparatorKind;
@property(readonly) long long priorityBucket;
@property(readonly) NSImage *icon;
@property(readonly, copy) NSAttributedString *descriptionText;
@property(readonly, copy) NSString *parentText;
@property(readonly, copy) NSString *completionText;
@property(readonly, copy) NSString *displayType;
@property(readonly, copy) NSString *displayText;
@property(readonly, copy) NSString *name;

@optional
@property(readonly) NSImage *highlightedStatusIcon;
@property(readonly) NSImage *statusIcon;
@property(readonly, copy) NSArray *additionalCompletions;
@property(readonly) int completionItemStyle;
- (unsigned long long)leadingCharactersToReplaceFromString:(NSString *)arg1 location:(unsigned long long)arg2;
- (void)infoViewControllerWithWidth:(double)arg1 context:(NSDictionary *)arg2 completionBlock:(void (^)(DVTViewController<DVTInvalidation> *))arg3;
@end

@protocol DVTTextFindable <NSObject>
- (DVTFindResult *)findStringMatchingDescriptor:(DVTFindDescriptor *)arg1 backwards:(BOOL)arg2 from:(DVTDocumentLocation *)arg3 to:(DVTDocumentLocation *)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
- (long long)compareFindableLocation:(DVTDocumentLocation *)arg1 withLocation:(DVTDocumentLocation *)arg2;
@end

@protocol DVTTextReplacable <NSObject>
- (BOOL)replaceFindResults:(NSArray *)arg1 withString:(NSString *)arg2 withError:(id *)arg3;

@optional
- (BOOL)replaceFindResults:(NSArray *)arg1 inSelection:(struct _NSRange)arg2 withString:(NSString *)arg3 withError:(id *)arg4;
- (BOOL)replaceTextWithContentsOfURL:(NSURL *)arg1 error:(id *)arg2;
@end

@protocol DVTTextStorageDelegate <NSTextStorageDelegate>

@optional
@property(readonly, nonatomic) NSDictionary *sourceLanguageServiceContext;
- (void)sourceLanguageServiceAvailabilityNotification:(BOOL)arg1 message:(NSString *)arg2;
- (BOOL)textStorageShouldAllowEditing:(DVTTextStorage *)arg1;
- (void)textStorageDidUpdateSourceLandmarks:(DVTTextStorage *)arg1;
- (long long)nodeTypeForItem:(DVTSourceModelItem *)arg1 withContext:(NSDictionary *)arg2;
@end

@protocol DVTTextlikeFindDescriptor <NSObject>
@property(readonly) int matchStyle;
@end

@protocol DVTWindowActivationStateObserver <NSObject>
- (void)window:(NSWindow *)arg1 didChangeActivationState:(long long)arg2;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingDestination <NSObject>

@optional
- (void)updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id <NSDraggingInfo>)arg1;
- (void)concludeDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)performDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)prepareForDragOperation:(id <NSDraggingInfo>)arg1;
- (void)draggingExited:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingUpdated:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingEntered:(id <NSDraggingInfo>)arg1;
@end

@protocol NSDraggingInfo <NSObject>
@property long long numberOfValidItemsForDrop;
@property BOOL animatesToDestination;
@property long long draggingFormation;
- (void)enumerateDraggingItemsWithOptions:(unsigned long long)arg1 forView:(NSView *)arg2 classes:(NSArray *)arg3 searchOptions:(NSDictionary *)arg4 usingBlock:(void (^)(NSDraggingItem *, long long, char *))arg5;
- (NSArray *)namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg1;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (long long)draggingSequenceNumber;
- (id)draggingSource;
- (NSPasteboard *)draggingPasteboard;
- (NSImage *)draggedImage;
- (struct CGPoint)draggedImageLocation;
- (struct CGPoint)draggingLocation;
- (unsigned long long)draggingSourceOperationMask;
- (NSWindow *)draggingDestinationWindow;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(NSDraggingSession *)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(NSDraggingSession *)arg1;
- (void)draggingSession:(NSDraggingSession *)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(NSDraggingSession *)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(NSDraggingSession *)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (NSDictionary *)layoutManager:(NSLayoutManager *)arg1 shouldUseTemporaryAttributes:(NSDictionary *)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(BOOL)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (NSString *)panel:(id)arg1 userEnteredFilename:(NSString *)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(NSURL *)arg2;
- (BOOL)panel:(id)arg1 validateURL:(NSURL *)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(NSURL *)arg2;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSScrollerImpPairDelegate
- (void)scrollerImpPair:(NSScrollerImpPair *)arg1 updateScrollerStyleForNewRecommendedScrollerStyle:(long long)arg2;
- (void)scrollerImpPair:(NSScrollerImpPair *)arg1 setContentAreaNeedsDisplayInRect:(struct CGRect)arg2;
- (struct CGPoint)scrollerImpPair:(NSScrollerImpPair *)arg1 convertContentPoint:(struct CGPoint)arg2 toScrollerImp:(NSScrollerImp *)arg3;
- (struct CGPoint)mouseLocationInContentAreaForScrollerImpPair:(NSScrollerImpPair *)arg1;
- (BOOL)inLiveResizeForScrollerImpPair:(NSScrollerImpPair *)arg1;
- (struct CGRect)contentAreaRectForScrollerImpPair:(NSScrollerImpPair *)arg1;

@optional
- (BOOL)scrollerImpPair:(NSScrollerImpPair *)arg1 isContentPointVisible:(struct CGPoint)arg2;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(NSTabView *)arg1;
- (void)tabView:(NSTabView *)arg1 didSelectTabViewItem:(NSTabViewItem *)arg2;
- (void)tabView:(NSTabView *)arg1 willSelectTabViewItem:(NSTabViewItem *)arg2;
- (BOOL)tabView:(NSTabView *)arg1 shouldSelectTabViewItem:(NSTabViewItem *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorageDidProcessEditing:(NSNotification *)arg1;
- (void)textStorageWillProcessEditing:(NSNotification *)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewViewDelegate <NSObject>

@optional
- (BOOL)previewView:(QLPreviewView *)arg1 canShowPathForItem:(id <QLPreviewItem>)arg2;
- (unsigned long long)previewView:(QLPreviewView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)previewView:(QLPreviewView *)arg1 writePreviewItem:(id <QLPreviewItem>)arg2 toPasteboard:(NSPasteboard *)arg3;
- (NSArray *)previewView:(QLPreviewView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forPreviewItem:(id <QLPreviewItem>)arg3;
- (BOOL)previewView:(QLPreviewView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 onPreviewItem:(id <QLPreviewItem>)arg3;
- (unsigned long long)previewView:(QLPreviewView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 onPreviewItem:(id <QLPreviewItem>)arg3;
- (NSView<QLPreviewCustomView> *)previewView:(QLPreviewView *)arg1 customViewForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewView:(QLPreviewView *)arg1 shouldPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 timedOutLoadingPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 didShowPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 willShowPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 didLoadPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 willLoadPreviewItem:(id <QLPreviewItem>)arg2;
@end

@interface DVTBorderedView : DVTLayoutView_ML <DVTWindowActivationStateObserver, DVTShadowDrawing>
{
    NSColor *_topBorderColor;
    NSColor *_bottomBorderColor;
    NSColor *_leftBorderColor;
    NSColor *_rightBorderColor;
    NSColor *_topInactiveBorderColor;
    NSColor *_bottomInactiveBorderColor;
    NSColor *_leftInactiveBorderColor;
    NSColor *_rightInactiveBorderColor;
    NSColor *_shadowColor;
    NSColor *_backgroundColor;
    NSColor *_inactiveBackgroundColor;
    NSGradient *_backgroundGradient;
    NSGradient *_inactiveBackgroundGradient;
    NSView *_contentView;
    int _verticalContentViewResizingMode;
    int _horizontalContentViewResizingMode;
    int _borderSides;
    int _shadowSides;
    id <DVTCancellable> _windowActivationObservation;
    int _highlightSides;
    id <DVTPainter> _backgroundPainter;
}

@property(retain) id <DVTPainter> backgroundPainter; // @synthesize backgroundPainter=_backgroundPainter;
@property(nonatomic) int highlightSides; // @synthesize highlightSides=_highlightSides;
@property(nonatomic) int verticalContentViewResizingMode; // @synthesize verticalContentViewResizingMode=_verticalContentViewResizingMode;
@property(copy, nonatomic) NSColor *topInactiveBorderColor; // @synthesize topInactiveBorderColor=_topInactiveBorderColor;
@property(copy, nonatomic) NSColor *topBorderColor; // @synthesize topBorderColor=_topBorderColor;
@property int shadowSides; // @synthesize shadowSides=_shadowSides;
@property(copy) NSColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(copy, nonatomic) NSColor *rightInactiveBorderColor; // @synthesize rightInactiveBorderColor=_rightInactiveBorderColor;
@property(copy, nonatomic) NSColor *rightBorderColor; // @synthesize rightBorderColor=_rightBorderColor;
@property(copy, nonatomic) NSColor *leftInactiveBorderColor; // @synthesize leftInactiveBorderColor=_leftInactiveBorderColor;
@property(copy, nonatomic) NSColor *leftBorderColor; // @synthesize leftBorderColor=_leftBorderColor;
@property(copy, nonatomic) NSGradient *inactiveBackgroundGradient; // @synthesize inactiveBackgroundGradient=_inactiveBackgroundGradient;
@property(copy, nonatomic) NSColor *inactiveBackgroundColor; // @synthesize inactiveBackgroundColor=_inactiveBackgroundColor;
@property(nonatomic) int horizontalContentViewResizingMode; // @synthesize horizontalContentViewResizingMode=_horizontalContentViewResizingMode;
@property(nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
@property(copy, nonatomic) NSColor *bottomInactiveBorderColor; // @synthesize bottomInactiveBorderColor=_bottomInactiveBorderColor;
@property(copy, nonatomic) NSColor *bottomBorderColor; // @synthesize bottomBorderColor=_bottomBorderColor;
@property(nonatomic) int borderSides; // @synthesize borderSides=_borderSides;
@property(copy, nonatomic) NSGradient *backgroundGradient; // @synthesize backgroundGradient=_backgroundGradient;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBorderInRect:(struct CGRect)arg1;
- (void)drawHighlightInRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (BOOL)_isInactive;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)_contentViewFrameDidChange:(id)arg1;
- (struct CGSize)frameSizeForContentSize:(struct CGSize)arg1;
- (struct CGSize)boundSizeForContentSize:(struct CGSize)arg1;
@property(readonly) struct CGRect contentRect;
- (struct CGRect)_contentRectExcludingShadow;
- (CDStruct_bf6d4a14)_contentInset;
- (CDStruct_bf6d4a14)_borderInset;
- (CDStruct_bf6d4a14)_shadowInset;
- (BOOL)isShowingShadow;
- (void)setAllInactiveBordersToColor:(id)arg1;
- (void)setAllBordersToColor:(id)arg1;
- (void)setShadowSide:(int)arg1;
- (void)_setBorderSides:(int)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTImageLibraryDetailController : DVTLibraryDetailController
{
    NSImageView *_imageView;
}

- (void).cxx_destruct;
- (void)sizeToFitSuggestedSize:(struct CGSize)arg1 forAsset:(id)arg2;
- (void)refreshWithAsset:(id)arg1 representedObject:(id)arg2;

@end

@interface DVTReplacementView : DVTLayoutView_ML <DVTEditor, DVTInvalidation>
{
    Class _controllerClass;
    NSString *_controllerExtensionIdentifier;
    DVTExtension *_controllerExtension;
    DVTViewController *_installedViewController;
    id _forwardedBindingInfo;
    id <DVTReplacementViewDelegate> _delegate;
    int _horizontalContentViewResizingMode;
    int _verticalContentViewResizingMode;
    struct {
        unsigned int _needToReloadSubview:1;
        unsigned int _shouldNotifyInstalledViewControllerObservers:1;
        unsigned int _delegate_willInstallViewController:1;
        unsigned int _delegate_didInstallViewController:1;
        unsigned int _delegate_willCloseViewController:1;
        unsigned int _delegate_willDisplayInRect:1;
        unsigned int _reserved:26;
    } _DVTReplacementViewFlags;
    BOOL _isGrouped;
    NSMapTable *_subviewFrameChangeTokens;
    void *_keepSelfAliveUntilCancellationRef;
}

+ (void)initialize;
@property BOOL isGrouped; // @synthesize isGrouped=_isGrouped;
@property(nonatomic) Class controllerClass; // @synthesize controllerClass=_controllerClass;
@property(nonatomic) int verticalContentViewResizingMode; // @synthesize verticalContentViewResizingMode=_verticalContentViewResizingMode;
@property(nonatomic) int horizontalContentViewResizingMode; // @synthesize horizontalContentViewResizingMode=_horizontalContentViewResizingMode;
- (void).cxx_destruct;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)updateBoundControllerExtensionIdentifier;
- (void)updateBoundControllerClass;
@property(copy) NSString *controllerExtensionIdentifier;
- (void)_clearCurrentController;
- (void)_tearDownBinding:(id)arg1;
- (void)_forwardBinding:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)_tearDownBindings;
- (void)_forwardBindings;
- (void)layoutBottomUp;
- (void)layoutTopDown;
@property(retain) DVTViewController *installedViewController;
- (void)_tearDownViewController;
- (void)_setupViewController;
- (void)_configureExtension;
- (id)infoForBinding:(id)arg1;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)_forwardedBindingInfo;
- (void)_clearInfoForBinding:(id)arg1;
- (void)_recordInfoForBinding:(id)arg1 toObject:(id)arg2 keyPath:(id)arg3 options:(id)arg4;
- (void)primitiveInvalidate;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;
- (id)exposedBindings;
- (void)_invalidateLayoutBecauseOfSubviewFrameChange:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_commonInit;
@property(retain, nonatomic) id <DVTReplacementViewDelegate> delegate;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTTextVisualizationFadeAnimation : NSAnimation
{
    double _initialOpacity;
    DVTTextVisualization *_visualization;
    double _targetOpacity;
    CDUnknownBlockType _completionBlock;
}

@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property double targetOpacity; // @synthesize targetOpacity=_targetOpacity;
@property(retain) DVTTextVisualization *visualization; // @synthesize visualization=_visualization;
- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;
- (id)initWithVisualization:(id)arg1;

@end

@interface DVTTextVisualization : NSObject <NSAnimationDelegate>
{
    DVTWeakInterposer *_textView_dvtWeakInterposer;
    NSAnimation *_fadeAnimation;
    double _opacity;
    unsigned long long _drawOrdering;
}

+ (unsigned long long)defaultDrawOrdering;
@property unsigned long long drawOrdering; // @synthesize drawOrdering=_drawOrdering;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
- (void).cxx_destruct;
- (void)drawUnderTextInRect:(struct CGRect)arg1;
- (void)drawOverTextInRect:(struct CGRect)arg1;
- (BOOL)trackMouse:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)resetCursorRects;
@property(readonly) struct CGRect bounds;
- (void)animationDidEnd:(id)arg1;
- (void)fadeToOpacity:(double)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)init;
@property(retain) DVTSourceTextView *textView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPlistArrayNode : DVTPlistNode
{
    NSMutableArray *_array;
}

- (void).cxx_destruct;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 startingAt:(id)arg3 document:(id)arg4;
- (id)keyForChild:(id)arg1;
- (unsigned long long)indexOfKey:(id)arg1;
- (unsigned long long)indexOfChild:(id)arg1;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (void)setValueFromPlist:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (void)moveItemAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeValue:(id)arg1;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValue:(id)arg1;
- (void)replaceValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)valueAtIndex:(unsigned long long)arg1;
- (id)keyAtIndex:(unsigned long long)arg1;
- (id)children;
- (unsigned long long)numberOfChildren;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParentNode:(id)arg1;

@end

@interface DVTSegmentColorWell : DVTAbstractColorPicker
{
    NSImage *_icon;
}

@property(copy, nonatomic) NSImage *icon; // @synthesize icon=_icon;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)swatchRect;
- (double)swatchHeight;
- (void)mouseDown:(id)arg1;
- (id)effectiveBorderColor;
- (id)effectiveDarkColor;
- (id)effectiveLightColor;

@end

@interface DVTFontPopUpViewController : DVTPopoverContentViewController
{
    DVTFontTextField *_fontTextField;
    NSPopUpButton *_fontPopUp;
    NSPopUpButton *_familyPopUp;
    NSPopUpButton *_stylePopUp;
    NSTextField *_sizeField;
    NSStepper *_sizeStepper;
    id _target;
    SEL _action;
    NSTextField *_fontLabel;
    NSTextField *_familyLabel;
    NSTextField *_styleLabel;
    NSTextField *_sizeLabel;
    NSButton *_fontMenuButton;
}

@property(retain, nonatomic) NSButton *fontMenuButton; // @synthesize fontMenuButton=_fontMenuButton;
@property(retain, nonatomic) NSTextField *sizeLabel; // @synthesize sizeLabel=_sizeLabel;
@property(retain, nonatomic) NSTextField *styleLabel; // @synthesize styleLabel=_styleLabel;
@property(retain, nonatomic) NSTextField *familyLabel; // @synthesize familyLabel=_familyLabel;
@property(retain, nonatomic) NSTextField *fontLabel; // @synthesize fontLabel=_fontLabel;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(retain, nonatomic) id target; // @synthesize target=_target;
@property(retain, nonatomic) NSStepper *sizeStepper; // @synthesize sizeStepper=_sizeStepper;
@property(retain, nonatomic) NSTextField *sizeField; // @synthesize sizeField=_sizeField;
@property(retain, nonatomic) NSPopUpButton *stylePopUp; // @synthesize stylePopUp=_stylePopUp;
@property(retain, nonatomic) NSPopUpButton *familyPopUp; // @synthesize familyPopUp=_familyPopUp;
@property(retain, nonatomic) NSPopUpButton *fontPopUp; // @synthesize fontPopUp=_fontPopUp;
@property(retain, nonatomic) DVTFontTextField *fontTextField; // @synthesize fontTextField=_fontTextField;
- (void).cxx_destruct;
- (void)popoverWillShow:(id)arg1;
- (void)done:(id)arg1;
- (void)openFontPanel:(id)arg1;
- (void)awakeFromNib;
- (void)refreshValues;
- (void)_populateSizeFromDataSource;
- (void)_populateStylesFromDataSource;
- (void)_populateFamiliesFromDataSource;
- (void)_populateFontsFromDataSource;
- (id)_predefinedValueForValue:(id)arg1;
- (void)_updateEnabledStates;
- (void)showValueItem:(id)arg1 withTitle:(id)arg2 inPopUp:(id)arg3;
- (void)showMarkerItemWithTitle:(id)arg1 representedObject:(id)arg2 inPopUp:(id)arg3 enabled:(BOOL)arg4;
- (void)_updateFontsInFontPanel;
- (id)_fontRepresentation;
- (void)takeSizeFrom:(id)arg1;
- (void)incrementFontSize:(id)arg1;
- (void)selectFontName:(id)arg1;
- (void)selectFamily:(id)arg1;
- (void)selectFont:(id)arg1;
- (id)dataSource;
- (id)initWithFontTextField:(id)arg1;

@end

@interface DVTSourceCodeComparisonAnnotation : DVTTextAnnotation
{
    DVTDiffDescriptor *_diffDescriptor;
    int _dataSourceType;
    BOOL _representsMissingLines;
    BOOL _selected;
    BOOL _disabled;
    BOOL _focused;
    BOOL _inactive;
    BOOL _builtHighlightedRanges;
}

+ (id)unselectedConflictDiffInactiveTextAnnotationTheme;
+ (id)selectedConflictDiffInactiveTextAnnotationTheme;
+ (id)unselectedConflictDiffUnfocusedTextAnnotationTheme;
+ (id)selectedConflictDiffUnfocusedTextAnnotationTheme;
+ (id)unselectedConflictDiffTextAnnotationTheme;
+ (id)selectedConflictDiffTextAnnotationTheme;
+ (id)unselectedDiffInactiveDisabledTextAnnotationTheme;
+ (id)unselectedDiffUnfocusedDisabledTextAnnotationTheme;
+ (id)unselectedDiffDisabledTextAnnotationTheme;
+ (id)selectedDiffInactiveDisabledTextAnnotationTheme;
+ (id)selectedDiffUnfocusedDisabledTextAnnotationTheme;
+ (id)selectedDiffDisabledTextAnnotationTheme;
+ (id)unselectedDiffInactiveTextAnnotationTheme;
+ (id)unselectedDiffUnfocusedTextAnnotationTheme;
+ (id)unselectedDiffTextAnnotationTheme;
+ (id)selectedDiffInactiveTextAnnotationTheme;
+ (id)selectedDiffUnfocusedTextAnnotationTheme;
+ (id)selectedDiffTextAnnotationTheme;
+ (void)resetAllThemes;
@property int dataSourceType; // @synthesize dataSourceType=_dataSourceType;
@property BOOL builtHighlightedRanges; // @synthesize builtHighlightedRanges=_builtHighlightedRanges;
@property BOOL representsMissingLines; // @synthesize representsMissingLines=_representsMissingLines;
- (void).cxx_destruct;
- (void)synchronizeHighlightedRangesWithLocationsForTextStorage:(id)arg1;
- (void)drawHighlightedRangesInRect:(struct CGRect)arg1 textView:(id)arg2;
- (void)annotationWillDrawInTextView:(id)arg1;
- (void)drawLineHighlightInRect:(struct CGRect)arg1 textView:(id)arg2;
- (void)adjustParagraphIndexBy:(long long)arg1 lengthBy:(long long)arg2;
- (id)description;
@property(readonly) BOOL conflict;
@property BOOL inactive;
@property BOOL focused;
@property BOOL disabled;
@property BOOL selected;
@property(retain) DVTDiffDescriptor *diffDescriptor;
- (BOOL)hideCarets;
- (void)_syncAnnotationThemeToState;
- (id)init;

@end

@interface DVTPlistNumberNode : DVTPlistNode
{
    NSNumber *_value;
}

- (void).cxx_destruct;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (BOOL)isFloat;
- (void)setValueFromPlist:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTToggleSwitch : NSView
{
    BOOL _enabled;
    BOOL _on;
    BOOL _canDrag;
    BOOL _dragging;
    SEL _action;
    id _target;
    CDUnknownBlockType _onDidChangeBlock;
    CALayer *_rootLayer;
    CALayer *_knobBorderLayer;
    CALayer *_maskLayer;
    CALayer *_trackLayer;
    struct CGPoint _lastDragLocation;
}

@property(nonatomic) struct CGPoint lastDragLocation; // @synthesize lastDragLocation=_lastDragLocation;
@property(nonatomic, getter=isDragging) BOOL dragging; // @synthesize dragging=_dragging;
@property(nonatomic) BOOL canDrag; // @synthesize canDrag=_canDrag;
@property(readonly, nonatomic) CALayer *trackLayer; // @synthesize trackLayer=_trackLayer;
@property(readonly, nonatomic) CALayer *maskLayer; // @synthesize maskLayer=_maskLayer;
@property(readonly, nonatomic) CALayer *knobBorderLayer; // @synthesize knobBorderLayer=_knobBorderLayer;
@property(readonly, nonatomic) CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(copy, nonatomic) CDUnknownBlockType onDidChangeBlock; // @synthesize onDidChangeBlock=_onDidChangeBlock;
@property(nonatomic) id target; // @synthesize target=_target;
@property(nonatomic, getter=isOn) BOOL on; // @synthesize on=_on;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) SEL action; // @synthesize action=_action;
- (void).cxx_destruct;
- (void)setOn:(BOOL)arg1 animated:(BOOL)arg2 sendAction:(BOOL)arg3;
- (void)press;
- (struct CGRect)frameForRect:(struct CGRect)arg1;
- (void)configureAccessibility;
- (void)setOn:(BOOL)arg1 animated:(BOOL)arg2;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTTextView : NSTextView
{
    BOOL _settingMinSizeForClipView;
    BOOL _minWidthTracksClipView;
    BOOL _minHeightTracksClipView;
}

@property BOOL minHeightTracksClipView; // @synthesize minHeightTracksClipView=_minHeightTracksClipView;
@property BOOL minWidthTracksClipView; // @synthesize minWidthTracksClipView=_minWidthTracksClipView;
- (void)setMinSize:(struct CGSize)arg1;
- (void)_superviewClipViewFrameChanged:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface DVTStepperTextField : NSTextField <NSTextViewDelegate>
{
    unsigned long long _scrubberMode;
    float _v0;
    float _delta;
    double _minValue;
    double _maxValue;
    double _increment;
}

+ (Class)cellClass;
@property double increment; // @synthesize increment=_increment;
@property double maxValue; // @synthesize maxValue=_maxValue;
@property double minValue; // @synthesize minValue=_minValue;
- (void)textDidEndEditing:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (BOOL)_eventLocationIsOverMinusOrPlusButton:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)beginMouseDragScrubbingWithEvent:(id)arg1;
- (void)_setValueSendingAction:(double)arg1;
- (void)updateValueWithEvent:(id)arg1;
- (float)checkBounds:(float)arg1;
- (void)resetCursorRects;
- (void)setMode:(unsigned long long)arg1;
- (BOOL)becomeFirstResponder;
- (void)doCommandBySelector:(SEL)arg1;
- (void)_increment;
- (void)_decrement;
- (double)_incrementToUse;
@property(readonly) double defaultIncrement;
- (BOOL)isOpaque;
- (void)_dvtStepperTextField_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTheme : NSObject
{
    NSBundle *_bundle;
    NSDictionary *_contents;
    BOOL _shouldUseSingleLineNavigatorItems;
    BOOL _shouldShowWindowTitleBars;
    BOOL _shouldDrawBordersOnToolbarButtons;
    BOOL _shouldUseVibrancy;
}

+ (id)_loadThemeFromURL:(id)arg1 error:(id *)arg2;
+ (id)_parseFontElement:(id)arg1 name:(id *)arg2 error:(id *)arg3;
+ (id)_parseInsetElement:(id)arg1 name:(id *)arg2 error:(id *)arg3;
+ (id)_parseGradientElement:(id)arg1 name:(id *)arg2 error:(id *)arg3;
+ (id)_parseColorElement:(id)arg1 requireName:(BOOL)arg2 name:(id *)arg3 allowLocation:(BOOL)arg4 location:(double *)arg5 error:(id *)arg6;
+ (id)currentTheme;
+ (void)initialize;
+ (void)editNumber:(id)arg1;
+ (void)editGradient:(id)arg1;
+ (void)editColor:(id)arg1;
@property(readonly) BOOL shouldUseVibrancy; // @synthesize shouldUseVibrancy=_shouldUseVibrancy;
@property(readonly) BOOL shouldDrawBordersOnToolbarButtons; // @synthesize shouldDrawBordersOnToolbarButtons=_shouldDrawBordersOnToolbarButtons;
@property(readonly) BOOL shouldShowWindowTitleBars; // @synthesize shouldShowWindowTitleBars=_shouldShowWindowTitleBars;
@property(readonly, nonatomic) BOOL shouldUseSingleLineNavigatorItems; // @synthesize shouldUseSingleLineNavigatorItems=_shouldUseSingleLineNavigatorItems;
- (void).cxx_destruct;
- (void)updateHeightOfBarView:(id)arg1 barHasTopBorder:(BOOL)arg2 barHasBottomBorder:(BOOL)arg3 adjacentView:(id)arg4;
- (void)updateHeightOfBarView:(id)arg1 barHasBorder:(BOOL)arg2 adjacentView:(id)arg3;
- (double)barHeightIncludeTopBorder:(BOOL)arg1 includeBottomBorder:(BOOL)arg2;
- (double)barHeightIncludeBorder:(BOOL)arg1;
@property(readonly) NSColor *activityViewScrollingTextFieldTextColorInactive;
@property(readonly) NSColor *activityViewScrollingTextFieldTextColorActive;
@property(readonly) NSGradient *bluePunchOutGradient;
- (id)pressedTextShadowForTextColor:(id)arg1;
- (id)editorAnnotationTestSuccess10;
- (id)editorAnnotationTestFail10;
- (id)editorAnnotationTest10;
- (id)statusTestFailureImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestFailureImageOfSize:(unsigned long long)arg1;
- (id)statusTestFailureMixedImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestFailureMixedImageOfSize:(unsigned long long)arg1;
- (id)statusTestSuccessMixedImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestSuccessMixedImageOfSize:(unsigned long long)arg1;
- (id)statusTestSuccessImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestSuccessImageOfSize:(unsigned long long)arg1;
- (id)statusTestSuccessOutlineImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestSuccessOutlineImageOfSize:(unsigned long long)arg1;
- (id)statusTestOutlineImageOfSize:(unsigned long long)arg1;
- (id)statusTestMissingBaselineForPerformanceMetricsImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestMissingBaselineForPerformanceMetricsImageOfSize:(unsigned long long)arg1;
- (id)statusTestMeasuredPerformanceMetricsImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusTestMeasuredPerformanceMetricsImageOfSize:(unsigned long long)arg1;
- (id)statusCanceledImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusCanceledImageOfSize:(unsigned long long)arg1;
- (id)statusWarningFixitImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusWarningFixitImageOfSize:(unsigned long long)arg1;
- (id)statusWarningImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusWarningImageOfSize:(unsigned long long)arg1;
- (id)statusSuccessImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusSuccessImageOfSize:(unsigned long long)arg1;
- (id)statusStaticAnalysisWarningImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusStaticAnalysisWarningImageOfSize:(unsigned long long)arg1;
- (id)statusStaticAnalysisStepImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusStaticAnalysisStepImageOfSize:(unsigned long long)arg1;
- (id)statusStaticAnalysisIssueImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusStaticAnalysisIssueImageOfSize:(unsigned long long)arg1;
- (id)statusStaticAnalysisControlFlowStepImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusStaticAnalysisControlFlowStepImageOfSize:(unsigned long long)arg1;
- (id)statusMessageImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusMessageImageOfSize:(unsigned long long)arg1;
- (id)statusGenericIssueImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusGenericIssueImageOfSize:(unsigned long long)arg1;
- (id)statusFailureImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusFailureImageOfSize:(unsigned long long)arg1;
- (id)statusErrorFixitImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusErrorFixitImageOfSize:(unsigned long long)arg1;
- (id)statusErrorImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusErrorImageOfSize:(unsigned long long)arg1;
- (id)statusBuildInProgressImageOfSize:(unsigned long long)arg1 isDisabled:(BOOL)arg2;
- (id)statusBuildInProgressImageOfSize:(unsigned long long)arg1;
@property(readonly) NSImage *removeButtonTemplate;
@property(readonly) NSImage *addButtonTemplate;
@property(readonly) NSImage *hideContentTemplateImage;
@property(readonly) NSImage *showContentTemplateImage;
@property(readonly) NSImage *gearTemplateImage;
@property(readonly) NSImage *infoTemplateImage;
@property(readonly) NSImage *quickLookTemplateImage;
@property(readonly) NSImage *favoriteOffSelectedImage;
@property(readonly) NSImage *favoriteOffImage;
@property(readonly) NSImage *favoriteOnSelectedImage;
@property(readonly) NSImage *favoriteOnImage;
@property(readonly) NSColor *bezelAlertShadowColor;
@property(readonly) NSColor *bezelAlertFontColor;
@property(readonly) NSColor *bezelAlertBackgroundColor;
@property(readonly) NSGradient *buttonSeparatorHighlightGradient;
@property(readonly) NSGradient *buttonSeparatorGradient;
@property(readonly) NSGradient *pathSeparatorHighlightGradientInactive;
@property(readonly) NSGradient *pathSeparatorGradientInactive;
@property(readonly) NSGradient *pathSeparatorHighlightGradient;
@property(readonly) NSGradient *pathSeparatorGradient;
@property(readonly) NSImage *testRuntimeImage;
@property(readonly) NSImage *testClassImage;
@property(readonly) NSImage *testMethodImage;
@property(readonly) NSImage *botIcon;
@property(readonly) NSImage *ideProjectIcon;
@property(readonly) NSImage *canvasZoomInImage;
@property(readonly) NSImage *canvasZoomActualImage;
@property(readonly) NSImage *canvasZoomOutImage;
@property(readonly) NSImage *alternateFilterFieldImage;
@property(readonly) NSImage *filterFieldImage;
@property(readonly) NSImage *consoleButtonClearImage;
@property(readonly) NSImage *toolbarButtonViewRevisionImage;
@property(readonly) NSImage *toolbarButtonSwitchBranchImage;
@property(readonly) NSImage *toolbarButtonScreenshotImage;
@property(readonly) NSImage *toolbarButtonRestoreSnapshotImage;
@property(readonly) NSImage *toolbarButtonRemoveImage;
@property(readonly) NSImage *toolbarButtonRefreshImage;
@property(readonly) NSImage *toolbarButtonNewDirectoryImage;
@property(readonly) NSImage *toolbarButtonLaunchImage;
@property(readonly) NSImage *toolbarButtonImportRepositoryImage;
@property(readonly) NSImage *toolbarButtonImportImage;
@property(readonly) NSImage *toolbarButtonHistoryImage;
@property(readonly) NSImage *toolbarButtonExportImage;
@property(readonly) NSImage *toolbarButtonDeleteImage;
@property(readonly) NSImage *toolbarButtonCommitPushImage;
@property(readonly) NSImage *toolbarButtonClearConsoleImage;
@property(readonly) NSImage *toolbarButtonCheckoutPullImage;
@property(readonly) NSImage *toolbarButtonAddPopupImage;
@property(readonly) NSImage *toolbarButtonAddImage;
@property(readonly) NSImage *editorVersionLogsTemplate;
@property(readonly) NSImage *editorVersionBlameTemplate;
@property(readonly) NSImage *editorVersionComparisonTemplate;
@property(readonly) NSImage *editorGeniusTemplate;
@property(readonly) NSImage *editorBasicTemplate;
@property(readonly) NSImage *buildTemplate;
@property(readonly) NSImage *breakpointTemplate;
@property(readonly) NSImage *stopTemplate;
@property(readonly) NSImage *pauseTemplate;
@property(readonly) NSImage *profileTemplate;
@property(readonly) NSImage *testTemplate;
@property(readonly) NSImage *analyzeTemplate;
@property(readonly) NSImage *runTemplate;
@property(readonly) NSGradient *toolbarButtonDisabledGradient;
@property(readonly) NSGradient *toolbarButtonActiveGradient;
@property(readonly) NSGradient *toolbarButtonNaturalGradient;
@property(readonly) NSImage *inFieldGoToButtonSmall;
@property(readonly) NSImage *inFieldChooseButtonSmall;
@property(readonly) NSImage *inFieldChooseButtonRegular;
@property(readonly) NSImage *scopeBarConfigurationShadowImage;
- (id)insetTabPressedImage;
@property(readonly) NSImage *roundDeleteButton;
@property(readonly) NSImage *roundAddButton;
@property(readonly) NSImage *smallPullDownArrow;
@property(readonly) NSImage *offlineIndicatorSelected;
@property(readonly) NSImage *offlineIndicator;
@property(readonly) NSImage *statusClearImage;
@property(readonly) NSImage *statusIndeterminateImage;
@property(readonly) NSImage *statusUnavailableImage;
@property(readonly) NSImage *statusAvailableImage;
@property(readonly) NSImage *showHideViewOnRightAlternateTemplate;
@property(readonly) NSImage *showHideViewOnRightTemplate;
@property(readonly) NSImage *showHideViewOnLeftAlternateTemplate;
@property(readonly) NSImage *showHideViewOnLeftTemplate;
@property(readonly) NSImage *statusItemDeleteSelectedPressedImage;
@property(readonly) NSImage *statusItemDeletePressedImage;
@property(readonly) NSImage *statusItemDeleteSelectedImage;
@property(readonly) NSImage *statusItemDeleteImage;
@property(readonly) NSImage *statusItemAddSelectedPressedImage;
@property(readonly) NSImage *statusItemAddPressedImage;
@property(readonly) NSImage *statusItemAddSelectedImage;
@property(readonly) NSImage *statusItemAddImage;
@property(readonly) NSImage *smallLightCheckmarkImage;
@property(readonly) NSImage *smallDarkCheckmarkImage;
@property(readonly) double splitViewDividerSnappingTolerance;
@property(readonly) NSColor *infoHeaderDescriptionColor;
@property(readonly) NSColor *infoHeaderBigTitleColor;
@property(readonly) NSColor *infoHeaderBorderColor;
@property(readonly) NSColor *infoHeaderBackgroundColor2;
@property(readonly) NSColor *infoHeaderBackgroundColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientContainsOpeningURLEndColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientContainsOpeningURLStartColor;
@property(readonly) NSGradient *navigationHUDTemplateImageInnerGradient;
@property(readonly) struct CGColor *navigationHUDEditorContextInactiveSelectionGradientEndColor;
@property(readonly) struct CGColor *navigationHUDEditorContextInactiveSelectionGradientStartColor;
@property(readonly) struct CGColor *navigationHUDEditorContextActiveSelectionGradientEndColor;
@property(readonly) struct CGColor *navigationHUDEditorContextActiveSelectionGradientStartColor;
@property(readonly) NSColor *navigationHUDTabBarLayerInnerActiveSelectionShadowColor;
@property(readonly) NSColor *navigationHUDTabBarLayerInnerInactiveSelectionShadowColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientActiveSelectionEndColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientActiveSelectionStartColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientInactiveSelectionEndColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientInactiveSelectionStartColor;
@property(readonly) struct CGColor *navigationHUDTabBarOverflowIndicationColor;
@property(readonly) struct CGColor *navigationHUDLineHighlightColor;
@property(readonly) struct CGColor *navigationHUDLineColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientEndColor;
@property(readonly) struct CGColor *navigationHUDTabBarLayerTabGradientStartColor;
@property(readonly) NSGradient *navigationHUDPlusImageGradient;
@property(readonly) struct CGColor *navigationHUDCoverFlowSelectedLayerShadowColor;
@property(readonly) struct CGColor *navigationHUDWindowLayerBorderColor;
@property(readonly) struct CGColor *navigationHUDWindowLayerBackgroundGradientEndColor;
@property(readonly) struct CGColor *navigationHUDWindowLayerBackgroundGradientStartColor;
@property(readonly) struct CGColor *navigationHUDTextShadowColor;
@property(readonly) NSColor *navigationHUDTextColor;
@property(readonly) NSColor *navigationHUDWindowBorderColor;
@property(readonly) NSGradient *navigationHUDWindowBackgroundGradient;
@property(readonly) NSColor *menuStrokeColor;
@property(readonly) NSColor *menuSecondaryColor;
@property(readonly) NSColor *menuWhiteColor;
@property(readonly) NSColor *ibDockGroupSeparatorColor;
@property(readonly) NSGradient *ibDockItemSelectionGradientInactive;
@property(readonly) NSColor *ibDockItemSelectionBorderColorInactive;
@property(readonly) NSGradient *ibDockItemSelectionGradientActive;
@property(readonly) NSColor *ibDockItemSelectionBorderColorActive;
@property(readonly) NSGradient *ibDocumentOutlineViewCapsuleHeaderGradient;
@property(readonly) NSColor *ibDockInactiveBackgroundColor;
@property(readonly) NSColor *ibDockActiveBackgroundColor;
@property(readonly) NSGradient *HUDPopUpHighlightGradient;
@property(readonly) NSColor *HUDPopUpBackgroundColor;
@property(readonly) NSColor *HUDPopUpBorderColor;
@property(readonly) NSColor *libraryTileViewBackgroundColor;
@property(readonly) NSColor *libraryRightClickedAssetBorderColor;
@property(readonly) NSColor *libraryInactiveSelectedAssetBorderColor;
@property(readonly) NSColor *librarySelectedAssetBorderColor;
@property(readonly) NSColor *libraryInactiveSelectedAssetBackgroundColor;
@property(readonly) NSColor *librarySelectedAssetBackgroundColor;
@property(readonly) NSColor *libraryAssetBorderColor;
@property(readonly) NSColor *libraryAssetBackgroundColor;
@property(readonly) struct CGColor *activityViewScanLineColor;
@property(readonly) NSGradient *activityViewInnerBezelGradient;
@property(readonly) NSGradient *activityViewOuterBezelGradient;
@property(readonly) NSColor *activityViewHighlightShadowColor;
@property(readonly) NSGradient *activityViewBackgroundGradient;
@property(readonly) NSGradient *activityViewPopUpBottomBarGradientClicked;
@property(readonly) NSGradient *activityViewPopUpBottomBarGradient;
@property(readonly) struct CGColor *activityViewPopUpBackgroundColor;
@property(readonly) struct CGColor *activityViewPopUpLineCGColor;
@property(readonly) struct CGColor *activityViewPopUpBorderCGColor;
@property(readonly) NSColor *activityViewPopUpBorderColor;
@property(readonly) struct CGColor *activityViewProgressIndicatorDiagonalsColorPopUpStyle;
@property(readonly) struct CGColor *activityViewProgressIndicatorDiagonalsColorMainStyle;
@property(readonly) NSColor *activityViewProgressIndicatorHighlightColor;
@property(readonly) NSColor *activityViewProgressIndicatorVerticalBorderColor;
@property(readonly) NSColor *activityViewProgressIndicatorInnerShadowColorPopUpStyle;
@property(readonly) NSColor *activityViewProgressIndicatorInnerShadowColorMainStyle;
@property(readonly) NSColor *activityViewProgressIndicatorBackgroundFillColor;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressBorderColorInactive;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressBorderColorActive;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressEndColorInactive;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressStartColorInactive;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressEndColorActive;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressStartColorActive;
@property(readonly) struct CGColor *activityViewProgressIndicatorDeterminateBarShadowColor;
@property(readonly) struct CGColor *activityViewProgressIndicatorProgressColorPopUp;
@property(readonly) struct CGColor *activityViewProgressIndicatorBackgroundColorPopUp;
@property(readonly) NSColor *activityViewScrollingTextFieldTextShadowColorInactive;
@property(readonly) NSColor *activityViewScrollingTextFieldTextShadowColorActive;
@property(readonly) NSColor *activityViewBackgroundInnerGlowColor;
- (struct CGColor *)activityViewBorderCGColorForView:(id)arg1;
- (struct CGColor *)activityViewBorderCGColorInactive;
- (struct CGColor *)activityViewBorderCGColorActive;
@property(readonly) NSColor *activityViewBorderColor;
- (struct CGColor *)activityViewHighlightCGColorForView:(id)arg1;
- (struct CGColor *)activityViewHighlightColorInactive;
- (struct CGColor *)activityViewHighlightColorActive;
- (struct CGColor *)activityViewBackgroundBottomColorForView:(id)arg1;
- (struct CGColor *)activityViewBackgroundGradientBottomColorInactive;
- (struct CGColor *)activityViewBackgroundGradientBottomColorActive;
- (struct CGColor *)activityViewBackgroundTopColorForView:(id)arg1;
- (struct CGColor *)activityViewBackgroundGradientTopColorInactive;
- (struct CGColor *)activityViewBackgroundGradientTopColorActive;
@property(readonly) NSColor *imageCatalogTitleColor;
@property(readonly) NSColor *imageCatalogVariationTitleColor;
@property(readonly) NSFont *imageCatalogVariationTitleFont;
@property(readonly) NSColor *imageCatalogIdiomTitleColor;
@property(readonly) NSFont *imageCatalogIdiomTitleFont;
@property(readonly) NSGradient *imageCatalogImageSetIdiomTitleBackground;
@property(readonly) NSFont *imageCatalogTitleFont;
@property(readonly) NSColor *bluePunchOutInactiveColor;
@property(readonly) NSColor *bluePunchOutColor;
@property(readonly) NSColor *blueOnStateTextColor;
@property(readonly) NSColor *reportColorGraphGreen;
@property(readonly) NSColor *reportColorGraphBlue;
@property(readonly) NSColor *reportColorLightGray;
@property(readonly) NSColor *reportColorGray;
@property(readonly) NSColor *reportColorDarkGray;
@property(readonly) NSColor *reportColorMagenta;
@property(readonly) NSColor *reportColorBlue;
@property(readonly) NSColor *reportColorCyan;
@property(readonly) NSColor *reportColorGreen;
@property(readonly) NSColor *reportColorYellow;
@property(readonly) NSColor *reportColorRed;
@property(readonly) NSColor *reportCapacityOtherColor;
@property(readonly) NSColor *reportCapacityProcessColor;
@property(readonly) NSColor *reportCapacityUnusedColor;
@property(readonly) NSColor *reportCapacityBorderColor;
@property(readonly) CDStruct_bf6d4a14 reportContentMargins;
@property(readonly) NSColor *reportBackgroundColor;
@property(readonly) NSColor *reportSectionMidLabelColor;
@property(readonly) NSFont *reportSectionMidUnitLabelFont;
@property(readonly) NSFont *reportSectionMidNumberLabelFont;
@property(readonly) NSColor *reportSectionBigLabelColor;
@property(readonly) NSFont *reportSectionBigUnitLabelFont;
@property(readonly) NSFont *reportSectionBigNumberLabelFont;
@property(readonly) NSColor *reportSectionBackgroundColor;
@property(readonly) NSColor *reportSectionBorderColor;
@property(readonly) NSColor *reportSectionBackgroundLabelColor;
@property(readonly) NSFont *reportSectionBackgroundLabelFont;
@property(readonly) NSColor *reportSectionTitleLabelColor;
@property(readonly) NSFont *reportSectionTitleLabelFont;
@property(readonly) NSColor *reportTopSectionDescriptionColor;
@property(readonly) NSFont *reportTopSectionDescriptionFont;
@property(readonly) NSColor *reportTopSectionDescriptionLabelColor;
@property(readonly) NSFont *reportTopSectionDescriptionLabelFont;
@property(readonly) NSColor *reportTopSectionSubtitleColor;
@property(readonly) NSFont *reportTopSectionSubtitleFont;
@property(readonly) NSColor *reportTopSectionTitleLabelColor;
@property(readonly) NSFont *reportTopSectionTitleLabelFont;
@property(readonly) NSColor *headerSliceIssueStripeColor;
@property(readonly) NSGradient *headerSliceIssueBackgroundGradient;
@property(readonly) NSColor *headerSliceDisclosureButtonHighlightColor;
@property(readonly) NSColor *headerSliceDisclosureButtonColor;
@property(readonly) NSFont *headerSliceDisclosureButtonFont;
@property(readonly) NSColor *headerSliceLabelColor;
@property(readonly) NSFont *headerSliceLabelFont;
@property(readonly) NSGradient *headerSliceBackgroundGradient;
@property(readonly) NSColor *headerSliceBottomStrokeColor;
@property(readonly) NSColor *headerSliceTopStrokeColor;
@property(readonly) NSColor *greenEmphasisBoxStrokeColor;
@property(readonly) NSColor *greenEmphasisBoxBackgroundColor;
@property(readonly) NSColor *selectedTokenColor;
@property(readonly) NSColor *tokenStrokeColor;
@property(readonly) NSColor *tokenBackgroundColor;
@property(readonly) NSFont *noContentMarkerFont;
@property(readonly) NSColor *findHiddenCharacterColor;
@property(readonly) NSColor *findUnderlineColor4;
@property(readonly) NSColor *findUnderlineColor3;
@property(readonly) NSColor *findUnderlineColor2;
@property(readonly) NSColor *findUnderlineColor1;
@property(readonly) NSGradient *findBackgroundGradient4;
@property(readonly) NSGradient *findBackgroundGradient3;
@property(readonly) NSGradient *findBackgroundGradient2;
@property(readonly) NSGradient *findBackgroundGradient1;
@property(readonly) NSColor *scmLogHeaderTextColor;
@property(readonly) double scmBlameAgeHue;
@property(readonly) NSGradient *scmLogHeaderGradient;
@property(readonly) NSColor *versionsDiffInactiveStrokeColor2;
@property(readonly) NSColor *versionsDiffInactiveStrokeColor1;
@property(readonly) NSColor *versionsDiffUnfocusedStrokeColor2;
@property(readonly) NSColor *versionsDiffUnfocusedStrokeColor1;
@property(readonly) NSColor *versionsDiffInactiveHighlightColor2;
@property(readonly) NSColor *versionsDiffInactiveHighlightColor1;
@property(readonly) NSColor *versionsDiffUnfocusedHighlightColor2;
@property(readonly) NSColor *versionsDiffUnfocusedHighlightColor1;
@property(readonly) NSColor *versionsDiffInactiveDisabledStrokeColor2;
@property(readonly) NSColor *versionsDiffInactiveDisabledStrokeColor1;
@property(readonly) NSColor *versionsDiffUnfocusedDisabledStrokeColor2;
@property(readonly) NSColor *versionsDiffUnfocusedDisabledStrokeColor1;
@property(readonly) NSColor *versionsDiffInactiveDisabledHighlightColor2;
@property(readonly) NSColor *versionsDiffInactiveDisabledHighlightColor1;
@property(readonly) NSColor *versionsDiffUnfocusedDisabledHighlightColor2;
@property(readonly) NSColor *versionsDiffUnfocusedDisabledHighlightColor1;
@property(readonly) NSColor *versionsConflictDiffInactiveStrokeColor2;
@property(readonly) NSColor *versionsConflictDiffUnfocusedStrokeColor2;
@property(readonly) NSColor *versionsConflictDiffStrokeColor2;
@property(readonly) NSColor *versionsConflictDiffInactiveHighlightColor2;
@property(readonly) NSColor *versionsConflictDiffUnfocusedHighlightColor2;
@property(readonly) NSColor *versionsConflictDiffHighlightColor2;
@property(readonly) NSColor *versionsConflictDiffInactiveStrokeColor1;
@property(readonly) NSColor *versionsConflictDiffUnfocusedStrokeColor1;
@property(readonly) NSColor *versionsConflictDiffStrokeColor1;
@property(readonly) NSColor *versionsConflictDiffInactiveHighlightColor1;
@property(readonly) NSColor *versionsConflictDiffUnfocusedHighlightColor1;
@property(readonly) NSColor *versionsConflictDiffHighlightColor1;
@property(readonly) NSColor *versionsDiffDisabledStrokeColor2;
@property(readonly) NSColor *versionsDiffDisabledHighlightColor2;
@property(readonly) NSColor *versionsDiffDisabledStrokeColor1;
@property(readonly) NSColor *versionsDiffDisabledHighlightColor1;
@property(readonly) NSColor *versionsDiffStrokeColor2;
@property(readonly) NSColor *versionsDiffHighlightColor2;
@property(readonly) NSColor *versionsDiffStrokeColor1;
@property(readonly) NSColor *versionsDiffHighlightColor1;
@property(readonly) NSColor *diffButtonDisabledInactiveStroke;
@property(readonly) NSColor *diffButtonDisabledUnfocusedStroke;
@property(readonly) NSColor *diffButtonDisabledDepressedStroke;
@property(readonly) NSColor *diffButtonDisabledStroke;
@property(readonly) NSColor *diffButtonEnabledInactiveStroke;
@property(readonly) NSColor *diffButtonEnabledUnfocusedStroke;
@property(readonly) NSColor *diffButtonEnabledDepressedStroke;
@property(readonly) NSColor *diffButtonEnabledStroke;
@property(readonly) NSGradient *diffButtonDisabledInactiveGradient;
@property(readonly) NSGradient *diffButtonDisabledUnfocusedGradient;
@property(readonly) NSGradient *diffButtonDisabledDepressedGradient;
@property(readonly) NSGradient *diffButtonDisabledGradient;
@property(readonly) NSGradient *diffButtonEnabledInactiveGradient;
@property(readonly) NSGradient *diffButtonEnabledUnfocusedGradient;
@property(readonly) NSGradient *diffButtonEnabledDepressedGradient;
@property(readonly) NSGradient *diffButtonEnabledGradient;
@property(readonly) NSColor *scmBlameAnnotationLineColor;
@property(readonly) NSColor *inspectorDisabledSliverLabelColor;
@property(readonly) NSColor *inspectorSliverLabelColor;
@property(readonly) NSFont *inspectorSliverLabelFont;
@property(readonly) NSColor *inspectorSectionTitleColor;
@property(readonly) NSFont *inspectorSectionTitleFont;
@property(readonly) NSFont *lineNumberFont;
@property(readonly) NSColor *messageBubbleButtonForegroundColor;
@property(readonly) NSColor *messageBubbleButtonBackgroundColor;
@property(readonly) NSGradient *scrollbarMarkerDiffConflictGradient;
@property(readonly) NSGradient *scrollbarMarkerDiffGradient;
@property(readonly) NSGradient *scrollbarMarkerAnalyzerGradient;
@property(readonly) NSGradient *scrollbarMarkerWarningGradient;
@property(readonly) NSGradient *scrollbarMarkerErrorGradient;
@property(readonly) NSColor *pageGuideColor;
@property(readonly) NSColor *analyzerFlowArrowsColor;
@property(readonly) NSGradient *foldingRibbonGradient;
@property(readonly) NSGradient *textCompletionScrollerSlotGradient;
@property(readonly) NSGradient *textCompletionScrollerKnobGradient;
@property(readonly) NSColor *textCompletionListNotRecommendedStrikeThroughColor;
@property(readonly) NSColor *textCompletionListTypeColor;
@property(readonly) NSColor *textCompletionListTitleColor;
@property(readonly) NSGradient *textCompletionListBackgroundGradient;
@property(readonly) NSFont *infoHeaderBigTitleFont;
@property(readonly) NSFont *scmLogFont;
@property(readonly) NSFont *variablesRawValueFont;
@property(readonly) NSFont *variablesChangedFont;
@property(readonly) NSFont *variablesSummaryFont;
@property(readonly) NSFont *variablesValueFont;
@property(readonly) NSFont *variablesTypeFont;
@property(readonly) NSFont *variablesNameFont;
@property(readonly) NSColor *scmLogLinkTextColor;
@property(readonly) NSColor *scmLogSubtextColor;
@property(readonly) NSColor *variablesChangedColor;
@property(readonly) NSColor *variablesSummaryColor;
@property(readonly) NSColor *variablesInactiveColor;
@property(readonly) NSColor *variablesTextColor;
@property(readonly) NSGradient *hudScrollerSlotGradient;
@property(readonly) NSGradient *hudScrollerKnobGradient;
@property(readonly) NSColor *breakpointStrokeColor;
@property(readonly) NSGradient *breakpointBackgroundGradient;
- (id)statusBadgeConflictColorForSelected:(BOOL)arg1;
@property(readonly) NSColor *statusBadgeConflictColor;
@property(readonly) NSColor *statusBadgeConflictHighlightColor;
- (id)statusBadgeForegroundColorForView:(id)arg1 selected:(BOOL)arg2;
- (id)statusBadgeBackgroundColorForView:(id)arg1 selected:(BOOL)arg2;
@property(readonly) NSColor *statusBadgeInactiveColor;
@property(readonly) NSColor *statusBadgeActiveGraphiteColor;
@property(readonly) NSColor *statusBadgeActiveAquaColor;
@property(readonly) NSColor *statusBadgeFocusedGraphiteColor;
@property(readonly) NSColor *statusBadgeFocusedAquaColor;
- (id)navigatorSelectionTopCapColorForView:(id)arg1;
- (id)navigatorSelectionGradientForView:(id)arg1;
@property(readonly) NSColor *navigatorPlaceholderTextColor;
@property(readonly) NSColor *navigatorSecondarySelectionColor2;
@property(readonly) NSColor *navigatorSecondarySelectionColor;
@property(readonly) NSColor *navigatorSelectionTopCapInactiveColor;
@property(readonly) NSColor *navigatorSelectionTopCapActiveGraphiteColor;
@property(readonly) NSColor *navigatorSelectionTopCapActiveAquaColor;
@property(readonly) NSColor *navigatorSelectionTopCapFocusedGraphiteColor;
@property(readonly) NSColor *navigatorSelectionTopCapFocusedAquaColor;
@property(readonly) NSGradient *navigatorSelectionInactiveGradient;
@property(readonly) NSGradient *navigatorSelectionActiveGraphiteGradient;
@property(readonly) NSGradient *navigatorSelectionActiveAquaGradient;
@property(readonly) NSGradient *navigatorSelectionFocusedGraphiteGradient;
@property(readonly) NSGradient *navigatorSelectionFocusedAquaGradient;
@property(readonly) NSGradient *navigatorGroupHeaderInactiveGradient;
@property(readonly) NSGradient *navigatorGroupHeaderGradient;
@property(readonly) NSFont *secondaryListFont;
@property(readonly) NSFont *boldListFont;
@property(readonly) NSFont *listFont;
@property(readonly) NSGradient *subToolbarDividerGradient;
@property(readonly) NSGradient *inactiveGradient;
@property(readonly) NSGradient *scopeBar2Gradient;
@property(readonly) NSGradient *scopeBar1Gradient;
@property(readonly) NSGradient *selectedGlassGradient;
@property(readonly) NSGradient *glassGradient;
@property(readonly) NSGradient *selectedActiveGradient;
@property(readonly) NSGradient *active2Gradient;
@property(readonly) NSGradient *active1Gradient;
@property(readonly) NSColor *inspectorAreaButtonBarBackgroundColor;
@property(readonly) NSColor *editorAreaBackgroundColor;
@property(readonly) NSColor *glassSeparatorColor;
@property(readonly) NSGradient *sourceListSelectionGraphiteUnfocusedGradient;
@property(readonly) NSColor *sourceListSelectionTopCapGraphiteUnfocusedColor;
@property(readonly) NSGradient *sourceListSelectionGraphiteGradient;
@property(readonly) NSColor *sourceListSelectionTopCapGraphiteColor;
@property(readonly) NSGradient *sourceListSelectionAquaUnfocusedGradient;
@property(readonly) NSColor *sourceListSelectionTopCapAquaUnfocusedColor;
@property(readonly) NSGradient *sourceListSelectionAquaGradient;
@property(readonly) NSColor *sourceListSelectionTopCapAquaColor;
@property(readonly) NSGradient *sourceListSelectionInactiveGradient;
@property(readonly) NSColor *sourceListSelectionTopCapInactiveColor;
@property(readonly) NSColor *sourceListBackgroundColor;
@property(readonly) NSColor *blackShadow2Color;
@property(readonly) NSColor *blackShadow1Color;
@property(readonly) NSColor *whiteShadow3Color;
@property(readonly) NSColor *whiteShadow2Color;
@property(readonly) NSColor *whiteShadow1Color;
@property(readonly) NSColor *parameterTextColor;
@property(readonly) NSColor *stroke7Color;
@property(readonly) NSColor *stroke6Color;
@property(readonly) NSColor *stroke5Color;
@property(readonly) NSColor *stroke4Color;
@property(readonly) NSColor *stroke3Color;
@property(readonly) NSColor *stroke2Color;
@property(readonly) NSColor *stroke1Color;
@property(readonly) NSColor *background2Color;
@property(readonly) NSColor *background1Color;
@property(readonly) NSColor *inactiveColor;
@property(readonly) NSColor *active2Color;
@property(readonly) NSColor *active1Color;
@property(readonly) NSColor *whiteColor;
@property(readonly) NSColor *blackColor;
@property(readonly) NSColor *windowBackgroundColor;
- (void)_setContents:(id)arg1;
- (id)_contents;
- (id)debugDescription;
- (id)_initWithDictionary:(id)arg1;

@end

@interface DVTFontValue : NSObject
{
    int _type;
    int _displayType;
    id _value;
    NSString *_unitTestKey;
}

@property(readonly, nonatomic) NSString *unitTestKey; // @synthesize unitTestKey=_unitTestKey;
@property(readonly, nonatomic) int displayType; // @synthesize displayType=_displayType;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
- (void).cxx_destruct;
- (id)description;
- (BOOL)represents:(id)arg1;
- (id)fontValue;
- (id)displayName;
- (id)displayNameWithType:(int *)arg1;
- (id)initWithValue:(id)arg1 type:(int)arg2 displayType:(int)arg3 unitTestKey:(id)arg4;

@end

@interface DVTFontDataSource : NSObject <DVTFontTextFieldDataSource>
{
    NSArray *_fonts;
    NSNumberFormatter *_sizeFormatter;
}

- (void).cxx_destruct;
- (BOOL)fontTextField:(id)arg1 value:(id)arg2 isEqualToValue:(id)arg3;
- (BOOL)fontTextFieldCanShowFontPanel:(id)arg1;
- (id)fontTextField:(id)arg1 displaySizeForValue:(id)arg2;
- (id)fontTextField:(id)arg1 displayNameForValue:(id)arg2;
- (double)fontTextField:(id)arg1 pointSizeForValue:(id)arg2;
- (id)fontTextField:(id)arg1 fontNameForValue:(id)arg2;
- (id)fontTextField:(id)arg1 familyForValue:(id)arg2;
- (id)fontTextField:(id)arg1 transformValue:(id)arg2 toHavePointSize:(double)arg3;
- (id)fontTextField:(id)arg1 transformValue:(id)arg2 toHaveSize:(id)arg3;
- (id)fontTextField:(id)arg1 transformValue:(id)arg2 toHaveFontName:(id)arg3;
- (id)fontTextField:(id)arg1 transformValue:(id)arg2 toHaveFamily:(id)arg3;
- (id)fontTextField:(id)arg1 transformValue:(id)arg2 toFontValue:(id)arg3;
- (id)backwardsCompatibleFontForFont:(id)arg1;
- (unsigned long long)fontTextField:(id)arg1 settableAttributesForValue:(id)arg2;
- (BOOL)fontTextField:(id)arg1 isValueSpecial:(id)arg2;
- (id)fontTextField:(id)arg1 descriptionForFontName:(id)arg2;
- (id)fontTextField:(id)arg1 descriptionForFamily:(id)arg2;
- (id)fontTextField:(id)arg1 descriptionForValue:(id)arg2 type:(int *)arg3;
- (id)fontTextField:(id)arg1 fontNamesForFontFamily:(id)arg2;
- (id)fontFamiliesForFontTextField:(id)arg1;
- (id)fontValuesForFontTextField:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTStackView_ML : DVTLayoutView_ML
{
    BOOL _shouldFillContainingClipView;
    double _lastClipViewBreadMagnitude;
    double subviewSpacing;
    CDStruct_bf6d4a14 subviewInset;
    int layoutDirection;
    int breadthResizingMode;
}

@property(nonatomic) int breadthResizingMode; // @synthesize breadthResizingMode;
@property(nonatomic) CDStruct_bf6d4a14 subviewInset; // @synthesize subviewInset;
@property(nonatomic) double subviewSpacing; // @synthesize subviewSpacing;
@property(nonatomic) int layoutDirection; // @synthesize layoutDirection;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (struct CGSize)sizeForPulledStackMagnitude:(double)arg1 maxBreadth:(double)arg2;
- (struct CGPoint)pushedOriginForSubview:(id)arg1 position:(double)arg2 maxBreadth:(double)arg3;
- (struct CGSize)pushedSizeForSubview:(id)arg1;
- (double)stackMagnitudeForSubview:(id)arg1;
- (double)breadMagnitudeForSubview:(id)arg1;
- (BOOL)isTopToBottom;
- (BOOL)isFlipped;
- (id)configureToFillClipView:(id)arg1;
- (double)breadthMagitudeForClipViewSize:(struct CGSize)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTAssetDetailView : DVTLayoutView_ML <DVTTabChooserViewDelegate, DVTReplacementViewDelegate, DVTInvalidation>
{
    NSView *_helpButton;
    DVTNotificationToken *_replacementViewFrameChangeToken;
    BOOL _pressed;
    DVTTabChooserView *_detailControllerChooserView;
    DVTReplacementView *_replacementView;
    NSAttributedString *_label;
    NSString *_helpIdentifier;
    NSEvent *_lastMouseDown;
    NSView *_editingView;
    NSImage *_image;
    id <DVTAssetDetailViewDelegate> _delegate;
}

+ (void)initialize;
@property(retain) id <DVTAssetDetailViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSView *editingView; // @synthesize editingView=_editingView;
@property(retain) NSEvent *lastMouseDown; // @synthesize lastMouseDown=_lastMouseDown;
@property(copy, nonatomic) NSString *helpIdentifier; // @synthesize helpIdentifier=_helpIdentifier;
@property(copy, nonatomic) NSAttributedString *label; // @synthesize label=_label;
@property(nonatomic, getter=isPressed) BOOL pressed; // @synthesize pressed=_pressed;
@property(readonly) DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
@property(readonly) DVTTabChooserView *detailControllerChooserView; // @synthesize detailControllerChooserView=_detailControllerChooserView;
- (void).cxx_destruct;
- (void)uninstallEditingView;
- (void)installEditingView;
- (void)tabChooserView:(id)arg1 userDidChooseChoice:(id)arg2;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)replacementViewFrameDidChange:(id)arg1;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (struct CGSize)suggestedSize;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (struct CGPoint)replacementViewOrigin;
- (double)effectiveDetailControllerChooserViewHeight;
- (BOOL)shouldShowDetailControllerChooserView;
- (void)drawRect:(struct CGRect)arg1;
- (id)effectiveHeaderBorderColor;
- (id)effectiveHeaderBackgroundColor;
- (double)detailControllerChooserViewHeight;
- (struct CGRect)detailControllerChooserViewFrame;
- (struct CGRect)headerRect;
- (double)headerHeight;
- (struct CGRect)editingViewRect;
- (struct CGRect)labelAreaBounds;
- (struct CGRect)imageRect;
- (struct CGRect)imageAreaBounds;
- (BOOL)isFlipped;
- (void)takeLabelFromString:(id)arg1;
- (id)basicLabelAttributes;
- (void)takeLabelFromTitle:(id)arg1 andSubtitle:(id)arg2;
- (void)primitiveInvalidate;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)assetDetailViewCommonInit;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTToolbarViewController : NSViewController <DVTInvalidation>
{
    NSString *_itemIdentifier;
    NSWindow *_window;
    NSString *_label;
    NSString *_tooltip;
}

+ (void)initialize;
@property(copy) NSString *tooltip; // @synthesize tooltip=_tooltip;
@property(copy) NSString *label; // @synthesize label=_label;
@property(retain) NSWindow *window; // @synthesize window=_window;
@property(readonly, copy) NSString *itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
- (void).cxx_destruct;
@property(readonly) struct CGSize maxSize;
@property(readonly) struct CGSize minSize;
- (id)menuForMenuFormRepresentation;
- (id)menuFormRepresentation;
- (void)primitiveInvalidate;
- (id)initWithToolbarItemIdentifier:(id)arg1 window:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTViewControllerToolbarItem : NSToolbarItem
{
    DVTToolbarViewController *_viewController;
}

+ (id)toolbarItemWithViewController:(id)arg1;
@property(retain) DVTToolbarViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;

@end

@interface _DVTSegmentedCell : NSSegmentedCell
{
    NSImageCell *_arrowImageCell;
    BOOL _useMenuDelay;
    BOOL _useMenuDelayForSelectedSegment;
    BOOL _useRadioDrawingStyle;
    DVTPointerArray *_segmentImages;
    BOOL _useAnyDrawingStyle;
}

@property BOOL useAnyDrawingStyle; // @synthesize useAnyDrawingStyle=_useAnyDrawingStyle;
@property BOOL useRadioDrawingStyle; // @synthesize useRadioDrawingStyle=_useRadioDrawingStyle;
@property BOOL useMenuDelayForSelectedSegment; // @synthesize useMenuDelayForSelectedSegment=_useMenuDelayForSelectedSegment;
@property BOOL useMenuDelay; // @synthesize useMenuDelay=_useMenuDelay;
- (void).cxx_destruct;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (void)_drawMenuIndicatorForFrame:(struct CGRect)arg1 activeStyle:(BOOL)arg2 withView:(id)arg3;
- (unsigned long long)_applicableTrackingModeForSegment:(long long)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegment:(long long)arg2;
- (id)_adjustImage:(id)arg1 forControlSize:(unsigned long long)arg2;
- (void)setSegmentCount:(long long)arg1;
- (id)_segmentImages;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (id)init;

@end

@interface DVTSegmentedControl : NSSegmentedControl
{
    NSMutableArray *_alternateImages;
    BOOL _shouldDrawMenuIndictor;
    BOOL _bordered;
    double _menuIndicatorInset;
}

+ (id)toolbarSegmentedControlWithImages:(id)arg1 trackingMode:(unsigned long long)arg2;
+ (id)toolbarSegmentedControlWithTrackingMode:(unsigned long long)arg1 images:(id)arg2 alternateImages:(id)arg3;
@property(getter=isBordered) BOOL bordered; // @synthesize bordered=_bordered;
@property double menuIndicatorInset; // @synthesize menuIndicatorInset=_menuIndicatorInset;
@property BOOL shouldDrawMenuIndictor; // @synthesize shouldDrawMenuIndictor=_shouldDrawMenuIndictor;
- (void).cxx_destruct;
- (BOOL)wantsDefaultClipping;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)applyDVTStyleWithTrackingMode:(unsigned long long)arg1;
- (void)setAlternateImage:(id)arg1 forSegment:(long long)arg2;
- (id)alternateImageForSegment:(long long)arg1;
- (id)_getImageInArray:(id)arg1 forSegment:(long long)arg2;
- (void)_setImage:(id)arg1 inArray:(id)arg2 forSegment:(long long)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
@property BOOL useAnyDrawingStyle;
@property BOOL useRadioDrawingStyle;
@property BOOL useMenuDelayForSelectedSegment;
@property BOOL useMenuDelay;

@end

@interface DVTDetachedTabDraggingImageToWindowTransitionController : NSObject
{
    DVTTabbedWindowTabViewItem *_movingTabViewItem;
    id <DVTTabbedWindowControlling> _sourceWindowController;
    id <DVTTabbedWindowControlling> _destinationWindowController;
    NSWindow *_sourceMiniWindow;
    NSWindow *_destinationWindow;
    struct CGRect _windowAnimationStartFrame;
    struct CGRect _windowAnimationEndFrame;
    struct CGAffineTransform _windowAnimationEndTransform;
}

+ (void)detachTabViewItem:(id)arg1 fromWindowController:(id)arg2 withDraggedMiniWindow:(id)arg3 ofWidth:(double)arg4;
- (void).cxx_destruct;
- (void)_updateAnimationWithProgress:(float)arg1;
- (void)_startAnimation;
- (void)_setUpBrowserWindow;
- (void)_setUpBrowserWindowAnimationEndFrame;
- (void)_setUpBrowserWindowAnimationStartFrameWithMiniWindowWidth:(double)arg1;
- (id)_initWithTabViewItem:(id)arg1 sourceWindowController:(id)arg2 miniWindow:(id)arg3 ofWidth:(double)arg4;
- (id)init;

@end

@interface DVTPlistBooleanNode : DVTPlistNode
{
    BOOL _value;
}

- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (void)setValueFromPlist:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTLibraryAsset : NSObject
{
    DVTHashTable *_knownGroups;
    DVTExtension *_extension;
    BOOL _selected;
    id _representedObject;
    NSImage *_image;
    NSString *_title;
    NSString *_subtitle;
    NSString *_summary;
    NSString *_badgeString;
    NSAttributedString *_fullDescription;
    NSArray *_detailControllerIdentifiers;
    DVTLibrary *_library;
    NSString *_identifier;
    NSDate *_lastUsedDate;
}

@property(getter=isSelected) BOOL selected; // @synthesize selected=_selected;
@property(retain) NSDate *lastUsedDate; // @synthesize lastUsedDate=_lastUsedDate;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain) DVTLibrary *library; // @synthesize library=_library;
@property(copy) NSArray *detailControllerIdentifiers; // @synthesize detailControllerIdentifiers=_detailControllerIdentifiers;
@property(copy) NSAttributedString *fullDescription; // @synthesize fullDescription=_fullDescription;
@property(copy) NSString *badgeString; // @synthesize badgeString=_badgeString;
@property(copy) NSString *summary; // @synthesize summary=_summary;
@property(copy) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy) NSString *title; // @synthesize title=_title;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(retain) id representedObject; // @synthesize representedObject=_representedObject;
@property(readonly) DVTExtension *representedExtension; // @synthesize representedExtension=_extension;
- (void).cxx_destruct;
- (id)description;
- (void)removeKnownGroup:(id)arg1;
- (void)addKnownGroup:(id)arg1;
- (id)searchTerms;
@property(readonly) double timeIntervalSinceUsed;
@property(readonly) NSSet *knownGroups;
- (void)loadDetailControllerIdentifiersFromExtension;
- (id)initWithExtension:(id)arg1;
- (id)initWithIdentifier:(id)arg1;

@end

@interface DVTAnnotationContext : NSObject
{
    DVTFileDataType *_fileDataType;
}

@property(copy) DVTFileDataType *fileDataType; // @synthesize fileDataType=_fileDataType;
- (void).cxx_destruct;
- (id)description;
- (id)initWithFileDataType:(id)arg1;
- (id)init;

@end

@interface DVTSliceTextView : NSTextView
{
    NSArray *_foundLocations;
    DVTTextDocumentLocation *_currentFoundLocation;
    int _findResultStyle;
}

@property int findResultStyle; // @synthesize findResultStyle=_findResultStyle;
- (void).cxx_destruct;
- (void)drawFoundLocationsInRange:(struct _NSRange)arg1;
- (id)_findResultUnderlineColor;
- (id)_findResultCurrentUnderlineColor;
- (id)_findResultGradient;
- (id)_findResultCurrentGradient;
- (void)setCurrentFoundLocation:(id)arg1;
- (void)setFoundLocations:(id)arg1;
- (void)_loadColorsFromCurrentTheme;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface DVTSliceLayoutManager : NSLayoutManager
{
}

- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;

@end

@interface DVTButtonCell : NSButtonCell
{
    NSMapTable *_imageByBackgroundStyleMapTable;
    NSMapTable *_alternateImageByBackgroundStyleMapTable;
}

- (void).cxx_destruct;
- (void)setBackgroundStyle:(long long)arg1;
- (id)alternateImageForBackgroundStyle:(long long)arg1;
- (void)setAlternateImage:(id)arg1 forBackgroundStyle:(long long)arg2;
- (id)imageForBackgroundStyle:(long long)arg1;
- (void)setImage:(id)arg1 forBackgroundStyle:(long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface __DVTThemeNSImageAdditionsClass : NSObject
{
}

@end

@interface DVTTextAnnotationTheme : NSObject
{
    NSColor *_borderTopColor;
    NSColor *_borderBottomColor;
    NSColor *_highlightColor;
    NSGradient *_overlayGradient;
    NSGradient *_overlayTintedGradient;
    NSColor *_messageBubbleBorderColor;
    NSGradient *_messageBubbleGradient;
    NSColor *_caretColor;
    NSColor *_highlightedRangeBorderColor;
    NSColor *_textColor;
}

+ (id)defaultOverlayTintedGlassGradient;
+ (id)defaultOverlayGlassGradient;
+ (id)diffTextAnnotationThemeSelected:(BOOL)arg1 conflict:(BOOL)arg2 disabled:(BOOL)arg3 focused:(BOOL)arg4 inactive:(BOOL)arg5;
+ (id)grayGlassTextAnnotationThemeForVariant:(int)arg1;
+ (id)blueGlassTextAnnotationThemeForVariant:(int)arg1;
+ (id)greenGlassTextAnnotationThemeForVariant:(int)arg1;
+ (id)redGlassTextAnnotationThemeForVariant:(int)arg1;
+ (id)yellowGlassTextAnnotationThemeForVariant:(int)arg1;
+ (id)defaultTheme;
+ (id)_caretColor;
+ (BOOL)_hasDarkBackround;
+ (double)diffTextAnnotationAlphaAdjustmentForDarkTheme:(BOOL)arg1;
+ (void)initialize;
@property(readonly) NSColor *textColor; // @synthesize textColor=_textColor;
@property(readonly) NSColor *highlightedRangeBorderColor; // @synthesize highlightedRangeBorderColor=_highlightedRangeBorderColor;
@property(readonly) NSColor *caretColor; // @synthesize caretColor=_caretColor;
@property(readonly) NSColor *messageBubbleBorderColor; // @synthesize messageBubbleBorderColor=_messageBubbleBorderColor;
@property(readonly) NSGradient *messageBubbleGradient; // @synthesize messageBubbleGradient=_messageBubbleGradient;
@property(readonly) NSGradient *overlayTintedGradient; // @synthesize overlayTintedGradient=_overlayTintedGradient;
@property(readonly) NSGradient *overlayGradient; // @synthesize overlayGradient=_overlayGradient;
@property(readonly) NSColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property(readonly) NSColor *borderBottomColor; // @synthesize borderBottomColor=_borderBottomColor;
@property(readonly) NSColor *borderTopColor; // @synthesize borderTopColor=_borderTopColor;
- (void).cxx_destruct;
@property(readonly) NSColor *messageBubbleFillColor;
- (id)_calculateTextColor;
- (id)initWithHighlightColor:(id)arg1 messageBubbleColor:(id)arg2 caretColor:(id)arg3;
- (id)initWithHighlightColor:(id)arg1 borderTopColor:(id)arg2 borderBottomColor:(id)arg3 overlayGradient:(id)arg4 overlayTintedGradient:(id)arg5 messageBubbleBorderColor:(id)arg6 messageBubbleGradient:(id)arg7 caretColor:(id)arg8 highlightedRangeBorderColor:(id)arg9;

@end

@interface DVTLibraryDetailController : DVTViewController
{
    id _delegate;
}

@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)sizeToFitSuggestedSize:(struct CGSize)arg1 forAsset:(id)arg2;
- (void)refreshWithAsset:(id)arg1 representedObject:(id)arg2;
- (void)viewDidInstall;
- (id)contentView;

@end

@interface DVTReportDisclosureHeaderView : DVTDisclosureHeaderView
{
    NSView *_accessoryView;
}

@property(retain, nonatomic) NSView *accessoryView; // @synthesize accessoryView=_accessoryView;
- (void).cxx_destruct;
- (void)layoutBottomUp;
- (id)defaultTitleField;
- (double)preferredHeight;
- (void)commonInit;

@end

@interface DVTScrollableTabButton : DVTScrollableTabBarViewButton <NSTextFieldDelegate>
{
    NSString *_title;
    NSTextField *_titleTextField;
    NSImageView *_errorIndicator;
    NSView *_focusRingView;
    NSTextField *_userRenameTabField;
    NSView *_mainContentContainer;
    NSText *_editor;
    NSLayoutConstraint *_mainContentContainerWidthConstraint;
    NSLayoutConstraint *_mainContentContainerLeadingConstraint;
    NSLayoutConstraint *_mainContentContainerTrailingConstraint;
    NSLayoutConstraint *_mainContentContainerHorizontalCenteringConstraint;
    DVTTabBarClippedItemsIndicator *_clippedItemsIndicator;
    NSArray *_clippedItemsIndicatorConstraints;
    NSImage *_tabDragImage;
    NSImage *_miniWindowDragImage;
    struct CGRect _miniWindowStartFrame;
    struct CGRect _miniWindowEndFrame;
    NSWindow *_miniWindowDragWindow;
    NSWindow *_miniWindowTabbedWindow;
    struct CGAffineTransform _originalBrowserTransform;
    BOOL _isRenamingTab;
    BOOL _showingAlertSymbol;
    BOOL _showingCloseButton;
    BOOL _showingClippedItemsIndicator;
    DVTRolloverImageButton *_closeButton;
    SEL _closeAction;
    SEL _becomeFirstResponderAction;
    double _buttonWidthForTitleLayout;
    double _titleCenterOffset;
}

+ (id)titleFont;
+ (double)titleWidthForButtonWidth:(double)arg1;
@property(nonatomic) double titleCenterOffset; // @synthesize titleCenterOffset=_titleCenterOffset;
@property(nonatomic) double buttonWidthForTitleLayout; // @synthesize buttonWidthForTitleLayout=_buttonWidthForTitleLayout;
@property(nonatomic, getter=isShowingClippedItemsIndicator) BOOL showingClippedItemsIndicator; // @synthesize showingClippedItemsIndicator=_showingClippedItemsIndicator;
@property(nonatomic, getter=isShowingCloseButton) BOOL showingCloseButton; // @synthesize showingCloseButton=_showingCloseButton;
@property(nonatomic, getter=isShowingAlertSymbol) BOOL showingAlertSymbol; // @synthesize showingAlertSymbol=_showingAlertSymbol;
@property(nonatomic) SEL becomeFirstResponderAction; // @synthesize becomeFirstResponderAction=_becomeFirstResponderAction;
@property(nonatomic) SEL closeAction; // @synthesize closeAction=_closeAction;
@property(readonly) DVTRolloverImageButton *closeButton; // @synthesize closeButton=_closeButton;
- (void).cxx_destruct;
- (void)stopEditingTabName;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_stopEditingAndUninstallEditor;
- (void)startEditingTabName;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)updateConstraints;
- (void)updateLayer;
- (void)setState:(long long)arg1;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)_growMiniWindowForDetachedTabWithDragController:(id)arg1;
- (void)_customGrowMiniWindowForDetachedTabWithDragController:(id)arg1 newTabbedWindowController:(id)arg2;
- (void)_growMiniWindow:(id)arg1;
- (void)morphingDragImageEnded:(id)arg1;
- (void)morphingDragImage:(id)arg1 wasDroppedAtPointOnScreen:(struct CGPoint)arg2;
- (void)morphingDragImage:(id)arg1 movedToPointOnScreen:(struct CGPoint)arg2;
- (double)_miniWindowDragImageWidth;
- (id)miniWindowDragImage;
- (id)tabDragImage;
- (struct CGSize)maximumDragImageSize;
- (id)_titleStringAttributesForMainWindow:(BOOL)arg1 activeTab:(BOOL)arg2;
- (void)_updateTitleTextField;
- (void)_updateErrorIndicatorImage;
- (void)_updateCloseButtonImages;
- (void)setShowingCloseButton:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_createClippedItemsIndicatorConstraintsIfNecessary;
- (void)_createdClippedItemsIndicatorIfNecessary;
- (void)_closeButtonClicked:(id)arg1;
- (void)destroy;
- (void)_updateAccessibilityAttributes;
- (void)_setUpConstraints;
- (void)_updateTitleContainerConstraints;
- (void)setAlignment:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 tabViewItem:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPatternString : NSString
{
    NSString *_pattern;
    unsigned long long _count;
}

@property(readonly) unsigned long long count; // @synthesize count=_count;
@property(readonly) NSString *pattern; // @synthesize pattern=_pattern;
- (void).cxx_destruct;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)init;
- (id)initWithPatternCharacter:(unsigned short)arg1 count:(unsigned long long)arg2;
- (id)initWithPatternString:(id)arg1 count:(unsigned long long)arg2;

@end

@interface DVTScrollView : NSScrollView
{
    BOOL _handleBoundsOrFrameChangePending;
    DVTShadowView *_shadowView;
    DVTShadowView *_leftShadowView;
    id _contentViewBoundsChangeNotificationToken;
    id _documentViewFrameChangeNotificationToken;
    BOOL _showsShadowOnBottom;
    BOOL _showsShadowOnLeft;
    BOOL _shadowsComeAndGoBasedOnScrollPosition;
}

@property(nonatomic) BOOL shadowsComeAndGoBasedOnScrollPosition; // @synthesize shadowsComeAndGoBasedOnScrollPosition=_shadowsComeAndGoBasedOnScrollPosition;
@property(nonatomic) BOOL showsShadowOnLeft; // @synthesize showsShadowOnLeft=_showsShadowOnLeft;
@property(nonatomic) BOOL showsShadowOnBottom; // @synthesize showsShadowOnBottom=_showsShadowOnBottom;
- (void).cxx_destruct;
- (void)tile;
- (void)_defferedHandleBoundsOrFrameChanged;
- (void)_handleBoundsOrFrameChanged;
- (void)_conditionallyInstallOrRemoveNotificationObservers;
- (void)viewDidMoveToWindow;
- (void)_dvtScrollViewCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTShadowView : NSView
{
    BOOL _isLeftShadow;
}

@property BOOL isLeftShadow; // @synthesize isLeftShadow=_isLeftShadow;
- (BOOL)_isGrayScaleColor:(id)arg1;
- (id)_deriveLineColor:(id)arg1 shouldFullyDesaturate:(BOOL)arg2;
- (void)_draw;
- (void)updateLayer;
- (id)hitTest:(struct CGPoint)arg1;
- (void)_windowKeyStateDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTSourceLanguageService : NSObject <DVTInvalidation>
{
    DVTSourceCodeLanguage *_language;
    id <DVTSourceLanguageServiceDelegate> _delegate;
    CDUnknownBlockType _contentGenerationCompletionBlock;
}

+ (id)methodOrFunctionSourceLandmarkItemForSourceLandmarkItem:(id)arg1;
+ (id)originalURLForGeneratedURL:(id)arg1;
+ (id)generatedURLForOriginalURL:(id)arg1;
+ (void)enumerateSupportedContextScopesForLanguage:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (BOOL)canGenerateContentsForURL:(id)arg1;
+ (void)initialize;
+ (Class)sourceLanguageServiceClassForLanguage:(id)arg1;
+ (id)sourceLanguageServiceForLanguage:(id)arg1 withDelegate:(id)arg2;
@property(copy) CDUnknownBlockType contentGenerationCompletionBlock; // @synthesize contentGenerationCompletionBlock=_contentGenerationCompletionBlock;
@property(nonatomic) id <DVTSourceLanguageServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) DVTSourceCodeLanguage *language; // @synthesize language=_language;
- (void).cxx_destruct;
- (long long)contextScopeAtLocation:(unsigned long long)arg1;
- (id)expandPlaceholderInRange:(struct _NSRange)arg1 suggestedText:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)suggestedExpressionSelectionRangeFromRange:(struct _NSRange)arg1;
- (id)postProcessAutoInsertClosingBraceAtLocation:(unsigned long long)arg1;
- (void)contextJumpForTypeOverCompletionAtLocation:(unsigned long long)arg1 withInsertionText:(id)arg2 typeOverCompletions:(id)arg3 pendingTypeOverCompletion:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)stringByTogglingCommentsInLineRange:(struct _NSRange)arg1;
- (id)stringByUncommentingString:(id)arg1;
- (id)stringByCommentingString:(id)arg1;
- (long long)commentCoverageInLineRange:(struct _NSRange)arg1;
- (id)blockCommentCircumfixes;
- (id)lineCommentPrefixes;
- (id)indentLineRange:(struct _NSRange)arg1 effectiveLineRange:(struct _NSRange *)arg2;
- (long long)foldableBlockDepthForLineAtLocation:(unsigned long long)arg1;
- (struct _NSRange)foldableBlockInnerRangeForLineAtLocation:(unsigned long long)arg1;
- (struct _NSRange)foldableBlockRangeForLineAtLocation:(unsigned long long)arg1;
- (id)foldableBlockInnerRangesInRange:(struct _NSRange)arg1;
- (id)foldableBlockRangesAtLocation:(unsigned long long)arg1;
- (struct _NSRange)foldableBlockRangeAtLocation:(unsigned long long)arg1;
- (unsigned long long)indentOfBlockAtLocation:(unsigned long long)arg1;
- (unsigned long long)locationOfNextMatchedDelimiterAtLocation:(unsigned long long)arg1;
- (unsigned long long)locationOfPreviousMatchedDelimiterAtLocation:(unsigned long long)arg1;
- (void)doingBatchEdit:(BOOL)arg1;
- (struct _NSRange)functionOrMethodBodyRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)functionRangeAtIndex:(unsigned long long)arg1 isDefinitionOrCall:(char *)arg2;
- (struct _NSRange)methodDefinitionRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)methodCallRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)methodOrFunctionRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)tokenizableRangeWithRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1 allowNonWords:(BOOL)arg2;
- (struct _NSRange)rangeForInvalidateAttributesInRange:(struct _NSRange)arg1;
- (void)contextDidChange:(id)arg1;
- (BOOL)shouldAutoCompleteAtLocation:(unsigned long long)arg1 autoCompleteCharacterSet:(id)arg2 proposedAutoComplete:(BOOL)arg3;
@property(readonly, copy) NSCharacterSet *autoCompleteChars;
- (BOOL)shouldShowTemporaryLinkForCharacterAtIndex:(unsigned long long)arg1 proposedRange:(struct _NSRange)arg2 effectiveRanges:(id *)arg3;
- (id)symbolNameAtCharacterIndex:(unsigned long long)arg1 nameRanges:(id *)arg2;
- (struct _NSRange)characterRangeForUSR:(id)arg1;
- (void)updateLineRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 replacedString:(id)arg3 affectedRange:(struct _NSRange *)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)primitiveInvalidate;
- (id)initWithLanguage:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface _DVTDefaultSourceLanguageServiceFormatOptions : NSObject
{
    BOOL _useTabs;
    long long _indentWidth;
    long long _tabWidth;
}

@property long long tabWidth; // @synthesize tabWidth=_tabWidth;
@property long long indentWidth; // @synthesize indentWidth=_indentWidth;
@property BOOL useTabs; // @synthesize useTabs=_useTabs;

@end

@interface DVTDefaultSourceLanguageService : DVTSourceLanguageService <DVTSourceLanguageSyntaxTypeService, DVTSourceLanguageSourceModelService, DVTSourceLandmarkItemDelegate>
{
    DVTSourceModel *_sourceModel;
    _DVTDefaultSourceLanguageServiceFormatOptions *_formatOptions;
}

+ (void)enumerateSupportedContextScopesForLanguage:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (id)_formatBlockLiteralFromDeclaration:(id)arg1;
- (id)expandPlaceholderInRange:(struct _NSRange)arg1 suggestedText:(id)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)suggestedExpressionSelectionRangeFromRange:(struct _NSRange)arg1;
- (id)postProcessAutoInsertClosingBraceAtLocation:(unsigned long long)arg1;
- (struct _NSRange)_typeOverCompletionToSkipOverAtLocation:(unsigned long long)arg1 withInsertionText:(id)arg2 typeOverCompletions:(id)arg3;
- (void)contextJumpForTypeOverCompletionAtLocation:(unsigned long long)arg1 withInsertionText:(id)arg2 typeOverCompletions:(id)arg3 pendingTypeOverCompletion:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)stringForItem:(id)arg1;
- (long long)languageIdentifierAtLocation:(unsigned long long)arg1;
- (id)commonSourceModelItemAtRange:(struct _NSRange)arg1;
- (id)sourceModelItemAtCharacterIndex:(unsigned long long)arg1;
- (id)sourceModelItemAtCharacterIndex:(unsigned long long)arg1 affinity:(unsigned long long)arg2;
- (id)sourceModelWithoutParsing;
- (id)sourceModel;
- (long long)commentCoverageInLineRange:(struct _NSRange)arg1;
- (id)indentLineRange:(struct _NSRange)arg1 effectiveLineRange:(struct _NSRange *)arg2;
- (long long)foldableBlockDepthForLineAtLocation:(unsigned long long)arg1;
- (struct _NSRange)foldableBlockInnerRangeForLineAtLocation:(unsigned long long)arg1;
- (struct _NSRange)foldableBlockRangeForLineAtLocation:(unsigned long long)arg1;
- (id)foldableBlockInnerRangesInRange:(struct _NSRange)arg1;
- (id)foldableBlockRangesAtLocation:(unsigned long long)arg1;
- (struct _NSRange)foldableBlockRangeAtLocation:(unsigned long long)arg1;
- (unsigned long long)indentOfBlockAtLocation:(unsigned long long)arg1;
- (unsigned long long)locationOfNextMatchedDelimiterAtLocation:(unsigned long long)arg1;
- (unsigned long long)locationOfPreviousMatchedDelimiterAtLocation:(unsigned long long)arg1;
- (unsigned long long)_indexOfNextSourceModelItemAtLocation:(long long)arg1 isForwards:(BOOL)arg2;
- (void)doingBatchEdit:(BOOL)arg1;
- (struct _NSRange)functionOrMethodBodyRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)functionRangeAtIndex:(unsigned long long)arg1 isDefinitionOrCall:(char *)arg2;
- (struct _NSRange)methodDefinitionRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)methodCallRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)methodOrFunctionRangeAtIndex:(unsigned long long)arg1;
- (id)landmarkItemTypeNameForReference:(void *)arg1;
- (id)landmarkItemNameForReference:(void *)arg1 nameRange:(struct _NSRange *)arg2;
- (void)_addLandmarkItemsFromItem:(id)arg1 toParent:(id)arg2 matchingType:(CDUnknownBlockType)arg3 altParent:(id)arg4 matchingAltType:(CDUnknownBlockType)arg5 visitChildren:(CDUnknownBlockType)arg6;
- (void)generateLandmarkItemsForParent:(id)arg1 matchingType:(CDUnknownBlockType)arg2 altParent:(id)arg3 matchingAltType:(CDUnknownBlockType)arg4;
- (struct _NSRange)textCompletionSession:(id)arg1 replacementRangeForSuggestedRange:(struct _NSRange)arg2;
- (long long)contextScopeAtLocation:(unsigned long long)arg1;
- (id)scopeLanguageSpecificationIdentifiersAtLocation:(unsigned long long)arg1;
- (id)functionAndMethodRanges;
- (id)commentBlockRanges;
- (BOOL)isInTokenizableCodeAtLocation:(unsigned long long)arg1;
- (BOOL)isInPlainCodeAtLocation:(unsigned long long)arg1;
- (BOOL)isInKeywordAtLocation:(unsigned long long)arg1;
- (BOOL)isIncompletionPlaceholderAtLocation:(unsigned long long)arg1;
- (BOOL)isInNumberConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInCharacterConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInIdentifierAtLocation:(unsigned long long)arg1;
- (BOOL)isInStringConstantAtLocation:(unsigned long long)arg1;
- (BOOL)isInIncludeStatementAtLocation:(unsigned long long)arg1;
- (BOOL)isInPreprocessorStatementAtLocation:(unsigned long long)arg1;
- (BOOL)isInDocCommentAtLocation:(unsigned long long)arg1;
- (BOOL)isInCommentAtLocation:(unsigned long long)arg1;
- (long long)syntaxTypeAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 context:(id)arg3;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1 allowNonWords:(BOOL)arg2;
- (BOOL)shouldAutoCompleteAtLocation:(unsigned long long)arg1 autoCompleteCharacterSet:(id)arg2 proposedAutoComplete:(BOOL)arg3;
- (id)autoCompleteChars;
- (BOOL)shouldShowTemporaryLinkForCharacterAtIndex:(unsigned long long)arg1 proposedRange:(struct _NSRange)arg2 effectiveRanges:(id *)arg3;
- (id)symbolNameAtCharacterIndex:(unsigned long long)arg1 nameRanges:(id *)arg2;
- (void)contextDidChange:(id)arg1;
- (id)initWithLanguage:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTGraphLayerSelectionDetails : NSObject
{
    NSString *_description;
    struct CGPoint _modelAnchorPoint;
}

@property(readonly) struct CGPoint modelAnchorPoint; // @synthesize modelAnchorPoint=_modelAnchorPoint;
@property(readonly) NSString *description; // @synthesize description=_description;
- (void).cxx_destruct;
- (id)initWithDescriptionString:(id)arg1 anchorPoint:(struct CGPoint)arg2;

@end

@interface DVTApplication : NSApplication
{
    DVTHashTable *_actionMonitors;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)endSheet:(id)arg1 returnCode:(long long)arg2;
- (void)endSheet:(id)arg1;
- (BOOL)presentError:(id)arg1;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (id)massageErrorForInternalMessage:(id)arg1;
- (void)errorPresentationDidCompleteWithResultCode:(long long)arg1 context:(void *)arg2;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3;
- (id)addActionMonitorWithHandlerBlock:(CDUnknownBlockType)arg1;
- (void)_enableMainThreadLatencyCheckerWithMilliSecondsThreshholdBeforeSPOD:(unsigned long long)arg1 milliSecondsThreshholdBeforeUNSPOD:(unsigned long long)arg2 milliSecondsBetweenPings:(unsigned long long)arg3;
- (void)_really_enableMainThreadLatencyCheckerWithMilliSecondsThreshholdBeforeSPOD:(unsigned long long)arg1 milliSecondsThreshholdBeforeUNSPOD:(unsigned long long)arg2 milliSecondsBetweenPings:(unsigned long long)arg3;
- (id)nextEventMatchingMask:(unsigned long long)arg1 untilDate:(id)arg2 inMode:(id)arg3 dequeue:(BOOL)arg4;
- (void)finishLaunching;

@end

@interface DVTApplicationActionMonitorToken : NSObject <DVTCancellable>
{
    CDUnknownBlockType _handlerBlock;
}

@property(readonly, copy) CDUnknownBlockType handlerBlock; // @synthesize handlerBlock=_handlerBlock;
- (void).cxx_destruct;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;
- (id)initWithHandlerBlock:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTResponderErrorSheetContext : NSObject
{
    id _outerCompletionDelegate;
    SEL _outerCompletionSelector;
    void *_outerContext;
    NSError *_error;
}

@property(retain) NSError *error; // @synthesize error=_error;
@property void *outerContext; // @synthesize outerContext=_outerContext;
@property SEL outerCompletionSelector; // @synthesize outerCompletionSelector=_outerCompletionSelector;
@property(retain) id outerCompletionDelegate; // @synthesize outerCompletionDelegate=_outerCompletionDelegate;
- (void).cxx_destruct;

@end

@interface DVTTextCompletionSession : NSObject <DVTTextCompletionDataSourceDelegate, DVTInvalidation>
{
    DVTCompletingTextView *_textView;
    DVTTextCompletionListWindowController *_listWindowController;
    DVTTextCompletionInlinePreviewController *_inlinePreviewController;
    unsigned long long _wordStartLocation;
    unsigned long long _cursorLocation;
    NSString *_filteringPrefix;
    DVTObservingToken *_readyToShowListener;
    NSArray *_allCompletions;
    NSArray *_filteredCompletionsAlpha;
    NSArray *_filteredCompletionsPriority;
    NSString *_usefulPrefix;
    long long _selectedCompletionIndex;
    DVTPerformanceMetric *_currentMetric;
    int _pendingRequestState;
    BOOL _generatingCompletions;
    BOOL _insertingFullCompletion;
    BOOL _insertingPartialCompletion;
    BOOL _hidingCompletions;
    BOOL _autoCompleteTimerExpired;
    BOOL _shownExplicitly;
    NSDictionary *_currentCompletionContext;
    NSArray *_highlyLikelyCompletions;
}

+ (void)_addToRecentCompletions:(id)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingReadyToShowCompletions;
@property(retain) NSArray *highlyLikelyCompletions; // @synthesize highlyLikelyCompletions=_highlyLikelyCompletions;
@property(readonly, nonatomic) NSDictionary *currentCompletionContext; // @synthesize currentCompletionContext=_currentCompletionContext;
@property BOOL autoCompleteTimerExpired; // @synthesize autoCompleteTimerExpired=_autoCompleteTimerExpired;
@property(nonatomic) long long selectedCompletionIndex; // @synthesize selectedCompletionIndex=_selectedCompletionIndex;
@property(copy) NSString *usefulPrefix; // @synthesize usefulPrefix=_usefulPrefix;
@property(retain) NSArray *filteredCompletionsAlpha; // @synthesize filteredCompletionsAlpha=_filteredCompletionsAlpha;
@property(retain) NSArray *allCompletions; // @synthesize allCompletions=_allCompletions;
@property(nonatomic) unsigned long long cursorLocation; // @synthesize cursorLocation=_cursorLocation;
@property(readonly) unsigned long long wordStartLocation; // @synthesize wordStartLocation=_wordStartLocation;
@property(readonly) DVTTextCompletionListWindowController *listWindowController; // @synthesize listWindowController=_listWindowController;
@property(readonly) DVTCompletingTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
@property(readonly) NSString *debugStateString;
- (void)primitiveInvalidate;
- (BOOL)showInfoPanelForSelectedCompletion;
- (struct _NSRange)replacementRangeForSuggestedRange:(struct _NSRange)arg1;
- (id)_prefixForCurrentLocation;
- (struct _NSRange)rangeOfFirstWordInString:(id)arg1;
- (void)completionsChangedForDataSource:(id)arg1;
- (long long)_indexOfItem:(id)arg1 inAlphabeticalList:(id)arg2;
- (id)_commonPrefixForItems:(id)arg1;
- (id)_usefulPartialCompletionPrefixForItems:(id)arg1 selectedIndex:(unsigned long long)arg2 filteringPrefix:(id)arg3;
- (unsigned long long)_bestMatchInSortedArray:(id)arg1 usingPrefix:(id)arg2 highlyLikelyCompletions:(id)arg3;
- (long long)_priorityBucketForItem:(id)arg1 usingPrefix:(id)arg2;
- (double)_intrinsicPriorityForItem:(id)arg1 usingPrefix:(id)arg2;
- (void)_setFilteringPrefix:(id)arg1 forceFilter:(BOOL)arg2;
- (void)_ensureCompletionsUpToDate;
- (void)_endCodeCompletionStatistic:(double)arg1;
- (id)attributesForCompletionAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (BOOL)_gotUsefulCompletionsToShowInList:(id)arg1;
- (BOOL)_shouldSetCursorLocation:(unsigned long long)arg1;
- (BOOL)shouldBeDismissedForSelectionChange;
- (BOOL)_shouldAcceptPartialCompletionForCursorLocation:(unsigned long long)arg1;
- (BOOL)shouldAutoSuggestForTextChange;
- (void)_scrollMayHaveFinished;
- (void)handleTextViewDidScroll;
- (BOOL)handleSelectNextPlaceholder;
- (BOOL)handleMoveToEndOfDocument;
- (BOOL)handleMoveToBeginningOfDocument;
- (BOOL)handlePageDown;
- (BOOL)handlePageUp;
- (BOOL)handleMoveDown;
- (BOOL)handleMoveUp;
- (BOOL)handleDeleteBackward;
- (BOOL)handleTextViewShouldSetMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (BOOL)handleTextViewShouldChangeTextInRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (BOOL)handleInsertText:(id)arg1;
- (void)selectPreviousCompletionByPriority;
- (void)selectNextCompletionByPriority;
- (void)_selectNextPreviousByPriority:(BOOL)arg1;
- (double)_priorityFactorForItem:(id)arg1;
- (void)selectPreviousCompletionAlpha;
- (void)selectNextCompletionAlpha;
- (BOOL)_insertCurrentCompletionNameCharacters:(unsigned long long)arg1;
- (BOOL)insertUsefulPrefix;
- (BOOL)insertCurrentCompletion;
- (void)hideCompletionsWithReason:(int)arg1;
- (void)showTemporarilyHiddenCompletionsForReasonMask:(unsigned long long)arg1;
- (void)showCompletionsExplicitly:(BOOL)arg1;
- (void)_autoCompletionWaitIsOver;
@property(readonly) BOOL readyToShowCompletions;
- (id)_inlinePreviewController;
- (id)_listWindowController;
- (void)setPendingRequestState:(int)arg1;
@property(readonly, getter=isShowingCompletions) BOOL showingCompletions;
- (id)initWithTextView:(id)arg1 atLocation:(unsigned long long)arg2 cursorLocation:(unsigned long long)arg3;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTTextUndoMultiEdits : NSObject
{
    struct _NSRange _affectedRange;
    NSUndoManager *_undoManager;
    NSLayoutManager *_layoutManager;
    struct _NSRange _replacementRange;
}

@property struct _NSRange replacementRange; // @synthesize replacementRange=_replacementRange;
@property struct _NSRange affectedRange; // @synthesize affectedRange=_affectedRange;
@property(readonly) __weak NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
- (void).cxx_destruct;
@property(readonly) BOOL isSupportingCoalescing;
- (void)undoRedo:(id)arg1;
- (id)firstTextViewForTextStorage:(id)arg1;
- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;

@end

@interface DVTBasicFindBar : DVTFindBar
{
    long long _foundResultCount;
}

- (void)updateStatusInformingDelegate:(BOOL)arg1;
- (void)performFindHighlightingFirstResult:(BOOL)arg1 informDelegate:(BOOL)arg2;
- (void)findBarLostFocus;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (BOOL)supportsCaseInsensitiveMatch;
- (BOOL)supportsTextMatchStyle:(int)arg1;
- (BOOL)supportsFindBarMode:(unsigned long long)arg1;
- (BOOL)supportsFindBarType:(unsigned long long)arg1;
@property(retain, nonatomic) id findObject;

@end

@interface DVTColorPickerChooserViewColorSwatch : NSView
{
    NSColor *color;
    BOOL highlighted;
    id target;
    SEL action;
}

@property(retain) NSColor *color; // @synthesize color;
- (void).cxx_destruct;
- (id)description;
- (void)drawRect:(struct CGRect)arg1;
@property BOOL highlighted;
- (void)mouseUp:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (id)initWithColor:(id)arg1 andFrame:(struct CGRect)arg2;
- (void)setupTrackingArea;
- (BOOL)isFlipped;

@end

@interface DVTColorPickerChooserContentView : NSView
{
    NSArray *swatchViews;
    NSColor *clickedColor;
    id target;
    SEL action;
}

- (void).cxx_destruct;
- (BOOL)isFlipped;
- (id)clickedColor;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)userChooseSwatch:(id)arg1;
- (id)initWithColors:(id)arg1 andFrame:(struct CGRect)arg2;

@end

@interface DVTColorPickerChooserView : NSView
{
    NSMutableArray *colorsArray;
    DVTColorPickerChooserContentView *contentView;
    NSColor *clickedColor;
    id target;
    SEL action;
}

+ (id)defaultLabel;
- (void).cxx_destruct;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)userChooseSwatch:(id)arg1;
- (id)clickedColor;
- (BOOL)isFlipped;
- (id)initWithTitle:(id)arg1 andColors:(id)arg2;
- (id)attributedTitleForTitle:(id)arg1;
- (id)titleAttributes;
- (id)titleFont;

@end

@interface DVTTabbedWindowTabViewItem : NSTabViewItem <DVTInvalidation>
{
    DVTObservingToken *_tabLabelObservingToken;
    BOOL _isEditingTabName;
    BOOL _tabNameEditable;
    DVTViewController<DVTTabbedWindowTabContentControlling> *_tabContentController;
    DVTBarBackground *_tabBarView;
    NSButton *_tabButton;
    NSString *_searchFieldText;
}

+ (void)initialize;
@property(copy, nonatomic) NSString *searchFieldText; // @synthesize searchFieldText=_searchFieldText;
@property(getter=isTabNameEditable) BOOL tabNameEditable; // @synthesize tabNameEditable=_tabNameEditable;
@property(nonatomic) BOOL isEditingTabName; // @synthesize isEditingTabName=_isEditingTabName;
@property(nonatomic) __weak NSButton *tabButton; // @synthesize tabButton=_tabButton;
@property(nonatomic) __weak DVTBarBackground *tabBarView; // @synthesize tabBarView=_tabBarView;
@property(retain, nonatomic) DVTViewController<DVTTabbedWindowTabContentControlling> *tabContentController; // @synthesize tabContentController=_tabContentController;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)_computeTabLabel;
- (void)updateLabelSoon;
- (void)updateLabelNow;
@property(readonly) BOOL canBeClosed;
- (void)setLabel:(id)arg1;
- (void)setView:(id)arg1;
- (void)setEditingTabName:(BOOL)arg1;
- (id)initWithTabBarView:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTURLPreviewViewController : NSViewController <QLPreviewViewDelegate>
{
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    NSURL *_url;
    id <QLPreviewViewDelegate> _delegate;
    QLPreviewView *_qlPreviewView;
}

@property(retain) QLPreviewView *qlPreviewView; // @synthesize qlPreviewView=_qlPreviewView;
@property __weak id <QLPreviewViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)previewView:(id)arg1 didLoadPreviewItem:(id)arg2;
- (id)existingURLToOpen;
- (void)dealloc;
- (id)initWithDefaultNibName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTToolTipManager : NSObject
{
    DVTMapTable *registeredViews;
    id eventMonitor;
    NSTimer *timer;
    long long enabledBlocks;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)mouseRested:(id)arg1;
- (void)unregisterViewForToolTips:(id)arg1;
- (void)registerViewForToolTips:(id)arg1 delegate:(id)arg2;
- (id)allViews;
- (id)delegateForView:(id)arg1;
- (void)monitorEvent:(id)arg1;
- (void)scheduleMouseRested;
- (void)unscheduleMouseRested;
- (void)enableTooltips;
- (void)disableTooltips;
- (BOOL)tooltipsAreEnabled;
- (id)init;

@end

@interface DVTComparisonScrollCoordinator : NSObject <NSScrollerImpPairDelegate, DVTSourceTextScrollViewDelegate, DVTComparisonScrollContentAreaDelegate>
{
    DVTSourceTextScrollView *_leftScrollView;
    struct CGRect _leftContentViewPreviousBounds;
    DVTSourceTextScrollView *_rightScrollView;
    struct CGRect _rightContentViewPreviousBounds;
    DVTComparisonScroller *_globalScroller;
    NSScrollerImpPair *_scrollerImpPair;
    DVTBorderedView *_contentAreaView;
    NSArray *_diffDescriptors;
    NSIndexSet *_modifiedDiffDescriptorIndexes;
    id _leftContentViewBoundsObserver;
    id _rightContentViewBoundsObserver;
    id _leftContentViewFrameObserver;
    id _rightContentViewFrameObserver;
    id _fontAndColorThemeObserver;
    BOOL _recursing;
    BOOL _computingTotalScrollSize;
    BOOL _isRevertingState;
}

+ (id)logAspect;
+ (void)initialize;
@property(retain) DVTBorderedView *contentAreaView; // @synthesize contentAreaView=_contentAreaView;
@property(retain) NSIndexSet *modifiedDiffDescriptorIndexes; // @synthesize modifiedDiffDescriptorIndexes=_modifiedDiffDescriptorIndexes;
@property(copy) NSArray *diffDescriptors; // @synthesize diffDescriptors=_diffDescriptors;
@property(retain, nonatomic) DVTComparisonScroller *globalScroller; // @synthesize globalScroller=_globalScroller;
@property(retain, nonatomic) DVTSourceTextScrollView *rightScrollView; // @synthesize rightScrollView=_rightScrollView;
@property(retain, nonatomic) DVTSourceTextScrollView *leftScrollView; // @synthesize leftScrollView=_leftScrollView;
- (void).cxx_destruct;
- (void)scrollerImpPair:(id)arg1 updateScrollerStyleForNewRecommendedScrollerStyle:(long long)arg2;
- (void)scrollerImpPair:(id)arg1 setContentAreaNeedsDisplayInRect:(struct CGRect)arg2;
- (struct CGPoint)scrollerImpPair:(id)arg1 convertContentPoint:(struct CGPoint)arg2 toScrollerImp:(id)arg3;
- (struct CGPoint)mouseLocationInContentAreaForScrollerImpPair:(id)arg1;
- (BOOL)inLiveResizeForScrollerImpPair:(id)arg1;
- (struct CGRect)contentAreaRectForScrollerImpPair:(id)arg1;
- (void)contentAreaWindowOrderedOut;
- (void)contentAreaWindowOrderedIn;
- (void)contentAreaMovedToNewWindow;
- (void)contentAreaRemovedFromSuperview;
- (void)contentAreaDidHide;
- (void)mouseExitedContentArea;
- (void)mouseMovedInContentArea;
- (void)mouseEnteredContentArea;
- (void)contentAreaWillDraw;
- (void)updateDiffMarks;
- (void)_doUpdateDiffMarks;
- (void)notifyScroll:(double)arg1;
- (void)notifyScroll:(double)arg1 leftScrollView:(BOOL)arg2 rightScrollView:(BOOL)arg3;
- (void)computeTotalScrollSize;
- (double)getTargetPositionFromSide:(long long)arg1;
- (double)getTargetPositionFromRight:(double)arg1 ensureLayout:(BOOL)arg2;
- (double)getTargetPositionFromLeft:(double)arg1 ensureLayout:(BOOL)arg2;
- (void)notifyScrollAction:(id)arg1;
- (void)rescindObservations;
- (void)setupObservations;
- (void)_doSetupObservations;
- (BOOL)didRevertState;
- (void)willStartStateRestoration;
- (id)scrollView:(id)arg1 pointInVisibleScroller:(struct CGPoint)arg2;
- (void)scrollViewDidSetFrameSize:(id)arg1;
- (void)scrollViewDidEndLiveResize:(id)arg1;
- (void)scrollViewWillStartLiveResize:(id)arg1;
- (BOOL)scrollView:(id)arg1 shouldHandleScrollWheelEvent:(id)arg2;
- (void)scrollWheel:(id)arg1;
@property(readonly) DVTSourceTextView *rightTextView;
@property(readonly) DVTSourceTextView *leftTextView;
- (void)updateScrollerKnobStyle;
- (void)updateBoundSelectedIndex;
- (void)updateBoundContentArray;
- (id)dvtExtraBindings;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTableView : NSTableView <DVTProgressIndicatorProvidingView>
{
    int _emptyContentStringStyle;
    NSString *_emptyContentString;
    NSTextField *_emptyContentTextField;
    unsigned long long _dvt_groupRowStyle;
    NSIndexSet *_draggedRows;
    NSEvent *_event;
    id _progressIndicatorsByItem;
    struct {
        unsigned int allowsSizingShorterThanClipView:1;
        unsigned int reserved:7;
    } _dvtTVFlags;
    BOOL _showAlternatingRowBackgroundColorsWithContents;
    unsigned long long _gridLineStyleBeforeEmptyContentStringShown;
    BOOL _skipGridLinesOnLastRow;
    BOOL _drawsGridLinesForEmptyContent;
    double _gridLineInset;
}

@property double gridLineInset; // @synthesize gridLineInset=_gridLineInset;
@property BOOL drawsGridLinesForEmptyContent; // @synthesize drawsGridLinesForEmptyContent=_drawsGridLinesForEmptyContent;
@property BOOL skipGridLinesOnLastRow; // @synthesize skipGridLinesOnLastRow=_skipGridLinesOnLastRow;
@property int emptyContentStringStyle; // @synthesize emptyContentStringStyle=_emptyContentStringStyle;
@property(copy, nonatomic) NSString *emptyContentString; // @synthesize emptyContentString=_emptyContentString;
@property(retain) NSEvent *event; // @synthesize event=_event;
@property(copy) NSIndexSet *draggedRows; // @synthesize draggedRows=_draggedRows;
@property unsigned long long dvt_groupRowStyle; // @synthesize dvt_groupRowStyle=_dvt_groupRowStyle;
- (void).cxx_destruct;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)_drawBackgroundForGroupRow:(long long)arg1 clipRect:(struct CGRect)arg2 isButtedUpRow:(BOOL)arg3;
- (id)progressIndicatorForItem:(id)arg1 createIfNecessary:(BOOL)arg2 progressIndicatorStyle:(unsigned long long)arg3;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)keyDown:(id)arg1;
@property(readonly) NSIndexSet *contextMenuSelectedRowIndexes;
- (id)clickedRowIndexes;
- (void)viewWillDraw;
- (void)_showEmptyContentString;
- (void)_hideEmptyContentString;
- (struct CGSize)_adjustFrameSizeToFitSuperview:(struct CGSize)arg1;
@property BOOL allowsSizingShorterThanClipView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dvt_commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTableRowView : NSTableRowView
{
}

- (BOOL)isOpaque;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (long long)groupRowStyle2;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (struct CGRect)separatorRectForTable:(id)arg1;

@end

@interface DVTImageAndTextColumn : NSTableColumn
{
    DVTMapTable *_progressIndicators;
    id _outlineViewCollapseObservation;
    id _outlineViewExpandObservation;
    struct {
        unsigned int _tableViewIsOutlineView:1;
        unsigned int _reserved:31;
    } _imageAndTextColumnFlags;
}

+ (void)initialize;
- (void).cxx_destruct;
- (id)dataCellForRow:(long long)arg1;
- (id)_progressIndicatorWithKeyPath:(id)arg1 ofItem:(id)arg2 forNode:(id)arg3;
- (id)_configuredSpinningProgressIndicator;
- (void)updateBoundProgress;
- (void)updateBoundImage;
- (id)dvtExtraBindings;
- (void)awakeFromNib;
- (void)setTableView:(id)arg1;
- (void)_stopObservingExpandAndCollapseOfOutlineView;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (void)setupDataCell;

@end

@interface DVTStepperTextFieldFormatter : NSNumberFormatter
{
    NSFormatter *_wrappedFormatter;
    NSString *_prefix;
    NSString *_suffix;
}

+ (id)_labelAttributes;
@property(copy) NSString *suffix; // @synthesize suffix=_suffix;
@property(copy) NSString *prefix; // @synthesize prefix=_prefix;
@property(copy) NSFormatter *wrappedFormatter; // @synthesize wrappedFormatter=_wrappedFormatter;
- (void).cxx_destruct;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (id)init;

@end

@interface DVTHelperApplication : NSObject
{
    DVTFilePath *_bundlePath;
    NSString *_bundleIdentifier;
    NSString *_localizedName;
    NSRunningApplication *_runningApplication;
}

+ (id)moreHelperApplicationsURL;
+ (id)availableHelperApplications;
+ (id)_helperAppsContentForKey:(id)arg1;
+ (id)helperApplicationWithIdentifier:(id)arg1;
+ (void)initialize;
@property(readonly, copy) NSString *localizedName; // @synthesize localizedName=_localizedName;
@property(copy) DVTFilePath *bundlePath; // @synthesize bundlePath=_bundlePath;
- (void).cxx_destruct;
- (BOOL)launchAndActivateHelperApplication:(id *)arg1;
@property(readonly) NSRunningApplication *runningApplication;
- (id)initWithBundlePath:(id)arg1;
@property(readonly, copy) NSURL *bundleURL;

@end

@interface DVTUndoManager : NSUndoManager <DVTInvalidation>
{
    char *_delegateDescription;
    NSMutableArray *_undoGroupingBacktraces;
    long long _beginCount;
    long long _endCount;
    BOOL _willAutomaticallyUndoNextChangeGroup;
    void *_keepSelfAliveUntilInvalidationRef;
    id <DVTUndoManagerDelegate> _delegate;
}

+ (void)initialize;
@property(retain, nonatomic) id <DVTUndoManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) BOOL willAutomaticallyUndoNextChangeGroup; // @synthesize willAutomaticallyUndoNextChangeGroup=_willAutomaticallyUndoNextChangeGroup;
- (void).cxx_destruct;
- (void)undoNestedGroup;
- (void)redo;
- (void)undo;
- (id)prepareWithInvocationTarget:(id)arg1;
- (void)registerUndoWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)enableUndoRegistration;
- (void)disableUndoRegistration;
- (void)primitiveInvalidate;
- (void)endUndoGrouping;
- (void)beginUndoGrouping;
- (void)removeAllActions;
- (id)_undoGroupingBacktraces;
- (void)_clearUndoGroupingBacktraces;
- (void)_setEndCount:(long long)arg1;
- (long long)_endCount;
- (void)_setBeginCount:(long long)arg1;
- (long long)_beginCount;
- (void)automaticallyUndoNextChangeGroup;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTSharedFindState : NSObject
{
    NSAttributedString *_findAttributedString;
    NSAttributedString *_replaceAttributedString;
}

+ (id)keyPathsForValuesAffectingReplaceString;
+ (id)keyPathsForValuesAffectingFindString;
+ (id)sharedFindState;
+ (void)_setFindPasteboardStringValue:(id)arg1;
+ (id)_findPasteboardStringValue;
+ (void)_setFindPasteboardAttributedStringValue:(id)arg1;
+ (id)_findPasteboardAttributedStringValue;
- (void).cxx_destruct;
@property(copy) NSString *replaceString;
@property(copy, nonatomic) NSAttributedString *replaceAttributedString;
@property(copy) NSAttributedString *findAttributedString;
@property(copy) NSString *findString;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)dealloc;
- (id)initWithFindAttributedString:(id)arg1;

@end

@interface DVTDeviceSummaryAppContainerSheetController : DVTPagingSheetWindowController <NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    NSArray *_containerItemDictionaries;
    id <DVTDeviceApplication_KitSupport> _application;
    DVTOutlineView *_containerOutline;
}

@property(retain) DVTOutlineView *containerOutline; // @synthesize containerOutline=_containerOutline;
@property(readonly) id <DVTDeviceApplication_KitSupport> application; // @synthesize application=_application;
- (void).cxx_destruct;
- (void)_updateContainerItemDictionaries;
- (id)_recursiveContainerItemDictionariesForItems:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)done:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithApplication:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _DVTFileMergeDiffVitalStats : NSObject
{
    long long _lineNumber;
    long long _numLines;
    long long _numAddLines;
    int _operation;
}

@property int operation; // @synthesize operation=_operation;
@property long long numAddLines; // @synthesize numAddLines=_numAddLines;
@property long long numLines; // @synthesize numLines=_numLines;
@property long long lineNumber; // @synthesize lineNumber=_lineNumber;

@end

@interface DVTButtonTextField : NSTextField
{
    BOOL _resetingCursorRects;
}

+ (void)setCellClass:(Class)arg1;
+ (Class)cellClass;
+ (void)initialize;
- (void)resetCursorRects;
- (struct CGRect)visibleRect;
- (void)mouseDown:(id)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (id)highlightImage;
- (void)setHighlightImage:(id)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (void)setButtonAction:(SEL)arg1;
- (SEL)buttonAction;
- (void)setButtonTarget:(id)arg1;
- (id)buttonTarget;

@end

@interface DVTFlatProgressIndicator : NSProgressIndicator
{
    double _startAnimationTime;
    NSImage *_indeterminateProgressBackground;
    NSColor *_fillAndStrokeColor;
    NSBezierPath *_progressIndicatorPath;
}

@property(retain, nonatomic) NSBezierPath *progressIndicatorPath; // @synthesize progressIndicatorPath=_progressIndicatorPath;
@property(retain, nonatomic) NSColor *fillAndStrokeColor; // @synthesize fillAndStrokeColor=_fillAndStrokeColor;
@property(retain, nonatomic) NSImage *indeterminateProgressBackground; // @synthesize indeterminateProgressBackground=_indeterminateProgressBackground;
- (void).cxx_destruct;
- (id)_stripeOfSize:(struct CGSize)arg1;
@property(readonly) double indeterminateOffset;
@property(readonly) struct CGRect determinateProgressRect;
- (void)drawRect:(struct CGRect)arg1;
- (void)startAnimation:(id)arg1;
- (void)setIndeterminate:(BOOL)arg1;
- (void)_resetSizeDependentProperties;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;

@end

@interface DVTScopeBarButton : NSButton
{
}

+ (Class)cellClass;

@end

@interface DVTScopeBarButtonCell : NSButtonCell
{
    BOOL _rollover;
}

- (double)_roundedRectRadius;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (long long)backgroundStyle;
- (long long)nextState;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_dvt_scopeBarButtonCommonInit;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface DVTFindPatternFieldEditor : DVTSearchFieldTextEditor
{
}

+ (id)findPatternFieldEditorForWindow:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (id)readablePasteboardTypes;
- (id)writablePasteboardTypes;
- (id)acceptableDragTypes;
- (BOOL)usesFontPanel;
- (void)setUsesFontPanel:(BOOL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTFindPatternComboBox : NSComboBox <DVTFindPatternField>
{
    id <DVTFindPatternManager> findPatternManager;
    DVTFindPatternAttachmentCell *selectedAttachment;
}

@property id <DVTFindPatternManager> findPatternManager; // @synthesize findPatternManager;
- (void).cxx_destruct;
- (void)_selectedFindPattern:(id)arg1;
- (id)menuForFindPatternAttachment:(id)arg1;
- (id)_uniquePatterns;
- (id)replacementExpression;
- (id)regularExpression;
- (id)findPatternArray;
- (BOOL)hasFindPattern;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (void)textDidChange:(id)arg1;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)removeFindPattern:(id)arg1;
- (id)_rangesOfFindPattern:(id)arg1;
- (void)setFindPatternPropertyList:(id)arg1;
- (id)findPatternPropertyList;
- (id)plainTextValue;
- (void)setFindPatternArray:(id)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (void)_uniqueFindPatternsInAttributedStringAttachments:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)_updateFindPatternsWithNewPatterns:(id)arg1;
- (void)_updateReplacePatternsWithNewPatterns:(id)arg1;
- (void)_invalidateLayout;
- (void)_insertFindPattern:(id)arg1;
- (void)insertNewFindPattern:(id)arg1;
- (void)_insertFindPatternAttachment:(id)arg1;
- (id)_findPatternAttachmentForFindPattern:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_eventIsInsertPatternKeyEquivalent:(id)arg1;
- (id)_fieldEditor;
- (BOOL)_isFindField;
- (id)replaceField;
- (id)findField;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFindPatternTextField : NSTextField <DVTFindPatternField>
{
    id <DVTFindPatternManager> findPatternManager;
    DVTFindPatternAttachmentCell *selectedAttachment;
}

@property id <DVTFindPatternManager> findPatternManager; // @synthesize findPatternManager;
- (void).cxx_destruct;
- (void)_selectedFindPattern:(id)arg1;
- (id)menuForFindPatternAttachment:(id)arg1;
- (id)_uniquePatterns;
- (id)replacementExpression;
- (id)regularExpression;
- (id)findPatternArray;
- (BOOL)hasFindPattern;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (void)textDidChange:(id)arg1;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)removeFindPattern:(id)arg1;
- (id)_rangesOfFindPattern:(id)arg1;
- (void)setFindPatternPropertyList:(id)arg1;
- (id)findPatternPropertyList;
- (id)plainTextValue;
- (void)setFindPatternArray:(id)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (void)_uniqueFindPatternsInAttributedStringAttachments:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)_updateFindPatternsWithNewPatterns:(id)arg1;
- (void)_updateReplacePatternsWithNewPatterns:(id)arg1;
- (void)_invalidateLayout;
- (void)_insertFindPattern:(id)arg1;
- (void)insertNewFindPattern:(id)arg1;
- (void)_insertFindPatternAttachment:(id)arg1;
- (id)_findPatternAttachmentForFindPattern:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_eventIsInsertPatternKeyEquivalent:(id)arg1;
- (id)_fieldEditor;
- (BOOL)_isFindField;
- (id)replaceField;
- (id)findField;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFindPatternSearchField : DVTSearchField <DVTFindPatternField>
{
    id <DVTFindPatternManager> findPatternManager;
    DVTFindPatternAttachmentCell *selectedAttachment;
}

@property id <DVTFindPatternManager> findPatternManager; // @synthesize findPatternManager;
- (void).cxx_destruct;
- (void)_selectedFindPattern:(id)arg1;
- (id)menuForFindPatternAttachment:(id)arg1;
- (id)_uniquePatterns;
- (id)replacementExpression;
- (id)regularExpression;
- (id)findPatternArray;
- (BOOL)hasFindPattern;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (void)textDidChange:(id)arg1;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)removeFindPattern:(id)arg1;
- (id)_rangesOfFindPattern:(id)arg1;
- (void)setFindPatternPropertyList:(id)arg1;
- (id)findPatternPropertyList;
- (id)plainTextValue;
- (void)setFindPatternArray:(id)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (void)_uniqueFindPatternsInAttributedStringAttachments:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)_updateFindPatternsWithNewPatterns:(id)arg1;
- (void)_updateReplacePatternsWithNewPatterns:(id)arg1;
- (void)_invalidateLayout;
- (void)_insertFindPattern:(id)arg1;
- (void)insertNewFindPattern:(id)arg1;
- (void)_insertFindPatternAttachment:(id)arg1;
- (id)_findPatternAttachmentForFindPattern:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_eventIsInsertPatternKeyEquivalent:(id)arg1;
- (id)_fieldEditor;
- (BOOL)_isFindField;
- (id)replaceField;
- (id)findField;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTDeviceSummaryAppsViewController : DVTViewController <DVTTableViewDelegate, NSTableViewDataSource, NSOpenSavePanelDelegate>
{
    NSArray *_appInfo;
    DVTObservingToken *_appsObservingToken;
    DVTDeviceSummaryAppContainerSheetController *_appContainerWindowController;
    BOOL _disableDeviceTriggeredUpdates;
    DVTDevice<DVTDeviceApplicationInstaller> *_device;
    DVTTableView *_appsTableView;
    DVTBorderedView *_appsTableFooterView;
    DVTGradientImageButton *_addAppButton;
    DVTGradientImageButton *_deleteAppButton;
    DVTGradientImagePopUpButton *_gearAppButton;
    NSBox *_appsSectionSeparator;
}

@property(retain) NSBox *appsSectionSeparator; // @synthesize appsSectionSeparator=_appsSectionSeparator;
@property(retain) DVTGradientImagePopUpButton *gearAppButton; // @synthesize gearAppButton=_gearAppButton;
@property(retain) DVTGradientImageButton *deleteAppButton; // @synthesize deleteAppButton=_deleteAppButton;
@property(retain) DVTGradientImageButton *addAppButton; // @synthesize addAppButton=_addAppButton;
@property(retain) DVTBorderedView *appsTableFooterView; // @synthesize appsTableFooterView=_appsTableFooterView;
@property(retain) DVTTableView *appsTableView; // @synthesize appsTableView=_appsTableView;
@property(retain, nonatomic) DVTDevice<DVTDeviceApplicationInstaller> *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)_refreshAppsTable;
- (void)_updateAppsTableFromDevice;
- (void)replaceContainer:(id)arg1;
- (void)downloadContainer:(id)arg1;
- (void)showContainer:(id)arg1;
- (void)deleteApplications:(id)arg1;
- (void)installApplications:(id)arg1;
- (void)addApplication:(id)arg1;
- (void)_asyncPresentError:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)loadView;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTBindingInfo : NSObject
{
    DVTWeakInterposer *_observedObject_dvtWeakInterposer;
    NSString *_observedKeyPath;
    NSDictionary *_bindingOptions;
    NSString *_modelKeyPath;
}

@property(readonly, copy) NSDictionary *bindingOptions; // @synthesize bindingOptions=_bindingOptions;
@property(readonly, copy) NSString *observedKeyPath; // @synthesize observedKeyPath=_observedKeyPath;
- (void).cxx_destruct;
- (id)_modelKeyPath;
- (id)_infoDictionary;
- (id)initWithObservedObject:(id)arg1 observedKeyPath:(id)arg2 bindingOptions:(id)arg3;
@property __weak id observedObject;

@end

@interface DVTBindingHelperBindingInfo : DVTBindingInfo
{
    struct objc_method *_instanceMethodForUpdate;
}

@property struct objc_method *instanceMethodForUpdate; // @synthesize instanceMethodForUpdate=_instanceMethodForUpdate;
- (id)description;
- (id)initWithObservedObject:(id)arg1 observedKeyPath:(id)arg2 bindingOptions:(id)arg3 instanceMethodForUpdate:(struct objc_method *)arg4;

@end

@interface DVTBindingHelper : NSObject
{
    DVTWeakInterposer *_owner_dvtWeakInterposer;
    NSMutableDictionary *_bindingInfo;
    NSString *_ignoredBinding;
}

+ (id)dvtValueTransformerFromOptions:(id)arg1;
+ (BOOL)isRunningInInterfaceBuilder;
+ (void)setIsRunningInInterfaceBuilder;
+ (void)initialize;
- (void).cxx_destruct;
- (void)rebind:(id)arg1;
- (id)unbindForKeyPathsBeginningWithPrefix:(id)arg1;
- (void)didEndEditingForBinding:(id)arg1;
- (void)willBeginEditingForBinding:(id)arg1;
- (BOOL)validateValue:(id *)arg1 forBinding:(id)arg2 error:(id *)arg3;
- (id)modelKeyPathForBinding:(id)arg1;
- (id)referenceDataForBinding:(id)arg1;
- (void)setValue:(id)arg1 forBinding:(id)arg2;
- (id)infoForBinding:(id)arg1;
- (id)bindingHelperInfoForBinding:(id)arg1;
- (BOOL)isBindingBound:(id)arg1;
- (id)valueForBinding:(id)arg1;
- (id)primitiveValueForBinding:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (struct objc_method *)_methodForUpdateFromBinding:(id)arg1;
- (id)description;
- (void)unbindAll;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;
- (void)setOwner:(id)arg1;
- (id)owner;

@end

@interface DVTBindingToken : NSObject <DVTCancellable>
{
    CDUnknownBlockType _cancellationBlock;
    void *_keepSelfAliveUntilCancellationRef;
    DVTStackBacktrace *_creationBacktrace;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)dealloc;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)initWithCancellationBlock:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTObjectBindingUtilities : NSObject
{
}

+ (BOOL)object:(id)arg1 extraBindingsContainsBinding:(id)arg2;
+ (void)initialize;
- (id)dvtGeneric_infoForBinding:(id)arg1;
- (void)dvtGeneric_unbind:(id)arg1;
- (void)dvtGeneric_bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)dvt_exposedBindings;

@end

@interface DVTTextCompletionImportAbsolutePathStrategy : DVTTextCompletionStrategy
{
}

- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 highlyLikelyCompletionItems:(id *)arg3 areDefinitive:(char *)arg4;
- (id)_completionItemsFromAbsolutePath:(id)arg1;

@end

@interface DVTDynamicTableRowProgressIndicatorView : DVTBorderedView
{
    NSProgressIndicator *_progressIndicator;
}

+ (id)dynamicTableRowProgressIndicatorView;
@property(retain) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
- (void).cxx_destruct;

@end

@interface DVTAccessoryViewAnnotation : DVTTextAnnotation
{
    DVTViewController *_viewController;
    Class _controllerClass;
}

- (void).cxx_destruct;
@property(readonly) NSView *view;
@property(readonly) DVTViewController *viewController;
@property(readonly, getter=isViewLoaded) BOOL viewLoaded;
- (id)initWithViewControllerClass:(Class)arg1;

@end

@interface DVTRangeViewController : NSViewController
{
    DVTBorderedView *_borderedView;
    DVTRangeView *_rangeView;
    NSView *_locationContainerView;
    NSView *_endLocationContainerView;
    NSTextField *_locationTextField;
    NSTextField *_lengthTextField;
    NSTextField *_endLocationTextField;
    struct _NSRange _range;
}

@property __weak NSTextField *endLocationTextField; // @synthesize endLocationTextField=_endLocationTextField;
@property __weak NSTextField *lengthTextField; // @synthesize lengthTextField=_lengthTextField;
@property __weak NSTextField *locationTextField; // @synthesize locationTextField=_locationTextField;
@property __weak NSView *endLocationContainerView; // @synthesize endLocationContainerView=_endLocationContainerView;
@property __weak NSView *locationContainerView; // @synthesize locationContainerView=_locationContainerView;
@property __weak DVTRangeView *rangeView; // @synthesize rangeView=_rangeView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (void).cxx_destruct;
- (void)_udpateFromRange;
- (void)loadView;
- (id)initWithDefaultNibName;

@end

@interface DVTRangeView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTTileViewItem : NSObject <NSCopying, NSCoding>
{
    NSMutableData *_archive;
    DVTTileView *_layoutItemOwnerView;
    id _representedObject;
    NSView *_view;
    NSString *_title;
    struct CGRect _targetViewFrameRect;
    struct CGRect _appliedViewFrameRect;
    unsigned long long _containerReferenceCounter;
    struct __tileItemFlags {
        unsigned int _selected:1;
        unsigned int _clicked:1;
        unsigned int _removalNeeded:1;
        unsigned int _suppressSelectionChangeNotification:1;
        unsigned int _reservedAnimationContainer:28;
    } _layoutItemFlags;
}

- (void).cxx_destruct;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (id)description;
- (void)_finishShowAnimation;
- (void)_finishHideAnimation;
- (void)_applyTargetConfigurationWithAnimationMoveAndResize:(id *)arg1 show:(id *)arg2 hide:(id *)arg3;
- (void)_applyTargetConfigurationWithoutAnimation;
- (void)toggleSelected:(id)arg1;
- (BOOL)isSelected;
- (void)setSelected:(BOOL)arg1;
- (void)_setSelectedWithoutNotification:(BOOL)arg1;
- (struct CGRect)_targetViewFrameRect;
- (void)_setTargetViewFrameRect:(struct CGRect)arg1;
- (BOOL)_isRemovalNeeded;
- (void)_setRemovalNeeded:(BOOL)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)view;
- (void)setView:(id)arg1;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (id)layoutView;
- (void)_setLayoutItemOwnerView:(id)arg1;
- (void)_decreaseContainerReferenceCounter;
- (void)_increaseContainerReferenceCounter;
- (BOOL)isEqual:(id)arg1;
- (void)_releaseResources;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_copyConnectionsOfView:(id)arg1 referenceObject:(id)arg2 toView:(id)arg3 referenceObject:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface DVTTileView : NSView <DVTFirstResponderShowingView, NSAnimationDelegate>
{
    DVTTypeCompletionHandler *_typeCompletionHandler;
    id <DVTTileViewDelegate> _delegate;
    id _clickedContentObject;
    NSArray *_content;
    NSIndexSet *selectionIndexes;
    DVTTileViewItem *_layoutItemPrototype;
    struct CGSize _minGridSize;
    struct CGSize _maxGridSize;
    unsigned long long _minGridRows;
    unsigned long long _maxGridRows;
    unsigned long long _minGridColumns;
    unsigned long long _maxGridColumns;
    NSArray *_backgroundColors;
    struct __tileViewanimationContainerFlags {
        unsigned int _selectable:1;
        unsigned int _allowsMultipleSelection:1;
        unsigned int _avoidsEmptySelection:1;
        unsigned int _superviewIsClipView:1;
        unsigned int _gridParametersReadFromPrototype:1;
        unsigned int _showsFirstResponder:1;
        unsigned int _reservedAnimationContainer:26;
    } _animationContainerFlags;
    struct CGSize _targetFrameSize;
    struct CGSize _targetGridSize;
    struct CGSize _targetUnfilledViewSpace;
    unsigned long long _targetNumberOfGridRows;
    unsigned long long _targetNumberOfGridColumns;
    NSMutableArray *_targetItems;
    struct CGSize _appliedFrameSize;
    struct CGSize _appliedGridSize;
    struct CGSize _appliedUnfilledViewSpace;
    unsigned long long _appliedNumberOfGridRows;
    unsigned long long _appliedNumberOfGridColumns;
    NSMutableArray *_appliedItems;
    NSMutableSet *_appliedItemsAsSet;
    NSMutableSet *_appliedRemovedItemsAsSet;
    double _animationDuration;
    NSViewAnimation *_animation;
    NSMutableArray *_hideLayoutItems;
    NSMutableArray *_showLayoutItems;
    DVTFirstResponderDrawingStrategy *_firstResponderDrawingStrategy;
    BOOL _animates;
    int _emptyContentStringStyle;
    NSString *_emptyContentString;
    NSTextField *_emptyContentTextField;
    DVTNotificationToken *_frameChangeToken;
}

@property int emptyContentStringStyle; // @synthesize emptyContentStringStyle=_emptyContentStringStyle;
@property(retain, nonatomic) NSString *emptyContentString; // @synthesize emptyContentString=_emptyContentString;
- (void).cxx_destruct;
- (void)rightMouseDown:(id)arg1;
- (void)setContextClickedContentObject:(id)arg1;
@property(readonly) id clickedContentObject;
- (id)_recursiveFindDefaultButtonCell;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (unsigned long long)_indexForMoveDown;
- (unsigned long long)_indexForMoveUp;
- (unsigned long long)_indexForMoveLeft;
- (unsigned long long)_indexForMoveRight;
- (unsigned long long)_indexForIncrementMove:(unsigned long long)arg1;
- (unsigned long long)_indexForDecrementMove:(unsigned long long)arg1;
- (void)selectAll:(id)arg1;
- (void)_contentChanged:(BOOL)arg1 regenerate:(BOOL)arg2;
- (void)discardEditing;
- (void)gridGeometryChanged:(BOOL)arg1;
- (void)_animateAtEndOfEvent;
- (void)applyPendingChangesAndFinishAnimating;
- (void)_applyTargetConfiguration:(BOOL)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_itemRemovalCompleted:(id)arg1;
- (void)_itemAdditionCompleted:(id)arg1;
- (void)_stopAnimationCompletingOperations:(BOOL)arg1;
- (double)_animationDuration;
- (void)_setAnimationDuration:(double)arg1;
- (id)backgroundColors;
- (void)setBackgroundColors:(id)arg1;
- (struct _NSRange)columnCountRange;
- (void)setColumnCountRange:(struct _NSRange)arg1;
- (struct _NSRange)rowCountRange;
- (void)setRowCountRange:(struct _NSRange)arg1;
- (unsigned long long)maxNumberOfColumns;
- (void)setMaxNumberOfColumns:(unsigned long long)arg1;
- (unsigned long long)maxNumberOfRows;
- (void)setMaxNumberOfRows:(unsigned long long)arg1;
- (struct CGSize)maxGridSize;
- (void)setMaxGridSize:(struct CGSize)arg1;
- (struct CGSize)minGridSize;
- (void)setMinGridSize:(struct CGSize)arg1;
- (void)setTargetFrameSize:(struct CGSize)arg1;
- (struct CGSize)targetFrameSize;
- (struct CGSize)targetGridSize;
- (struct CGSize)appliedGridSize;
- (id)appliedItems;
- (unsigned long long)targetNumberOfGridColumns;
- (unsigned long long)appliedNumberOfGridColumns;
- (void)_computeTargetItemViewFrameRects;
- (struct CGRect)_frameRectForIndexInGrid:(unsigned long long)arg1 gridSize:(struct CGSize)arg2;
- (id)_mutableIndexSetInAppliedGridForRect:(struct CGRect)arg1;
- (unsigned long long)_indexInAppliedGridForPoint:(struct CGPoint)arg1;
- (void)_getRow:(unsigned long long *)arg1 column:(unsigned long long *)arg2 forPoint:(struct CGPoint)arg3;
- (void)_computeTargetItemsByRegenerating:(BOOL)arg1;
- (void)computeTargetGridGeometry;
- (BOOL)_allowsResizingHorizontally;
- (BOOL)_allowsResizingVertically;
- (void)_determineGridParametersFromItemPrototype;
- (void)_scrollSelectionToVisible;
- (void)_scrollToVisibleItemAtIndex:(unsigned long long)arg1;
- (id)layoutItemPrototype;
- (void)setLayoutItemPrototype:(id)arg1;
- (id)newLayoutItemForRepresentedObject:(id)arg1;
@property(retain) id <DVTTileViewDelegate> delegate;
@property BOOL avoidsEmptySelection;
@property BOOL allowsMultipleSelection;
@property(getter=isSelectable) BOOL selectable;
- (id)_layoutItemForRepresentedObject:(id)arg1;
@property(copy) NSArray *content;
@property(copy) NSIndexSet *selectionIndexes;
- (void)validateSelectionIndexes;
- (void)_selectFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 scrollIndexToVisible:(unsigned long long)arg3;
- (void)_selectIndex:(unsigned long long)arg1 scrollToVisible:(BOOL)arg2;
- (void)_selectionStateChanged:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
@property(readonly) BOOL showsFirstResponder;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (id)_handleMouseEvent:(id)arg1 numberOfObjects:(unsigned long long)arg2 startingPoint:(struct CGPoint)arg3 commandKey:(BOOL)arg4 shiftKey:(BOOL)arg5 rubberband:(id)arg6;
- (struct CGPoint)_pointWithinBounds:(struct CGPoint)arg1;
- (void)cancelOperation:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)insertText:(id)arg1;
- (id)typeCompletionHandler:(id)arg1 typeCompletionStringForObject:(id)arg2;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibleChildren;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)hitTest:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (void)_hideEmptyContentString;
- (void)_showEmptyContentString;
- (BOOL)isFlipped;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)_superviewFrameChanged:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
@property BOOL animates;
- (void)_applySelectionToItems:(id)arg1;
- (void)_applySelectionIndexes:(id)arg1 toItems:(id)arg2;
- (void)_updateContainerReferenceCounterForArraysOfItems:(id)arg1 direction:(BOOL)arg2;
- (void)_updateContainerReferenceCounterForItems:(id)arg1 direction:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _DVTTileViewRubberband : NSView
{
    NSColor *_frameColor;
    NSColor *_fillColor;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)initWithFrameColor:(id)arg1 fillColor:(id)arg2;

@end

@interface DVTTextCompletionInlinePreviewController : NSObject
{
    DVTTextCompletionSession *_session;
    DVTObservingToken *_sessionSelectionObserver;
    DVTWeakInterposer *_previousSelectedItem_dvtWeakInterposer;
    DVTMapTable *_previewTextPerItem;
    NSString *_replacedUserPrefix;
    struct _NSRange _previewRange;
    struct _NSRange _ghostComplementRange;
    int _hideReason;
    BOOL _adjustingPreviewText;
    BOOL _adjustingPreviewCursorLocation;
    BOOL _invalidatingTextDisplay;
}

@property(readonly) BOOL invalidatingTextDisplay; // @synthesize invalidatingTextDisplay=_invalidatingTextDisplay;
@property(readonly) BOOL adjustingPreviewCursorLocation; // @synthesize adjustingPreviewCursorLocation=_adjustingPreviewCursorLocation;
@property(readonly) BOOL adjustingPreviewText; // @synthesize adjustingPreviewText=_adjustingPreviewText;
@property(readonly) struct _NSRange ghostComplementRange; // @synthesize ghostComplementRange=_ghostComplementRange;
@property(readonly) struct _NSRange previewRange; // @synthesize previewRange=_previewRange;
@property(nonatomic) int hideReason; // @synthesize hideReason=_hideReason;
- (void).cxx_destruct;
@property(readonly) NSString *debugStateString;
- (id)_previewTextForItem:(id)arg1;
- (void)_showPreviewForItem:(id)arg1;
- (void)_textStorageWillEdit:(id)arg1;
- (BOOL)handleDeleteBackward;
- (BOOL)handleTextViewShouldSetMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (BOOL)handleTextViewShouldChangeTextInRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (BOOL)handleInsertText:(id)arg1;
- (BOOL)handledAcceptPartialCompletion:(id)arg1;
- (void)hideInlinePreviewWithReason:(int)arg1;
- (void)showInlinePreview;
- (void)dealloc;
- (id)initWithSession:(id)arg1;
@property(readonly, getter=isShowingInlinePreview) BOOL showingInlinePreview;
@property __weak id <DVTTextCompletionItem> previousSelectedItem;

@end

@interface DVTColorValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface DVTTextStorage : NSTextStorage <DVTSourceBufferProvider, DVTSourceLanguageServiceDelegate>
{
    NSMutableAttributedString *_contents;
    struct _DVTTextLineOffsetTable _lineOffsets;
    unsigned long long _changeCapacity;
    unsigned long long _numChanges;
    struct _DVTTextChangeEntry *_changes;
    DVTSourceCodeLanguage *_language;
    NSTimer *_sourceModelUpdater;
    DVTSourceLandmarkItem *_topSourceLandmark;
    DVTSourceLandmarkItem *_rootImportLandmark;
    NSTimer *_landmarksCacheTimer;
    double _lastEditTimestamp;
    unsigned long long _tabWidth;
    unsigned long long _indentWidth;
    unsigned long long _wrappedLineIndentWidth;
    DVTObservingToken *_wrappedLinesIndentObserver;
    double _advancementForSpace;
    DVTFontAndColorTheme *_fontAndColorTheme;
    struct _NSRange _rangeNeedingInvalidation;
    struct {
        unsigned int lineEndings:2;
        unsigned int usesTabs:1;
        unsigned int syntaxColoringEnabled:1;
        unsigned int processingLazyInvalidation:1;
        unsigned int breakChangeCoalescing:1;
        unsigned int doingBatchEdit:1;
        unsigned int batchEditMayContainTokens:1;
        unsigned int batchEditMayContainLinks:1;
        unsigned int batchEditMayContainAttachments:1;
        unsigned int doingSubwordMovement:1;
        unsigned int doingExpressionMovement:1;
        unsigned int delegateRespondsToShouldAllowEditing:1;
        unsigned int delegateRespondsToDidUpdateSourceLandmarks:1;
        unsigned int delegateRespondsToNodeTypeForItem:1;
        unsigned int delegateRespondsToSourceLanguageServiceContext:1;
        unsigned int forceFixAttributes:1;
        unsigned int languageServiceSupportsSourceModel:1;
    } _tsflags;
    _LazyInvalidationHelper *_lazyInvalidationHelper;
    DVTSourceLanguageService<DVTSourceLanguageSyntaxTypeService> *_sourceLanguageService;
    DVTObservingToken *_sourceLanguageServiceContextObservingToken;
}

+ (id)keyPathsForValuesAffectingSourceLanguageServiceContext;
+ (void)initialize;
+ (BOOL)usesScreenFonts;
+ (id)_changeTrackingLogAspect;
+ (id)_sourceLandmarksLogAspect;
@property unsigned long long wrappedLineIndentWidth; // @synthesize wrappedLineIndentWidth=_wrappedLineIndentWidth;
@property unsigned long long indentWidth; // @synthesize indentWidth=_indentWidth;
@property double lastEditTimestamp; // @synthesize lastEditTimestamp=_lastEditTimestamp;
- (void).cxx_destruct;
- (id)updatedLocationFromLocation:(id)arg1 toTimestamp:(double)arg2;
- (id)compatibleLocationFromLocation:(id)arg1;
- (id)convertLocationToNativeNSStringEncodedLocation:(id)arg1;
- (id)convertLocationToUTF8EncodedLocation:(id)arg1;
- (void)_restoreRecomputableState;
- (void)_dropRecomputableState;
- (unsigned long long)lineBreakBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (id)_ancestorItemForTokenizableItem:(id)arg1;
- (long long)nodeTypeForTokenizableItem:(id)arg1;
- (double)indentationForWrappedLineAtIndex:(unsigned long long)arg1;
- (unsigned long long)leadingWhitespacePositionsForLine:(unsigned long long)arg1;
- (long long)syntaxTypeForItem:(id)arg1 context:(id)arg2;
- (id)colorAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 context:(id)arg3;
- (long long)nodeTypeAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 context:(id)arg3;
- (void)_themeColorsChanged:(id)arg1;
@property(retain) DVTFontAndColorTheme *fontAndColorTheme;
@property(getter=isSyntaxColoringEnabled) BOOL syntaxColoringEnabled;
- (id)stringBySwappingRange:(struct _NSRange)arg1 withAdjacentRange:(struct _NSRange)arg2;
- (struct _NSRange)functionOrMethodBodyRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)functionRangeAtIndex:(unsigned long long)arg1 isDefinitionOrCall:(char *)arg2;
- (struct _NSRange)methodDefinitionRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)methodCallRangeAtIndex:(unsigned long long)arg1;
- (id)importStatementStringAtCharacterIndex:(unsigned long long)arg1;
- (id)importStatementStringAtCharacterIndex:(unsigned long long)arg1 isModule:(char *)arg2;
- (id)symbolNameAtCharacterIndex:(unsigned long long)arg1 nameRanges:(id *)arg2;
- (unsigned long long)nextExpressionFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
@property(getter=isExpressionMovement) BOOL expressionMovement;
- (unsigned long long)dvt_nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
@property(getter=isSubwordMovement) BOOL subwordMovement;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1 inRange:(struct _NSRange)arg2;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1 allowNonWords:(BOOL)arg2;
- (id)sourceLandmarkAtCharacterIndex:(unsigned long long)arg1;
- (id)_sourceLandmarkAtCharacterIndex:(unsigned long long)arg1 inLandmarkItems:(id)arg2;
- (id)importLandmarkItems;
@property(readonly) DVTSourceLandmarkItem *topSourceLandmark;
@property(readonly) BOOL hasPendingSourceLandmarkInvalidation;
- (void)_invalidateSourceLandmarks:(id)arg1;
- (void)invalidateAllLandmarks;
- (id)stringForItem:(id)arg1;
@property(readonly) DVTSourceModel *sourceModelWithoutParsing;
@property(readonly) DVTSourceModel *sourceModel;
@property(readonly) DVTSourceLanguageService<DVTSourceLanguageSourceModelService> *sourceModelService;
@property(readonly, nonatomic) NSDictionary *sourceLanguageServiceContext;
@property(readonly) DVTSourceLanguageService<DVTSourceLanguageSyntaxTypeService> *languageService;
@property(copy) DVTSourceCodeLanguage *language;
- (void)didReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 changeInLength:(long long)arg3 replacedString:(id)arg4;
- (void)willReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 changeInLength:(long long)arg3;
- (void)_dumpChangeHistory;
- (struct _NSRange)lineRangeForLineRange:(struct _NSRange)arg1 fromTimestamp:(double)arg2 toTimestamp:(double)arg3;
- (struct _NSRange)characterRangeForCharacterRange:(struct _NSRange)arg1 fromTimestamp:(double)arg2 toTimestamp:(double)arg3;
- (id)_debugInfoForChangeIndex:(unsigned long long)arg1 toChangeIndex:(unsigned long long)arg2;
- (unsigned long long)changeIndexForTimestamp:(double)arg1;
- (struct _NSRange)lineRangeForLineRange:(struct _NSRange)arg1 fromChangeIndex:(unsigned long long)arg2 toChangeIndex:(unsigned long long)arg3;
- (struct _NSRange)characterRangeForCharacterRange:(struct _NSRange)arg1 fromChangeIndex:(unsigned long long)arg2 toChangeIndex:(unsigned long long)arg3;
- (void)breakChangeTrackingCoalescing;
- (void)clearChangeHistory;
@property(readonly) unsigned long long currentChangeIndex;
- (id)_debugInfoString;
@property(readonly) unsigned long long numberOfLines;
- (struct _NSRange)currentWordAtIndex:(unsigned long long)arg1;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeFromDocumentLocation:(id)arg1;
- (void)_dumpLineOffsetsTable;
- (id)_debugStringFromUnsignedIntegers:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)serviceAvailabilityNotification:(BOOL)arg1 message:(id)arg2;
- (void)scheduleLazyInvalidationForRange:(struct _NSRange)arg1;
- (void)_updateLazyInvalidationForEditedRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)_processLazyInvalidation;
- (void)_invalidateCallback:(id)arg1;
@property BOOL processingLazyInvalidation;
- (void)invalidateLayoutForLineRange:(struct _NSRange)arg1;
- (void)delayedInvalidateDisplayForLineRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForLineRange:(struct _NSRange)arg1;
- (void)invalidateDisplayInRange:(struct _NSRange)arg1;
- (void)updateAttributesInRange:(struct _NSRange)arg1;
- (void)fixAttributesInRange:(struct _NSRange)arg1;
- (void)fixSyntaxColoringInRange:(struct _NSRange)arg1;
- (void)fixAttachmentAttributeInRange:(struct _NSRange)arg1;
@property id <DVTTextStorageDelegate> delegate;
- (id)_associatedTextViews;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2 withUndoManager:(id)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 withUndoManager:(id)arg3;
- (void)addLayoutManager:(id)arg1;
- (void)invalidateAttributesInRange:(struct _NSRange)arg1;
- (BOOL)fixesAttributesLazily;
- (BOOL)_forceFixAttributes;
- (void)_setForceFixAttributes:(BOOL)arg1;
- (void)processEditing;
- (void)endEditing;
- (void)beginEditing;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (BOOL)isDoingBatchEdit;
- (void)doingBatchEdit:(BOOL)arg1;
- (void)doingBatchEdit:(BOOL)arg1 notifyModel:(BOOL)arg2;
@property BOOL batchEditMayContainAttachments;
@property BOOL batchEditMayContainLinks;
@property BOOL batchEditMayContainTokens;
- (void)resetAdvancementForSpace;
@property(readonly) double advancementForTab;
@property(readonly) double advancementForSpace;
@property BOOL usesTabs;
@property(nonatomic) unsigned long long tabWidth;
@property(readonly) BOOL isEditable;
@property unsigned long long lineEndings;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithOwnedMutableAttributedString:(id)arg1;
- (void)_dvtTextStorageCommonInit;
- (BOOL)_isExpressionItemLikeFunction:(id)arg1;
- (BOOL)_isExpressionItemLikelyTarget:(id)arg1;
- (BOOL)_isItemExpression:(id)arg1;
- (unsigned long long)_reverseParseExpressionFromIndex:(unsigned long long)arg1 ofParent:(id)arg2;
- (unsigned long long)_startLocationForObjCMethodCallAtLocation:(unsigned long long)arg1 withArgs:(char *)arg2;
- (unsigned long long)locationForOpeningBracketForClosingBracket:(unsigned long long)arg1 withArgs:(char *)arg2;
- (BOOL)isAtFirstArgumentInMethodCallAtLocation:(unsigned long long)arg1 inCall:(char *)arg2;
- (BOOL)_isTextEmptyInBetweenItem:(id)arg1 prevItem:(id)arg2;
- (id)_textInBetweenItem:(id)arg1 prevItem:(id)arg2;
- (id)_parenLikeItemAtLocation:(unsigned long long)arg1;
- (BOOL)_isItemParenExpression:(id)arg1;
- (BOOL)_isItemBlockExpression:(id)arg1;
- (BOOL)_isItemBracketLikeExpression:(id)arg1;
- (BOOL)_isItemBracketExpression:(id)arg1;
- (BOOL)indentAtBeginningOfLineForCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (BOOL)isAtBOL:(struct _NSRange)arg1;
- (void)indentCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (void)indentLineRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (BOOL)indentLine:(long long)arg1 options:(unsigned long long)arg2 undoManager:(id)arg3;
- (long long)firstNonblankForLine:(long long)arg1 convertTabs:(BOOL)arg2;
- (id)getTextForLineSansBlanks:(long long)arg1;
@property(readonly, getter=isIndentable) BOOL indentable;
- (long long)getIndentForLine:(long long)arg1;
- (long long)_getIndentForObjectLiteral:(id)arg1 atLocation:(unsigned long long)arg2;
- (BOOL)_isInvalidObjectLiteralItem:(id)arg1;
- (unsigned long long)firstColonAfterItem:(id)arg1 inRange:(struct _NSRange)arg2;
- (long long)columnForPositionConvertingTabs:(unsigned long long)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (unsigned long long)length;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)contents;
- (id)string;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _LazyInvalidationHelper : NSObject
{
    DVTTextStorage *_textStorage;
}

@property(nonatomic) __weak DVTTextStorage *textStorage; // @synthesize textStorage=_textStorage;
- (void).cxx_destruct;
- (void)_invalidateCallback:(id)arg1;

@end

@interface DVTPlistCommentNode : DVTPlistNode
{
    NSString *_comment;
    BOOL isMultiLine;
}

@property BOOL isMultiLine; // @synthesize isMultiLine;
- (void).cxx_destruct;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (id)value;
- (void)setValueFromPlist:(id)arg1;
- (void)setValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isPlistCommentNode;

@end

@interface DVTGauge : NSView
{
    unsigned long long _style;
    unsigned long long _indicatorStyle;
    double _doubleValue;
    double _minValue;
    double _maxValue;
    long long _backgroundStyle;
    NSGradient *_indicatorGradient;
    CDUnknownBlockType _renderer;
}

@property(nonatomic) CDUnknownBlockType renderer; // @synthesize renderer=_renderer;
@property(retain, nonatomic) NSGradient *indicatorGradient; // @synthesize indicatorGradient=_indicatorGradient;
@property long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
@property(nonatomic) double maxValue; // @synthesize maxValue=_maxValue;
@property(nonatomic) double minValue; // @synthesize minValue=_minValue;
@property(nonatomic) double doubleValue; // @synthesize doubleValue=_doubleValue;
@property(nonatomic) unsigned long long indicatorStyle; // @synthesize indicatorStyle=_indicatorStyle;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTPointViewController : NSViewController
{
    BOOL _showsBorder;
    DVTBorderedView *_borderedView;
    NSTextField *_pointValueLabel;
    struct CGPoint _point;
}

@property __weak NSTextField *pointValueLabel; // @synthesize pointValueLabel=_pointValueLabel;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(nonatomic) BOOL showsBorder; // @synthesize showsBorder=_showsBorder;
@property(nonatomic) struct CGPoint point; // @synthesize point=_point;
- (void).cxx_destruct;
- (void)_updateBorder;
- (void)loadView;
- (id)initWithDefaultNibName;

@end

@interface DVTPointView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTSearchFieldTextEditor : NSTextView
{
}

- (void)_didChangeSelection:(id)arg1;
- (void)showMatchingBraceAtLocation:(id)arg1;
- (void)autoHighlightMatchingBracketAtLocationIfNecessary:(unsigned long long)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface DVTControllerContentView : DVTLayoutView_ML <DVTInvalidation>
{
    struct CGSize _minContentFrameSize;
    struct CGSize _maxContentFrameSize;
    DVTViewController *_viewController;
    NSWindow *_kvoWindow;
    int _horizontalAlignmentWhenClipping;
    int _horizontalAlignmentWhenPadding;
    int _verticalAlignmentWhenClipping;
    int _verticalAlignmentWhenPadding;
    int _verticalContentViewResizingMode;
    int _horizontalContentViewResizingMode;
    BOOL _isInstalled;
    BOOL _isPadding;
    BOOL _isReplacingSubview;
    BOOL _disablePaddingWarning;
    BOOL _isGrouped;
    NSMapTable *_subviewObservations;
    NSArray *_currentContentViewConstraints;
    DVTStackBacktrace *_setFrameSizeBacktrace;
    NSString *_frameSizeDimentionIsNaN;
    BOOL _constraintsCameFromNib;
}

+ (void)initialize;
@property BOOL isGrouped; // @synthesize isGrouped=_isGrouped;
@property BOOL disablePaddingWarning; // @synthesize disablePaddingWarning=_disablePaddingWarning;
@property(nonatomic) int verticalContentViewResizingMode; // @synthesize verticalContentViewResizingMode=_verticalContentViewResizingMode;
@property(nonatomic) int horizontalContentViewResizingMode; // @synthesize horizontalContentViewResizingMode=_horizontalContentViewResizingMode;
@property(nonatomic) int verticalAlignmentWhenClipping; // @synthesize verticalAlignmentWhenClipping=_verticalAlignmentWhenClipping;
@property(nonatomic) int horizontalAlignmentWhenClipping; // @synthesize horizontalAlignmentWhenClipping=_horizontalAlignmentWhenClipping;
@property(nonatomic) struct CGSize minimumContentViewFrameSize; // @synthesize minimumContentViewFrameSize=_minContentFrameSize;
@property(nonatomic) int verticalAlignmentWhenPadding; // @synthesize verticalAlignmentWhenPadding=_verticalAlignmentWhenPadding;
@property(nonatomic) int horizontalAlignmentWhenPadding; // @synthesize horizontalAlignmentWhenPadding=_horizontalAlignmentWhenPadding;
@property(nonatomic) struct CGSize maximumContentViewFrameSize; // @synthesize maximumContentViewFrameSize=_maxContentFrameSize;
- (void).cxx_destruct;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)_invalidateLayoutBecauseOfSubviewFrameChange:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
@property(readonly) BOOL isInstalled;
- (void)_viewDidInstall;
- (void)_viewWillUninstall;
@property(retain) NSView *contentView;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)setSubviews:(id)arg1;
- (void)addSubview:(id)arg1;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(BOOL)arg1;
- (void)_syncContentViewTranslatesAutoresizingMaskIntoConstraintsValue;
- (void)updateConstraints;
- (void)setNextResponder:(id)arg1;
@property(retain, nonatomic) DVTViewController *viewController;
- (void)_checkKvoWindow;
@property(readonly) NSWindow *kvoWindow;
- (void)primitiveInvalidate;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTTextPageGuideVisualization : DVTTextVisualization
{
    unsigned long long _columnNumber;
    double _pageGuideX;
    NSColor *_verticalLineColor;
    NSColor *_outOfBoundsColor;
}

+ (unsigned long long)defaultDrawOrdering;
@property(nonatomic) unsigned long long columnNumber; // @synthesize columnNumber=_columnNumber;
- (void).cxx_destruct;
- (void)drawUnderTextInRect:(struct CGRect)arg1;
- (void)fontAndColorThemeChanged;
- (void)_updatePageGuideXCoordinate;

@end

@interface DVTSearchFieldCell : NSSearchFieldCell
{
    BOOL _showsProgress;
    NSTextView *_fieldEditor;
    NSTextFieldCell *_numberOfMatchesCell;
    BOOL _filterField;
    BOOL _hasText;
    int _visualStyle;
    long long _numberOfMatches;
}

+ (id)leftEdgeRoundedStyleBorderColor;
+ (id)textFieldPathForFrame:(struct CGRect)arg1 usingRadius:(double)arg2;
+ (void)drawBackgroundForLeftEdgeRoundedRectStyleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
+ (void)drawFocusRingMaskForLeftEdgeRoundedRectStyleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@property BOOL hasText; // @synthesize hasText=_hasText;
@property long long numberOfMatches; // @synthesize numberOfMatches=_numberOfMatches;
@property int visualStyle; // @synthesize visualStyle=_visualStyle;
@property(retain) NSTextView *fieldEditor; // @synthesize fieldEditor=_fieldEditor;
@property BOOL showsProgress; // @synthesize showsProgress=_showsProgress;
- (void).cxx_destruct;
- (struct CGRect)_accessibilitySearchFieldCellBounds;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)_numberOfMatchessCellAttribute;
- (id)accessibilityChildrenAttribute;
- (struct CGRect)_numberOfMatchesRectForBounds:(struct CGRect)arg1;
- (BOOL)_shouldShowNumberOfMatches;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawBackgroundForFlatStyleWithFrame:(struct CGRect)arg1 inView:(id)arg2 hasFocus:(BOOL)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)searchButtonRectForBounds:(struct CGRect)arg1;
- (struct CGRect)cancelButtonRectForBounds:(struct CGRect)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)showSearchMenu;
@property(getter=isFilterField) BOOL filterField;
- (void)setObjectValue:(id)arg1;
- (void)_updateSearchButtonImages;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)searchTextRectForBounds:(struct CGRect)arg1;
- (id)setUpFieldEditorAttributes:(id)arg1;
- (void)_dvtFindBarSearchFieldCellCommonInit;
- (id)copy;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface DVTAudioLibraryDetailController : DVTLibraryDetailController
{
    NSButton *_playButton;
    NSView *_contentView;
    NSString *_durationString;
    NSTimer *_playbackTimer;
    NSSound *_audio;
}

@property(copy) NSString *durationString; // @synthesize durationString=_durationString;
- (void).cxx_destruct;
- (void)viewWillUninstall;
- (void)toggleAudioPlayback:(id)arg1;
- (void)sizeToFitSuggestedSize:(struct CGSize)arg1 forAsset:(id)arg2;
- (void)refreshWithAsset:(id)arg1 representedObject:(id)arg2;
- (void)reflectPlaybackState;
- (id)durationStringForDuration:(double)arg1;

@end

@interface DVTLibraryController : DVTViewController <DVTLibraryGroupObserver>
{
    DVTGroupedTileView *_assetTileView;
    DVTSearchField *_assetFilterField;
    DVTBorderedView *_filterBar;
    NSButton *_libraryViewToggleButton;
    DVTScrollView *_scrollView;
    DVTLibrary *_library;
    DVTLibraryDetailPopUpController *_detailPopUpController;
    long long _assetViewStyle;
    NSString *_filterString;
    NSArray *_filterComponents;
    id <DVTInvalidation> _rootGroupObservationToken;
    DVTObservingToken *_tileViewShowsFirstResponderKVOToken;
    DVTObservingToken *_tileViewIsFirstResponderKVOToken;
    DVTObservingToken *_tileViewSelectionIndexesKVOToken;
    NSIndexSet *_selectedLibraryGroupPairIndexes;
    id <DVTCancellable> _popUpTimerToken;
    NSMutableSet *_uniquedGroupSets;
    NSMutableSet *_uniquedAssetGroupSets;
    DVTNotificationToken *_detailPopUpControllerCloseToken;
    DVTNotificationToken *_assetScrollViewNotificationToken;
    DVTNotificationToken *_assetClipViewNotificationToken;
    struct CGSize _initialDraggingOffset;
    NSSet *_observedGroups;
    NSDate *_lastFilterDate;
    NSArray *_draggedGroups;
    NSArray *_draggedPairs;
    DVTDelayedInvocation *_iconValidationInvocation;
    struct {
        unsigned int synchronizingDetailViewContentViewWithAsset:1;
        unsigned int identifiesAssetsPerGroup:1;
        unsigned int filterCallbackIsPending:1;
        unsigned int acceptedDraggedAssets:1;
        unsigned int viewingLeafGroup:1;
        unsigned int inFilterMethod:1;
    } _flags;
    NSTreeController *_groupController;
}

+ (struct CGSize)maximumThumbnailSize;
+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property(readonly) NSTreeController *groupController; // @synthesize groupController=_groupController;
@property(readonly) DVTLibrary *library; // @synthesize library=_library;
@property(readonly) NSString *filterString; // @synthesize filterString=_filterString;
@property(retain) NSArray *draggedPairs; // @synthesize draggedPairs=_draggedPairs;
@property(copy) NSArray *draggedGroups; // @synthesize draggedGroups=_draggedGroups;
@property(nonatomic) long long assetViewStyle; // @synthesize assetViewStyle=_assetViewStyle;
@property(readonly) NSSearchField *assetFilterField; // @synthesize assetFilterField=_assetFilterField;
- (void).cxx_destruct;
- (void)selectAssetFilterField;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)filterAssetsFromFilterField:(id)arg1;
- (void)cancelFiltering;
- (void)reallyFilter:(id)arg1;
- (void)clearFilterString;
- (void)beginFilteringWithString:(id)arg1;
- (void)setFilterString:(id)arg1;
- (id)filterComponents;
- (id)tooltipForDetailControllerRepresentedObject:(id)arg1 forAsset:(id)arg2;
- (id)titleForDetailControllerRepresentedObject:(id)arg1 forAsset:(id)arg2;
- (id)representedObjectForDetailControllerIdentifier:(id)arg1 index:(unsigned long long)arg2 forAsset:(id)arg3;
- (void)editSelectedAsset;
- (struct CGSize)detailAreaSize;
- (void)userDidPressEscapeInTileView:(id)arg1;
- (void)userDidPressSpaceBarInTileView:(id)arg1;
- (CDUnknownBlockType)tileView:(id)arg1 willProcessClick:(id)arg2;
- (void)tileView:(id)arg1 didProcessKeyEvent:(id)arg2;
- (void)stopTimerForShowingDetailPopUpController;
- (void)startTimerForShowingDetailPopUpControllerForAssetAndGroupPair:(id)arg1;
- (void)_openPopUpWithPair:(id)arg1;
- (void)updatePositionOfDetailPopUp;
- (BOOL)detailPopUpController:(id)arg1 canEditAsset:(id)arg2;
- (id)detailPopUpController:(id)arg1 viewControllerForEditingAsset:(id)arg2;
- (void)detailPopUpController:(id)arg1 dragAssetPairs:(id)arg2 withMouseDownEvent:(id)arg3 mouseDraggedEvent:(id)arg4 initialDraggedImageState:(id)arg5 allowedOperations:(unsigned long long)arg6 imageLocationOnScreen:(struct CGPoint)arg7;
- (void)detailPopUpControllerHeaderWasDoubleClicked:(id)arg1;
- (void)closeDetailPopUpController;
- (void)openDetailPopUpController;
- (void)cleanUpAfterClosingDetailPopUpController;
- (void)faultIconForAsset:(id)arg1;
- (void)refreshDetailView;
- (BOOL)canOpenDetailPopUp;
- (void)makeTileViewFirstResponder;
- (BOOL)tileViewIsFirstResponder;
@property(readonly) DVTLibraryDetailController *currentDetailController;
- (id)detailPopUpContentController;
- (struct CGSize)draggingStickiness:(id)arg1;
- (id)draggedImageState:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)tileView:(id)arg1 didChangeContextClickedObjectFrom:(id)arg2;
- (id)tileView:(id)arg1 typeCompletionStringForContentObject:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 shouldDragLayoutItem:(id)arg2 withMouseDownEvent:(id)arg3;
- (id)groupedTileView:(id)arg1 layoutItemForRepresentedObject:(id)arg2;
- (id)groupedTileView:(id)arg1 labelForGroup:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 shouldDrawAlternateHeaderColorForGroup:(id)arg2;
- (void)groupedTileViewDeleteSelectedItems:(id)arg1;
- (void)groupedTileViewUserPressedEnter:(id)arg1;
- (void)groupedTileView:(id)arg1 wasDoubleClicked:(id)arg2;
- (void)askDelegateToDepositeAssets:(id)arg1;
- (BOOL)depositAssets:(id)arg1;
- (BOOL)assetViewShouldAllowAssetDrops;
- (void)resetIconContent;
- (id)orderedAssetsForDisplayedAssets:(id)arg1;
- (id)orderedAssetsForDisplayedAssets:(id)arg1 inGroup:(id)arg2;
- (BOOL)assetPassesFilter:(id)arg1;
- (void)applyAssetViewStyle;
- (void)applyAssetViewStyleToAssetView:(id)arg1;
- (BOOL)selectAsset:(id)arg1 inGroup:(id)arg2;
@property(readonly) NSArray *selectedAssets;
@property(readonly) NSArray *selectedAssetPairs;
- (BOOL)shouldShowGridLines;
- (void)makeItemForGroupVisible:(id)arg1 select:(BOOL)arg2 byExtendingSelection:(BOOL)arg3 edit:(BOOL)arg4;
- (void)selectAssets:(id)arg1 inGroup:(id)arg2;
- (id)assetTileViewContent;
- (id)unsynchronizedAssetTileViewContent;
- (id)imageForGroup:(id)arg1;
- (id)assetViewSourceGroups;
- (id)selectedGroups;
- (void)selectLibrarySourceWithIdentifier:(id)arg1 subpath:(id)arg2 byExtendingSelection:(BOOL)arg3;
- (id)currentTileViewUIState;
- (void)applyTileViewUIState:(id)arg1;
- (void)restoreUIState;
- (void)saveUIState;
- (id)libraryUIStateDefaultsKey;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)canPerformRemoveSelectedAssetGroups;
- (BOOL)canPerformRemoveSelectedAssetsFromGroup;
- (BOOL)canPerformRemoveSelectedAssetsFromLibrary;
- (void)performRemoveAssetsFromGroups:(id)arg1;
- (void)performRemoveSelectedAssetGroups;
- (BOOL)firstResponderHasSelectedAsset:(id)arg1;
- (id)parentForNewGroup;
- (id)groupedTileView:(id)arg1 draggedImageState:(id)arg2;
- (void)groupedTileView:(id)arg1 concludeDragOperation:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 performDragOperation:(id)arg2;
- (BOOL)groupedTileView:(id)arg1 prepareForDragOperation:(id)arg2;
- (void)groupedTileView:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)groupedTileView:(id)arg1 draggingEntered:(id)arg2;
- (unsigned long long)groupedTileView:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)calculateAssetViewDragOperation:(id)arg1 targetGroup:(id *)arg2 targetIndex:(long long *)arg3;
- (unsigned long long)draggingOperationForDragInfo:(id)arg1 withTargetGroup:(id)arg2 targetCanBeMoveWithinGroup:(BOOL)arg3;
- (BOOL)canCreateAssetsFromPasteboard:(id)arg1 targetingLibrarySourceIdentifier:(id *)arg2;
- (void)addObjectsFromDraggingInfo:(id)arg1 toGroup:(id)arg2;
- (void)insertObjectsFromDraggingInfo:(id)arg1 intoGroup:(id)arg2 atIndex:(long long)arg3;
- (BOOL)createAsset:(id *)arg1 forLibrarySourceWithIdentifier:(id *)arg2 fromPasteboard:(id)arg3;
- (id)addAssetsFromDraggingInfo:(id)arg1 toGroup:(id)arg2 copy:(BOOL)arg3;
- (id)insertAssetsFromDraggingInfo:(id)arg1 intoGroup:(id)arg2 atIndex:(long long)arg3 copy:(BOOL)arg4;
- (void)groupedTileViewDragSelectedItems:(id)arg1 withMouseDownEvent:(id)arg2 andMouseDraggedEvent:(id)arg3;
- (id)draggedImageStateForAssetGroupPairs:(id)arg1 draggedPair:(id)arg2 referenceRectForClickedItem:(struct CGRect *)arg3;
- (void)groupedTileViewCopySelectedItems:(id)arg1;
- (void)dragDidUpdate:(id)arg1 operation:(unsigned long long)arg2 previousOperation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3 withException:(id)arg4 shouldSlideBack:(char *)arg5;
- (void)didFinishDraggingAssets:(id)arg1 info:(id)arg2 shouldSlideBack:(char *)arg3;
- (void)dragAssetPairs:(id)arg1 withMouseDownEvent:(id)arg2 mouseDraggedEvent:(id)arg3 initialDraggedImageState:(id)arg4 allowedOperations:(unsigned long long)arg5 imageLocationInWindow:(struct CGPoint)arg6;
- (void)willBeginDraggingAssets:(id)arg1;
- (void)populatePasteboard:(id)arg1 withAssetAndCategoryPairs:(id)arg2 defaultDraggedImageState:(id *)arg3 identifierMapTable:(id *)arg4;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2 defaultDraggedImageState:(id *)arg3 identifierMapTable:(id *)arg4;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2;
- (id)defaultDragImageState:(id)arg1;
- (id)initialDragImageState:(id)arg1;
- (BOOL)transfersFirstResponderToDragDestination:(id)arg1;
- (void)registerForDropTypes;
- (id)draggedAssets;
- (id)readableAssetPasteboardTypes;
- (id)assetGroupPasteboardType;
- (id)assetPasteboardType;
- (void)userDidEditAsset:(id)arg1;
- (void)applyAssetSelectionIndexes;
- (void)toggleAssetViewStyle:(id)arg1;
- (void)invalidateIconContent;
- (void)batchedValidateIconContent:(id)arg1;
- (void)setObservedGroups:(id)arg1;
- (void)dropUnusedAssetAndGroupSets:(id)arg1;
- (id)allAssetAndGroupSets;
- (id)uniquedAssetAndGroupSetForAsset:(id)arg1 andGroups:(id)arg2;
- (BOOL)removeAssets:(id)arg1 error:(id *)arg2;
- (BOOL)canPerformRemoveAssetFromLibrary:(id)arg1;
- (BOOL)canRemoveAsset:(id)arg1;
- (id)editorViewControllerForAsset:(id)arg1;
- (BOOL)canEditAsset:(id)arg1;
- (id)searchStringsForAsset:(id)arg1;
- (BOOL)isGroupDisplayedInAssetView:(id)arg1;
- (void)libraryDidLoad;
- (id)representedObjectWithString:(id)arg1 forAsset:(id)arg2;
- (id)imageForLibraryAsset:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)setupScrollMonitoringAfterInstall;
- (void)setupLibraryObservingAfterInstalling;
- (void)libraryGroupDidChangeAssets:(id)arg1;
- (void)libraryDidChangeAssets:(id)arg1;
- (void)setupFilterBarAfterInstalling;
- (void)setupAssetTileViewAfterInstalling;
@property(readonly) BOOL searchFieldIsFirstResponder;
@property(readonly, getter=isViewingLeafGroup) BOOL viewingLeafGroup;
- (id)libraryWindow;
@property BOOL identifiesAssetsPerGroup;
- (id)assetScrollView;
- (id)assetTileViewForceSynchronizedContent:(BOOL)arg1;
- (void)loadView;
- (void)setRepresentedExtension:(id)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)primitiveInvalidate;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTableHeaderCell : NSTableHeaderCell
{
    NSImage *_image;
    struct CGSize _baseImageSize;
    unsigned long long _imageScaling;
    double _layoutHeight;
}

+ (void)initialize;
@property double layoutHeight; // @synthesize layoutHeight=_layoutHeight;
@property unsigned long long imageScaling; // @synthesize imageScaling=_imageScaling;
@property struct CGSize baseImageSize; // @synthesize baseImageSize=_baseImageSize;
@property(retain) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)updateBoundTitle;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGSize)_scaledImageSize:(struct CGSize)arg1 forBounds:(struct CGRect)arg2;
- (struct CGRect)_layoutFrameForCellFrame:(struct CGRect)arg1;
- (id)dvtExtraBindings;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface DVTFilteringMenuSearchView : NSView
{
    DVTSearchField *_searchField;
    NSMenuItem *_menuItem;
    NSString *_stringValue;
    NSString *_initialStringValue;
    id _delegate;
}

@property(retain) id delegate; // @synthesize delegate=_delegate;
@property(copy) NSString *initialStringValue; // @synthesize initialStringValue=_initialStringValue;
@property(retain) NSMenuItem *menuItem; // @synthesize menuItem=_menuItem;
@property(retain) DVTSearchField *searchField; // @synthesize searchField=_searchField;
- (void).cxx_destruct;
- (void)viewDidMoveToWindow;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTAssetAndGroupSet : NSObject
{
    BOOL _isObservingAsset;
    DVTLibraryAssetView *_view;
    DVTLibraryAsset *_asset;
    NSSet *_groups;
}

+ (id)observedAssetKeyPaths;
@property(readonly) NSSet *groups; // @synthesize groups=_groups;
@property(readonly) DVTLibraryAsset *asset; // @synthesize asset=_asset;
@property(readonly) DVTLibraryAssetView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)assetViewWillDraw:(id)arg1;
- (void)stopObservingAssetKeyPathsIfNeeded;
- (void)startObservingAssetKeyPathsIfNeeded;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToAssetAndGroupSet:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithAsset:(id)arg1 andGroups:(id)arg2;

@end

@interface DVTTabButton : DVTRolloverTrackingButton <NSAnimationDelegate, NSTextFieldDelegate>
{
    DVTTabbedWindowTabViewItem *_tabViewItem;
    DVTRolloverImageButton *_closeButton;
    SEL _closeAction;
    NSImageView *_errorIndicator;
    struct CGRect _stackingFrame;
    NSMutableArray *_fadeInAnimations;
    NSString *_toolTip;
    NSTextField *userRenameTabField;
    NSText *editor;
    NSImage *_tabDragImage;
    NSImage *_miniWindowDragImage;
    struct CGRect _miniWindowStartFrame;
    struct CGRect _miniWindowEndFrame;
    NSWindow *_miniWindowDragWindow;
    NSWindow *_miniWindowTabbedWindow;
    struct CGAffineTransform _originalBrowserTransform;
    int _leftSeparatorMode;
    int _rightSeparatorMode;
    int _leftSeparatorDirection;
    int _rightSeparatorDirection;
    BOOL _settingCellTitle;
    BOOL _drawsDetached;
    BOOL _windowBackgroundMightBeStale;
}

+ (id)_etchedBoldTextColor;
+ (id)_backgroundTabBoldTextColor;
+ (id)_toolTipTextAttributes;
+ (id)_lightSeparatorLineColor;
+ (id)_imageForEmptyWindowOfSize:(struct CGSize)arg1;
+ (id)_darkSeparatorLineColor;
+ (id)rightInactiveTabSeparatorImageForNonMainWindow;
+ (id)rightInactiveTabSeparatorImageForMainWindow;
+ (id)rightActiveTabSeparatorImageForNonMainWindow;
+ (id)rightActiveTabSeparatorImageForMainWindow;
+ (id)leftInactiveTabSeparatorImageForNonMainWindow;
+ (id)leftInactiveTabSeparatorImageForMainWindow;
+ (id)leftActiveTabSeparatorImageForNonMainWindow;
+ (id)leftActiveTabSeparatorImageForMainWindow;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)_useRolloverAppearance;
- (void)_updateToolTip;
- (void)_updateFrames;
- (void)_updateControlsVisibility;
- (void)_fadableControl:(id)arg1 setHidden:(BOOL)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)_fadeInView:(id)arg1;
- (BOOL)_shouldHideCloseButton;
- (void)_updateControlImages;
- (void)_updateAccessibilityAttributes;
- (double)_titleWidth;
- (void)_titleWillChange;
- (BOOL)_titleIsTruncated;
- (void)_titleDidChange;
- (struct CGRect)_textRect;
- (id)_tabBarView;
- (struct CGRect)_clipRectWhenSliding;
- (void)_setDrawsDetached:(BOOL)arg1;
- (id)_selectedTab;
- (double)_rightTextMargin;
- (double)_miniWindowDragImageWidth;
- (double)_leftTextMargin;
- (BOOL)_isShowingErrorIndicator;
- (void)_growMiniWindowForDetachedTabWithDragController:(id)arg1;
- (void)_customGrowMiniWindowForDetachedTabWithDragController:(id)arg1 newTabbedWindowController:(id)arg2;
- (void)_growMiniWindow:(id)arg1;
- (void)_drawWindowBackgroundFromFrame:(struct CGRect)arg1 operation:(unsigned long long)arg2;
- (void)_drawSeparatorsForUnselectedTabInRect:(struct CGRect)arg1;
- (void)_drawBackgroundAndSeparatorsInRect:(struct CGRect)arg1 withActiveAppearance:(BOOL)arg2;
- (id)_dragImageForImage:(id)arg1;
- (void)_detachFadeInAnimations;
- (void)_considerDragFromMouseDown:(id)arg1;
- (struct CGSize)currentEventOffsetFromEvent:(id)arg1;
- (BOOL)dragShouldBeginFromMouseDown:(id)arg1 withExpiration:(id)arg2 xHysteresis:(double)arg3 yHysteresis:(double)arg4;
- (void)windowBackgroundDidChange;
- (id)tabViewItem;
- (id)tabDragImage;
- (void)tabButtonsClipRectDidChange;
- (struct CGSize)roundSizeInWindowCoordinates:(struct CGSize)arg1;
- (struct CGRect)stackingFrame;
- (struct CGRect)slidingFrame;
- (void)setStackingFrame:(struct CGRect)arg1;
- (void)setSlidingFrame:(struct CGRect)arg1;
- (void)setRightSeparatorMode:(int)arg1;
- (void)setRightSeparatorDirection:(int)arg1;
- (void)setLeftSeparatorMode:(int)arg1;
- (void)setLeftSeparatorDirection:(int)arg1;
- (void)setCloseAction:(SEL)arg1;
- (int)rightSeparatorMode;
- (double)maximumTextWidth;
- (id)miniWindowDragImage;
- (int)leftSeparatorMode;
- (unsigned long long)lastMouseDownModifierFlagsForCloseButton;
- (id)initWithFrame:(struct CGRect)arg1 tabViewItem:(id)arg2;
- (void)destroy;
- (void)closeTab:(id)arg1;
- (id)closeButton;
- (SEL)closeAction;
- (void)morphingDragImageEnded:(id)arg1;
- (void)morphingDragImage:(id)arg1 wasDroppedAtPointOnScreen:(struct CGPoint)arg2;
- (void)morphingDragImage:(id)arg1 movedToPointOnScreen:(struct CGPoint)arg2;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)shouldUseRolloverAppearance;
- (void)mouseEnteredOrExited:(BOOL)arg1;
- (void)setState:(long long)arg1;
- (void)viewDidMoveToWindow;
- (void)setToolTip:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)resetCursorRects;
- (id)menuForEvent:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)stopEditingTabName;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_stopEditingAndUninstallEditor;
- (void)mouseDown:(id)arg1;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFoldingTypesetter : NSATSTypesetter
{
    DVTFoldingLayoutManager *_foldingLayoutManager;
}

@property __weak DVTFoldingLayoutManager *foldingLayoutManager; // @synthesize foldingLayoutManager=_foldingLayoutManager;
- (void).cxx_destruct;
- (unsigned long long)_getRemainingNominalParagraphRange:(struct _NSRange *)arg1 andParagraphSeparatorRange:(struct _NSRange *)arg2 charactarIndex:(unsigned long long)arg3 layoutManager:(id)arg4 string:(id)arg5;
- (struct CGRect)boundingBoxForControlGlyphAtIndex:(unsigned long long)arg1 forTextContainer:(id)arg2 proposedLineFragment:(struct CGRect)arg3 glyphPosition:(struct CGPoint)arg4 characterIndex:(unsigned long long)arg5;
- (BOOL)shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)actionForControlCharacterAtIndex:(unsigned long long)arg1;

@end

@interface DVTGraphPopoverViewController : NSViewController <NSPopoverDelegate>
{
    NSPopover *_popover;
    NSTextField *_detailsTextField;
}

@property __weak NSTextField *detailsTextField; // @synthesize detailsTextField=_detailsTextField;
@property(retain) NSPopover *popover; // @synthesize popover=_popover;
- (void).cxx_destruct;
- (void)hidePopover;
- (void)showPopoverWithString:(id)arg1 atScreenPoint:(struct CGPoint)arg2 relativeToView:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTNoFirstResponderPopover : NSPopover
{
}

- (BOOL)_validatePopoverWindowFirstResponder;

@end

@interface DVTHUDPopUpContentViewController : DVTViewController
{
    CDStruct_bf6d4a14 _contentInset;
    DVTHUDPopUpController *_windowController;
}

+ (id)HUDPopUpContentViewController;
@property(retain) DVTHUDPopUpController *windowController; // @synthesize windowController=_windowController;
@property CDStruct_bf6d4a14 contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (void)alternateButtonAction:(id)arg1;
- (id)alternateButtonLabel;
- (BOOL)shouldShowDoneButton;
- (id)doneButtonLabel;
- (void)close:(id)arg1;
@property(readonly) struct CGSize doneButtonOffset;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface DVTFirstResponderDrawingStrategy : NSObject <DVTWindowActivationStateObserver, DVTInvalidation>
{
    NSView<DVTFirstResponderShowingView> *_view;
    BOOL _monitorWholeTree;
    BOOL _treeHasFirstResponder;
    BOOL _viewIsFirstResponder;
    BOOL _windowIsKey;
    BOOL _appIsActive;
    id <DVTInvalidation> _windowObservationToken;
    DVTNotificationToken *_appActivationObservation;
    DVTNotificationToken *_appDeactivationObservation;
}

+ (void)view:(id)arg1 willMoveToWindow:(id)arg2 createOrDestroyDrawingStrategyIfNeeded:(id *)arg3;
+ (void)view:(id)arg1 willMoveToWindow:(id)arg2 monitorWholeTree:(BOOL)arg3 createOrDestroyDrawingStrategyIfNeeded:(id *)arg4;
+ (void)initialize;
- (void).cxx_destruct;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)appActivationChanged;
- (void)resignedFirstResponder;
- (void)becameFirstResponder;
- (void)beginObservingWindow:(id)arg1;
- (BOOL)viewSouldDrawLikeFirstResponder;
- (void)setFlag:(char *)arg1 toValue:(BOOL)arg2;
- (void)primitiveInvalidate;
- (id)initWithView:(id)arg1 monitorWholeTree:(BOOL)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTGraphStyle : NSObject
{
    NSDictionary *_axisLabelAttributes;
    BOOL _showsAxis;
    BOOL _showsXAxisMajorGridlines;
    BOOL _showsYAxisMajorGridlines;
    int _graphBorderStyle;
    NSColor *_viewBackgroundColor;
    double _graphTitleOffset;
    NSColor *_graphBackgroundColor;
    NSColor *_graphBorderColor;
    double _graphBorderWidth;
    NSColor *_axisColor;
    NSColor *_axisLabelColor;
    NSFont *_axisLabelFont;
    double _xAxisLabelOffset;
    double _yAxisLabelOffset;
    double _xAxisTitleOffset;
    double _yAxisTitleOffset;
    NSNumberFormatter *_xAxisNumberFormatter;
    NSNumberFormatter *_yAxisNumberFormatter;
    NSColor *_majorGridlinesColor;
}

@property(copy, nonatomic) NSColor *majorGridlinesColor; // @synthesize majorGridlinesColor=_majorGridlinesColor;
@property(nonatomic) BOOL showsYAxisMajorGridlines; // @synthesize showsYAxisMajorGridlines=_showsYAxisMajorGridlines;
@property(nonatomic) BOOL showsXAxisMajorGridlines; // @synthesize showsXAxisMajorGridlines=_showsXAxisMajorGridlines;
@property(copy, nonatomic) NSNumberFormatter *yAxisNumberFormatter; // @synthesize yAxisNumberFormatter=_yAxisNumberFormatter;
@property(copy, nonatomic) NSNumberFormatter *xAxisNumberFormatter; // @synthesize xAxisNumberFormatter=_xAxisNumberFormatter;
@property(nonatomic) double yAxisTitleOffset; // @synthesize yAxisTitleOffset=_yAxisTitleOffset;
@property(nonatomic) double xAxisTitleOffset; // @synthesize xAxisTitleOffset=_xAxisTitleOffset;
@property(nonatomic) double yAxisLabelOffset; // @synthesize yAxisLabelOffset=_yAxisLabelOffset;
@property(nonatomic) double xAxisLabelOffset; // @synthesize xAxisLabelOffset=_xAxisLabelOffset;
@property(copy, nonatomic) NSFont *axisLabelFont; // @synthesize axisLabelFont=_axisLabelFont;
@property(copy, nonatomic) NSColor *axisLabelColor; // @synthesize axisLabelColor=_axisLabelColor;
@property(copy, nonatomic) NSColor *axisColor; // @synthesize axisColor=_axisColor;
@property(nonatomic) BOOL showsAxis; // @synthesize showsAxis=_showsAxis;
@property(nonatomic) int graphBorderStyle; // @synthesize graphBorderStyle=_graphBorderStyle;
@property(nonatomic) double graphBorderWidth; // @synthesize graphBorderWidth=_graphBorderWidth;
@property(copy, nonatomic) NSColor *graphBorderColor; // @synthesize graphBorderColor=_graphBorderColor;
@property(copy, nonatomic) NSColor *graphBackgroundColor; // @synthesize graphBackgroundColor=_graphBackgroundColor;
@property(nonatomic) double graphTitleOffset; // @synthesize graphTitleOffset=_graphTitleOffset;
@property(copy, nonatomic) NSColor *viewBackgroundColor; // @synthesize viewBackgroundColor=_viewBackgroundColor;
- (void).cxx_destruct;
- (void)_sendStyleChangedNotification;
@property(readonly) NSDictionary *axisLabelAttributes;
- (void)setAxisLabelsFont:(id)arg1;
- (id)init;

@end

@interface DVTComparisonConfigurationManager : NSObject
{
}

+ (id)fineGrainDiffHighlightColor;
+ (void)toggleComparisonOrientation;
+ (unsigned long long)comparisonOrientation;
+ (void)initialize;

@end

@interface DVTBezelAlertPanel : NSPanel
{
    NSView *_controlView;
    double _duration;
    double _fadeDuration;
    NSWindow *_eventualParent;
    NSTimer *_durationTimer;
    NSTimer *_fadeTimer;
}

+ (void)initialize;
@property double fadeDuration; // @synthesize fadeDuration=_fadeDuration;
@property double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSView *controlView; // @synthesize controlView=_controlView;
- (void).cxx_destruct;
- (void)orderOutImmediately;
- (void)orderOut:(id)arg1;
- (void)_completeOrderOut:(id)arg1;
- (void)orderFront:(id)arg1;
- (BOOL)isOpaque;
- (id)initWithIcon:(id)arg1 message:(id)arg2 controlView:(id)arg3 duration:(double)arg4;
- (id)initWithIcon:(id)arg1 message:(id)arg2 parentWindow:(id)arg3 duration:(double)arg4;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface DVTAnnotationManager : NSObject
{
    id <DVTAnnotationManagerDelegate> _delegate;
    NSMutableArray *_annotationProviders;
    DVTAnnotationContext *_context;
}

@property(retain) id <DVTAnnotationManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) DVTAnnotationContext *context; // @synthesize context=_context;
@property(retain) NSMutableArray *annotationProviders; // @synthesize annotationProviders=_annotationProviders;
- (void).cxx_destruct;
- (void)removeAllAnnotationProviders;
- (void)setupAnnotationProvidersWithContext:(id)arg1;
- (id)_installObservationBlockForAnnotationProvider:(id)arg1;

@end

@interface DVTDeveloperPortalFunctions : NSObject
{
    NSWindow *parentWindow;
    CDUnknownBlockType progressCallback;
    long long addedIdentitiesCount;
    NSString *_preselectedTeamID;
}

@property(copy) NSString *preselectedTeamID; // @synthesize preselectedTeamID=_preselectedTeamID;
@property(copy) CDUnknownBlockType progressCallback; // @synthesize progressCallback;
@property(retain) NSWindow *parentWindow; // @synthesize parentWindow;
- (void).cxx_destruct;
- (void)syncAndDownloadProfilesForAccount:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (id)syncAndDownloadProfilesOperationWithToken:(id)arg1;
- (void)generalSyncWithDeveloperAccount:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (id)generalSyncOperationWithToken:(id)arg1;
- (id)_callbackOperation:(CDUnknownBlockType)arg1;
- (void)_callProgressCallback:(id)arg1 withPercent:(double)arg2;

@end

@interface DVTPlainTableHeaderView : NSTableHeaderView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTTextFold : NSObject
{
    struct _NSRange _relativeLocation;
    DVTTextFold *_parent;
    NSMutableArray *_children;
    NSString *_label;
    unsigned long long _foldStyle;
}

+ (id)foldsFromString:(id)arg1;
+ (id)decodeFold:(id)arg1 forParent:(id)arg2;
@property unsigned long long foldStyle; // @synthesize foldStyle=_foldStyle;
- (void).cxx_destruct;
@property(readonly) NSAttributedString *foldedIconString;
@property(copy) NSString *label;
@property(readonly) NSMutableArray *children;
@property(readonly) unsigned long long numberOfChildren;
- (id)removeChildren:(id)arg1;
- (void)addChild:(id)arg1;
@property(retain) DVTTextFold *parent;
- (id)findFoldContainingRange:(struct _NSRange)arg1;
- (id)findFoldWithRange:(struct _NSRange)arg1;
- (unsigned long long)subtractOutFolds:(unsigned long long)arg1;
- (unsigned long long)addInFolds:(unsigned long long)arg1;
- (id)adjustFoldsForRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (id)foldsEnclosingRange:(struct _NSRange)arg1;
- (void)_addFoldsEnclosingRange:(struct _NSRange)arg1 toArray:(id)arg2;
- (id)lastFoldTouchingCharacterIndex:(unsigned long long)arg1;
- (id)firstFoldTouchingCharacterIndex:(unsigned long long)arg1;
- (id)allFoldsTouchingRange:(struct _NSRange)arg1;
- (id)inlineFoldsTouchingRange:(struct _NSRange)arg1;
- (id)blockFoldsTouchingRange:(struct _NSRange)arg1;
- (BOOL)isCharacterFoldedAtIndex:(unsigned long long)arg1;
- (BOOL)rangeIsInsideAFold:(struct _NSRange)arg1;
- (void)offsetBy:(long long)arg1;
@property struct _NSRange range;
- (BOOL)validate;
- (id)description;
- (id)innerDescription:(id)arg1;
@property(readonly) NSString *stringValue;
- (id)_pList;
- (id)initWithRange:(struct _NSRange)arg1;

@end

@interface DVTSplitViewItem : NSObject
{
    DVTSplitView *_splitView;
    NSView *_view;
    NSString *_identifier;
    double _lastVisibleHeightOrWidth;
    id _animatorProxy;
    BOOL _visible;
    BOOL _isInSetVisible;
}

+ (void)initialize;
@property(nonatomic, getter=isVisible) BOOL visible; // @synthesize visible=_visible;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain) NSView *view; // @synthesize view=_view;
@property DVTSplitView *splitView; // @synthesize splitView=_splitView;
- (void).cxx_destruct;
- (void)setVisibilityUsingAnimation:(BOOL)arg1;
- (void)toggleVisibilityUsingAnimation;
- (void)primitiveSetVisible:(BOOL)arg1;
- (void)updateVisibleDividerPosition;
- (BOOL)checkViewDidExpandOrCollapse;
- (void)_viewDidExpandOrCollapse:(BOOL)arg1;
- (void)_collapseView;
- (void)_updateVisibleBinding;
- (void)viewWillUninstall;
- (void)viewDidInstall;
@property double savedViewMagnitude;
- (void)recordCurrentFrameSize;
- (id)animator;
- (id)_animatorProxy;
- (id)initWithIdentifier:(id)arg1;
- (id)init;
- (id)dvtExtraBindings;

@end

@interface DVTSplitViewItemAnimatorProxy : NSObject
{
    DVTSplitViewItem *_item;
}

- (void).cxx_destruct;
@property(getter=isVisible) BOOL visible;
- (id)initWithSplitViewItem:(id)arg1;

@end

@interface DVTScopeBarsManagerAnimation : NSViewAnimation
{
    double _baseViewPreviousHeight;
    NSScrollView *_scrollView;
    NSView *_baseView;
}

@property(retain, nonatomic) NSView *baseView; // @synthesize baseView=_baseView;
@property(retain) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;

@end

@interface DVTScopeBarsManager : NSObject <DVTInvalidation, NSAnimationDelegate>
{
    id <DVTScopeBarHost> _host;
    NSMutableArray *_scopeBarControllers;
    DVTMapTable *_contentHeightObservers;
    NSViewAnimation *_currentAnimation;
    CDUnknownBlockType _currentCompletionBlock;
    int _borderSides;
}

+ (void)initialize;
@property(readonly, nonatomic) __weak NSViewAnimation *currentAnimation; // @synthesize currentAnimation=_currentAnimation;
@property(nonatomic) int borderSides; // @synthesize borderSides=_borderSides;
@property(readonly) NSArray *scopeBarControllers; // @synthesize scopeBarControllers=_scopeBarControllers;
- (void).cxx_destruct;
- (void)animationDidEnd:(id)arg1;
- (void)_adjustViewsForHeightOffset:(double)arg1 animate:(BOOL)arg2 extraAnimations:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (BOOL)dismissLastScopeBar;
- (void)removeAllScopeBarsAnimate:(BOOL)arg1;
- (void)removeScopeBar:(id)arg1 animate:(BOOL)arg2;
- (void)removeScopeBar:(id)arg1 animate:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)insertScopeBar:(id)arg1 atIndex:(unsigned long long)arg2 animate:(BOOL)arg3;
- (void)primitiveInvalidate;
- (id)initWithHost:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTHUDPopUpView : NSView
{
    double _arrowHeight;
    double _arrowPoint;
    unsigned long long _arrowEdge;
    BOOL _hidesArrow;
}

+ (void)initialize;
@property(nonatomic) BOOL hidesArrow; // @synthesize hidesArrow=_hidesArrow;
@property(nonatomic) double arrowHeight; // @synthesize arrowHeight=_arrowHeight;
@property(nonatomic) double arrowPoint; // @synthesize arrowPoint=_arrowPoint;
@property(nonatomic) unsigned long long arrowEdge; // @synthesize arrowEdge=_arrowEdge;
- (void)drawRect:(struct CGRect)arg1;
- (id)backgroundPathInRect:(struct CGRect)arg1;
- (struct CGRect)highlightRect;
@property(readonly) struct CGRect contentRect;
@property(readonly) struct CGPoint maximumArrowPoint;
@property(readonly) struct CGPoint minimumArrowPoint;
@property(readonly) struct CGPoint arrowCoordinates;
- (struct CGPoint)arrowCoordinatesForArrowPoint:(double)arg1;
- (double)adjustedArrowPointForArrowPoint:(double)arg1;
- (void)setArrowPointWithTargetPoint:(struct CGPoint)arg1;
- (BOOL)isValidTargetPoint:(struct CGPoint)arg1;
- (double)adjustedEdgeDistance;
- (double)edgeDistance;
- (BOOL)arrowOnTopOrBottomEdge;
- (BOOL)arrowOnLeftOrRightEdge;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

@end

@interface DVTPagingSheetWindowController : NSWindowController <DVTInvalidation>
{
    DVTViewController *_currentPageViewController;
    CDUnknownBlockType _completionBlock;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentPageViewController;
+ (void)initialize;
+ (id)defaultWindowNibName;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) DVTViewController *currentPageViewController; // @synthesize currentPageViewController=_currentPageViewController;
- (void).cxx_destruct;
- (void)dvt_sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSheetModalForWindow:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)didEndSheetWithReturnCode:(long long)arg1;
- (void)willBeginSheet;
@property(retain, nonatomic) Class currentPageViewControllerClass;
- (void)primitiveInvalidate;
- (void)windowDidLoad;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTBarBackground : NSView <NSTabViewDelegate>
{
    BOOL _becomingFirstResponder;
    BOOL _mouseDownCanMoveWindow;
    BOOL _hasTopBorder;
    BOOL _hasBottomBorder;
    BOOL _usesScopeBarAppearance;
    BOOL _allowDetachDrags;
    DVTTabbedWindowTabViewItem *_selectedTabViewItem;
    NSColor *_bottomBorderColor;
    NSColor *_backgroundColor;
    NSImage *_backgroundImage;
    NSView *_firstChildKeyView;
    NSView *_lastChildKeyView;
    id <DVTBarBackgroundDelegate> _delegate;
    NSWindowController<DVTTabbedWindowControlling> *_tabbedWindowController;
    NSTabView *_tabView;
    NSView *_externalNextKeyView;
}

+ (id)keyPathsForValuesAffectingActiveViewController;
+ (BOOL)isTabDrag:(id)arg1;
+ (BOOL)isMiniWindowDrag:(id)arg1;
@property(retain, nonatomic) NSView *externalNextKeyView; // @synthesize externalNextKeyView=_externalNextKeyView;
@property(nonatomic) __weak NSTabView *tabView; // @synthesize tabView=_tabView;
@property(retain) NSWindowController<DVTTabbedWindowControlling> *tabbedWindowController; // @synthesize tabbedWindowController=_tabbedWindowController;
@property(retain, nonatomic) id <DVTBarBackgroundDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSView *lastChildKeyView; // @synthesize lastChildKeyView=_lastChildKeyView;
@property(retain, nonatomic) NSView *firstChildKeyView; // @synthesize firstChildKeyView=_firstChildKeyView;
@property(nonatomic) BOOL allowDetachDrags; // @synthesize allowDetachDrags=_allowDetachDrags;
@property(readonly, nonatomic) NSImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL usesScopeBarAppearance; // @synthesize usesScopeBarAppearance=_usesScopeBarAppearance;
@property(copy, nonatomic) NSColor *bottomBorderColor; // @synthesize bottomBorderColor=_bottomBorderColor;
@property(nonatomic) BOOL hasBottomBorder; // @synthesize hasBottomBorder=_hasBottomBorder;
@property(nonatomic) BOOL hasTopBorder; // @synthesize hasTopBorder=_hasTopBorder;
- (void).cxx_destruct;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)updateLabelNowForTab:(id)arg1;
- (void)updateLabelSoonForTab:(id)arg1;
- (void)updateTabTitlesNow;
- (void)tabTitlesDidChange;
- (void)setReadyToUse;
- (void)disconnectFromTabbedWindowController;
- (struct CGRect)contentFrame;
- (void)_windowChangedKeyState;
- (void)didCollapse;
- (void)willCollapse;
- (void)didExpand;
- (void)willExpand;
- (void)removeFromSuperview;
- (void)setNextKeyView:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)setDefaultKeyLoop;
- (void)setMouseDownCanMoveWindow:(BOOL)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawBackgroundInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) double topBorderHeight;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)selectTabViewItemAtIndex:(long long)arg1;
- (void)selectTabViewItem:(id)arg1;
@property(readonly, nonatomic) DVTTabbedWindowTabViewItem *selectedTabViewItem; // @synthesize selectedTabViewItem=_selectedTabViewItem;
@property(readonly) NSArray *tabViewItems;
- (void)insertTabViewItem:(id)arg1 atIndex:(long long)arg2;
- (void)moveTabViewItem:(id)arg1 toIndex:(long long)arg2;
- (void)removeTabViewItem:(id)arg1;
- (long long)indexOfTabViewItem:(id)arg1;
- (id)tabViewItemAtIndex:(long long)arg1;
@property(readonly) long long numberOfTabViewItems;
- (id)newTabWithViewController:(id)arg1 atIndex:(unsigned long long)arg2;
@property(readonly) DVTViewController<DVTTabbedWindowTabContentControlling> *activeViewController;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
@property(readonly, nonatomic) NSColor *defaultBottomBorderLineColor;
@property(readonly, nonatomic) NSColor *secondTopBorderLineColor;
@property(readonly, nonatomic) NSColor *firstTopBorderLineColor;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTDynamicTableView : DVTTableView <NSTableViewDelegate, NSTableViewDataSource>
{
    DVTMapTable *_viewsInVisibleRows;
    long long _dynEditingRow;
    long long _editingCount;
    long long _lastNumSections;
    long long _lastNumTableRows;
    long long *_rowsPerSectionCache;
    id <DVTDynamicTableViewDelegate> _dynamicDelegate;
    id <DVTDynamicTableViewDataSource> _dynamicDataSource;
    BOOL _hasSectionHeaders;
    BOOL _allowsSelection;
}

@property BOOL allowsSelection; // @synthesize allowsSelection=_allowsSelection;
@property BOOL hasSectionHeaders; // @synthesize hasSectionHeaders=_hasSectionHeaders;
@property(retain) id <DVTDynamicTableViewDataSource> dynamicDataSource; // @synthesize dynamicDataSource=_dynamicDataSource;
- (void).cxx_destruct;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)validateProposedFirstResponder:(id)arg1 forEvent:(id)arg2;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)keyForRow:(long long)arg1 inSection:(long long)arg2;
- (long long)_mapDynamicRow:(long long)arg1 dynamicSection:(long long)arg2;
- (void)_mapTableRow:(long long)arg1 toDynamicRow:(long long *)arg2 dynamicSection:(long long *)arg3;
- (void)selectRow:(long long)arg1 inSection:(long long)arg2;
- (void)noteHeightOfRow:(long long)arg1 inSectionChanged:(long long)arg2 animate:(BOOL)arg3;
- (struct CGRect)rectOfRow:(long long)arg1 inSection:(long long)arg2;
- (struct CGRect)rectOfHeaderInSection:(long long)arg1;
- (void)didEndEditingRow:(long long)arg1 inSection:(long long)arg2;
- (void)willStartEditingRow:(long long)arg1 inSection:(long long)arg2;
- (long long)editedRow;
- (void)reloadSectionsForIndexes:(id)arg1;
- (void)reloadDataForRowIndexes:(id)arg1 columnIndexes:(id)arg2;
- (void)reloadData;
- (void)_removeAllCachedViews;
- (void)_removeCachedViewsInIndexSet:(id)arg1;
- (void)_removeCachedViewForRow:(long long)arg1;
@property(retain) id <DVTDynamicTableViewDelegate> dynamicDelegate;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void)_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTNumberToTextColorTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface DVTPopUpButtonCell : NSPopUpButtonCell
{
    NSArray *_statusCategoryNames;
    NSDictionary *_statusCellsByCategoryName;
    int _arrowStyle;
    int _emphasizeMarkerStyle;
    BOOL _showsStatusItems;
    BOOL _drawsEmphasizeMarker;
}

+ (void)initialize;
@property int emphasizeMarkerStyle; // @synthesize emphasizeMarkerStyle=_emphasizeMarkerStyle;
@property BOOL drawsEmphasizeMarker; // @synthesize drawsEmphasizeMarker=_drawsEmphasizeMarker;
@property(copy) NSArray *statusCategoryNames; // @synthesize statusCategoryNames=_statusCategoryNames;
@property BOOL showsStatusItems; // @synthesize showsStatusItems=_showsStatusItems;
@property int arrowStyle; // @synthesize arrowStyle=_arrowStyle;
- (void).cxx_destruct;
- (void)updateBoundTitle;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawEmphasizeMarkerWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)statusRectForBounds:(struct CGRect)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (id)statusItemCellsForCategory:(id)arg1;
- (void)setStatusItemCells:(id)arg1 forCategory:(id)arg2;
- (id)_statusCellsByCategoryName;
- (void)selectItemWithRepresentedObject:(id)arg1;
- (struct CGRect)_indicatorFrameForCellFrame:(struct CGRect)arg1 isFlipped:(BOOL)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)dvtExtraBindings;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface DVTScopeBarController : DVTViewController
{
    NSSegmentedControl *_dismissButton;
    DVTScopeBarView *_scopeBarView;
    DVTControllerContentView *_contentView;
    DVTViewController<DVTScopeBarContentController> *_contentViewController;
    BOOL _showsDismissButton;
}

@property(nonatomic) BOOL showsDismissButton; // @synthesize showsDismissButton=_showsDismissButton;
@property(retain) DVTViewController<DVTScopeBarContentController> *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (void)_adjustSubviews;
- (void)dismissButtonAction:(id)arg1;
@property(readonly) double preferredScopeBarHeight;
@property int borderSides;
- (void)loadView;
- (void)primitiveInvalidate;
- (id)initWithContentViewController:(id)arg1;
- (id)initUsingDefaultNib;

@end

@interface DVTScrollableTabBarViewButton : NSButton
{
    BOOL _active;
    BOOL _showsLeftSeparator;
    BOOL _showsRightSeparator;
    DVTTabbedWindowTabViewItem *_tabViewItem;
}

+ (double)contentBoundsWidthForButtonWidth:(double)arg1;
@property(retain, nonatomic) DVTTabbedWindowTabViewItem *tabViewItem; // @synthesize tabViewItem=_tabViewItem;
@property(nonatomic) BOOL showsRightSeparator; // @synthesize showsRightSeparator=_showsRightSeparator;
@property(nonatomic) BOOL showsLeftSeparator; // @synthesize showsLeftSeparator=_showsLeftSeparator;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
- (void).cxx_destruct;
- (id)_backgroundImageForActiveTab:(BOOL)arg1 inActiveWindow:(BOOL)arg2;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)_windowChangedKeyState;
- (struct CGRect)contentBounds;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTScrollableTabBarView : DVTBarBackground <NSAnimationDelegate, DVTMorphingDragImageDropTarget, NSDraggingDestination, NSTabViewDelegate>
{
    NSTrackingArea *_trackingArea;
    unsigned long long _indexOfTabUnderMouse;
    DVTScrollableTabBarViewButton *_createTabButton;
    NSScrollView *_scrollView;
    NSView *_scrollViewDocumentView;
    NSView *_selectedTabContainerView;
    NSView *_tabContainer;
    NSMutableArray *_tabButtons;
    unsigned long long _selectedTabButtonIndex;
    unsigned long long _lastInsertedTabButtonIndex;
    BOOL _isInteractivelyClosingTabs;
    BOOL _isChangingSelection;
    BOOL _isReadyToUse;
    DVTScrollableTabButton *_draggedTabButton;
    unsigned long long _dragSourceIndex;
    unsigned long long _dropIndex;
    unsigned long long _fallbackSelectedTabButtonIndex;
    BOOL _shouldPreventLayOutWhileMovingButtons;
    BOOL _selectedButtonIsDetached;
    BOOL _isDroppingButton;
    struct CGRect _layoutBounds;
    struct CGRect _firstButtonFrame;
    double _remainingWidthInTabBarAfterDividingEvenlyAmongButtons;
    double _scrollViewContentWidth;
    unsigned long long _stackingRegions;
    BOOL _isStackingButtons;
    double _edgeScrollingFactor;
    double _titleScrollingFactor;
    double _selectedButtonSlowingFactor;
    double _slowingDistance;
    DVTScrollableTabBarViewAnimation *_animation;
    CALayer *_tabContainerMaskLayer;
    CALayer *_leftTabContainerMaskLayer;
    CALayer *_rightTabContainerMaskLayer;
    CALayer *_backgroundLayerLeftOfActiveTab;
    CALayer *_backgroundLayerRightOfActiveTab;
    BOOL _isReorderingTabButtons;
}

@property(readonly, nonatomic) BOOL isReorderingTabButtons; // @synthesize isReorderingTabButtons=_isReorderingTabButtons;
- (void).cxx_destruct;
- (void)tabTitlesDidChange;
- (struct CGRect)_visibleRectWithOriginalRect:(struct CGRect)arg1 rectToClipOut:(struct CGRect)arg2;
- (void)_layOutBackgroundLayersWithSelectedButtonFrame:(struct CGRect)arg1 animated:(BOOL)arg2;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (unsigned long long)_draggedURLOperationForDraggingInfo:(id)arg1;
- (void)_performTabBarDragOperationForURLs:(id)arg1 droppedAtIndex:(unsigned long long)arg2 honorWindowPolicy:(BOOL)arg3;
- (void)_performTabBarDragOperationForTabViewItem:(id)arg1 URL:(id)arg2;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (unsigned long long)_updateDropIndexWithDraggingInfo:(id)arg1;
- (BOOL)morphingDragImage:(id)arg1 performDragOperation:(id)arg2;
- (void)morphingDragImage:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingEntered:(id)arg2;
- (BOOL)wantsPeriodicDraggingUpdatesForMorphingDragImage:(id)arg1;
- (void)_detachTabAndPositionUnderCursor:(id)arg1;
- (struct CGPoint)_mouseLocationInDragImageForTabButton:(id)arg1;
- (BOOL)_shouldDetachTabForMouseEvent:(id)arg1;
- (BOOL)_canDetachTab;
- (void)_autoscrollButtonsForStackingRegion:(unsigned long long)arg1;
- (void)_updateDropIndexWithDraggingLocation:(struct CGPoint)arg1;
- (void)_dragTabWithMouseDownOffset:(struct CGPoint)arg1 mouseEvent:(id)arg2;
- (long long)_tabDragResultForEventTrackingWithStartEvent:(id)arg1;
- (long long)_tabDragResultForInitialDragWithStartEvent:(id)arg1;
- (void)_trackReorderingEventsWithStartEvent:(id)arg1 forTabButton:(id)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_setIndexOfTabUnderMouse:(unsigned long long)arg1 animated:(BOOL)arg2;
- (BOOL)_canShowCloseButton;
- (void)_updateIndexOfTabUnderCurrentMouseLocation:(BOOL)arg1;
- (void)updateTrackingAreas;
- (void)_updateKeyLoop;
- (void)_trackMouseEventsForEvent:(id)arg1 onTabAtIndex:(unsigned long long)arg2;
- (BOOL)_trackMouseEventsForEvent:(id)arg1 onCloseButtonOfTabButton:(id)arg2;
- (BOOL)_isMousePoint:(struct CGPoint)arg1 onCloseButtonOfTabButton:(id)arg2;
- (void)_trackMouseEventsForEvent:(id)arg1 inStackingRegion:(unsigned long long)arg2 withTabAtIndex:(unsigned long long)arg3;
- (id)_trackMouseEventsUntilMouseUp:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)otherMouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (id)_titlesAfterLeadingTruncation:(id)arg1 toFitInWidth:(double)arg2 withFont:(id)arg3;
- (unsigned long long)_numberOfCommonLeadingWordsOfWordList:(id)arg1 andWordList:(id)arg2;
- (id)_leadingTruncateTitleWithWords:(id)arg1 toFitInWidth:(double)arg2 withFont:(id)arg3 maximumNumberOfWordsToRemove:(unsigned long long)arg4;
- (void)updateTabTitles;
- (void)updateTabTitlesNow;
- (void)_moveButton:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)_buttonDidBecomeFirstResponder:(id)arg1;
- (void)_didClickCloseButtonOnTab:(id)arg1 modifierFlags:(unsigned long long)arg2;
- (void)_tabButtonClicked:(id)arg1;
- (void)moveTabViewItem:(id)arg1 toIndex:(long long)arg2;
- (unsigned long long)numberOfTabs;
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)_updateNewTabButtonImage;
- (id)_inactiveTabBackgroundForNonMainWindowNoTopBar;
- (id)_inactiveTabBackgroundForMainWindowNoTopBar;
- (id)_inactiveTabBackgroundForNonMainWindow;
- (id)_inactiveTabBackgroundForMainWindow;
- (id)_backgroundFillImage;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (void)_scrollToButtonAtIndex:(unsigned long long)arg1;
- (void)_scrollAfterClickingOnStackingRegion:(unsigned long long)arg1 withMouseOverTabAtIndex:(unsigned long long)arg2;
- (double)_effectiveRightStackWidthForButtonAtIndex:(unsigned long long)arg1;
- (double)_effectiveLeftStackWidthForButtonAtIndex:(unsigned long long)arg1;
- (unsigned long long)_visibleTabIndexAtPoint:(struct CGPoint)arg1 stackingRegion:(unsigned long long *)arg2 ignorePointsOutsideOfLayoutBounds:(BOOL)arg3;
- (unsigned long long)_visibleTabIndexAtPoint:(struct CGPoint)arg1 stackingRegion:(unsigned long long *)arg2;
- (unsigned long long)_centeredTabIndexAtPoint:(struct CGPoint)arg1;
- (unsigned long long)_tabIndexAtPoint:(struct CGPoint)arg1 withButtonWidth:(double)arg2 supplementalWidth:(double)arg3;
- (unsigned long long)_tabIndexAtPoint:(struct CGPoint)arg1;
- (struct CGRect)_viewFrameForAdjustedButtonFrame:(struct CGRect)arg1;
- (double)_horizontalOffsetForButtonAtIndex:(unsigned long long)arg1 frontmostButtonIndex:(unsigned long long)arg2 slowingFactor:(double)arg3;
- (struct CGRect)_tabIndexAtPointWhenLayingOutButtonsToAlignWithWindowCenter:(unsigned long long)arg1;
- (struct CGRect)_adjustedFrameForButtonAtIndex:(unsigned long long)arg1 isHidden:(char *)arg2;
- (struct CGRect)_frameForButtonAtIndex:(unsigned long long)arg1 firstButtonOffset:(double)arg2 buttonWidth:(double)arg3 supplementalWidth:(double)arg4;
- (struct CGRect)_unstackedFrameForButtonAtIndex:(unsigned long long)arg1;
- (unsigned long long)_calculateStackingRegions;
- (double)_buttonWidthForNumberOfButtons:(unsigned long long)arg1 inWidth:(double)arg2 remainderWidth:(double *)arg3;
- (void)_updateButtonWidthAndRemainingWidthInTabBarToDivideAmongButtons;
- (void)_recalculateLayout;
- (BOOL)_shouldLayOutButtonsToAlignWithWindowCenter;
- (unsigned long long)_numberOfTabsForLayout;
- (id)_tabButtonAffectingLeftSeparatorOfTabAtIndex:(unsigned long long)arg1;
- (id)_tabButtonAffectingRightSeparatorOfTabAtIndex:(unsigned long long)arg1;
- (void)_redrawButtonSeparators;
- (void)_restackButtonViews;
- (unsigned long long)_frontmostButtonIndex;
- (void)_updateButtonSeparators;
- (void)_removeTabButton:(id)arg1;
- (void)_insertTabButtonWithTabViewItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)_insertMissingButtonsFromTabView;
- (void)_layOutButtonsAnimated:(BOOL)arg1;
- (void)_updateButtonsAndLayOutAnimated:(BOOL)arg1;
- (void)_setUpViewAnimationForLayout:(BOOL)arg1;
- (void)setReadyToUse;
- (BOOL)_shouldLayOutButtonsNow;
- (void)_clipViewBoundsChanged:(id)arg1;
- (void)_finishAnimation;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
- (void)updateLabelNowForTab:(id)arg1;
- (void)updateLabelSoonForTab:(id)arg1;
- (BOOL)isOpaque;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)disconnectFromTabbedWindowController;
- (void)_commonScrollableTabBarViewInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)newTabIcon;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTColorSwatchLabel : NSView
{
    NSColor *_color;
    NSView *_colorSwatch;
    NSTextField *_labelTextField;
    NSTextField *_valueTextField;
}

@property(readonly) NSTextField *valueTextField; // @synthesize valueTextField=_valueTextField;
@property(readonly) NSTextField *labelTextField; // @synthesize labelTextField=_labelTextField;
@property(readonly) NSView *colorSwatch; // @synthesize colorSwatch=_colorSwatch;
- (void).cxx_destruct;
- (id)_createColorSwatchImageView;
- (id)_createLabel:(id)arg1;
- (id)_createValueTextField;
- (id)_createLabelTextField;
- (void)_buildViewWithoutValueTextField;
- (void)_buildViewWithValueTextField;
- (id)initWithColor:(id)arg1 label:(id)arg2 value:(id)arg3 valueFormatter:(id)arg4;
- (id)initWithColor:(id)arg1 label:(id)arg2 value:(id)arg3;
- (id)initWithColor:(id)arg1 label:(id)arg2;

@end

@interface DVTSharedLayerDelegate : NSObject
{
}

+ (id)sharedInstance;
- (BOOL)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3;

@end

@interface DVTCachedImageView : NSView
{
    NSView *_originalView;
    NSBitmapImageRep *_cachedImage;
}

@property(retain, nonatomic) NSBitmapImageRep *cachedImage; // @synthesize cachedImage=_cachedImage;
@property(retain, nonatomic) NSView *originalView; // @synthesize originalView=_originalView;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithView:(id)arg1;

@end

@interface DVTSplitViewAnimation : NSAnimation <NSAnimationDelegate>
{
    DVTSplitViewItem *_splitViewItemToToggle;
    DVTSplitViewItem *_adjacentSplitViewItem;
    NSView *_viewToToggle;
    NSView *_adjacentView;
    long long _animatedFrames;
    NSMutableArray *_animatingViews;
    NSMutableArray *_startFrames;
    NSMutableArray *_stopFrames;
    struct CGRect _windowStartFrame;
    struct CGRect _windowStopFrame;
    BOOL _isCollapseAnimation;
    BOOL _viewToToggleIsOnLeftOrTop;
    BOOL _adjacentViewIsOnLeftOrTop;
    BOOL _adjacentSplitViewItemVisibilityChanged;
}

- (void).cxx_destruct;
- (void)_computeStopFrames;
- (void)_computeStartFrames;
- (void)animationDidEnd:(id)arg1;
- (void)_adjustViewToShowsFrameForAnimationStart;
- (BOOL)private_animationShouldStart:(id)arg1;
- (void)setCurrentProgress:(float)arg1;
- (id)initWithSplitView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTRolloverImageButton : DVTRolloverTrackingButton
{
    NSImage *_rolloverImage;
    NSImage *_alternateRolloverImage;
    NSColor *_backgroundColor;
}

+ (id)closeButtonImage;
@property(copy) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) NSImage *alternateRolloverImage; // @synthesize alternateRolloverImage=_alternateRolloverImage;
@property(nonatomic) NSImage *rolloverImage; // @synthesize rolloverImage=_rolloverImage;
- (void).cxx_destruct;
- (void)configureAsCloseButton;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_setAttributes;

@end

@interface DVTFindPattern : NSObject <NSCoding, NSCopying>
{
    NSString *regularExpression;
    NSString *tokenString;
    NSString *displayString;
    NSString *replacementString;
    NSString *uniqueID;
    BOOL allowsBackreferences;
    BOOL isNegation;
    int groupID;
    int captureGroupID;
    int repeatedPatternID;
}

+ (id)placeholderFindPattern;
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
@property(copy) NSString *replacementString; // @synthesize replacementString;
@property int repeatedPatternID; // @synthesize repeatedPatternID;
@property(readonly) NSString *uniqueID; // @synthesize uniqueID;
@property int captureGroupID; // @synthesize captureGroupID;
@property BOOL isNegation; // @synthesize isNegation;
@property BOOL allowsBackreferences; // @synthesize allowsBackreferences;
@property int groupID; // @synthesize groupID;
@property(copy) NSString *tokenString; // @synthesize tokenString;
@property(copy) NSString *regularExpression; // @synthesize regularExpression;
@property(copy) NSString *displayString; // @synthesize displayString;
- (void).cxx_destruct;
- (id)backreferenceExpression;
- (id)replaceExpression;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPropertyListRepresentation:(id)arg1;
- (id)propertyListRepresentation;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)generateNewUniqueID;
- (void)_setUniqueID:(id)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;

@end

@interface DVTIconSetComponent : NSObject
{
    BOOL _faultedImage;
    id _image;
    long long _scale;
    NSURL *_fileURL;
    struct CGSize _size;
}

@property(readonly) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly) long long scale; // @synthesize scale=_scale;
@property(readonly) struct CGSize size; // @synthesize size=_size;
- (void).cxx_destruct;
- (id)image;
@property(readonly) struct CGImage *cgImage;
- (id)description;
- (long long)compare:(id)arg1;
@property(readonly) NSString *fileName;
- (id)initWithFileURL:(id)arg1 size:(struct CGSize)arg2 scale:(long long)arg3;

@end

@interface DVTIconSet : NSObject
{
    NSArray *_components;
}

+ (id)generateThumbnailFromURL:(id)arg1 targetSize:(struct CGSize)arg2;
+ (id)generateImageFromURL:(id)arg1 error:(id *)arg2;
@property(readonly) NSArray *components; // @synthesize components=_components;
- (void).cxx_destruct;
- (id)description;
- (id)generateImageReturningError:(id *)arg1;
- (id)initWithURL:(id)arg1 error:(id *)arg2;

@end

@interface _DVTSlidingView : NSObject
{
    NSView *view;
    struct CGRect startFrame;
    struct CGRect endFrame;
    double startTime;
    double duration;
}

- (void).cxx_destruct;
- (struct CGRect)frameForTime:(double)arg1;
- (struct CGRect)endFrame;
- (id)initWithStartFrame:(struct CGRect)arg1 endFrame:(struct CGRect)arg2 duration:(double)arg3;

@end

@interface DVTSlidingAnimation : NSObject
{
    id _delegate;
    NSMapTable *_views;
    BOOL _sliding;
    BOOL _paused;
}

+ (id)_runLoopModesForAnimation;
- (void).cxx_destruct;
- (void)resume;
- (void)pause;
- (BOOL)isSliding;
- (void)setDelegate:(id)arg1;
- (void)stop;
- (void)stopView:(id)arg1;
- (struct CGRect)destinationForView:(id)arg1;
- (void)sendViewToDestination:(id)arg1;
- (void)setDestinationForView:(id)arg1 to:(struct CGRect)arg2 duration:(double)arg3;
- (void)showNextFrame;
- (void)updateTimer;
- (void)updateViewPosition:(id)arg1 forTime:(double)arg2;
- (id)init;

@end

@interface DVTTitleBarButton : NSView
{
    NSString *_title;
    NSTextFieldCell *_titleCell;
    BOOL _noDragRectComputed;
}

- (void).cxx_destruct;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)setTitle:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)setFrame:(struct CGRect)arg1 ignoringInternalGeometry:(BOOL)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateFrameUsingAvailableSpace:(double)arg1;
- (void)updateFrame;
- (void)resetNoDragRect;
- (void)flagsChanged:(id)arg1;
- (id)title;
- (void)mouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldShowPathPopUpMenuFromMouseDown:(id)arg1;
- (void)showPathPopUpMenu;
- (void)doNothing:(id)arg1;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)titleRectInWindow;
- (struct CGRect)titleRect;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTReverseDragImageStateTransitionPrototype : DVTDraggedImageStateTransitionView
{
}

- (void)setProgress:(float)arg1;

@end

@interface DVTIdentityDragImageStateTransition : DVTDraggedImageStateTransitionView
{
}

- (double)duration;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTSimpleCrossfadeDragImageStateTransition : DVTDraggedImageStateTransitionView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setProgress:(float)arg1;
- (struct CGSize)idealFrameSize;
- (struct CGPoint)toAnchor;
- (struct CGPoint)fromAnchor;
- (id)toImage;
- (id)fromImage;
- (id)initWithFromState:(id)arg1 andToState:(id)arg2;

@end

@interface DVTDraggedImageState : NSObject
{
    struct CGPoint _anchorPoint;
    BOOL _isAnchorPointExplicit;
}

- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)synthesizedAnchorPoint:(struct CGPoint *)arg1 forSubiquentState:(id)arg2;
- (void)synthesizeAnchorPointFromPreviousStates:(id)arg1;
- (id)image;
- (struct CGPoint)anchorPoint;
- (void)setAnchorPoint:(struct CGPoint)arg1;
- (BOOL)isAnchorPointExplicit;

@end

@interface DVTSimpleDraggedImageState : DVTDraggedImageState
{
    NSImage *_image;
}

- (void).cxx_destruct;
- (id)image;
- (id)initWithImage:(id)arg1;

@end

@interface DVTDraggedImageStateTransitionView : NSView
{
    float _progress;
    DVTDraggedImageState *_fromState;
    DVTDraggedImageState *_toState;
}

- (void).cxx_destruct;
- (id)toState;
- (id)fromState;
- (float)progress;
- (void)setProgress:(float)arg1;
- (double)duration;
- (struct CGPoint)anchorPoint;
- (id)initWithFromState:(id)arg1 andToState:(id)arg2;

@end

@interface DVTDraggedImageStateTransitionRegistry : NSObject
{
    NSMutableDictionary *_registry;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)transitionFromState:(id)arg1 toState:(id)arg2;
- (void)registerTransition:(Class)arg1 fromImageStateClass:(Class)arg2 toImageStateClass:(Class)arg3;
- (id)init;

@end

@interface DVTLibraryDetailEditorController : DVTViewController
{
    CDUnknownBlockType _didEditHandlerBlock;
    DVTLibraryDetailController *_currentDetailController;
    NSResponder *_initialResponder;
    DVTLibraryAsset *_editedAsset;
}

@property(retain, nonatomic) DVTLibraryAsset *editedAsset; // @synthesize editedAsset=_editedAsset;
@property(retain) NSResponder *initialResponder; // @synthesize initialResponder=_initialResponder;
@property(retain) DVTLibraryDetailController *currentDetailController; // @synthesize currentDetailController=_currentDetailController;
@property(readonly, copy) CDUnknownBlockType didEditHandlerBlock; // @synthesize didEditHandlerBlock=_didEditHandlerBlock;
- (void).cxx_destruct;
- (void)didChangeCurrentDetailController;
- (void)willChangeCurrentDetailController;
- (void)primitiveInvalidate;
- (id)initWithDidEditHandlerBlock:(CDUnknownBlockType)arg1;

@end

@interface DVTLibraryGroup : DVTAbstractLibraryGroup
{
    DVTMutableOrderedSet *_assets;
    BOOL _needsSort;
    BOOL _assetsAreEditable;
    BOOL _groupsAreEditable;
}

@property BOOL groupsAreEditable; // @synthesize groupsAreEditable=_groupsAreEditable;
@property BOOL assetsAreEditable; // @synthesize assetsAreEditable=_assetsAreEditable;
- (void).cxx_destruct;
- (BOOL)containsAsset:(id)arg1;
- (id)assets;
- (long long)numberOfAssets;
- (void)insertAsset:(id)arg1 atIndex:(long long)arg2;
- (void)removeAsset:(id)arg1;
- (void)sorteAssetsIfNeeded;
- (void)primitiveInvalidate;
- (id)initWithTitle:(id)arg1 andLibrary:(id)arg2;

@end

@interface DVTFoldingLayoutManager : NSLayoutManager <DVTFoldingManagerDelegate>
{
    DVTFoldingManager *_foldingManager;
    NSCell *_blockFoldCell;
    DVTTextFoldInlineTokenAttachmentCell *_inlineFoldCell;
}

+ (id)layoutLogAspect;
@property(copy) DVTTextFoldInlineTokenAttachmentCell *inlineFoldCell; // @synthesize inlineFoldCell=_inlineFoldCell;
@property(copy) NSCell *blockFoldCell; // @synthesize blockFoldCell=_blockFoldCell;
@property(readonly) DVTFoldingManager *foldingManager; // @synthesize foldingManager=_foldingManager;
- (void).cxx_destruct;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceBetweenInsertionPoints:(double *)arg3;
- (id)foldCellAtCharacterIndex:(unsigned long long)arg1;
- (struct CGSize)attachmentSizeForGlyphAtIndex:(unsigned long long)arg1;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)foldingManager:(id)arg1 didUnfoldRange:(struct _NSRange)arg2;
- (void)foldingManager:(id)arg1 didFoldRange:(struct _NSRange)arg2;
- (void)_invalidateGlyphsInCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)_paragraphExtendedCharacterRange:(struct _NSRange)arg1;
- (void)textStorage:(id)arg1 edited:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4 invalidatedRange:(struct _NSRange)arg5;
- (void)_invalidateGlyphsForExtendedCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2 includeBlocks:(BOOL)arg3;
- (struct _NSRange)_extendedCharRangeForInvalidation:(struct _NSRange)arg1 editedCharRange:(struct _NSRange)arg2;
- (void)generateInlineFoldsForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)paragraphRangeForLineRange:(struct _NSRange)arg1;
- (struct CGSize)layoutSizeForFoldAtCharacterIndex:(unsigned long long)arg1;
- (BOOL)foldsAreValid:(id)arg1;
@property DVTTextStorage *textStorage;
- (void)enableTextFolding:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTDragDeleteTarget : NSObject
{
}

- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;

@end

@interface DVTDragManager : NSObject
{
}

+ (BOOL)isUserDragging;
+ (id)sharedInstance;
- (unsigned long long)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 mouseDownEvent:(id)arg4 mouseDraggedEvent:(id)arg5 pasteboard:(id)arg6 allowedOperations:(unsigned long long)arg7 source:(id)arg8 slideBack:(BOOL)arg9 draggingSourceContext:(id)arg10;
- (unsigned long long)dragImage:(id)arg1 at:(struct CGPoint)arg2 mouseDownEvent:(id)arg3 pasteboard:(id)arg4 allowedOperations:(unsigned long long)arg5 source:(id)arg6 slideBack:(BOOL)arg7 draggingSourceContext:(id)arg8;

@end

@interface DVTDelayedMenuButton : DVTRolloverTrackingButton
{
    BOOL _showsMenuIndcatorOnlyWhileMouseInside;
}

+ (id)keyPathsForValuesAffectingCurrentMenuItem;
+ (Class)cellClass;
@property(nonatomic) BOOL showsMenuIndcatorOnlyWhileMouseInside; // @synthesize showsMenuIndcatorOnlyWhileMouseInside=_showsMenuIndcatorOnlyWhileMouseInside;
- (void)mouseEnteredOrExited:(BOOL)arg1;
- (BOOL)_allowsContextMenus;
- (void)_runPopup:(id)arg1;
- (struct CGSize)menuOffset;
@property(copy) NSMenuItem *currentMenuItem;
- (void)setMenu:(id)arg1;
@property(retain) id <DVTDelayedMenuButtonDelegate> delegate;

@end

@interface DVTDelayedMenuButtonCell : NSButtonCell
{
    NSMenuItem *_currentMenuItem;
    NSMenu *_trampolineMenu;
    id <DVTDelayedMenuButtonDelegate> _delegate;
    NSImage *_disabledImage;
    NSImage *_arrowImage;
    struct CGSize _originalArrowSize;
    BOOL _ignoredAction;
    BOOL _senderOfButtonActionIsButton;
    BOOL _delegateRespondsToWillSetCurrentMenuItem;
    BOOL _delegateRespondsToUpdatedMenu;
    BOOL _buttonWantsMenuHidden;
    BOOL _showMenuImmediatleyWhenButtonPressed;
    BOOL _lockImageToLeftEdge;
    BOOL _useNSButtonImageDrawing;
    struct CGPoint _menuIndicatorInset;
}

@property BOOL useNSButtonImageDrawing; // @synthesize useNSButtonImageDrawing=_useNSButtonImageDrawing;
@property struct CGPoint menuIndicatorInset; // @synthesize menuIndicatorInset=_menuIndicatorInset;
@property BOOL lockImageToLeftEdge; // @synthesize lockImageToLeftEdge=_lockImageToLeftEdge;
@property BOOL showMenuImmediatleyWhenButtonPressed; // @synthesize showMenuImmediatleyWhenButtonPressed=_showMenuImmediatleyWhenButtonPressed;
@property(nonatomic) BOOL buttonWantsMenuHidden; // @synthesize buttonWantsMenuHidden=_buttonWantsMenuHidden;
@property(copy, nonatomic) NSImage *arrowImage; // @synthesize arrowImage=_arrowImage;
@property BOOL senderOfButtonActionIsButton; // @synthesize senderOfButtonActionIsButton=_senderOfButtonActionIsButton;
@property(copy, nonatomic) NSImage *disabledImage; // @synthesize disabledImage=_disabledImage;
@property(retain, nonatomic) id <DVTDelayedMenuButtonDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(copy) NSImage *pressedImage;
@property(copy) NSImage *activeImage;
- (void)_validateTrampolineMenu:(id)arg1;
- (id)target;
- (SEL)action;
@property(copy) NSMenuItem *currentMenuItem;
- (void)setMenu:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)dvt_validateItem:(id)arg1;
- (void)copyAttributesFromMenuItem:(id)arg1 toMenuItem:(id)arg2;
- (void)trampolineMenuFired:(id)arg1;
- (void)performAction:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)awakeFromNib;
- (BOOL)_shouldShowMenu;
- (double)popUpDelay;

@end

@interface DVTRectViewController : NSViewController
{
    BOOL _showsBorder;
    DVTBorderedView *_borderedView;
    DVTRectView *_rectView;
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    NSView *_xyContainerView;
    NSTextField *_xyLabel;
    NSTextField *_widthLabel;
    NSTextField *_heightLabel;
    struct CGRect _rect;
}

@property __weak NSTextField *heightLabel; // @synthesize heightLabel=_heightLabel;
@property __weak NSTextField *widthLabel; // @synthesize widthLabel=_widthLabel;
@property __weak NSTextField *xyLabel; // @synthesize xyLabel=_xyLabel;
@property __weak NSView *xyContainerView; // @synthesize xyContainerView=_xyContainerView;
@property __weak NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property __weak NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
@property __weak DVTRectView *rectView; // @synthesize rectView=_rectView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(nonatomic) BOOL showsBorder; // @synthesize showsBorder=_showsBorder;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (void).cxx_destruct;
- (void)_updateBorder;
- (void)_updateFromRect;
- (void)loadView;
- (id)initWithDefaultNibName;

@end

@interface DVTRectView : NSView
{
    BOOL _drawDotOnly;
}

@property BOOL drawDotOnly; // @synthesize drawDotOnly=_drawDotOnly;
- (void)_drawDotAndRect:(struct CGRect)arg1;
- (void)_drawDotOnly:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly) struct CGSize minSize;

@end

@interface DVTMessageBubbleAnnotation : DVTTextAnnotation
{
    NSString *_messageBubbleText;
    NSImage *_messageBubbleIcon;
    BOOL _miniaturized;
    BOOL _wantsPreferredSizeAndPosition;
    BOOL _wantsFlatStyle;
    unsigned long long _messageBubbleTextAlignment;
    NSString *_messageBubbleToolTipText;
}

@property BOOL wantsFlatStyle; // @synthesize wantsFlatStyle=_wantsFlatStyle;
@property BOOL wantsPreferredSizeAndPosition; // @synthesize wantsPreferredSizeAndPosition=_wantsPreferredSizeAndPosition;
@property(copy, nonatomic) NSString *messageBubbleToolTipText; // @synthesize messageBubbleToolTipText=_messageBubbleToolTipText;
@property(retain, nonatomic) NSImage *messageBubbleIcon; // @synthesize messageBubbleIcon=_messageBubbleIcon;
@property unsigned long long messageBubbleTextAlignment; // @synthesize messageBubbleTextAlignment=_messageBubbleTextAlignment;
@property(copy, nonatomic) NSString *messageBubbleText; // @synthesize messageBubbleText=_messageBubbleText;
@property(nonatomic, getter=isMiniaturized) BOOL miniaturized; // @synthesize miniaturized=_miniaturized;
- (void).cxx_destruct;
- (id)annotationDisplayDescription;
@property(retain) id <DVTMessageBubbleAnnotationDelegate> delegate;
- (void)fontAndColorThemeChanged:(id)arg1;
- (void)invalidateDisplayAndLayoutIfNeeded:(BOOL)arg1;
- (void)setNeedsInvalidate;
- (id)currentStateInTextView:(id)arg1;
- (BOOL)drawsHighlightedRanges;
- (void)drawLineHighlightInRect:(struct CGRect)arg1 textView:(id)arg2;
- (BOOL)drawsLineHighlight;
- (struct CGRect)sidebarMarkerRectForFirstLineRect:(struct CGRect)arg1;
- (double)preferredWidthForAvailableWidth:(double)arg1;
- (void)setVisible:(BOOL)arg1;
- (BOOL)wantsMergeAnnotations;
@property int messageBubbleStackPolicy;
- (id)init;

@end

@interface DVTDefaultLineGraphLayerDataSource : NSObject <DVTLineGraphLayerDataSource>
{
    NSArray *_linePointValues;
}

- (void).cxx_destruct;
- (id)lineDataForBounds:(struct _DVTGraphBounds)arg1;
- (id)initWithEquidistantYNumbers:(id)arg1 startingAtX:(double)arg2 deltaX:(double)arg3;
- (id)initWithLinePointValues:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTAnnotation : NSObject
{
    double _precedence;
    id _representedObject;
    BOOL _visible;
}

@property(retain) id representedObject; // @synthesize representedObject=_representedObject;
@property(getter=isVisible) BOOL visible; // @synthesize visible=_visible;
@property double precedence; // @synthesize precedence=_precedence;
- (void).cxx_destruct;
@property(readonly) BOOL hideCarets;
- (id)annotationDisplayDescription;
- (id)annotationDisplayName;
- (long long)comparePrecedence:(id)arg1;
- (id)init;

@end

@interface _DVTGrowMiniWindowAnimation : NSAnimation
{
}

- (void)setCurrentProgress:(float)arg1;

@end

@interface _DVTMutableDraggingInfo : NSObject <NSDraggingInfo>
{
    NSWindow *draggingDestinationWindow;
    unsigned long long draggingSourceOperationMask;
    struct CGPoint draggingLocation;
    NSImage *draggedImage;
    NSPasteboard *draggingPasteboard;
    id draggingSource;
    BOOL _animatesToDestination;
    long long _numberOfValidItemsForDrop;
    long long _draggingFormation;
}

@property long long draggingFormation; // @synthesize draggingFormation=_draggingFormation;
@property long long numberOfValidItemsForDrop; // @synthesize numberOfValidItemsForDrop=_numberOfValidItemsForDrop;
@property BOOL animatesToDestination; // @synthesize animatesToDestination=_animatesToDestination;
- (void).cxx_destruct;
- (void)enumerateDraggingItemsWithOptions:(unsigned long long)arg1 forView:(id)arg2 classes:(id)arg3 searchOptions:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (long long)draggingSequenceNumber;
- (void)setDraggingSource:(id)arg1;
- (id)draggingSource;
- (void)setDraggingPasteboard:(id)arg1;
- (id)draggingPasteboard;
- (void)setDraggedImage:(id)arg1;
- (id)draggedImage;
- (struct CGPoint)draggedImageLocation;
- (void)setDraggingLocation:(struct CGPoint)arg1;
- (struct CGPoint)draggingLocation;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1;
- (unsigned long long)draggingSourceOperationMask;
- (void)setDraggingDestinationWindow:(id)arg1;
- (id)draggingDestinationWindow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _DVTDragWindowAnimation : NSAnimation
{
}

- (id)runLoopModesForAnimating;
- (void)setCurrentProgress:(float)arg1;

@end

@interface _DVTSlideBackAnimation : NSAnimation
{
}

- (void)setCurrentProgress:(float)arg1;

@end

@interface DVTMorphingDragImageController : NSObject <NSAnimationDelegate>
{
    NSImage *originalImage;
    struct CGSize maxImageSize;
    struct CGSize originalViewOffset;
    NSPasteboard *dragPasteboard;
    id dragSource;
    NSView *sourceView;
    NSWindow *dragWindow;
    DVTMorphingDragImageView *dragImageView;
    NSAnimation *morphAnimation;
    NSAnimation *slideBackAnimation;
    struct CGPoint slideBackStartTranslation;
    struct CGPoint slideBackEndTranslation;
    NSWindow *windowUnderMouse;
    id <DVTMorphingDragImageDropTarget> targetUnderMouse;
    NSString *runLoopMode;
    BOOL dragDone;
    BOOL _targetAcceptsDrag;
    BOOL mouseOverSystemWindow;
    BOOL scheduledRedisplay;
}

+ (void)dragImage:(id)arg1 maximumSize:(struct CGSize)arg2 fromView:(id)arg3 at:(struct CGPoint)arg4 pasteboard:(id)arg5 source:(id)arg6 inMode:(id)arg7;
- (void).cxx_destruct;
- (void)_morphToDragImage:(id)arg1 force:(BOOL)arg2;
- (void)_sendMovedToPointOnScreenToDragSource;
- (void)_setTargetUnderMouse:(id)arg1;
- (void)_setWindowUnderMouse:(id)arg1;
- (void)_findWindowUnderMouse:(id *)arg1 level:(int *)arg2 viewUnderMouse:(id *)arg3;
- (id)_dragInfoForNoTargetUnderMouse;
- (id)_dragInfoForTargetUnderMouse;
- (void)_animateSlideBack;
- (void)_animateMorphWindow;
- (void)_dragComplete;
- (void)_applicationDidResignActive;
- (void)_handleMouseUp;
- (void)_handleFlagsChanged;
- (void)_handleMouseDragged;
- (void)_handleEvent:(id)arg1;
- (id)_runLoopMode;
- (void)_runDrag;
- (void)_prepareForDragWithImage:(id)arg1;
- (void)_dragImage:(id)arg1 maximumSize:(struct CGSize)arg2 fromView:(id)arg3 at:(struct CGPoint)arg4 pasteboard:(id)arg5 source:(id)arg6 inMode:(id)arg7;
- (void)_redisplayWindows;
- (void)_scheduleRedisplay;
- (void)animationDidEnd:(id)arg1;
- (id)dragWindow;
- (void)morphToDragImage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFontAndColorTheme : NSObject <DVTPreferenceSet>
{
    NSString *_name;
    NSImage *_image;
    NSURL *_dataURL;
    DVTCustomDataSpecifier *_customDataSpecifier;
    NSColor *_sourceTextBackgroundColor;
    NSColor *_sourceTextSidebarBackgroundColor;
    NSColor *_sourceTextSidebarEdgeColor;
    NSColor *_sourceTextSidebarNumbersColor;
    NSColor *_sourceTextFoldbarBackgroundColor;
    NSColor *_sourceTextSelectionColor;
    NSColor *_sourceTextSecondarySelectionColor;
    NSColor *_sourceTextInsertionPointColor;
    NSColor *_sourceTextInvisiblesColor;
    NSColor *_sourceTextBlockDimBackgroundColor;
    NSColor *_sourceTextTokenizedBorderColor;
    NSColor *_sourceTextTokenizedBackgroundColor;
    NSColor *_sourceTextTokenizedBorderSelectedColor;
    NSColor *_sourceTextTokenizedBackgroundSelectedColor;
    NSColor *_consoleTextBackgroundColor;
    NSColor *_consoleTextSelectionColor;
    NSColor *_consoleTextSecondarySelectionColor;
    NSColor *_consoleTextInsertionPointColor;
    NSColor *_consoleDebuggerPromptTextColor;
    NSColor *_consoleDebuggerInputTextColor;
    NSColor *_consoleDebuggerOutputTextColor;
    NSColor *_consoleExecutableInputTextColor;
    NSColor *_consoleExecutableOutputTextColor;
    NSFont *_consoleDebuggerPromptTextFont;
    NSFont *_consoleDebuggerInputTextFont;
    NSFont *_consoleDebuggerOutputTextFont;
    NSFont *_consoleExecutableInputTextFont;
    NSFont *_consoleExecutableOutputTextFont;
    NSColor *_debuggerInstructionPointerColor;
    NSColor *_sourcePlainTextColor;
    NSFont *_sourcePlainTextFont;
    DVTPointerArray *_syntaxColorsByNodeType;
    DVTPointerArray *_syntaxFontsByNodeType;
    NSColor *_sourceTextCompletionPreviewColor;
    BOOL _builtIn;
    BOOL _loadedData;
    BOOL _contentNeedsSaving;
    BOOL _hasMultipleSourceTextFonts;
}

+ (id)_defaultSourceCodeFont;
+ (id)keyPathsForValuesAffectingConsoleTextSecondarySelectionColor;
+ (id)keyPathsForValuesAffectingSourceTextSecondarySelectionColor;
+ (void)recordMessageTracerStatistics;
+ (id)titleForNewPreferenceSetFromTemplate;
+ (id)preferenceSetsListHeader;
+ (id)preferenceSetsFileExtension;
+ (id)defaultKeyForExcludedBuiltInPreferenceSets;
+ (id)defaultKeyForCurrentPreferenceSet;
+ (id)builtInPreferenceSetsDirectoryURL;
+ (id)systemPreferenceSet;
+ (id)preferenceSetGroupingName;
+ (id)_nodeTypesIncludedInPreferences;
+ (id)_stringRepresentationOfFont:(id)arg1;
+ (id)_fontWithName:(id)arg1 size:(double)arg2;
+ (id)currentTheme;
+ (id)preferenceSetsManager;
+ (void)initialize;
@property(readonly) BOOL loadedData; // @synthesize loadedData=_loadedData;
@property(readonly) DVTPointerArray *syntaxFontsByNodeType; // @synthesize syntaxFontsByNodeType=_syntaxFontsByNodeType;
@property(readonly) DVTPointerArray *syntaxColorsByNodeType; // @synthesize syntaxColorsByNodeType=_syntaxColorsByNodeType;
@property(nonatomic) BOOL hasMultipleSourceTextFonts; // @synthesize hasMultipleSourceTextFonts=_hasMultipleSourceTextFonts;
@property BOOL contentNeedsSaving; // @synthesize contentNeedsSaving=_contentNeedsSaving;
@property(retain) DVTCustomDataSpecifier *customDataSpecifier; // @synthesize customDataSpecifier=_customDataSpecifier;
@property(readonly, getter=isBuiltIn) BOOL builtIn; // @synthesize builtIn=_builtIn;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)setFont:(id)arg1 forNodeTypes:(id)arg2;
- (void)setColor:(id)arg1 forNodeTypes:(id)arg2;
- (void)_setColorOrFont:(id)arg1 forNodeTypes:(id)arg2;
- (id)fontForNodeType:(short)arg1;
- (id)colorForNodeType:(short)arg1;
@property(readonly) NSFont *sourcePlainTextFont;
@property(readonly) NSColor *sourcePlainTextColor;
- (void)setDebuggerInstructionPointerColor:(id)arg1;
- (void)setConsoleExecutableOutputTextFont:(id)arg1;
- (void)setConsoleExecutableInputTextFont:(id)arg1;
- (void)setConsoleDebuggerOutputTextFont:(id)arg1;
- (void)setConsoleDebuggerInputTextFont:(id)arg1;
- (void)setConsoleDebuggerPromptTextFont:(id)arg1;
- (void)setConsoleExecutableOutputTextColor:(id)arg1;
- (void)setConsoleExecutableInputTextColor:(id)arg1;
- (void)setConsoleDebuggerOutputTextColor:(id)arg1;
- (void)setConsoleDebuggerInputTextColor:(id)arg1;
- (void)setConsoleDebuggerPromptTextColor:(id)arg1;
- (void)primitiveSetConsoleDebuggerPromptTextColor:(id)arg1;
- (void)setConsoleTextInsertionPointColor:(id)arg1;
- (void)setConsoleTextSelectionColor:(id)arg1;
- (void)setConsoleTextBackgroundColor:(id)arg1;
- (void)setSourceTextInvisiblesColor:(id)arg1;
- (void)setSourceTextInsertionPointColor:(id)arg1;
- (void)setSourceTextSelectionColor:(id)arg1;
- (void)setSourceTextBackgroundColor:(id)arg1;
- (void)_setColorOrFont:(id)arg1 forKey:(id)arg2 colorOrFontivar:(id *)arg3;
@property(readonly) NSColor *debuggerInstructionPointerColor;
@property(readonly) NSFont *consoleExecutableOutputTextFont;
@property(readonly) NSFont *consoleExecutableInputTextFont;
@property(readonly) NSFont *consoleDebuggerOutputTextFont;
@property(readonly) NSFont *consoleDebuggerInputTextFont;
@property(readonly) NSFont *consoleDebuggerPromptTextFont;
@property(readonly) NSColor *consoleExecutableOutputTextColor;
@property(readonly) NSColor *consoleExecutableInputTextColor;
@property(readonly) NSColor *consoleDebuggerOutputTextColor;
@property(readonly) NSColor *consoleDebuggerInputTextColor;
@property(readonly) NSColor *consoleDebuggerPromptTextColor;
@property(readonly) NSColor *consoleTextInsertionPointColor;
@property(readonly) NSColor *consoleTextSecondarySelectionColor;
@property(readonly) NSColor *consoleTextSelectionColor;
@property(readonly) NSColor *consoleTextBackgroundColor;
@property(readonly) NSColor *sourceTextTokenizedBackgroundSelectedColor;
@property(readonly) NSColor *sourceTextTokenizedBorderSelectedColor;
@property(readonly) NSColor *sourceTextTokenizedBackgroundColor;
@property(readonly) NSColor *sourceTextTokenizedBorderColor;
@property(readonly) NSColor *sourceTextLinkColor;
@property(readonly) NSColor *sourceTextCompletionPreviewColor;
@property(readonly) NSColor *sourceTextBlockDimBackgroundColor;
@property(readonly) NSColor *sourceTextInvisiblesColor;
@property(readonly) NSColor *sourceTextInsertionPointColor;
@property(readonly) NSColor *sourceTextSecondarySelectionColor;
@property(readonly) NSColor *sourceTextSelectionColor;
@property(readonly) NSColor *sourceTextFoldbarBackgroundColor;
@property(readonly) NSColor *sourceTextSidebarNumbersColor;
@property(readonly) NSColor *sourceTextSidebarEdgeColor;
@property(readonly) NSColor *sourceTextSidebarBackgroundColor;
@property(readonly) NSColor *sourceTextBackgroundColor;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *localizedName;
- (void)_updateHasMultipleSourceTextFonts;
- (void)_updateDerivedColors;
- (BOOL)_loadFontsAndColors;
- (id)dataRepresentationWithError:(id *)arg1;
- (void)primitiveInvalidate;
- (id)initWithCustomDataSpecifier:(id)arg1 basePreferenceSet:(id)arg2;
- (id)initWithName:(id)arg1 dataURL:(id)arg2;
- (id)_initWithName:(id)arg1 syntaxColorsByNodeType:(id)arg2 syntaxFontsByNodeType:(id)arg3;
- (void)_themeCommonInit;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTFindPatternDescriptor : DVTFindRegularExpressionDescriptor <DVTTextlikeFindDescriptor>
{
    NSAttributedString *_findAttributedString;
    int _matchStyle;
}

+ (id)keyPathsForValuesAffectingDisplayAttributedString;
@property(readonly) NSAttributedString *findAttributedString; // @synthesize findAttributedString=_findAttributedString;
@property(readonly) int matchStyle; // @synthesize matchStyle=_matchStyle;
- (void).cxx_destruct;
- (id)displayAttributedString;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)initWithAttributedString:(id)arg1 ignoreCase:(BOOL)arg2 matchStyle:(int)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface DVTLayerController : NSObject
{
    CALayer *_layer;
}

@property(retain, nonatomic) CALayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (void)loadLayer;

@end

@interface DVTTabBarClippedItemsIndicator : DVTMainStatusAwareButton <NSMenuDelegate>
{
    id _delegate;
}

+ (Class)cellClass;
- (void).cxx_destruct;
- (void)_popUpMenu;
- (void)mouseDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (id)delegate;
- (void)setDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTabBarClippedItemsIndicatorCell : NSButtonCell
{
}

- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionNames;

@end

@interface DVTFlatSegmentedControlCell : NSSegmentedCell
{
    BOOL _drawsBackground;
    double _topLeftCornerRadius;
    double _bottomLeftCornerRadius;
    double _topRightCornerRadius;
    double _bottomRightCornerRadius;
}

@property double bottomRightCornerRadius; // @synthesize bottomRightCornerRadius=_bottomRightCornerRadius;
@property double topRightCornerRadius; // @synthesize topRightCornerRadius=_topRightCornerRadius;
@property double bottomLeftCornerRadius; // @synthesize bottomLeftCornerRadius=_bottomLeftCornerRadius;
@property double topLeftCornerRadius; // @synthesize topLeftCornerRadius=_topLeftCornerRadius;
@property BOOL drawsBackground; // @synthesize drawsBackground=_drawsBackground;
- (id)_segmentedControlPathForFrame:(struct CGRect)arg1;
- (id)_segmentPathForSegmentAtIndex:(long long)arg1 forSegmentFrame:(struct CGRect)arg2;
- (void)_drawSegment:(long long)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (long long)backgroundStyle;
- (void)_dvtFindBarSegmentedControlCellCommonInit;
- (void)awakeFromNib;
- (id)init;

@end

@interface DVTRolloverTracker : NSObject <DVTInvalidation>
{
    CDUnknownBlockType _trackingAreaAction;
    NSControl *_control;
    NSTrackingArea *_trackingArea;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateRolloverTrackingArea;
- (id)initWithControl:(id)arg1 action:(CDUnknownBlockType)arg2;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTTextFoldInlineTokenFormatter : NSFormatter
{
    DVTTextFoldInlineTokenAttachmentCell *_cell;
    DVTCompletingTextView *_textView;
    unsigned long long _charIndex;
}

- (void).cxx_destruct;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (void)clearContext;
- (void)setContextWithCell:(id)arg1 textView:(id)arg2 characterIndex:(unsigned long long)arg3;

@end

@interface DVTTextFoldInlineTokenAttachment : NSTokenAttachment
{
}

@end

@interface DVTTextFoldInlineTokenAttachmentCell : NSTokenAttachmentCell
{
    NSView *_controlView;
    DVTTextFold *_fold;
}

@property __weak DVTTextFold *fold; // @synthesize fold=_fold;
@property(retain) NSView *controlView; // @synthesize controlView=_controlView;
- (void).cxx_destruct;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4 untilMouseUp:(BOOL)arg5;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (id)tokenBackgroundColor;
- (id)tokenForegroundColor;
- (long long)interiorBackgroundStyle;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (long long)_typesetterBehavior;
- (void)_themeColorsChanged:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initTextCell:(id)arg1;
- (void)_stopObservingFontAndColorNotifications;
- (void)_startObservingFontAndColorNotifications;

@end

@interface DVTPlistSelection : NSObject
{
    NSArray *_keyPath;
    struct _NSRange _selectedTextRange;
    BOOL _keyIsSelected;
}

@property(readonly) BOOL keyIsSelected; // @synthesize keyIsSelected=_keyIsSelected;
@property(readonly) struct _NSRange selectedTextRange; // @synthesize selectedTextRange=_selectedTextRange;
@property(readonly) NSArray *keyPath; // @synthesize keyPath=_keyPath;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithKeyPath:(id)arg1 selectedTextRange:(struct _NSRange)arg2 keyIsSelected:(BOOL)arg3;
- (id)initWithKeyPath:(id)arg1 keyIsSelected:(BOOL)arg2;
- (id)initWithKeyPath:(id)arg1 selectedTextRange:(struct _NSRange)arg2;
- (id)initWithKeyPath:(id)arg1;
- (long long)compareSelectionForReplacing:(id)arg1;

@end

@interface DVTFileIconCreatorImageRep : NSImageRep
{
    BOOL _isDirty;
    BOOL _isMissing;
    NSImage *_badgeIcon;
    NSImage *_baseIcon;
}

@property(nonatomic) BOOL isMissing; // @synthesize isMissing=_isMissing;
@property(nonatomic) BOOL isDirty; // @synthesize isDirty=_isDirty;
@property(retain, nonatomic) NSImage *baseIcon; // @synthesize baseIcon=_baseIcon;
@property(retain, nonatomic) NSImage *badgeIcon; // @synthesize badgeIcon=_badgeIcon;
- (void).cxx_destruct;
- (BOOL)draw;
- (void)setbadgeIcon:(id)arg1;

@end

@interface DVTFileIconCreator : NSObject
{
}

+ (BOOL)_checkIfDirty:(id)arg1;
+ (id)iconForDVTFilePath:(id)arg1 fileDataTypeHint:(id)arg2 decorated:(BOOL)arg3;
+ (id)iconForDVTFilePath:(id)arg1 fileDataTypeHint:(id)arg2;
+ (id)iconForFileType:(id)arg1;
+ (id)_iconForFileType:(id)arg1 isDirty:(BOOL)arg2 isMissing:(BOOL)arg3;
+ (id)_baseIconForFileType:(id)arg1;
+ (id)overriderImageProviderClassByUTI;
+ (id)_xcodeBundleIconForFileType:(id)arg1;
+ (id)iconWithBaseIcon:(id)arg1 badgeIcon:(id)arg2 isDirty:(BOOL)arg3;
+ (id)iconWithBaseIcon:(id)arg1 badgeIcon:(id)arg2;
+ (id)_iconWithBaseIcon:(id)arg1 badgeIcon:(id)arg2 isDirty:(BOOL)arg3 isMissing:(BOOL)arg4;
+ (void)initialize;

@end

@interface DVTFolderIconProvider : NSObject <DVTIconOverrideProvider>
{
}

+ (id)overridingIconForFileType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFrameworkIconProvider : NSObject <DVTIconOverrideProvider>
{
}

+ (id)overridingIconForFileType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSpacerButton : NSButton
{
}

- (BOOL)acceptsFirstResponder;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_configureCell;

@end

@interface _DVTLozengeTextFieldCell : NSTextFieldCell
{
}

- (struct CGSize)cellSize;

@end

@interface DVTLozengeTextField : NSTextField
{
    id _superviewFrameChangeObserver;
}

+ (Class)cellClass;
- (void).cxx_destruct;
- (void)setAutoCenterAndResizeToFitSuperview:(BOOL)arg1;
- (void)setStringValue:(id)arg1;
- (void)_centerAndResizeToFitSuperview;
- (BOOL)isOpaque;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_sharedDVTLozengeTextFieldInit;

@end

@interface DVTMainViewControllerDrawingStrategy : NSObject <DVTWindowActivationStateObserver, DVTInvalidation>
{
    BOOL _monitorWholeTree;
    BOOL _treeHasMainViewController;
    BOOL _viewControllerIsMain;
    BOOL _windowIsKey;
    BOOL _appIsActive;
    BOOL _installed;
    id <DVTCancellable> _windowActivationToken;
    id <DVTCancellable> _mainViewControllerToken;
    DVTNotificationToken *_appActivationObservation;
    DVTNotificationToken *_appDeactivationObservation;
    DVTViewController<DVTMainViewControllerDrawingStrategyDelegate> *_delegate;
}

+ (void)initialize;
@property(readonly) DVTViewController<DVTMainViewControllerDrawingStrategyDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)mainViewControllerChanged;
- (void)appActivationChanged;
@property(readonly) BOOL shouldHaveActiveAppearance;
- (void)setFlag:(char *)arg1 toValue:(BOOL)arg2;
- (void)hostViewControllerDidInstall;
- (void)hostViewControllerWillUninstall;
- (void)primitiveInvalidate;
- (id)initWithDelegate:(id)arg1 monitorWholeTree:(BOOL)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTComparisonSplitView : DVTSplitView <NSMenuDelegate>
{
    NSIndexSet *_depressedDiffDescriptorIndexes;
    NSTrackingArea *_trackingArea;
    struct CGRect *_switchRectArray;
    struct CGRect *_menuRectArray;
    DVTPointerArray *_swoops;
    NSArray *_diffDescriptors;
    NSIndexSet *_modifiedDiffDescriptorIndexes;
    NSIndexSet *_hiddenDiffDescriptorIndexes;
    DVTSourceTextView *_primaryTextView;
    DVTSourceTextView *_secondaryTextView;
    NSIndexSet *_selectedDiffDescriptorIndexes;
    NSIndexSet *_toggledDiffDescriptorIndexes;
    int _style;
    NSMenu *_diffMenu;
    BOOL _depressed;
    BOOL _selected;
    BOOL _selecting;
    BOOL _shouldInterceptMouseUp;
    BOOL _isThreeWayDiff;
    BOOL _isBinaryComparison;
    BOOL _hideDiffMenu;
    BOOL _isSettingSelectedIndexBinding;
    BOOL _isSplitterMovable;
    BOOL _hasFocus;
    BOOL _isDragging;
    DVTObservingToken *_firstResponderToken;
    DVTNotificationToken *_primaryLayoutCompleteToken;
    DVTNotificationToken *_primaryFrameChangeToken;
    DVTNotificationToken *_secondaryLayoutCompleteToken;
    DVTNotificationToken *_secondaryFrameChangeToken;
    BOOL _enableDiffToggles;
    id <DVTComparisonSplitViewDelegate> _comparisonDelegate;
}

+ (id)diffButtonMenuImage;
+ (id)diffButtonCheckImage;
+ (id)diffButtonUncheckImage;
+ (id)unsetImage;
+ (id)neitherArrowImage;
+ (id)rightLeftArrowImage;
+ (id)rightArrowImage;
+ (id)leftRightArrowImage;
+ (id)leftArrowImage;
+ (id)splitterDeselectedImage_depressed;
+ (id)splitterDeselectedImage;
+ (id)splitterSelectedImage_depressed;
+ (id)splitterSelectedImage;
+ (double)defaultSplitterWidthForStyle:(int)arg1;
+ (void)initialize;
@property __weak id <DVTComparisonSplitViewDelegate> comparisonDelegate; // @synthesize comparisonDelegate=_comparisonDelegate;
@property(retain) NSMenu *diffMenu; // @synthesize diffMenu=_diffMenu;
@property BOOL hasFocus; // @synthesize hasFocus=_hasFocus;
@property BOOL enableDiffToggles; // @synthesize enableDiffToggles=_enableDiffToggles;
@property BOOL isSplitterMovable; // @synthesize isSplitterMovable=_isSplitterMovable;
@property(retain) NSArray *diffDescriptors; // @synthesize diffDescriptors=_diffDescriptors;
@property BOOL depressed; // @synthesize depressed=_depressed;
- (void).cxx_destruct;
- (void)viewFrameDidChange:(id)arg1;
- (void)layoutManagerDidCompleteLayoutForTextContainer:(id)arg1;
- (void)_validateCurrentSelectedIndex;
- (void)offsetCurrentSelectedIndexBy:(long long)arg1;
- (void)updateTrackingAreas;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)drawDividerInRect:(struct CGRect)arg1;
- (void)_drawMultipleDiffDescriptors:(struct CGRect)arg1;
- (unsigned long long)_nearestDiffDescriptorFromMiddleInDirection:(long long)arg1;
- (void)_drawSingleDiffDescriptor:(struct CGRect)arg1;
- (double)dividerThickness;
- (void)setHiddenDiffDescriptorIndexes:(id)arg1;
@property BOOL hideDiffMenu;
@property BOOL isBinaryComparison;
@property BOOL isThreeWayDiff;
@property int style;
@property(retain) NSIndexSet *toggledDiffDescriptorIndexes; // @synthesize toggledDiffDescriptorIndexes=_toggledDiffDescriptorIndexes;
@property(retain) DVTSourceTextView *secondaryTextView; // @synthesize secondaryTextView=_secondaryTextView;
@property(retain) DVTSourceTextView *primaryTextView; // @synthesize primaryTextView=_primaryTextView;
@property(readonly) BOOL showsPrettySwitch;
@property(retain) NSIndexSet *selectedDiffDescriptorIndexes; // @synthesize selectedDiffDescriptorIndexes=_selectedDiffDescriptorIndexes;
@property BOOL selected; // @synthesize selected=_selected;
- (void)updateBoundTimestamp;
- (void)updateBoundToggledIndexes;
- (void)updateBoundSelectedIndex;
- (void)updateBoundModifiedDescriptorIndexes;
- (void)updateBoundContentArray;
- (id)dvtExtraBindings;
- (void)resetCursorRects;
- (BOOL)acceptsFirstResponder;
- (void)scrollWheel:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)_toggleDiffDescriptorAtIndex:(unsigned long long)arg1;
- (id)_getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_centerSplitter;
- (void)_setSelectedDescriptorMergeDirection:(int)arg1;
- (unsigned long long)_hitTestSwoopLocation:(struct CGPoint)arg1;
- (unsigned long long)_hitTestMenuLocation:(struct CGPoint)arg1;
- (unsigned long long)_hitTestLocation:(struct CGPoint)arg1;
- (void)primitiveInvalidate;
- (void)viewDidMoveToWindow;
- (struct CGRect)_firstDividerFrame;
- (void)dealloc;
- (void)_dvtcomparisonsplitview_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTypeCompletionHandler : NSObject <DVTInvalidation>
{
    NSMutableString *_completionString;
    NSTimer *_completionWillExpireTimer;
    NSTimer *_completionDisplayShouldExpireTimer;
    struct {
        unsigned int delegateImplementsTypeCompletionStringForObject:1;
        unsigned int delegateImplementsCompletionWillExpire:1;
        unsigned int delegateImplementsCompletionDisplayShouldExpire:1;
        unsigned int _reserved:5;
    } _flags;
    id <DVTTypeCompletionHandlerDelegate> _delegate;
    NSString *_runLoopMode;
}

+ (id)typeCompletionHandlerWithDelegate:(id)arg1;
+ (id)typeCompletionHandlerWithDelegate:(id)arg1 runLoopMode:(id)arg2;
+ (void)initialize;
@property(readonly) NSString *runLoopMode; // @synthesize runLoopMode=_runLoopMode;
@property(retain, nonatomic) id <DVTTypeCompletionHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)processTypeSelectionInput:(id)arg1 objects:(id)arg2 index:(unsigned long long *)arg3 startingAtObject:(id)arg4;
- (id)processTypeSelectionInput:(id)arg1 objects:(id)arg2 index:(unsigned long long *)arg3;
- (void)primitiveInvalidate;
- (void)expireCompletionDisplay:(id)arg1;
- (void)expireCompletion:(id)arg1;
- (void)clearAndRenewCompletionString;
- (void)clearAndRenewCompletionDisplayShouldExpireTimer;
- (void)clearCompletionDisplayShouldExpireTimer;
- (void)clearAndRenewCompletionWillExpireTimer;
- (void)clearCompletionWillExpireTimer;
@property(readonly) NSString *currentTypeCompletionString;
- (id)initWithDelegate:(id)arg1 runLoopMode:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTDeviceLogsSheetController : DVTPagingSheetWindowController
{
    Class _deviceLogsViewControllerClass;
    DVTDevice *_device;
    DVTReplacementView *_replacementView;
}

@property(retain) DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)done:(id)arg1;
- (void)endSheet;
- (void)windowDidLoad;
- (id)initWithDevice:(id)arg1 deviceLogsViewControllerClass:(Class)arg2;

@end

@interface DVTQuickLookLibraryDetailItem : NSObject <QLPreviewItem>
{
    NSURL *_previewItemURL;
}

- (void).cxx_destruct;
@property(readonly) NSURL *previewItemURL;
- (id)initWithPreviewItemURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@property(readonly) Class superclass;

@end

@interface DVTQuickLookLibraryDetailController : DVTLibraryDetailController
{
    QLPreviewView *_previewView;
    struct {
        unsigned int delegateImplementsShouldScaleToFit:1;
        unsigned int _reserved:7;
    } _flags;
}

- (void).cxx_destruct;
- (void)sizeToFitSuggestedSize:(struct CGSize)arg1 forAsset:(id)arg2;
- (void)refreshWithAsset:(id)arg1 representedObject:(id)arg2;
- (void)setDelegate:(id)arg1;

@end

@interface DVTMeterTheme : NSObject
{
}

+ (id)grayColor;
+ (id)blackColor;
+ (id)blueColor;
+ (id)greenColor;
+ (id)yellowColor;
+ (id)redColor;

@end

@interface DVTMeterValue : NSObject
{
    int _scale;
    double _value;
    double _baselineValue;
    double _max;
    double _rangeLow;
    double _rangeHigh;
}

+ (id)meterValue:(double)arg1 max:(double)arg2 rangeLow:(double)arg3 rangeHigh:(double)arg4;
@property(nonatomic) double rangeHigh; // @synthesize rangeHigh=_rangeHigh;
@property(nonatomic) double rangeLow; // @synthesize rangeLow=_rangeLow;
@property(nonatomic) double max; // @synthesize max=_max;
@property(nonatomic) double baselineValue; // @synthesize baselineValue=_baselineValue;
@property(nonatomic) double value; // @synthesize value=_value;
@property(nonatomic) int scale; // @synthesize scale=_scale;
- (id)plotValuesForDegreeInterval:(unsigned long long)arg1;
- (double)valueAtPlotPoint:(double)arg1;
- (double)plotPositionForValue:(double)arg1;
- (double)_logarithmicValueAtPlotPoint:(double)arg1;
- (double)_plotPositionForLogarithmicValue:(double)arg1;
- (double)_linearValueAtPlotPoint:(double)arg1;
- (double)_plotPositionForlinearValue:(double)arg1;

@end

@interface DVTMeterThreshold : NSObject
{
    BOOL _showStartSection;
    BOOL _showEndSection;
    double _value;
    NSColor *_color;
}

+ (id)meterThreshold:(double)arg1 color:(id)arg2;
@property(nonatomic) BOOL showEndSection; // @synthesize showEndSection=_showEndSection;
@property(nonatomic) BOOL showStartSection; // @synthesize showStartSection=_showStartSection;
@property(retain, nonatomic) NSColor *color; // @synthesize color=_color;
@property(nonatomic) double value; // @synthesize value=_value;
- (void).cxx_destruct;

@end

@interface DVTMeterView : NSView
{
    double _scaleValue;
    BOOL _radiusSetByAPI;
    BOOL _verticalOffsetSetByAPI;
    BOOL _showRange;
    BOOL _showBaseline;
    double _verticalOffset;
    double _needleWidth;
    double _needleHeightMultiplier;
    double _baselineNeedleWidth;
    double _baselineNeedleHeightMultiplier;
    double _barThickness;
    double _rangeBarThickness;
    double _radius;
    double _rangeRadiusMultipilier;
    double _paddingBetweenThresholdSections;
    NSColor *_defaultRangeColor;
    NSColor *_labelColor;
    NSColor *_needleColor;
    NSColor *_baselineNeedleColor;
    unsigned long long _displayLabelDegreeInterval;
    NSFormatter *_valueLabelFormatter;
    double _labelRadiusMultipilier;
    DVTMeterValue *_currentMeterValues;
    DVTMeterThreshold *_lowRangeThreshold;
    DVTMeterThreshold *_midRangeThreshold;
    DVTMeterThreshold *_highRangeThreshold;
    struct CGPoint _baseMiddlePoint;
}

@property(retain, nonatomic) DVTMeterThreshold *highRangeThreshold; // @synthesize highRangeThreshold=_highRangeThreshold;
@property(retain, nonatomic) DVTMeterThreshold *midRangeThreshold; // @synthesize midRangeThreshold=_midRangeThreshold;
@property(retain, nonatomic) DVTMeterThreshold *lowRangeThreshold; // @synthesize lowRangeThreshold=_lowRangeThreshold;
@property(retain, nonatomic) DVTMeterValue *currentMeterValues; // @synthesize currentMeterValues=_currentMeterValues;
@property(nonatomic) double labelRadiusMultipilier; // @synthesize labelRadiusMultipilier=_labelRadiusMultipilier;
@property(retain, nonatomic) NSFormatter *valueLabelFormatter; // @synthesize valueLabelFormatter=_valueLabelFormatter;
@property(nonatomic) unsigned long long displayLabelDegreeInterval; // @synthesize displayLabelDegreeInterval=_displayLabelDegreeInterval;
@property(retain, nonatomic) NSColor *baselineNeedleColor; // @synthesize baselineNeedleColor=_baselineNeedleColor;
@property(retain, nonatomic) NSColor *needleColor; // @synthesize needleColor=_needleColor;
@property(retain, nonatomic) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain, nonatomic) NSColor *defaultRangeColor; // @synthesize defaultRangeColor=_defaultRangeColor;
@property(nonatomic) double paddingBetweenThresholdSections; // @synthesize paddingBetweenThresholdSections=_paddingBetweenThresholdSections;
@property(nonatomic) double rangeRadiusMultipilier; // @synthesize rangeRadiusMultipilier=_rangeRadiusMultipilier;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double rangeBarThickness; // @synthesize rangeBarThickness=_rangeBarThickness;
@property(nonatomic) double barThickness; // @synthesize barThickness=_barThickness;
@property(nonatomic) BOOL showBaseline; // @synthesize showBaseline=_showBaseline;
@property(nonatomic) BOOL showRange; // @synthesize showRange=_showRange;
@property(nonatomic) double baselineNeedleHeightMultiplier; // @synthesize baselineNeedleHeightMultiplier=_baselineNeedleHeightMultiplier;
@property(nonatomic) double baselineNeedleWidth; // @synthesize baselineNeedleWidth=_baselineNeedleWidth;
@property(nonatomic) double needleHeightMultiplier; // @synthesize needleHeightMultiplier=_needleHeightMultiplier;
@property(nonatomic) double needleWidth; // @synthesize needleWidth=_needleWidth;
@property(readonly, nonatomic) struct CGPoint baseMiddlePoint; // @synthesize baseMiddlePoint=_baseMiddlePoint;
@property(nonatomic) double verticalOffset; // @synthesize verticalOffset=_verticalOffset;
- (void).cxx_destruct;
- (void)drawGraphInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawUnderlayInRect:(struct CGRect)arg1;
- (void)drawLabelsInRect:(struct CGRect)arg1;
- (void)_drawNeedleInRect:(struct CGRect)arg1 withValue:(double)arg2 andColor:(id)arg3 andWidth:(double)arg4 andHeightMultiplier:(double)arg5;
- (void)_drawMeterRangeSectionWithStartAngle:(double)arg1 thresholdValue:(double)arg2 InRect:(struct CGRect)arg3;
- (void)_drawMeterBackgroundSectionWithStartAngle:(double)arg1 thresholdValue:(double)arg2 InRect:(struct CGRect)arg3 withColor:(id)arg4 showStartSection:(BOOL)arg5 showEndSection:(BOOL)arg6;
- (void)_drawArcSectionWithStartAngle:(double)arg1 thresholdValue:(double)arg2 InRect:(struct CGRect)arg3 withColor:(id)arg4 radius:(double)arg5 thickness:(double)arg6 drawSectionLine:(BOOL)arg7 drawEndSectionLine:(BOOL)arg8;
- (struct CGSize)intrinsicContentSize;
- (double)_derivedStartAngle:(double)arg1;
- (double)_needleRotationDegreesWithValue:(double)arg1;
- (double)_scaledDegreesWithValue:(double)arg1;
- (struct CGPoint)_baseMiddlePointCenteredInRect:(struct CGRect)arg1;
- (double)_maxRadiusNeeded;
- (double)_radiusWithRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTFlatButtonCell : NSButtonCell
{
}

+ (id)emptyFlatButton;
- (id)_segmentedControlPathForFrame:(struct CGRect)arg1;
- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface DVTImagePopUpButtonCell : NSPopUpButtonCell
{
    NSButtonCell *_buttonCell;
    NSImage *_iconImage;
    NSImage *_alternateIconImage;
    NSImage *_disabledIconImage;
    struct CGSize _iconSize;
    double _widthRatio;
    NSImage *_arrowImage;
    struct CGSize _originalArrowSize;
    NSTimer *_menuTimer;
    SEL _buttonCellAction;
    BOOL _showsMenuOnlyForMultipleItems;
    BOOL _immediatelyShowsMenu;
    BOOL _usedInToolbar;
    BOOL _timerFired;
    BOOL _buttonWantsMenuHidden;
}

@property(nonatomic) BOOL buttonWantsMenuHidden; // @synthesize buttonWantsMenuHidden=_buttonWantsMenuHidden;
@property(retain) NSCell *internalCell; // @synthesize internalCell=_buttonCell;
@property(copy, nonatomic) NSImage *arrowImage; // @synthesize arrowImage=_arrowImage;
@property struct CGSize iconSize; // @synthesize iconSize=_iconSize;
@property(nonatomic) BOOL usedInToolbar; // @synthesize usedInToolbar=_usedInToolbar;
@property BOOL immediatelyShowsMenu; // @synthesize immediatelyShowsMenu=_immediatelyShowsMenu;
@property BOOL showsMenuOnlyForMultipleItems; // @synthesize showsMenuOnlyForMultipleItems=_showsMenuOnlyForMultipleItems;
- (void).cxx_destruct;
- (void)_showMenuTimerFired:(id)arg1;
- (BOOL)_showMenu:(id)arg1 fromTimer:(BOOL)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4 untilMouseUp:(BOOL)arg5;
- (BOOL)_shouldShowMenuImmediately:(id)arg1;
- (BOOL)_shouldShowMenu;
- (void)setControlSize:(unsigned long long)arg1;
@property(copy) NSImage *disabledIconImage;
@property(copy) NSImage *alternateIconImage;
@property(copy) NSImage *iconImage; // @synthesize iconImage=_iconImage;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setEnabled:(BOOL)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)performClick:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)_shouldDoRegularTracking;
- (unsigned long long)_numberItemsThreshold;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface _DVTMainViewControllerMonitor : NSObject <DVTInvalidation>
{
    DVTWeakInterposer *_window_dvtWeakInterposer;
    DVTObservingToken *_firstResponderObservingToken;
    DVTViewController *_mainViewController;
}

+ (void)initialize;
@property(retain) DVTViewController *mainViewController; // @synthesize mainViewController=_mainViewController;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)initWithWindow:(id)arg1;
@property __weak NSWindow *window;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTMainViewControllerMonitor : NSObject
{
}

+ (void)stopMonitoringMainViewControllerInWindow:(id)arg1;
+ (void)startMonitoringMainViewControllerInWindow:(id)arg1;
+ (void)initialize;

@end

@interface DVTModernTableHeaderCell : NSTableHeaderCell
{
    double _leftTitleMargin;
}

@property double leftTitleMargin; // @synthesize leftTitleMargin=_leftTitleMargin;
- (void)drawSortIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2 ascending:(BOOL)arg3 priority:(long long)arg4;
- (struct CGRect)sortIndicatorRectForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)init;

@end

@interface DVTToolTipView : NSView
{
    NSMutableAttributedString *string;
    NSColor *backgroundColor;
    double maxWidth;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)setAttributedString:(id)arg1;
- (void)setMaxWidth:(double)arg1;
- (double)maxWidth;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTToolTip : NSObject
{
}

+ (id)boldToolTipFont;
+ (id)toolTipFont;
+ (id)attributedToolTipStringForString:(id)arg1;
+ (struct CGPoint)toolTipPositionForMouseLocation:(struct CGPoint)arg1;
+ (void)orderOutToolTip;
+ (void)fadeOut:(id)arg1;
+ (void)showToolTip:(id)arg1 withSourceRect:(struct CGRect)arg2 andMouseLocation:(struct CGPoint)arg3;
+ (void)showToolTip:(id)arg1 withSourceRect:(struct CGRect)arg2 andMouseLocation:(struct CGPoint)arg3 maximumWidth:(double)arg4;
+ (id)scheduledTimerWithInterval:(double)arg1;

@end

@interface DVTHorizontalCapacityViewController : DVTCapacityViewController
{
    NSString *_leftLabelString;
    NSString *_rightLabelString;
    NSTextField *_leftLabel;
    NSTextField *_rightLabel;
    NSView *_segmentsLabelView;
}

@property __weak NSView *segmentsLabelView; // @synthesize segmentsLabelView=_segmentsLabelView;
@property __weak NSTextField *rightLabel; // @synthesize rightLabel=_rightLabel;
@property __weak NSTextField *leftLabel; // @synthesize leftLabel=_leftLabel;
@property(copy) NSString *rightLabelString; // @synthesize rightLabelString=_rightLabelString;
@property(copy) NSString *leftLabelString; // @synthesize leftLabelString=_leftLabelString;
- (void).cxx_destruct;
- (void)_recreateAndAddLabelsForSegments;
- (void)setSegments:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface DVTHorizontalCapacityView : DVTCapacityView
{
}

- (id)_deriveBottomSegmentColor:(id)arg1;
- (id)_deriveTopSegmentColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTLayoutView_ML : NSView
{
    NSCountedSet *_frameChangeObservations;
    NSCountedSet *_boundsChangeObservations;
    BOOL _implementsDrawRect;
    BOOL _implementsLayoutCompletionCallback;
    BOOL _layoutNeeded;
    NSMutableDictionary *_invalidationTokens;
    BOOL _needsSecondLayoutPass;
}

+ (void)_layoutWindow:(id)arg1;
+ (void)_recursivelyLayoutSubviewsOfView:(id)arg1 populatingSetWithLaidOutViews:(id)arg2;
+ (void)_doRecursivelyLayoutSubviewsOfView:(id)arg1 populatingSetWithLaidOutViews:(id)arg2 completionCallBackHandlers:(id)arg3 currentLayoutPass:(long long)arg4 needsSecondPass:(char *)arg5;
+ (void)scheduleWindowForLayout:(id)arg1;
+ (id)alreadyLaidOutViewsForCurrentDisplayPassOfWindow:(id)arg1;
+ (void)clearAlreadyLaidOutViewsForCurrentDisplayPassOfWindow:(id)arg1;
@property BOOL needsSecondLayoutPass; // @synthesize needsSecondLayoutPass=_needsSecondLayoutPass;
@property(getter=isLayoutNeeded) BOOL layoutNeeded; // @synthesize layoutNeeded=_layoutNeeded;
- (void).cxx_destruct;
- (BOOL)wantsDefaultClipping;
- (void)stopInvalidatingLayoutWithChangesToKeyPath:(id)arg1 ofObject:(id)arg2;
- (void)invalidateLayoutWithChangesToKeyPath:(id)arg1 ofObject:(id)arg2;
- (void)_autoLayoutViewViewFrameDidChange:(id)arg1;
- (void)_autoLayoutViewViewBoundsDidChange:(id)arg1;
- (void)stopInvalidatingLayoutWithBoundsChangesToView:(id)arg1;
- (void)stopInvalidatingLayoutWithFrameChangesToView:(id)arg1;
- (void)invalidateLayoutWithBoundsChangesToView:(id)arg1;
- (void)invalidateLayoutWithFrameChangesToView:(id)arg1;
- (void)tearDownObservationForObservedObject:(id)arg1 notificationName:(id)arg2 table:(id)arg3;
- (void)setupObservationForObservedObject:(id)arg1 selector:(SEL)arg2 notificationName:(id)arg3 table:(id *)arg4;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)didCompleteLayout;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)layoutIfNeeded;
- (void)didLayoutSubview:(id)arg1;
- (id)subviewsOrderedForLayout;
- (void)viewWillDraw;
- (void)_reallyLayoutIfNeededBottomUp;
- (void)_reallyLayoutIfNeededTopDown;
- (void)invalidateLayout;
- (void)viewDidMoveToWindow;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_DVTLayoutView_MLSharedInit;
- (void)dealloc;

@end

@interface DVTLayoutView_MLObservanceKey : NSObject <NSCopying>
{
    id object;
    NSString *keyPath;
}

+ (id)observanceKeyWithObject:(id)arg1 andKeyPath:(id)arg2;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToObservanceKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithObject:(id)arg1 andKeyPath:(id)arg2;

@end

@interface DVTIncrementalFindBar : DVTFindBar
{
    DVTTextFinder *_finder;
    DVTFindResult *_currentResult;
    DVTDocumentLocation *_findAnchor;
    struct _DVTIncrementalFindBarFlags _ifbflags;
}

@property(copy) DVTDocumentLocation *_findAnchor; // @synthesize _findAnchor;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)_finder;
- (void)_tellDelegateAboutFoundResults:(id)arg1;
- (void)_tellDelegateAboutCurrentResult:(id)arg1;
- (void)updateStatusInformingDelegate:(BOOL)arg1;
- (void)clearResults;
- (void)_resetFindAnchor;
- (void)invalidateResultsAndUpdate:(BOOL)arg1;
- (BOOL)supportsCaseInsensitiveMatch;
- (BOOL)supportsTextMatchStyle:(int)arg1;
- (BOOL)supportsFindBarMode:(unsigned long long)arg1;
- (BOOL)supportsFindBarType:(unsigned long long)arg1;
@property(retain, nonatomic) id findObject;
- (void)findBarLostFocus;
- (void)performFindHighlightingFirstResult:(BOOL)arg1 informDelegate:(BOOL)arg2;
- (void)replaceAllInSelection:(id)arg1;
- (void)replaceAll:(id)arg1;
- (void)_replaceAllInSelection:(BOOL)arg1;
- (void)replaceAndFindPrevious:(id)arg1;
- (void)replaceAndFindNext:(id)arg1;
- (void)replace:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (long long)_compareLocation:(id)arg1 toLocation:(id)arg2;
- (void)_showWrapOrEndOfFileBezel:(BOOL)arg1 reverse:(BOOL)arg2;
- (void)_findBackwardsFrom:(id)arg1;
- (void)selectFindField:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface DVTPasswordWindowController : NSWindowController <NSOpenSavePanelDelegate>
{
    BOOL _verify;
    BOOL _useInvalidIcons;
    BOOL _showButtons;
    DVTStackView_ML *_accessoryView;
    NSString *_password;
    NSString *_password2;
    NSString *_message;
    id _context;
    NSView *_verifyView;
    NSView *_buttonsView;
}

+ (id)keyPathsForValuesAffectingPasswordsMatch;
@property(retain) NSView *buttonsView; // @synthesize buttonsView=_buttonsView;
@property(retain) NSView *verifyView; // @synthesize verifyView=_verifyView;
@property(nonatomic) BOOL showButtons; // @synthesize showButtons=_showButtons;
@property(retain) id context; // @synthesize context=_context;
@property BOOL useInvalidIcons; // @synthesize useInvalidIcons=_useInvalidIcons;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *password2; // @synthesize password2=_password2;
@property(copy) NSString *password; // @synthesize password=_password;
@property(retain) DVTStackView_ML *accessoryView; // @synthesize accessoryView=_accessoryView;
@property(nonatomic) BOOL verify; // @synthesize verify=_verify;
- (void).cxx_destruct;
- (void)cancelPassphraseAction:(id)arg1;
- (void)setPassphraseAction:(id)arg1;
- (void)windowDidLoad;
- (void)_resizeWindow;
- (id)init;
- (void)setPasswordsMatch:(BOOL)arg1;
@property(readonly) BOOL passwordsMatch;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)_isExportPasswordValid:(id *)arg1;
- (BOOL)_isImportPasswordValid:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFilePathField : NSTextField
{
    BOOL _pathIsEditing;
    BOOL _hasCalledDealloc;
}

+ (Class)cellClass;
@property BOOL pathIsEditing; // @synthesize pathIsEditing=_pathIsEditing;
- (void)dealloc;
- (void)mouseDown:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setCell:(id)arg1;
- (id)cell;

@end

@interface DVTPopoverContentViewController : DVTViewController <NSPopoverDelegate>
{
    CDUnknownBlockType _didCloseBlock;
    NSPopover *_popover;
}

+ (id)configuredPopoverWithViewController:(id)arg1 didCloseBlock:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)_popoverDidClose:(id)arg1;
- (void)_popoverWillClose:(id)arg1;
- (void)_setDidCloseBlock:(CDUnknownBlockType)arg1;
- (void)_setPopover:(id)arg1;
- (void)primitiveInvalidate;
- (void)closePopover:(id)arg1;
- (id)popover;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTMergedSortedArray : NSArray
{
    NSArray *_array1;
    NSArray *_array2;
    struct _mergedIndexes {
        unsigned int :1;
        unsigned int :31;
    } *_combinedInfo;
    unsigned long long _count;
}

- (void).cxx_destruct;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithArray:(id)arg1 array:(id)arg2 context:(void *)arg3 mergeDuplicates:(BOOL)arg4 comparator:(CDUnknownBlockType)arg5;
- (id)initWithArray:(id)arg1 array:(id)arg2 context:(void *)arg3 comparator:(CDUnknownBlockType)arg4;
- (id)_initWithArray:(id)arg1 array:(id)arg2 context:(void *)arg3 mergeDuplicates:(BOOL)arg4 comparator:(CDUnknownBlockType)arg5;

@end

@interface DVTFontTextField : DVTButtonTextField <NSTextViewDelegate, NSWindowDelegate>
{
}

+ (id)keyPathsForValuesAffectingPointSize;
+ (void)setCellClass:(Class)arg1;
+ (Class)cellClass;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)resignFirstResponder;
@property double pointSize;
@property(retain) NSFont *fontValue;
@property(retain) id fontRepresentation;
@property(retain) id <DVTFontTextFieldDataSource> dataSource;
- (id)cell;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTAssetDetailTextView : NSTextView <DVTFirstResponderShowingView>
{
    DVTFirstResponderDrawingStrategy *_firstResponderDrawingStrategy;
    BOOL _showsFirstResponder;
}

@property BOOL showsFirstResponder; // @synthesize showsFirstResponder=_showsFirstResponder;
- (void).cxx_destruct;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPlistModel : NSObject <DVTTextFindable, DVTTextReplacable, DVTInvalidation>
{
    NSDocument<DVTPlistDocumentProtocol> *_document;
    DVTPlistNode *_plist;
    DVTPlistStructureDefinition *_structureDefinition;
}

+ (void)initialize;
@property(readonly) NSDocument<DVTPlistDocumentProtocol> *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (unsigned long long)replaceAllResults:(id)arg1 inNode:(id)arg2 withString:(id)arg3;
- (BOOL)selection:(id)arg1 matchesString:(id)arg2 ignoreCase:(BOOL)arg3;
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)_replaceValueInNode:(id)arg1 range:(struct _NSRange)arg2 replacement:(id)arg3;
- (id)replacePlist:(id)arg1 withPlist:(id)arg2;
- (void)movePlist:(id)arg1 toIndex:(long long)arg2;
- (id)setClass:(Class)arg1 forPlist:(id)arg2;
- (void)setLocalizedKey:(id)arg1 forPlist:(id)arg2;
- (void)setKey:(id)arg1 forPlist:(id)arg2;
- (void)deletePlist:(id)arg1;
- (id)addChild:(id)arg1 toPlist:(id)arg2 withKey:(id)arg3 atIndex:(long long)arg4;
- (void)_removeRoot;
- (id)setPlist:(id)arg1;
- (id)createNewChildForPlist:(id)arg1 withKey:(id)arg2;
- (id)keyForNewChildOfDictionary:(id)arg1;
- (id)keyByUniquingKey:(id)arg1 inDictionary:(id)arg2;
- (BOOL)canDeletePlist:(id)arg1;
- (BOOL)canAddChildToPlist:(id)arg1 withKey:(id)arg2;
- (id)placeholderValueForPlist:(id)arg1;
- (BOOL)canEditValueForPlist:(id)arg1;
- (BOOL)canEditClassForPlist:(id)arg1;
- (BOOL)canEditKeyForPlist:(id)arg1;
- (id)keyPathForPlist:(id)arg1;
- (id)plistForKeyPath:(id)arg1;
- (id)plist;
- (id)_setPlist:(id)arg1 forKeyPath:(id)arg2 atIndex:(long long)arg3 doReplace:(BOOL)arg4 doNotify:(BOOL)arg5;
- (void)_setPlistNoCopy:(id)arg1 forKeyPath:(id)arg2 atIndex:(long long)arg3 doReplace:(BOOL)arg4 doNotify:(BOOL)arg5;
- (void)_renameKey:(id)arg1 forKeyPath:(id)arg2;
@property(retain) DVTPlistStructureDefinition *plistStructureDefinition;
- (id)plistFromString:(id)arg1;
- (id)plistFromData:(id)arg1;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (id)xmlPropertyListForNode:(id)arg1;
- (id)asciiPropertyListForNode:(id)arg1;
- (BOOL)isValidASCIIPropertyList;
- (void)primitiveInvalidate;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTPlistStructureDefinition : NSObject
{
    DVTExtension *_extension;
}

+ (id)plistStructureDefinitionForFileWithName:(id)arg1;
+ (id)plistStructureDefinitionForIdentifier:(id)arg1;
+ (id)sortedPlistStructureDefinitions;
+ (id)plistStructureDefinitions;
+ (id)_plistStructureDefinitions;
- (void).cxx_destruct;
- (id)identifyingKeyForElementDefinitionNamed:(id)arg1;
- (id)typeNameForArrayElementsInElementDefinitionNamed:(id)arg1;
- (id)placeholderForElementDefinitionNamed:(id)arg1;
- (id)defaultKeyNameForElementDefinitionNamed:(id)arg1;
- (id)priorityOrderedKeyNamesForElementDefinitionNamed:(id)arg1;
- (id)variantNameForUserName:(id)arg1 forElementDefinitionNamed:(id)arg2;
- (id)allowableVariantUserNamesForElementDefinitionNamed:(id)arg1;
- (id)allowableVariantNamesForElementDefinitionNamed:(id)arg1;
- (id)allowableKeyUserNamesForElementDefinitionNamed:(id)arg1;
- (id)allowableKeyNamesForElementDefinitionNamed:(id)arg1;
- (id)allowableValueUserNamesForElementDefinitionNamed:(id)arg1;
- (id)allowableValueNamesForElementDefinitionNamed:(id)arg1;
- (id)defaultValueObjectInArrayElementDefinitionNamed:(id)arg1;
- (id)defaultValueForKey:(id)arg1 inDictionaryElementDefinitionNamed:(id)arg2;
- (id)defaultValueForElementDefinitionNamed:(id)arg1;
- (BOOL)isAllowableKey:(id)arg1 inDictionaryElementDefinitionNamed:(id)arg2;
- (Class)classForElementDefinitionNamed:(id)arg1;
- (id)allowableValueForUserName:(id)arg1 inDictionaryElementDefinitionNamed:(id)arg2;
- (id)userNameForAllowableValue:(id)arg1 inDictionaryElementDefinitionNamed:(id)arg2;
- (id)keyForUserName:(id)arg1 inDictionaryElementDefinitionNamed:(id)arg2;
- (id)userNameForKey:(id)arg1 inDictionaryElementDefinitionNamed:(id)arg2;
- (id)elementDefinitionNameForPlist:(id)arg1 inPlistModel:(id)arg2;
- (BOOL)appliesToFileWithName:(id)arg1;
- (id)userNameForElementDefinitionNamed:(id)arg1;
- (id)definitionNamed:(id)arg1;
- (id)parentDefinitionForDefinitionNamed:(id)arg1;
@property(readonly, copy) NSString *identifier;
@property(readonly, copy) NSString *name;
- (id)initWithExtension:(id)arg1;

@end

@interface DVTTextCompletionBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (id)window;

@end

@interface DVTTextCompletionController : NSObject
{
    DVTCompletingTextView *_textView;
    DVTTextCompletionSession *_currentSession;
    NSString *_lastDismissingTextViewAction;
    NSString *_lastDismissingAppAction;
    id <DVTCancellable> _appActionsMonitor;
    id _eventMonitor;
    BOOL _autoCompletionEnabled;
    BOOL _sessionInProgress;
    BOOL _registeredScrollListener;
}

+ (id)performanceLogAspect;
+ (id)completionUILogAspect;
@property(retain) DVTTextCompletionSession *currentSession; // @synthesize currentSession=_currentSession;
@property(readonly) BOOL sessionInProgress; // @synthesize sessionInProgress=_sessionInProgress;
@property(getter=isAutoCompletionEnabled) BOOL autoCompletionEnabled; // @synthesize autoCompletionEnabled=_autoCompletionEnabled;
@property(readonly) DVTCompletingTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (id)debugStateString;
- (BOOL)showInfoPanelForSelectedCompletion;
- (id)attributesForCompletionAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (BOOL)_textViewShouldInsertTab;
- (BOOL)_textViewShouldHandleCancel;
- (BOOL)_textViewShouldHandleComplete;
- (BOOL)_textViewShouldHandlePreviousCompletion;
- (BOOL)_textViewShouldHandleNextCompletion;
- (void)_applicationWillDispatchAction:(SEL)arg1;
- (BOOL)textViewShouldSetMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (BOOL)textViewShouldChangeTextInRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (BOOL)textViewShouldPerformAction:(SEL)arg1;
- (void)_textViewDidScroll:(id)arg1;
- (void)_textViewWillUndoRedo:(id)arg1;
- (void)textViewDidInsertText;
- (BOOL)textViewShouldInsertText:(id)arg1;
- (void)_textViewTextDidChange:(id)arg1;
- (void)textViewSelectionChanging;
- (void)_dismissAndInvalidateCurrentSession;
- (void)_hideCompletionsWithoutInvalidatingWithReason:(int)arg1;
- (void)hideCompletions;
- (BOOL)acceptCurrentCompletion;
- (BOOL)_showCompletionsAtCursorLocationExplicitly:(BOOL)arg1;
- (BOOL)showCompletionsAtCursorLocation;
- (void)setSessionInProgress:(BOOL)arg1;
@property(readonly, getter=isShowingCompletions) BOOL showingCompletions;
- (void)dealloc;
- (id)initWithTextView:(id)arg1;
- (id)init;

@end

@interface DVTAnnotationProvider : NSObject
{
    NSMutableSet *_annotations;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
+ (void)initialize;
- (void).cxx_destruct;
- (void)providerWillUninstall;
- (id)init;

// Remaining properties
@property(copy) NSSet *annotations; // @dynamic annotations;
@property(readonly, copy) NSMutableSet *mutableAnnotations; // @dynamic mutableAnnotations;

@end

@interface DVTStackView_AppKitAutolayout : NSView
{
    NSArray *_privateConstraints;
    unsigned long long _paddingMask;
    double _topPadding;
    double _rightPadding;
    double _bottomPadding;
    double _leftPadding;
    double _paddingBetweenViews;
    double _padding;
    BOOL _stacksHorizontally;
}

+ (BOOL)requiresConstraintBasedLayout;
@property(nonatomic) BOOL stacksHorizontally; // @synthesize stacksHorizontally=_stacksHorizontally;
@property double padding; // @synthesize padding=_padding;
@property double paddingBetweenViews; // @synthesize paddingBetweenViews=_paddingBetweenViews;
@property double leftPadding; // @synthesize leftPadding=_leftPadding;
@property double bottomPadding; // @synthesize bottomPadding=_bottomPadding;
@property double rightPadding; // @synthesize rightPadding=_rightPadding;
@property double topPadding; // @synthesize topPadding=_topPadding;
@property(nonatomic) unsigned long long paddingMask; // @synthesize paddingMask=_paddingMask;
- (void).cxx_destruct;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (id)_generateConstraints;
@property(retain) NSArray *privateConstraints;
- (void)updateConstraints;
- (void)addView:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addViewToEnd:(id)arg1;
- (BOOL)isFlipped;
- (void)_autolayoutStackViewCommonInit;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTDiffTextStorageDataSource : DVTDiffLineDataSource
{
}

+ (void)initialize;
- (void)_textStorageDidProcessEditing:(id)arg1;
- (void)_coalescedTextStorageDidProcessEditing:(id)arg1;
- (id)THREAD_arrangedContent;
- (id)arrangedContent;
- (id)THREAD_content;
- (void)didChangeContent;
- (void)willChangeContent;
- (void)dealloc;
- (id)initWithContent:(id)arg1;

@end

@interface DVTSourceCodeComparisonAnnotationProvider : DVTAnnotationProvider
{
    NSURL *_documentURL;
    int _dataSourceType;
    DVTDiffSession *_diffSession;
    DVTDiffDescriptor *_diffDescriptor;
    DVTObservingToken *_observingToken;
    DVTObservingToken *_selectionToken;
    DVTObservingToken *_disabledToken;
    DVTObservingToken *_diffDescriptorsShouldAppearAsUnfocusedToken;
    DVTObservingToken *_diffDescriptorsShouldAppearAsInactive;
    DVTMapTable *_diffDescriptorToAnnotation;
    id _themeObserver;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property(retain) DVTObservingToken *diffDescriptorsShouldAppearAsInactiveToken; // @synthesize diffDescriptorsShouldAppearAsInactiveToken=_diffDescriptorsShouldAppearAsInactive;
@property(retain) DVTObservingToken *diffDescriptorsShouldAppearAsUnfocusedToken; // @synthesize diffDescriptorsShouldAppearAsUnfocusedToken=_diffDescriptorsShouldAppearAsUnfocusedToken;
@property(retain) DVTObservingToken *disabledToken; // @synthesize disabledToken=_disabledToken;
@property(retain) DVTObservingToken *selectionToken; // @synthesize selectionToken=_selectionToken;
@property(retain) DVTObservingToken *observingToken; // @synthesize observingToken=_observingToken;
@property(retain) DVTDiffDescriptor *diffDescriptor; // @synthesize diffDescriptor=_diffDescriptor;
@property(retain) DVTDiffSession *diffSession; // @synthesize diffSession=_diffSession;
@property int dataSourceType; // @synthesize dataSourceType=_dataSourceType;
@property(retain) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (void).cxx_destruct;
- (void)providerWillUninstall;
- (id)_addAnnotationForDiffDescriptor:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

@interface DVTPDFBlockCapturingView : NSView
{
    CDUnknownBlockType _drawingBlock;
}

@property(copy) CDUnknownBlockType drawingBlock; // @synthesize drawingBlock=_drawingBlock;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTNSImageDeallocTattleTale : NSObject
{
    DVTStackBacktrace *_creationBacktrace;
    NSString *_imageDescription;
}

@property(retain) NSString *imageDescription; // @synthesize imageDescription=_imageDescription;
@property(retain) DVTStackBacktrace *creationBacktrace; // @synthesize creationBacktrace=_creationBacktrace;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface DVTNonLossyASCIIFormatter : NSFormatter
{
    BOOL _escapeInvisibleASCII;
}

@property BOOL escapeInvisibleASCII; // @synthesize escapeInvisibleASCII=_escapeInvisibleASCII;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)nonLossyASCIIDataForString:(id)arg1;
- (id)init;
- (id)initWithEscapeInivisbleASCII:(BOOL)arg1;

@end

@interface DVTFindPatternAttachment : NSTextAttachment
{
}

- (id)description;

@end

@interface DVTFindPatternAttachmentCell : NSTextAttachmentCell
{
    struct {
        unsigned int _selected:1;
        unsigned int _reserved:31;
    } _tacFlags;
    DVTFindPattern *_findPattern;
    NSTextField<DVTFindPatternField> *_field;
    NSColor *_DVTFindPatternForegroundColor;
    NSColor *_DVTFindPatternBackgroundColor;
    NSColor *_DVTFindPatternSelectedBackgroundColor;
    NSColor *_DVTFindPatternRolloverForegroundColor;
    NSColor *_DVTFindPatternRolloverBackgroundColor;
    int cachedGroupID;
}

@property NSTextField<DVTFindPatternField> *field; // @synthesize field=_field;
- (void).cxx_destruct;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTokenWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)pullDownRectForBounds:(struct CGRect)arg1;
- (struct CGPoint)cellBaselineOffset;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSize;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (id)pullDownImage;
- (id)menu;
- (BOOL)_hasMenu;
- (id)textColor;
- (id)tokenBackgroundColor;
- (id)tokenForegroundColor;
- (long long)interiorBackgroundStyle;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(retain) DVTFindPattern *findPattern;
- (id)_attributedString;
- (void)_setGroupID:(int)arg1;
- (id)description;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;

@end

@interface DVTPlistParser : NSObject
{
    const unsigned short *begin;
    const unsigned short *curr;
    const unsigned short *end;
    NSString *errorString;
}

- (void).cxx_destruct;
- (id)errorString;
- (id)parseData:(id)arg1;
- (id)parseOldStylePropertyListOrStringsFile;
- (id)parsePlistObject:(BOOL)arg1;
- (id)parsePlistData;
- (int)getDataBytes:(char *)arg1 size:(int)arg2;
- (id)parsePlistDict;
- (id)parsePlistDictContent;
- (id)parsePlistArray;
- (id)parsePlistString:(BOOL)arg1;
- (id)parseUnquotedPlistString;
- (id)parseQuotedPlistStringWithQuote:(unsigned short)arg1;
- (unsigned short)getSlashedChar;
- (unsigned int)lineNumber;
- (void)advanceToNonSpace;

@end

@interface DVTFindBar : DVTViewController <DVTFindPatternManager, DVTScopeBarContentController>
{
    NSPopUpButton *_finderModePopUpButton;
    DVTSearchField<DVTFindPatternField> *_findStringField;
    DVTFindPatternTextField<DVTFindPatternField> *_replaceStringField;
    NSSegmentedControl *_segmentedControl;
    DVTStackView_AppKitAutolayout *_stackView;
    DVTBorderedView *_replaceModeView;
    NSTextField *_replaceTextField;
    NSTimer *_editedTimer;
    DVTFindBarOptionsCtrl *_optionsCtrl;
    DVTSharedFindState *_findState;
    NSMutableArray *_recents;
    NSObject<DVTFindBarHostable> *_delegate;
    id _findObject;
    double _preferredViewHeight;
    NSAttributedString *_findAttributedString;
    NSAttributedString *_replaceAttributedString;
    unsigned long long _finderMode;
    struct _DVTFindBarFlags _fbflags;
    BOOL _canReplace;
    BOOL _hasResults;
    BOOL _recentsNeedUpdate;
    DVTObservingToken *_findTypeObserver;
    DVTObservingToken *_findStateFindStringObsT;
    DVTObservingToken *_findStateReplaceStringObsT;
    long long _numberOfMatches;
    NSView *_findBarView;
    NSSegmentedControl *_replaceSegmentedControl;
    NSSegmentedControl *_doneSegmentedButtom;
    NSLayoutConstraint *_findSearchFieldLeadingConstraint;
    NSLayoutConstraint *_replaceSegmentControlWidth;
    NSLayoutConstraint *_findSearchFieldHeight;
    NSLayoutConstraint *_replaceSearchFieldHeight;
}

+ (id)keyPathsForValuesAffectingReplaceString;
+ (id)keyPathsForValuesAffectingFindRegularExpression;
+ (id)keyPathsForValuesAffectingFindString;
+ (void)initialize;
@property __weak NSLayoutConstraint *replaceSearchFieldHeight; // @synthesize replaceSearchFieldHeight=_replaceSearchFieldHeight;
@property __weak NSLayoutConstraint *findSearchFieldHeight; // @synthesize findSearchFieldHeight=_findSearchFieldHeight;
@property __weak NSLayoutConstraint *replaceSegmentControlWidth; // @synthesize replaceSegmentControlWidth=_replaceSegmentControlWidth;
@property __weak NSLayoutConstraint *findSearchFieldLeadingConstraint; // @synthesize findSearchFieldLeadingConstraint=_findSearchFieldLeadingConstraint;
@property __weak NSSegmentedControl *doneSegmentedButtom; // @synthesize doneSegmentedButtom=_doneSegmentedButtom;
@property __weak NSSegmentedControl *replaceSegmentedControl; // @synthesize replaceSegmentedControl=_replaceSegmentedControl;
@property __weak NSView *findBarView; // @synthesize findBarView=_findBarView;
@property(nonatomic) long long numberOfMatches; // @synthesize numberOfMatches=_numberOfMatches;
@property BOOL recentsNeedUpdate; // @synthesize recentsNeedUpdate=_recentsNeedUpdate;
@property double preferredViewHeight; // @synthesize preferredViewHeight=_preferredViewHeight;
@property(nonatomic) BOOL hasResults; // @synthesize hasResults=_hasResults;
@property BOOL canReplace; // @synthesize canReplace=_canReplace;
@property(nonatomic) unsigned long long finderMode; // @synthesize finderMode=_finderMode;
@property(copy, nonatomic) NSAttributedString *replaceAttributedString; // @synthesize replaceAttributedString=_replaceAttributedString;
@property(copy, nonatomic) NSAttributedString *findAttributedString; // @synthesize findAttributedString=_findAttributedString;
@property(retain, nonatomic) id findObject; // @synthesize findObject=_findObject;
@property(retain) NSObject<DVTFindBarHostable> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)didPressDismissOnScopeBar:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_endedEditing:(id)arg1;
- (void)findBarLostFocus;
- (void)controlTextDidChange:(id)arg1;
- (void)findPatternField:(id)arg1 findPatternDoubleClicked:(id)arg2;
- (BOOL)hasFindPattern;
- (id)replaceFieldForField:(id)arg1;
- (id)findFieldForField:(id)arg1;
- (id)_replaceField;
- (id)_findField;
- (BOOL)supportsPatterns;
- (id)_recentsMenu;
- (void)_showFindOptionsPopover:(id)arg1;
- (void)_clearRecents;
- (void)_restoreFindHistory:(id)arg1;
- (void)_replaceSegmentedControlClicked:(id)arg1;
- (void)_dismiss:(id)arg1;
- (void)_replaceAllInSelectionButtonAction:(id)arg1;
- (void)_segmentedControlAction:(id)arg1;
- (void)_replaceStringFieldAction:(id)arg1;
- (void)_findStringFieldAction:(id)arg1;
- (void)cancel:(id)arg1;
- (void)_insertFindPattern:(id)arg1;
- (void)_optionsChanged:(id)arg1;
- (BOOL)supportsCaseInsensitiveMatch;
- (BOOL)supportsTextMatchStyle:(int)arg1;
- (BOOL)supportsFindBarMode:(unsigned long long)arg1;
- (BOOL)supportsFindBarType:(unsigned long long)arg1;
- (void)performFindHighlightingFirstResult:(BOOL)arg1 informDelegate:(BOOL)arg2;
- (void)clearResults;
- (void)updateStatusInformingDelegate:(BOOL)arg1;
- (void)invalidateResults;
- (void)invalidateResultsAndUpdate:(BOOL)arg1;
- (double)invalidationDelayInterval;
- (void)_updateAfterInvalidate:(id)arg1;
- (void)changeFinderMode:(id)arg1;
- (void)replaceAllInSelection:(id)arg1;
- (void)replaceAll:(id)arg1;
- (void)replaceAndFindPrevious:(id)arg1;
- (void)replaceAndFindNext:(id)arg1;
- (void)replace:(id)arg1;
@property(readonly) BOOL supportsReplace;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
@property(readonly) BOOL replaceFieldHasFocus;
- (void)selectReplaceField:(id)arg1;
@property(readonly) BOOL findFieldHasFocus;
- (void)selectFindField:(id)arg1;
@property(readonly) BOOL viewIsInstalled;
@property(readonly) DVTFindBarOptionsCtrl *optionsCtrl;
@property(readonly) DVTLogAspect *logAspect;
@property BOOL ignoreNextInvalidate;
@property BOOL findResultsValid;
- (BOOL)shouldCloseOnEscape;
- (void)wasAssociatedWithScopeBarController:(id)arg1;
@property(readonly, copy, nonatomic) NSString *replaceExpression;
@property(copy) NSString *replaceString;
@property(readonly, copy, nonatomic) NSString *findRegularExpression;
@property(copy, nonatomic) NSString *findString;
- (void)setFindAttributedStringAndUpdate:(id)arg1;
- (void)setFindAttributedString:(id)arg1 andUpdate:(BOOL)arg2;
- (void)updateRecentsMenu;
- (void)sanitizeStrings;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)_updateSharedFindStateReplaceAttributedString:(id)arg1;
- (void)_updateSharedFindStateFindAttributedString:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTFindBarControllerContentView : DVTControllerContentView
{
}

- (void)layoutTopDown;

@end

@interface DVTMockupViewController : DVTViewController
{
    NSImageView *_imageView;
}

@property(retain) NSImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;

@end

@interface DVTLineGraphLayerStyle : NSObject
{
    NSImage *_symbolImage;
    NSBezierPath *_symbolPath;
    NSImage *_selectedSymbolImage;
    BOOL _fillSymbol;
    int _symbolStyle;
    double _lineWidth;
    NSColor *_lineColor;
    double _symbolSize;
}

@property(nonatomic) BOOL fillSymbol; // @synthesize fillSymbol=_fillSymbol;
@property(nonatomic) double symbolSize; // @synthesize symbolSize=_symbolSize;
@property(nonatomic) int symbolStyle; // @synthesize symbolStyle=_symbolStyle;
@property(copy, nonatomic) NSColor *lineColor; // @synthesize lineColor=_lineColor;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
- (void).cxx_destruct;
- (void)_sendStyleChangedNotification;
@property(readonly) NSImage *selectedSymbolImage;
- (id)_createSymbolPathForSymbolStyle:(int)arg1;
@property(readonly) NSBezierPath *symbolPath;
@property(readonly) NSImage *symbolImage;
- (void)_resetSymbol;
- (id)init;

@end

@interface DVTDraggedObjectsTransitionView : DVTDraggedImageStateTransitionView
{
    NSAffineTransform *_transformFromToState;
    NSAffineTransform *_transformFromFromState;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)setProgress:(float)arg1;
- (id)toState;
- (id)fromState;
- (id)description;
- (id)initWithFromState:(id)arg1 andToState:(id)arg2;

@end

@interface DVTLayerHostingView : NSView
{
    CALayer<DVTClickableLayer> *_currentClickedLayer;
}

- (void).cxx_destruct;
- (BOOL)clickableLayerExistsForEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)clickableLayerForEvent:(id)arg1;
- (id)clickableLayerAtPoint:(struct CGPoint)arg1;
- (unsigned int)_CAViewFlags;
- (BOOL)requireOptimumPerformance;

@end

@interface Animation : NSAnimation
{
    CDUnknownBlockType _progressHandler;
}

- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;
- (id)initWithDuration:(double)arg1 animationCurve:(unsigned long long)arg2 progressHandler:(CDUnknownBlockType)arg3;

@end

@interface InvisibleScroller : NSScroller
{
}

+ (double)scrollerWidthForControlSize:(unsigned long long)arg1 scrollerStyle:(long long)arg2;

@end

@interface DVTDynamicTableHeaderView : NSView
{
    DVTImageAndTextCell *_imageAndTextCell;
    NSTextFieldCell *_textCell;
    NSButton *_disclosureButton;
    BOOL _showDisclosureButton;
}

+ (id)stringDropShadow;
+ (id)matchAttributedStringForCount:(long long)arg1;
@property(readonly) NSButton *disclosureButton; // @synthesize disclosureButton=_disclosureButton;
@property(nonatomic) BOOL showDisclosureButton; // @synthesize showDisclosureButton=_showDisclosureButton;
@property(retain) DVTImageAndTextCell *imageAndTextCell; // @synthesize imageAndTextCell=_imageAndTextCell;
@property(retain) NSTextFieldCell *textCell; // @synthesize textCell=_textCell;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTTabChooserViewSelectedObjectsValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface DVTTabChooserView : DVTBorderedView
{
    NSSearchField *_searchField;
    DVTChoice *_selectedChoice;
    long long _pressedIndex;
    long long _mouseDownIndex;
    NSMutableArray *_choices;
    NSMapTable *_accessibilityProxiesByChoice;
    struct {
        unsigned int hasSearchField:1;
        unsigned int _reserved:7;
    } _flags;
    id <DVTTabChooserViewDelegate> _delegate;
    double _choicesOffset;
}

+ (id)keyPathsForValuesAffectingSelectedChoice;
+ (void)initialize;
@property double choicesOffset; // @synthesize choicesOffset=_choicesOffset;
@property __weak id <DVTTabChooserViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSSearchField *searchField; // @synthesize searchField=_searchField;
- (void).cxx_destruct;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityProxyForChoice:(id)arg1;
@property BOOL hasSearchField;
- (void)installSearchField;
- (struct CGRect)searchFieldFrame;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)choiceForEvent:(id)arg1 index:(long long *)arg2;
- (id)choiceForPoint:(struct CGPoint)arg1 index:(long long *)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawChoiceAtIndex:(long long)arg1 withChoiceGeometry:(id)arg2;
- (void)_drawOneChoice;
- (id)attributedTitleForChoice:(id)arg1 forceActive:(BOOL)arg2;
- (id)_choiceGeometry;
- (struct CGRect)_rectForChoice:(id)arg1;
- (struct CGRect)_rectForChoiceAtIndex:(long long)arg1;
- (struct CGRect)_rectForChoiceAtIndex:(long long)arg1 withChoiceGeometry:(id)arg2;
@property(readonly) double minimumWidth;
- (struct CGRect)totalChoicesRect;
- (double)totalWidth;
- (double)_widthForChoiceAtIndex:(long long)arg1;
- (double)_widthForChoice:(id)arg1;
- (void)updateBoundSelectedObjects;
@property(retain) DVTChoice *selectedChoice; // @synthesize selectedChoice=_selectedChoice;
@property(readonly) NSMutableArray *mutableChoices;
- (void)updateBoundContent;
@property(copy) NSArray *choices;
- (id)choiceWithIdentifier:(id)arg1;
- (id)choiceAtIndex:(long long)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
- (id)dvtExtraBindings;

@end

@interface DVTTabChooserViewChoiceAccessibilityProxy : NSObject
{
    DVTChoice *_choice;
    DVTTabChooserView *_tabChooserView;
}

- (void).cxx_destruct;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (id)initWithChoice:(id)arg1 tabChooserView:(id)arg2;

@end

@interface DVTGraph : NSView
{
    struct _DVTGraphBounds _preDragGraphBounds;
    NSMutableArray *_graphLayers;
    struct CGPoint _initialMouseDownPoint_screen;
    struct CGPoint _initialMouseDownPoint_model;
    struct CGRect _currentHighlightRect;
    int _currentMouseDragOperation;
    id _optionMonitor;
    DVTNotificationToken *_graphStyleToken;
    DVTMapTable *_layersToNotificationTokenArrays;
    DVTGraphPopoverViewController *_detailsViewController;
    DVTGraphStyle *_graphStyle;
    NSString *_graphTitle;
    NSString *_xAxisTitle;
    NSString *_yAxisTitle;
    struct _DVTGraphBounds _graphBounds;
    struct _DVTGraphBounds _viewableGraphBounds;
    struct _DVTGraphInsets _graphScreenInsets;
}

@property(copy, nonatomic) NSString *yAxisTitle; // @synthesize yAxisTitle=_yAxisTitle;
@property(copy, nonatomic) NSString *xAxisTitle; // @synthesize xAxisTitle=_xAxisTitle;
@property(copy, nonatomic) NSString *graphTitle; // @synthesize graphTitle=_graphTitle;
@property(readonly) DVTGraphStyle *graphStyle; // @synthesize graphStyle=_graphStyle;
@property(nonatomic) struct _DVTGraphInsets graphScreenInsets; // @synthesize graphScreenInsets=_graphScreenInsets;
@property(nonatomic) struct _DVTGraphBounds viewableGraphBounds; // @synthesize viewableGraphBounds=_viewableGraphBounds;
@property(nonatomic) struct _DVTGraphBounds graphBounds; // @synthesize graphBounds=_graphBounds;
@property(readonly) NSArray *graphLayers; // @synthesize graphLayers=_graphLayers;
- (void).cxx_destruct;
- (BOOL)acceptsFirstResponder;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_endMouseDraggedForZoom;
- (void)_handleFlagsChanged:(id)arg1;
- (void)_handleClick:(id)arg1;
- (void)_handleMouseDraggedForHighlight:(id)arg1;
- (void)_zoomByDeltaX:(double)arg1 deltaY:(double)arg2 relativeToScreenPoint:(struct CGPoint)arg3 relativeToModelPoint:(struct CGPoint)arg4 startingGraphBounds:(struct _DVTGraphBounds)arg5;
- (void)_handleMouseDraggedForZoom:(id)arg1;
- (void)_handleMouseDraggedForPan:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct _DVTGraphBounds)convertRectFromScreen:(struct CGRect)arg1;
- (struct _DVTGraphBounds)convertBoundsToScreen:(struct _DVTGraphBounds)arg1;
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToScreen:(struct CGPoint)arg1;
- (unsigned long long)_magicNumberForInteger:(double)arg1;
- (double)_adjustedStrideForRawStride:(double)arg1;
- (void)_drawGraphTitleAndAxisTitles:(struct CGRect)arg1;
- (void)_drawAxisLabelsAndGridlines:(struct CGRect)arg1;
- (void)_drawInsetGraphFrame:(struct CGRect)arg1;
- (void)_drawHighlight:(struct CGRect)arg1;
- (void)_drawGraphLayers:(struct CGRect)arg1;
- (void)_drawAxis:(struct CGRect)arg1;
- (void)_drawGraphBackground:(struct CGRect)arg1;
- (void)_drawViewBackground:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_updateGraphBoundsUsingXOffset:(double)arg1 yOffset:(double)arg2;
- (void)setGraphBoundsAndViewableGraphBounds:(struct _DVTGraphBounds)arg1;
- (id)_notificationTokenArrayForLayer:(id)arg1;
- (void)_cancelAllTokensForAllLayers;
- (void)removeAllGraphLayers;
- (void)_handleSelectionChangedForLayer:(id)arg1;
- (void)removeGraphLayer:(id)arg1;
- (void)addGraphLayer:(id)arg1;
- (void)resetCursorRects;
@property(readonly) DVTGraphPopoverViewController *detailsViewController;
- (struct CGRect)_insetDrawingFrame;
- (void)dealloc;
- (void)_initCartesianGraph:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTSlidingViewsBar : DVTBarBackground
{
    double _draggedItemWidth;
    DVTClippedTabsIndicator *_rightClipIndicator;
    DVTSlidingAnimation *_animation;
    long long _dropIndex;
    long long _dragSourceIndex;
}

@property(nonatomic) long long dragSourceIndex; // @synthesize dragSourceIndex=_dragSourceIndex;
@property(nonatomic) long long dropIndex; // @synthesize dropIndex=_dropIndex;
@property(readonly) DVTSlidingAnimation *animation; // @synthesize animation=_animation;
@property(readonly) DVTClippedTabsIndicator *rightClipIndicator; // @synthesize rightClipIndicator=_rightClipIndicator;
- (void).cxx_destruct;
- (void)updateButtons;
- (void)_ensureButtonIsInViewHierarchy:(id)arg1;
- (void)viewWillBeginDragging:(id)arg1;
- (id)viewPinnedToOverflowIndicator;
- (void)moveSlidingViewToCurrentDropIndex:(id)arg1;
- (BOOL)isSliding;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)updateDropTarget:(id)arg1;
- (double)slidingWidthForView:(id)arg1;
- (double)widthOfDraggingInfo:(id)arg1;
- (void)resumeAnimation;
- (void)pauseAnimation;
- (BOOL)reorderSlidingView:(id)arg1 fromMouseDownEvent:(id)arg2;
- (id)_lastDraggedOrUpEventFollowing:(id)arg1;
- (id)_lastDraggedEventFollowing:(id)arg1;
- (void)slideButtonsIntoPlace;
- (unsigned long long)dropIndexFromLocalPoint:(struct CGPoint)arg1;
- (unsigned long long)dropIndexFromDraggingInfo:(id)arg1;
- (void)refreshButtons;
- (void)draggedSlidingView:(id)arg1;
- (void)reorderedSlidingView:(id)arg1;
- (double)buttonBottomOffset;
- (double)paddingBetweenButtons;
- (struct CGRect)_constrainProposedButtonFrame:(struct CGRect)arg1;
- (double)minSlidingViewX;
- (double)minButtonX;
- (double)maxButtonX;
- (double)maxButtonXWithClipIndicator;
- (double)maxButtonXWithoutClipIndicator;
- (unsigned long long)lastNonSlidingViewIndex;
@property(readonly) NSArray *buttons;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTToolbarPopUpViewController : DVTGenericButtonViewController
{
    NSArray *_images;
}

- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menuFormRepresentation;
- (void)_menuItemFormRepresentationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (id)_popUpButton;
- (id)initWithPopUpButton:(id)arg1 images:(id)arg2 actionBlock:(CDUnknownBlockType)arg3 setupTeardownBlock:(CDUnknownBlockType)arg4 itemIdentifier:(id)arg5 window:(id)arg6;

@end

@interface DVTImageAndTextLayer : CALayer
{
    double _imageToTextSpacing;
    DVTTextLayer *_textLayer;
    CALayer *_imageLayer;
    struct CGSize _imageSize;
}

+ (struct CGColor *)defaultTextShadowColor;
+ (id)defaultAttributes;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) double imageToTextSpacing; // @synthesize imageToTextSpacing=_imageToTextSpacing;
- (void).cxx_destruct;
- (void)layoutSublayers;
@property(readonly) struct CGRect stringRect;
@property(readonly) struct CGRect imageRect;
@property(copy) NSString *textAlignmentMode;
@property(retain) NSImage *image;
@property(copy) NSAttributedString *attributedStringValue;
@property(copy) NSString *stringValue;
- (id)init;

@end

@interface DVTDeviceSummaryViewController : DVTViewController <DVTDevicesWindowDetailViewController, NSTableViewDataSource, DVTTableViewDelegate>
{
    NSArray *_aboutInfo;
    DVTObservingToken *_aboutInfoObservationToken;
    DVTObservingToken *_availabilityObservingToken;
    DVTObservingToken *_wirelessEnabledObservingToken;
    DVTObservingToken *_wirelessObservingToken;
    DVTObservingToken *_showApplicationsObservingToken;
    DVTDeviceLogsSheetController *_deviceLogsSheetController;
    DVTDevice *_device;
    NSArray *_additionalSliceViewControllerClasses;
    Class _deviceLogsViewControllerClass;
    DVTTableView *_aboutTableView;
    DVTStackView_AppKitAutolayout *_stackView;
    NSView *_violaterSlice;
    NSView *_aboutSlice;
    NSImageView *_violaterImageView;
    NSBox *_violaterSliceSeparator;
    DVTBorderedView *_tableHeaderLine;
    NSButton *_takeScreenshotButton;
    DVTDeviceSummaryAppsViewController *_appsViewController;
    NSString *_violaterMessage;
    NSString *_violaterDescription;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property(retain) NSString *violaterDescription; // @synthesize violaterDescription=_violaterDescription;
@property(retain) NSString *violaterMessage; // @synthesize violaterMessage=_violaterMessage;
@property(retain) DVTDeviceSummaryAppsViewController *appsViewController; // @synthesize appsViewController=_appsViewController;
@property(retain) NSButton *takeScreenshotButton; // @synthesize takeScreenshotButton=_takeScreenshotButton;
@property(retain) DVTBorderedView *tableHeaderLine; // @synthesize tableHeaderLine=_tableHeaderLine;
@property(retain) NSBox *violaterSliceSeparator; // @synthesize violaterSliceSeparator=_violaterSliceSeparator;
@property(retain) NSImageView *violaterImageView; // @synthesize violaterImageView=_violaterImageView;
@property(retain) NSView *aboutSlice; // @synthesize aboutSlice=_aboutSlice;
@property(retain) NSView *violaterSlice; // @synthesize violaterSlice=_violaterSlice;
@property(retain) DVTStackView_AppKitAutolayout *stackView; // @synthesize stackView=_stackView;
@property(retain) DVTTableView *aboutTableView; // @synthesize aboutTableView=_aboutTableView;
@property(readonly) Class deviceLogsViewControllerClass; // @synthesize deviceLogsViewControllerClass=_deviceLogsViewControllerClass;
@property(readonly) NSArray *additionalSliceViewControllerClasses; // @synthesize additionalSliceViewControllerClasses=_additionalSliceViewControllerClasses;
@property(retain) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)takeScreenshot:(id)arg1;
- (void)viewLogs:(id)arg1;
@property(readonly) BOOL showApplicationList;
- (void)viewDidInstall;
- (void)loadView;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTDeviceSummarySliceViewController : DVTViewController
{
    DVTDevice *_device;
}

@property(readonly) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (id)initWithDevice:(id)arg1;

@end

@interface DVTDeviceSummaryTableCellView : NSTableCellView
{
    NSBox *_bottomBorder;
    NSSegmentedControl *_segmentedButton;
}

@property(retain) NSSegmentedControl *segmentedButton; // @synthesize segmentedButton=_segmentedButton;
@property(retain) NSBox *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
- (void).cxx_destruct;

@end

@interface DVTDeviceViolaterTextField : NSTextField
{
}

- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;

@end

@interface DVTTabBarView : DVTSlidingViewsBar <DVTMorphingDragImageDropTarget, NSTabViewDelegate>
{
    NSImage *_windowBackgroundImage;
    NSLock *_windowBackgroundImageLock;
    DVTTabbedWindowTabViewItem *_tabViewItemForOverflowButton;
    DVTTabButton *_tabSelectedBeforeTabDrag;
    DVTNewTabButton *_newTabButton;
    NSTabViewItem *_seperatorUpdateLastSelectedTabViewItem;
    NSTabViewItem *_lastSelectedTabViewItem;
    int _modeOfSeparatorBeforeSpecialButtons;
    int _directionOfSeparatorBeforeSpecialButtons;
    BOOL _separatorBeforeSpecialButtonsUsesActiveTabColor;
    BOOL _areCloseButtonsVisible;
    BOOL _reorderingButton;
    BOOL _isReadyToUse;
    BOOL _reorderingTabs;
}

+ (double)tabBackgroundImageHeight;
+ (id)inactiveTabBackgroundForNonMainWindow;
+ (id)activeTabBackgroundForNonMainWindow;
+ (id)inactiveTabBackgroundForMainWindow;
+ (id)activeTabBackgroundForMainWindow;
- (void).cxx_destruct;
- (void)_windowBackgroundDidChange;
- (id)_windowBackgroundImage;
- (void)_setWindowBackgroundImage:(id)arg1;
- (void)_updateCloseButtonsVisibility;
- (void)_createTab:(id)arg1;
- (id)_leftTruncateStrings:(id)arg1 withFont:(id)arg2 width:(double)arg3;
- (id)_leftTruncateWordsFrom:(id)arg1 withFont:(id)arg2 width:(double)arg3 maxWordsToRemove:(unsigned long long)arg4;
- (void)_reselectTabSelectedBeforeTabDrag;
- (void)_detachTab:(id)arg1 withClickPoint:(struct CGPoint)arg2 sourceView:(id)arg3;
- (void)_selectClippedTabViewItem:(id)arg1;
- (void)_didClickCloseButton:(id)arg1;
- (void)_didClickTabButton:(id)arg1;
- (void)_setTabViewItemForOverflowButton:(id)arg1;
- (void)_setTabState:(long long)arg1 forTab:(id)arg2;
- (unsigned long long)_visibleButtonCountForLayout;
- (void)_updateKeyLoop;
- (void)_layOutButtons;
- (void)_updateSeparators;
- (id)_sortedVisibleButtons;
- (void)_setSpecialSeparatorsAndClipIndicatorNeedDisplay;
- (void)_setSeparatorBeforeSpecialButtonsUsesActiveTabColor:(BOOL)arg1;
- (void)_setModeOfSeparatorBeforeSpecialButtons:(int)arg1;
- (void)_setDirectionOfSeparatorBeforeSpecialButtons:(int)arg1;
- (struct CGRect)_separatorBetweenSpecialButtonsRect;
- (struct CGRect)_separatorBeforeSpecialButtonsRect;
- (BOOL)_isVisible;
- (void)_getButtonWidth:(double *)arg1 leftover:(unsigned long long *)arg2 isClipping:(char *)arg3;
- (id)_backgroundFillImage;
- (double)_availableWidthForButtonsWhenClipped;
- (double)_availableWidthForButtonsWhenUnclipped;
- (unsigned long long)_numberOfVisibleTabViewItems;
- (void)_removeTabButton:(id)arg1;
- (id)_insertTabButtonWithTabViewItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)_clipIndicatorIsShowing;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)morphingDragImage:(id)arg1 performDragOperation:(id)arg2;
- (void)morphingDragImage:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingEntered:(id)arg2;
- (id)menuItemsForClippedItemsIndicator:(id)arg1;
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (void)animation:(id)arg1 didSlideView:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (void)updateLabelNowForTab:(id)arg1;
- (void)updateLabelSoonForTab:(id)arg1;
- (void)updateTabTitlesNow;
- (void)tabTitlesDidChange;
- (void)getButtonWidth:(double *)arg1 leftover:(unsigned long long *)arg2 isClipping:(char *)arg3 forTabCount:(unsigned long long)arg4;
- (struct CGSize)dragImageSizeForTab:(id)arg1;
- (void)disconnectFromTabbedWindowController;
- (void)detachTabAndPositionUnderCursor:(id)arg1 sourceView:(id)arg2;
- (void)detachTab:(id)arg1 event:(id)arg2;
- (void)didDragTab:(id)arg1;
- (void)willDragTab:(id)arg1;
- (unsigned long long)numberOfTabs;
- (void)moveTabViewItem:(id)arg1 toIndex:(long long)arg2;
- (void)performDragOperationForTabViewItem:(id)arg1 draggingInfo:(id)arg2;
- (struct CGRect)clipRectForSlidingButton:(id)arg1;
- (id)windowBackgroundImage;
- (void)setReadyToUse;
- (id)newTabButton;
- (double)slidingWidthForView:(id)arg1;
- (double)widthOfDraggingInfo:(id)arg1;
- (id)viewPinnedToOverflowIndicator;
- (unsigned long long)updateDropTarget:(id)arg1;
- (void)setDropIndex:(long long)arg1;
- (void)refreshButtons;
- (void)draggedSlidingView:(id)arg1;
- (void)reorderedSlidingView:(id)arg1;
- (BOOL)isReorderingTabViews;
- (double)minButtonX;
- (double)maxSlidingViewX;
- (double)minSlidingViewX;
- (double)maxButtonXWithClipIndicator;
- (double)maxButtonXWithoutClipIndicator;
- (id)menuForEvent:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_installNewTabButton;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain) id <DVTTabbedWindowControlling> tabbedWindowController;

@end

@interface DVTSearchField : NSSearchField
{
    NSNumber *_trackingTag;
    long long _progress;
    BOOL _showsMatchingBrace;
    BOOL _hidesProgress;
    CDUnknownBlockType _searchMenuBlock;
    NSProgressIndicator *_progressIndicator;
}

+ (double)heightForBarHeight:(double)arg1;
+ (void)initialize;
+ (Class)cellClass;
@property(nonatomic) BOOL hidesProgress; // @synthesize hidesProgress=_hidesProgress;
@property(readonly) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(copy, nonatomic) CDUnknownBlockType searchMenuBlock; // @synthesize searchMenuBlock=_searchMenuBlock;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_mouseDownEventIsInSearchButton:(id)arg1;
@property BOOL showsMatchingBrace;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
@property(nonatomic) long long numberOfMatches;
@property(nonatomic) int visualStyle;
@property long long progress;
- (void)_updateStateForProgress:(long long)arg1;
- (void)updateBoundProgress;
- (void)updateHeightBasedOnSuperviewHeight;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_resetTracking;
- (void)_clearTrackingIfNeeded;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
@property(readonly) DVTSearchFieldCell *cell;
@property(readonly) NSButtonCell *cancelButtonCell;
@property(readonly) NSButtonCell *searchButtonCell;
- (void)dvt_searchField_setup;
@property(getter=isFilterField) BOOL filterField;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)dvtExtraBindings;

@end

@interface _DVTMarkerList : NSObject
{
    struct CGRect _markRect;
    NSMutableArray *_marks;
    NSMutableArray *_markRects;
}

- (void).cxx_destruct;
- (id)markRectList;
- (long long)numMarkRects;
- (struct CGRect)addMark:(double)arg1;
- (void)clearMarks;
- (struct CGRect)markRect;
- (void)setMarkRect:(struct CGRect)arg1;
- (void)_recomputeMarkRects;
- (void)_mergeMarkRect:(struct CGRect)arg1;
- (struct CGRect)_rectForMark:(double)arg1;
- (id)initWithSlotRect:(struct CGRect)arg1;

@end

@interface DVTMarkedScroller : NSScroller
{
    _DVTMarkerList *_errorMarks;
    _DVTMarkerList *_warningMarks;
    _DVTMarkerList *_analyzerMarks;
    _DVTMarkerList *_diffMarks;
    _DVTMarkerList *_diffConflictMarks;
}

+ (BOOL)isCompatibleWithOverlayScrollers;
- (void).cxx_destruct;
- (void)setFloatValue:(float)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)addMark:(double)arg1 ofType:(unsigned long long)arg2;
- (void)_updateMarksForGeometryChange;
- (void)_updateMarkRectsIfNeeded:(id)arg1 newMarkRect:(struct CGRect)arg2;
- (struct CGRect)_markRect;
- (void)_setMarksNeedUpdate:(id)arg1;
- (void)clearDiffMarks;
- (void)clearNormalMarks;
- (void)drawKnobSlotInRect:(struct CGRect)arg1 highlight:(BOOL)arg2;
- (void)drawKnob;
- (void)_fillRects:(id)arg1 usingGradient:(id)arg2;
- (BOOL)_drawsMarks;

@end

@interface DVTAbstractGraphLayer : NSObject <DVTGraphLayer>
{
    BOOL _wantsClipping;
    DVTGraph *_graph;
    DVTGraphLayerSelectionDetails *_selectionDetails;
}

@property BOOL wantsClipping; // @synthesize wantsClipping=_wantsClipping;
@property(retain) DVTGraphLayerSelectionDetails *selectionDetails; // @synthesize selectionDetails=_selectionDetails;
@property(readonly) __weak DVTGraph *graph; // @synthesize graph=_graph;
- (void).cxx_destruct;
- (void)clearSelection;
- (BOOL)selectNext;
- (BOOL)selectPrevious;
- (void)selectDataAtIndex:(unsigned long long)arg1;
- (BOOL)selectDataAtPoint:(struct CGPoint)arg1;
- (void)drawLayerWithVisibleBounds:(struct _DVTGraphBounds)arg1;
- (id)initWithGraph:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTextCompletionGeneratorOperation : DVTOperation
{
}

@end

@interface DVTTextCompletionDataSource : NSObject
{
    DVTSourceCodeLanguage *_language;
    DVTWeakInterposer *_delegate_dvtWeakInterposer;
    NSMutableArray *_strategies;
    NSMutableSet *_strategyObservers;
    NSOperationQueue *_completionsGeneratorQueue;
    DVTMapTable *_lastGeneratedCompletionItemsPerStrategy;
}

@property(retain, nonatomic) DVTSourceCodeLanguage *language; // @synthesize language=_language;
- (void).cxx_destruct;
@property(readonly) NSArray *strategies;
- (id)bestMatchForPrefix:(id)arg1 withContext:(id)arg2;
- (void)generateCompletionsForDocumentLocation:(id)arg1 context:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)initWithLanguage:(id)arg1;
- (id)init;
@property __weak id <DVTTextCompletionDataSourceDelegate> delegate;

@end

@interface DVTInvalidDataIndicatorView : NSView
{
    NSString *_alertMessage;
    NSString *_alertInformativeText;
}

@property(copy) NSString *alertInformativeText; // @synthesize alertInformativeText=_alertInformativeText;
@property(copy) NSString *alertMessage; // @synthesize alertMessage=_alertMessage;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseUp:(id)arg1;

@end

@interface DVTFoldingManager : NSObject
{
    DVTTextFold *_topLevelFold;
    id <DVTFoldingManagerDelegate> delegate;
}

@property(retain, nonatomic) DVTTextFold *topLevelFold; // @synthesize topLevelFold=_topLevelFold;
@property __weak id <DVTFoldingManagerDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (id)adjustFoldsForRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (id)foldsEnclosingRange:(struct _NSRange)arg1;
- (id)lastFoldTouchingCharacterIndex:(unsigned long long)arg1;
- (id)firstFoldTouchingCharacterIndex:(unsigned long long)arg1;
- (id)blockFoldsTouchingRange:(struct _NSRange)arg1;
- (id)allFoldsTouchingRange:(struct _NSRange)arg1;
- (BOOL)isRangeInsideAFold:(struct _NSRange)arg1;
- (BOOL)isCharacterRangeFolded:(struct _NSRange)arg1;
- (BOOL)containsFoldWithRange:(struct _NSRange)arg1;
- (BOOL)isCharacterFoldedAtIndex:(unsigned long long)arg1;
- (void)foldRangesRecursively:(id)arg1;
- (void)unfoldRanges:(id)arg1;
- (void)foldRanges:(id)arg1;
- (void)unfoldRecursiveRange:(struct _NSRange)arg1;
- (void)unfoldEnclosingRange:(struct _NSRange)arg1;
- (void)unfoldRange:(struct _NSRange)arg1;
- (void)unfoldAtCharacterIndex:(unsigned long long)arg1;
- (void)unfoldAll;
- (void)unfoldPlaceholdersInRange:(struct _NSRange)arg1;
- (void)foldPlaceholderInRange:(struct _NSRange)arg1 withLabel:(id)arg2;
- (void)foldRange:(struct _NSRange)arg1;
- (void)_applyFoldsRecursively:(id)arg1;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)init;

@end

@interface DVTAutoExpandingScrollView : NSScrollView
{
    BOOL _hasHorizontalIntrinsicSize;
    BOOL _hasVerticalIntrinsicSize;
    struct CGSize _documentSizeOffset;
    struct CGSize _minimumDocumentSize;
    struct CGSize _lastRecordedDocumentSize;
}

+ (BOOL)requiresConstraintBasedLayout;
@property(nonatomic) struct CGSize lastRecordedDocumentSize; // @synthesize lastRecordedDocumentSize=_lastRecordedDocumentSize;
@property(nonatomic) struct CGSize minimumDocumentSize; // @synthesize minimumDocumentSize=_minimumDocumentSize;
@property(nonatomic) struct CGSize documentSizeOffset; // @synthesize documentSizeOffset=_documentSizeOffset;
@property(nonatomic) BOOL hasVerticalIntrinsicSize; // @synthesize hasVerticalIntrinsicSize=_hasVerticalIntrinsicSize;
@property(nonatomic) BOOL hasHorizontalIntrinsicSize; // @synthesize hasHorizontalIntrinsicSize=_hasHorizontalIntrinsicSize;
- (void)scrollWheel:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)reflectScrolledClipView:(id)arg1;
- (void)setDocumentView:(id)arg1;

@end

@interface DVTTimerBlockWrapper : NSObject <DVTCancellable>
{
    NSTimer *timer;
    CDUnknownBlockType handler;
}

- (void).cxx_destruct;
- (void)fire:(id)arg1;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)initWithTimeInterval:(double)arg1 repeats:(BOOL)arg2 handler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceTextView : DVTCompletingTextView <NSAnimationDelegate, NSLayoutManagerDelegate, DVTSourceTextScrollViewDelegate>
{
    unsigned long long _oldFocusLocation;
    NSAnimation *_blockAnimation;
    struct CGPoint _lastMouseMovedLocation;
    struct _NSRange _foldingHoverRange;
    DVTTextAnnotationIndicatorAnimation *_annotationIndicatorAnimation;
    unsigned long long _temporaryLinkHoverModifierFlags;
    unsigned long long _temporaryLinkHoverAltModifierFlags;
    NSArray *_clickedTemporaryLinkRanges;
    NSMutableArray *_clickedLinkProgressIndicators;
    struct _NSRange _ghostStringRange;
    NSTimer *_autoHighlightTokenTimer;
    DVTObservingToken *_autoHighlightTextCompletionObserver;
    DVTMutableRangeArray *_autoHighlightTokenRanges;
    NSTimer *_autoHighlightTokenMenuTimer;
    struct _NSRange _autoHighlightTokenMenuRange;
    double _autoHighlightTokenMenuAnimationDuration;
    NSTimer *_autoHighlightTokenMenuAnimationTimer;
    double _autoHighlightTokenMenuAnimationStartTime;
    NSWindow *_autoHighlightTokenWindow;
    DVTMutableRangeArray *_tokenizedEditingTokenRanges;
    unsigned long long _tokenizedEditingEditedTokenIndex;
    unsigned long long _tokenizedEditingDeferedOffset;
    struct _NSRange _tokenizedEditingSelectionRange;
    NSColor *_tokenizedEditingTokenColors[4];
    NSArray *_foundLocations;
    DVTTextDocumentLocation *_currentFoundLocation;
    NSMutableArray *_visualizations;
    unsigned long long _pageGuideColumn;
    DVTTextPageGuideVisualization *_pageGuideVisualization;
    unsigned long long _locationOfAutoOpenedCloseBracket;
    unsigned long long _locationOfOpenBracePendingClose;
    NSTimer *_scrollbarMarkerUpdateTimer;
    DVTAnnotationManager *_annotationManager;
    DVTHashTable *_preparedViewAnnotations;
    NSView *_staticVisualizationView;
    int _findResultStyle;
    DVTMutableRangeArray *_typeOverCompletionRanges;
    DVTMutableRangeArray *_typeOverCompletionOpenRanges;
    NSString *_pendingTypeOverCompletion;
    struct _NSRange _pendingTypeOverCompletionOpenRange;
    BOOL _didChangeText;
    struct {
        unsigned int dDidFinishAnimatingScroll:1;
        unsigned int dDidScroll:1;
        unsigned int dColoringContext:1;
        unsigned int delegateRespondsToWillReturnPrintJobTitle:1;
        unsigned int updatingInsertionPoint:1;
        unsigned int wasPostsFrameChangedNotifications:1;
        unsigned int doingDidChangeSelection:1;
        unsigned int delegateRespondsToConstrainMinAccessoryAnnotationWidth:1;
        unsigned int delegateRespondsToConstrainMaxAccessoryAnnotationWidth:1;
        unsigned int delegateRespondsToConstrainAccessoryAnnotationWidth:1;
    } _sFlags;
    BOOL _isDoingBatchEdit;
    BOOL _allowsCodeFolding;
    BOOL _showingCodeFocus;
    BOOL _lastMouseEventWasClick;
    BOOL _autoHighlightTokens;
    BOOL _tokenizedEditingEnabled;
    BOOL _animatesCurrentScroll;
    BOOL _disableUpdatingInsertionPointCount;
    BOOL _currentlyAutoCompletingBracket;
    BOOL _addedSpaceWhenAutoOpeningCloseBracket;
    BOOL _wrapsLines;
    BOOL _postsLayoutManagerNotifications;
    BOOL _scrollingInScrollView;
    BOOL _annotationLayoutScheduled;
    struct _NSRange _selectedRangeBeforeMouseDown;
}

+ (BOOL)isCompatibleWithResponsiveScrolling;
+ (BOOL)_shouldEnableResponsiveScrolling;
+ (id)keyPathsForValuesAffectingAccessoryAnnotationCollapsed;
+ (id)performanceLogAspect;
+ (id)foldingLogAspect;
+ (id)drawingLogAspect;
+ (void)initialize;
@property BOOL postsLayoutManagerNotifications; // @synthesize postsLayoutManagerNotifications=_postsLayoutManagerNotifications;
@property BOOL addedSpaceWhenAutoOpeningCloseBracket; // @synthesize addedSpaceWhenAutoOpeningCloseBracket=_addedSpaceWhenAutoOpeningCloseBracket;
@property unsigned long long locationOfAutoOpenedCloseBracket; // @synthesize locationOfAutoOpenedCloseBracket=_locationOfAutoOpenedCloseBracket;
@property(nonatomic, getter=isTokenizedEditingEnabled) BOOL tokenizedEditingEnabled; // @synthesize tokenizedEditingEnabled=_tokenizedEditingEnabled;
@property struct _NSRange tokenizedEditingSelectionRange; // @synthesize tokenizedEditingSelectionRange=_tokenizedEditingSelectionRange;
@property(readonly) NSArray *tokenizedEditingTokenRanges; // @synthesize tokenizedEditingTokenRanges=_tokenizedEditingTokenRanges;
@property(nonatomic) BOOL autoHighlightTokens; // @synthesize autoHighlightTokens=_autoHighlightTokens;
@property int findResultStyle; // @synthesize findResultStyle=_findResultStyle;
@property(nonatomic) unsigned long long pageGuideColumn; // @synthesize pageGuideColumn=_pageGuideColumn;
@property(readonly) NSArray *visualizations; // @synthesize visualizations=_visualizations;
@property(retain) DVTAnnotationManager *annotationManager; // @synthesize annotationManager=_annotationManager;
@property(nonatomic) struct _NSRange ghostStringRange; // @synthesize ghostStringRange=_ghostStringRange;
@property unsigned long long temporaryLinkHoverAltModifierFlags; // @synthesize temporaryLinkHoverAltModifierFlags=_temporaryLinkHoverAltModifierFlags;
@property unsigned long long temporaryLinkHoverModifierFlags; // @synthesize temporaryLinkHoverModifierFlags=_temporaryLinkHoverModifierFlags;
@property(nonatomic) BOOL wrapsLines; // @synthesize wrapsLines=_wrapsLines;
- (void).cxx_destruct;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)updateInsertionPointStateAndRestartTimer:(BOOL)arg1;
- (void)resignKeyWindow;
- (BOOL)resignFirstResponder;
- (void)_invalidateDisplayForViewStatusChange;
- (void)_reloadAnnotationProviders;
- (void)_unloadAnnotationProviders;
- (void)dvt_viewDidEndLiveAnimation;
- (void)dvt_viewWillBeginLiveAnimation;
- (void)_updateLayoutEstimation;
- (void)drawFoundLocationsInRange:(struct _NSRange)arg1;
- (id)_findResultUnderlineColor;
- (id)_findResultCurrentUnderlineColor;
- (id)_findResultGradient;
- (id)_findResultCurrentGradient;
- (void)setCurrentFoundLocation:(id)arg1;
- (void)setFoundLocations:(id)arg1;
- (void)unfoldAllComments:(id)arg1;
- (void)foldAllComments:(id)arg1;
- (void)unfoldAllMethods:(id)arg1;
- (void)foldAllMethods:(id)arg1;
- (void)unfoldRecursive:(id)arg1;
- (void)unfold:(id)arg1;
- (void)unfoldAll:(id)arg1;
- (void)foldSelection:(id)arg1;
- (void)foldRecursive:(id)arg1;
- (void)fold:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)writeRTFSelectionToPasteboard:(id)arg1;
- (id)writablePasteboardTypes;
- (void)balance:(id)arg1;
- (void)shiftLeft:(id)arg1;
- (void)shiftRight:(id)arg1;
- (void)_indentSelectionByNumberOfLevels:(long long)arg1;
- (struct _NSRange)_indentInsertedTextIfNecessaryAtRange:(struct _NSRange)arg1;
- (void)indentSelectionIfIndentable:(id)arg1;
- (void)indentSelection:(id)arg1;
- (struct _NSRange)_adjustedSelectedRange:(struct _NSRange)arg1 fromChangeIndex:(unsigned long long)arg2;
- (void)commentAndUncommentCurrentLines:(id)arg1;
- (void)moveCurrentLineDown:(id)arg1;
- (void)moveCurrentLineUp:(id)arg1;
- (void)_didChangeSelection:(id)arg1;
- (void)PBX_toggleShowsInvisibleCharacters:(id)arg1;
- (void)PBX_toggleShowsControlCharacters:(id)arg1;
- (void)useSelectionForReplace:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (id)accessibilityAXAttributedStringForCharacterRange:(struct _NSRange)arg1 parent:(id)arg2;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (void)scrollPoint:(struct CGPoint)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (BOOL)shouldChangeTextInRanges:(id)arg1 replacementStrings:(id)arg2;
- (void)_invalidateAllRevealovers;
- (BOOL)isEditable;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (BOOL)_couldHaveBlinkTimer;
- (BOOL)_shouldHaveBlinkTimer;
- (void)_centeredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)scrollViewDidSetFrameSize:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_adjustAccessoryAnnotations;
- (void)viewWillDraw;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)breakUndoCoalescing;
- (void)didChangeText;
- (void)scrollRangeToVisible:(struct _NSRange)arg1 animate:(BOOL)arg2;
- (void)didEndScrollInScrollView:(id)arg1;
- (void)didBeginScrollInScrollView:(id)arg1;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (void)flagsChanged:(id)arg1;
- (void)selectPreviousToken:(id)arg1;
- (void)selectNextToken:(id)arg1;
- (void)toggleTokenizedEditing:(id)arg1;
@property(retain) NSColor *tokenizedEditingSelectedTokenBackgroundColor; // @dynamic tokenizedEditingSelectedTokenBackgroundColor;
@property(retain) NSColor *tokenizedEditingSelectedTokenBorderColor; // @dynamic tokenizedEditingSelectedTokenBorderColor;
@property(retain) NSColor *tokenizedEditingTokenBackgroundColor; // @dynamic tokenizedEditingTokenBackgroundColor;
@property(retain) NSColor *tokenizedEditingTokenBorderColor; // @dynamic tokenizedEditingTokenBorderColor;
- (id)tokenizedEditingTokenPathsForCharacterRange:(struct _NSRange)arg1;
- (id)tokenPathsForCharacterRange:(struct _NSRange)arg1 displayOnly:(BOOL)arg2;
- (void)textStorage:(id)arg1 didEndEditRange:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)textStorage:(id)arg1 willEndEditRange:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (unsigned long long)_indexOfTokenizedEditingRange:(struct _NSRange)arg1;
- (void)updateTokenizedEditingRanges;
- (void)_scheduleAutoHighlightTokenTimerIfNeeded;
- (void)_autoHighlightTokenWithTimer:(id)arg1;
- (void)tokenizableRangesWithRange:(struct _NSRange)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_scheduleAutoHighlightTokenMenuTimerIfNeeded;
- (void)_showAutoHighlightTokenMenuWithTimer:(id)arg1;
- (id)_autoHighlightTokenWindowWithTokenRect:(struct CGRect)arg1;
- (void)_scheduleAutoHighlightTokenMenuAnimationTimerIfNeeded;
- (struct CGRect)_hitTestRectForAutoHighlightTokenWindow:(id)arg1;
- (struct CGRect)_autoHighlightTokenRectAtPoint:(struct CGPoint)arg1;
- (struct _NSRange)_autoHighlightTokenMenuRangeAtPoint:(struct CGPoint)arg1;
- (void)_animateAutoHighlightTokenMenuWithTimer:(id)arg1;
- (void)_popUpTokenMenu:(id)arg1;
- (id)_autoHighlightTokenMenu;
- (void)_clearAutoHighlightTokenMenu;
- (void)_clearDisplayForAutoHighlightTokens;
- (void)_displayAutoHighlightTokens;
- (void)removeStaticVisualizationView;
- (void)addStaticVisualizationView:(id)arg1;
- (void)removeVisualization:(id)arg1 fadeOut:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)addVisualization:(id)arg1 fadeIn:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)adjustTypeOverCompletionForSelectionChange:(struct _NSRange)arg1;
- (void)removeInvalidTypeOverCompletion;
- (void)removeTypeOverCompletionIfAppropriateForEditedRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)adjustTypeOverCompletionForEditedRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)addTypeOverCompletionForRange:(struct _NSRange)arg1 openRange:(struct _NSRange)arg2;
- (struct _NSRange)lastTypeOverCompletionRange;
- (struct _NSRange)typeOverCompletionRangeFollowingLocation:(unsigned long long)arg1;
- (void)didInsertCompletionTextAtRange:(struct _NSRange)arg1;
- (struct _NSRange)_suggestedOpenRangeForTypeOverRange:(struct _NSRange)arg1;
- (BOOL)shouldAutoCompleteAtLocation:(unsigned long long)arg1;
- (BOOL)shouldSuppressTextCompletion;
- (id)contextForCompletionStrategiesAtWordStartLocation:(unsigned long long)arg1;
- (void)autoInsertCloseBrace;
- (void)deleteExpressionBackward:(id)arg1;
- (void)deleteExpressionForward:(id)arg1;
- (void)moveExpressionBackwardAndModifySelection:(id)arg1;
- (void)moveExpressionBackward:(id)arg1;
- (void)moveExpressionForwardAndModifySelection:(id)arg1;
- (void)moveExpressionForward:(id)arg1;
- (void)deleteSubWordBackward:(id)arg1;
- (void)deleteSubWordForward:(id)arg1;
- (void)moveSubWordBackwardAndModifySelection:(id)arg1;
- (void)moveSubWordForwardAndModifySelection:(id)arg1;
- (void)moveSubWordBackward:(id)arg1;
- (void)moveSubWordForward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)pasteAndPreserveFormatting:(id)arg1;
- (void)paste:(id)arg1;
- (void)_paste:(id)arg1 indent:(BOOL)arg2;
- (void)insertNewline:(id)arg1;
- (BOOL)handleInsertTab;
- (BOOL)handleSelectPreviousPlaceholder;
- (BOOL)handleSelectNextPlaceholder;
- (BOOL)isCandidateTypeOverString:(id)arg1;
- (id)autoCloseStringForString:(id)arg1;
- (void)insertText:(id)arg1;
- (id)foldString;
- (void)setFoldsFromString:(id)arg1;
- (struct CGRect)frameForRange:(struct _NSRange)arg1 ignoreWhitespace:(BOOL)arg2;
- (struct _NSRange)visibleParagraphRange;
- (long long)_currentLineNumber;
- (struct _NSRange)rangeOfCenterLine;
- (void)doingBatchEdit:(BOOL)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_clipViewAncestorDidScroll:(id)arg1;
- (void)_finishedAnimatingScroll;
- (void)mouseMoved:(id)arg1;
- (void)_mouseInside:(id)arg1;
- (void)resetCursorRects;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;
- (void)_refreshScrollerMarkers;
- (double)_markForLineNumber:(unsigned long long)arg1;
- (void)setUsesMarkedScrollbar:(BOOL)arg1;
- (id)attributedStringForCompletionPlaceholderCell:(id)arg1 atCharacterIndex:(unsigned long long)arg2 withDefaultAttributes:(id)arg3;
- (void)clickedOnCell:(id)arg1 inRect:(struct CGRect)arg2 atIndexInToken:(unsigned long long)arg3;
- (void)_didClickOnTemporaryLinkWithEvent:(id)arg1;
- (void)_updateTemporaryLinkUnderMouseForEvent:(id)arg1;
- (unsigned long long)_nonBlankCharIndexUnderMouse;
- (void)_clearClickedLinkProgressIndicators;
- (void)_adjustClickedLinkProgressIndicators;
- (void)_adjustClickedLinkProgressIndicator:(id)arg1 withRect:(struct CGRect)arg2;
- (void)_showClickedLinkProgressIndicators;
- (void)_invalidateClickedLinks;
- (id)_clickedLinkProgressIndicatorWithRect:(struct CGRect)arg1;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
- (void)stopBlockHighlighting;
- (void)startBlockHighlighting;
- (id)codeFocusBlockAnimation;
- (void)focusLocationMayHaveChanged:(id)arg1;
- (void)toggleCodeFocus:(id)arg1;
- (BOOL)codeFocusFollowsSelection;
- (void)_drawViewBackgroundInRect:(struct CGRect)arg1;
- (void)_drawTokensInRect:(struct CGRect)arg1;
- (void)_drawCaretForTextAnnotationsInRect:(struct CGRect)arg1;
- (void)drawTextAnnotationsInRect:(struct CGRect)arg1;
- (long long)_drawRoundedBackgroundForFoldableBlockRangeAtLocation:(unsigned long long)arg1;
- (double)_grayLevelForDepth:(long long)arg1;
- (id)alternateColor;
- (void)setFoldingHoverRange:(struct _NSRange)arg1;
- (struct _NSRange)foldingHoverRange;
- (void)_loadColorsFromCurrentTheme;
- (void)_themeColorsChanged:(id)arg1;
- (void)_scheduleAnnotationLayoutAfterResize;
- (void)drawRect:(struct CGRect)arg1;
- (void)prepareContentInRect:(struct CGRect)arg1;
- (unsigned long long)foldedCharacterIndexForPoint:(struct CGPoint)arg1;
- (void)setSelectedRanges:(id)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (void)_delayedTrimTrailingWhitespaceForLine:(id)arg1;
- (void)trimTrailingWhitespaceOnLine:(unsigned long long)arg1;
- (void)_trimTrailingWhitespaceOnLineAfterIndent:(unsigned long long)arg1 trimWhitespaceOnlyLine:(BOOL)arg2;
- (void)trimTrailingWhitespaceOnLine:(unsigned long long)arg1 trimWhitespaceOnlyLine:(BOOL)arg2;
- (void)trimTrailingWhitespaceOnLineFromCharacterIndex:(unsigned long long)arg1 trimWhitespaceOnlyLine:(BOOL)arg2;
- (BOOL)shouldTrimTrailingWhitespace;
- (void)setSelectedRange:(struct _NSRange)arg1;
- (void)contextMenu_toggleMessageBubbleShown:(id)arg1;
- (void)toggleMessageBubbleShown:(id)arg1;
- (void)_enumerateMessageBubbleAnnotationsInSelection:(CDUnknownBlockType)arg1;
@property(readonly, getter=isAccessoryAnnotationCollapsed) BOOL accessoryAnnotationCollapsed;
- (void)setAccessoryAnnotationWidth:(double)arg1;
- (double)_maxAllowableAccessoryAnnotationWidth;
- (double)_minAllowableAccessoryAnnotationWidth;
@property(readonly) double maxPossibleAccessoryAnnotationWidth;
@property(readonly) double minPossibleAccessoryAnnotationWidth;
- (void)_updateAccessoryAnnotationViewsInRect:(struct CGRect)arg1;
- (void)_adjustSizeOfAccessoryAnnotation:(id)arg1;
- (void)showAnnotation:(id)arg1 animateIndicator:(BOOL)arg2;
- (void)_animateBubbleView:(id)arg1;
- (void)didRemoveAnnotations:(id)arg1;
- (void)didAddAnnotations:(id)arg1;
- (id)visibleAnnotationsForLineNumberRange:(struct _NSRange)arg1;
- (id)annotationForRepresentedObject:(id)arg1;
@property(readonly) NSArray *annotations;
- (void)setShowsFoldingSidebar:(BOOL)arg1;
- (BOOL)showsFoldingSidebar;
- (void)getParagraphRect:(struct CGRect *)arg1 firstLineRect:(struct CGRect *)arg2 forLineRange:(struct _NSRange)arg3 ensureLayout:(BOOL)arg4;
- (struct _NSRange)lineNumberRangeForBoundingRect:(struct CGRect)arg1;
- (unsigned long long)lineNumberForPoint:(struct CGPoint)arg1;
- (id)printJobTitle;
@property(readonly) NSDictionary *syntaxColoringContext;
- (id)language;
- (BOOL)allowsCodeFolding;
- (void)setAllowsCodeFolding:(BOOL)arg1;
- (void)setTextStorage:(id)arg1;
- (void)setTextStorage:(id)arg1 keepOldLayout:(BOOL)arg2;
@property(retain) id <DVTSourceTextViewDelegate> delegate; // @dynamic delegate;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (void)_commonInitDVTSourceTextView;
- (id)menuForEvent:(id)arg1;
- (BOOL)shouldIndentPastedText:(id)arg1;
- (void)indentUserChangeBy:(long long)arg1;
- (double)fmc_maxY;
- (double)fmc_startOfLine:(long long)arg1;
- (long long)fmc_lineNumberForPosition:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTDiffSession : NSObject <DVTInvalidation>
{
    DVTDiffContext *_diffContext;
    DVTObservingToken *_diffContextObservingToken;
    NSArray *_diffDescriptors;
    NSIndexSet *_commonDescriptorIndexes;
    NSIndexSet *_modifiedDescriptorIndexes;
    NSString *_diffString;
    unsigned long long _selectedDiffDescriptorIndex;
    NSMutableIndexSet *_toggledDiffDescriptorIndexes;
    NSMutableArray *_lastToggledDiffDescriptors;
    unsigned long long _lastNumberOfModifiedDescriptors;
    unsigned long long _timestamp;
    id <DVTDiffSessionDelegate> _delegate;
    NSUndoManager *_undoManager;
    DVTTextStorage *_mergeTextStorage;
    id _mergeTextStorageObserver;
    NSData *_mergeTextDigest;
    NSArray *_mergeDescriptors;
    NSMutableArray *_mergeDescriptorObservers;
    DVTMapTable *_descriptorMap;
    unsigned long long _conflictCount;
    DVTDiffDataSource *_ancestorDataSource;
    DVTDiffDataSource *_modifiedDataSource;
    DVTDiffDataSource *_originalDataSource;
    int _needsUpdate;
    BOOL _inMergeEdit;
    BOOL _isBinaryConflictResolution;
    BOOL _isCalculatingInitialDiffs;
    BOOL _enableDiffToggles;
    BOOL _diffDescriptorsShouldAppearAsDisabled;
    BOOL _diffDescriptorsShouldAppearAsInactive;
    NSIndexSet *_hiddenDiffDescriptorIndexes;
}

+ (void)setUsesPatienceDiffingAlgorithm:(BOOL)arg1;
+ (BOOL)usesPatienceDiffingAlgorithm;
+ (void)initialize;
+ (id)binaryConflictDetectionForOriginalDataSource:(id)arg1 modifiedDataSource:(id)arg2 ancestorDataSource:(id)arg3;
+ (BOOL)hasToggledDiffDescriptorsInMergeState:(id)arg1;
+ (BOOL)isMultiDiffSelectionMergeState:(id)arg1;
+ (int)binaryConflictMergeDirection:(id)arg1;
+ (BOOL)isBinaryConflictResolutionMergeState:(id)arg1;
+ (void)_validateRestoredState:(id)arg1;
+ (id)keyPathsForValuesAffectingVisibleModifiedDescriptorIndexes;
+ (id)keyPathsForValuesAffectingSelectedMergeDescriptor;
+ (id)keyPathsForValuesAffectingIsThreeWayDiff;
+ (id)logAspect;
@property(retain) NSIndexSet *hiddenDiffDescriptorIndexes; // @synthesize hiddenDiffDescriptorIndexes=_hiddenDiffDescriptorIndexes;
@property BOOL diffDescriptorsShouldAppearAsInactive; // @synthesize diffDescriptorsShouldAppearAsInactive=_diffDescriptorsShouldAppearAsInactive;
@property BOOL diffDescriptorsShouldAppearAsUnfocused; // @synthesize diffDescriptorsShouldAppearAsUnfocused=_diffDescriptorsShouldAppearAsDisabled;
@property BOOL enableDiffToggles; // @synthesize enableDiffToggles=_enableDiffToggles;
@property(retain, nonatomic) NSIndexSet *toggledDiffDescriptorIndexes; // @synthesize toggledDiffDescriptorIndexes=_toggledDiffDescriptorIndexes;
@property BOOL isCalculatingInitialDiffs; // @synthesize isCalculatingInitialDiffs=_isCalculatingInitialDiffs;
@property BOOL isBinaryConflictResolution; // @synthesize isBinaryConflictResolution=_isBinaryConflictResolution;
@property(retain) NSData *mergeTextDigest; // @synthesize mergeTextDigest=_mergeTextDigest;
@property(readonly) DVTDiffDataSource *originalDataSource; // @synthesize originalDataSource=_originalDataSource;
@property(readonly) DVTDiffDataSource *modifiedDataSource; // @synthesize modifiedDataSource=_modifiedDataSource;
@property(readonly) DVTDiffDataSource *ancestorDataSource; // @synthesize ancestorDataSource=_ancestorDataSource;
@property unsigned long long conflictCount; // @synthesize conflictCount=_conflictCount;
@property(retain) DVTTextStorage *mergeTextStorage; // @synthesize mergeTextStorage=_mergeTextStorage;
@property(retain) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(retain) id <DVTDiffSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property(retain) NSString *diffString; // @synthesize diffString=_diffString;
@property unsigned long long selectedDiffDescriptorIndex; // @synthesize selectedDiffDescriptorIndex=_selectedDiffDescriptorIndex;
@property(retain) NSIndexSet *modifiedDescriptorIndexes; // @synthesize modifiedDescriptorIndexes=_modifiedDescriptorIndexes;
@property(retain) NSIndexSet *commonDescriptorIndexes; // @synthesize commonDescriptorIndexes=_commonDescriptorIndexes;
@property(retain) NSArray *diffDescriptors; // @synthesize diffDescriptors=_diffDescriptors;
@property(retain) DVTDiffContext *diffContext; // @synthesize diffContext=_diffContext;
- (void).cxx_destruct;
- (void)_incrementTimestamp;
- (void)refresh;
- (void)primitiveInvalidate;
@property(readonly) BOOL mergeIsDirty;
@property(readonly) NSDictionary *restoredState; // @dynamic restoredState;
@property(retain) NSArray *mergeDescriptors; // @synthesize mergeDescriptors=_mergeDescriptors;
@property(readonly) DVTDiffDescriptor *selectedMergeDescriptor;
@property(readonly) BOOL isThreeWayDiff;
- (void)_rebuildSubdescriptors;
- (void)_loadDataSourcesWithOriginalDataSource:(id)arg1 modifiedDataSource:(id)arg2 ancestorDataSource:(id)arg3 restoringState:(BOOL)arg4;
- (void)_fixToggledDiffDescriptorIndexes;
- (long long)compareDiffDescriptors:(id)arg1 rightDescriptor:(id)arg2;
- (void)removeToggledDiffDescriptorIndex:(unsigned long long)arg1;
- (void)addToggledDiffDescriptorIndex:(unsigned long long)arg1;
- (void)revertDiffDescriptorIndex:(unsigned long long)arg1 withPrimaryTextStorage:(id)arg2 undoManager:(id)arg3;
- (void)_updateMergeDocumentForChangedDescriptor:(id)arg1;
- (id)_buildMergeStringAndDescriptors:(id *)arg1 withMergeTextDigest:(id *)arg2;
- (void)_scrapeDiffResults;
@property(readonly) NSIndexSet *visibleModifiedDescriptorIndexes;
- (void)_oneShotDiffAndScrapeResults;
- (void)_updateConflictCount;
- (void)_loadPreviousMergeSession:(id)arg1;
- (void)_setupBinaryMergeSession;
- (void)_switchDiffingEngine;
@property BOOL ignoreWhitespace;
- (id)initWithOriginalDataSource:(id)arg1 modifiedDataSource:(id)arg2 ancestorDataSource:(id)arg3 undoManager:(id)arg4 mergeTextStorage:(id)arg5 mergeState:(id)arg6;
- (id)initWithOriginalDataSource:(id)arg1 modifiedDataSource:(id)arg2 ancestorDataSource:(id)arg3 mergeState:(id)arg4;
- (id)initWithBinaryConflictResolutionMergeState:(id)arg1;
- (id)initWithOriginalBinaryDataSource:(id)arg1 modifiedBinaryDataSource:(id)arg2 ancestorBinaryDataSource:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTTextAnnotationIndicatorAnimation : NSAnimation
{
    DVTMessageBubbleView *_annotationView;
    NSWindow *_window;
    struct CGAffineTransform _originalWindowTransform;
}

@property(retain) DVTMessageBubbleView *annotationView; // @synthesize annotationView=_annotationView;
- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;
- (void)stopAnimation;
- (void)startAnimation;
- (void)_clearAnnotationIndicator;
- (void)_fadeAnnotationIndicator:(double)arg1;
- (void)_pulseAnnotationIndicator:(double)arg1;
- (id)init;

@end

@interface DVTTextCompletionWindowResizeAnimation : NSViewAnimation
{
    double _typeColStartWidth;
    double _typeColEndWidth;
    NSTableColumn *_typeColumn;
}

@property(retain) NSTableColumn *typeColumn; // @synthesize typeColumn=_typeColumn;
@property double typeColEndWidth; // @synthesize typeColEndWidth=_typeColEndWidth;
@property double typeColStartWidth; // @synthesize typeColStartWidth=_typeColStartWidth;
- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;

@end

@interface DVTTextCompletionListWindowController : NSWindowController <DVTInvalidation, NSTableViewDataSource, NSTableViewDelegate, NSAnimationDelegate>
{
    NSTextField *_messagesField;
    DVTTextCompletionTableView *_completionsTableView;
    NSTableColumn *_iconColumn;
    NSTableColumn *_typeColumn;
    NSTableColumn *_titleColumn;
    NSScrollView *_completionsScrollView;
    DVTBorderedView *_quickHelpView;
    NSView *_divider;
    DVTTextCompletionSession *_session;
    struct CGRect _referenceFrameInView;
    DVTTextCompletionWindowResizeAnimation *_resizeAnimation;
    NSViewAnimation *_fadeOutAnimation;
    DVTObservingToken *_sessionCompletionsObserver;
    DVTObservingToken *_sessionSelectionObserver;
    NSDictionary *_selectedTitleCellAttributes;
    NSDictionary *_selectedTypeCellAttributes;
    DVTViewController<DVTInvalidation> *_infoContentViewController;
    int _hideReason;
    BOOL _showingWindow;
    BOOL _shouldIgnoreSelectionChange;
    BOOL _quickHelpOnTop;
}

+ (void)initialize;
@property(nonatomic) int hideReason; // @synthesize hideReason=_hideReason;
@property(readonly) DVTTextCompletionSession *session; // @synthesize session=_session;
@property(readonly) BOOL showingWindow; // @synthesize showingWindow=_showingWindow;
@property(readonly) NSScrollView *completionsScrollView; // @synthesize completionsScrollView=_completionsScrollView;
- (void).cxx_destruct;
@property(readonly) NSString *debugStateString;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_updateInfoNewSelection;
- (BOOL)showInfoForSelectedCompletionItem;
- (id)_selectedCompletionItem;
- (void)showInfoPaneForCompletionItem:(id)arg1;
- (void)close;
- (void)_loadColorsFromCurrentTheme;
- (void)_themeColorsChanged:(id)arg1;
- (id)_iconShadow;
- (id)_notRecommendedAttributes;
- (id)_usefulPrefixAttributes;
- (id)_messageTextAttributes;
- (struct CGRect)_preferredWindowFrameForTextFrame:(struct CGRect)arg1 columnsWidth:(double *)arg2 titleColumnX:(double)arg3;
- (void)_getTitleColumnWidth:(double *)arg1 typeColumnWidth:(double *)arg2;
- (void)_updateSelectedRow;
- (void)_updateCurrentDisplayState;
- (void)_updateCurrentDisplayStateForQuickHelp;
- (void)_startDelayedAnimation;
- (void)_doubleClickOnRow:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)hideWindowWithReason:(int)arg1;
- (void)_hideWindow;
- (void)showWindowForTextFrame:(struct CGRect)arg1 explicitAnimation:(BOOL)arg2;
- (void)primitiveInvalidate;
- (void)dealloc;
- (void)windowDidLoad;
- (id)initWithSession:(id)arg1;
- (id)window;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTReportDisclosureView : DVTDisclosureView
{
}

- (BOOL)shouldDrawBottomBorder;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTLayoutManager : DVTFoldingLayoutManager <DVTAnnotationManagerDelegate>
{
    NSArray *_temporaryLinkRanges;
    NSMutableArray *_annotations;
    DVTPointerArray *_lastDeletedAnnotations;
    DVTMapTable *_messageBubblesForAnnotations;
    NSMutableSet *_accessoryAnnotations;
    NSArray *_sortedAccessoryAnnotations;
    struct _DVTLayoutManagerFlags _lmFlags2;
}

+ (void)initialize;
@property(readonly) NSSet *accessoryAnnotations; // @synthesize accessoryAnnotations=_accessoryAnnotations;
@property(readonly) NSArray *annotations; // @synthesize annotations=_annotations;
@property(retain) NSArray *temporaryLinkRanges; // @synthesize temporaryLinkRanges=_temporaryLinkRanges;
- (void).cxx_destruct;
- (struct _NSRange)rangeForCharacterRange:(struct _NSRange)arg1 withContextLines:(long long)arg2 proposedHeight:(double *)arg3 contentLines:(unsigned long long *)arg4 totalLines:(unsigned long long *)arg5;
- (void)drawUnderlineForGlyphRange:(struct _NSRange)arg1 underlineType:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)fillBackgroundRectArray:(struct CGRect *)arg1 count:(unsigned long long)arg2 forCharacterRange:(struct _NSRange)arg3 color:(id)arg4;
- (void)textStorage:(id)arg1 didUpdateLineRange:(struct _NSRange)arg2 changeInLength:(long long)arg3 replacedCharacterRangeEndsOnLineTerminator:(BOOL)arg4 entireFirstLineReplaced:(BOOL)arg5;
- (void)textStorageDidEndEditing:(id)arg1;
- (void)textStorage:(id)arg1 willReplaceCharactersInRange:(struct _NSRange)arg2 withString:(id)arg3 changeInLength:(long long)arg4;
- (void)foldingManager:(id)arg1 didUnfoldRange:(struct _NSRange)arg2;
- (void)foldingManager:(id)arg1 didFoldRange:(struct _NSRange)arg2;
- (void)didRemoveAnnotations:(id)arg1;
- (void)didInsertAnnotations:(id)arg1;
- (void)hideMessageBubblesInRange:(struct _NSRange)arg1;
- (void)showMessageBubblesInRange:(struct _NSRange)arg1;
@property(getter=isAnnotationAdjustmentEnabled) BOOL annotationAdjustmentEnabled;
@property(nonatomic) BOOL severeBubbleAnnotationsMiniaturized;
- (id)messageBubbleViewForAnnotation:(id)arg1;
- (id)accessoryAnnotationsInRange:(struct _NSRange)arg1;
- (void)messageBubbleAnnotation:(id)arg1 needsBubble:(BOOL)arg2;
- (void)removeAnnotationsInRange:(struct _NSRange)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)_removeAnnotationsAtIndexes:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (id)annotationsInRange:(struct _NSRange)arg1;
- (void)mergeAnnotationsAtParagraphIndex:(unsigned long long)arg1;
- (id)annotationIndexesInParagraphRange:(struct _NSRange)arg1 suggestedIndex:(unsigned long long *)arg2;
- (void)_removeBubbleViewFromAnnotation:(id)arg1;
- (void)_addBubbleViewToAnnotation:(id)arg1 annotationsInRange:(id)arg2;
- (void)_assertAnnotationIntegrity;
- (void)_updateMessageBubbleVisibilityForAnnotation:(id)arg1;
@property BOOL temporaryLinkIsAlternate;
- (void)clearTemporaryLinkRanges;
- (void)setTemporaryLinkRanges:(id)arg1 isAlternate:(BOOL)arg2;
- (void)invalidateDisplayForCharacterRange:(struct _NSRange)arg1;
- (void)_invalidateLayoutForMessageBubblesInCharacterRange:(struct _NSRange)arg1;
- (unsigned long long)layoutOptions;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_layoutManagerCommonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTColoredSpinner : NSView
{
    NSTimer *_timer;
    unsigned long long _animationStep;
    NSArray *_images;
    NSTimer *_goalStateTimer;
    BOOL _goalState;
    NSDate *_lastAnimationStartTime;
    BOOL _displaysWhenStopped;
    BOOL _animating;
    NSColor *_color;
    id <DVTColoredSpinnerDelegate> _delegate;
}

+ (void)initialize;
@property(nonatomic, getter=isAnimating) BOOL animating; // @synthesize animating=_animating;
@property(nonatomic) __weak id <DVTColoredSpinnerDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL displaysWhenStopped; // @synthesize displaysWhenStopped=_displaysWhenStopped;
@property(copy, nonatomic) NSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)imagesAreValid;
- (void)_timerStep:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)updateAnimationTimer;
- (void)validateGoalState:(id)arg1;
- (void)setAnimating:(BOOL)arg1 delayBeforeStarting:(double)arg2 minimumTimeOn:(double)arg3;
- (id)dvtExtraBindings;

@end

@interface DVTPreferenceSetManager : NSObject
{
    Class _preferenceSetClass;
    NSArray *_builtInPreferenceSets;
    NSMutableSet *_specifierNamesInDataStore;
    NSMutableArray *_userPreferenceSets;
    NSMutableArray *_availablePreferenceSets;
    id <DVTPreferenceSet> _currentPreferenceSet;
    DVTMapTable *_preferenceSetObserverTokens;
    DVTDelayedInvocation *_autosavePreferenceSetsInvocation;
}

+ (void)initialize;
@property(readonly) Class preferenceSetClass; // @synthesize preferenceSetClass=_preferenceSetClass;
- (void).cxx_destruct;
- (id)description;
- (void)_writePreferenceSetsIfNeeded;
- (void)_applicationWillTerminate:(id)arg1;
- (void)_scheduleAutoSavePreferenceSets;
- (void)_removeObserversForPreferenceSet:(id)arg1;
- (void)_addObserversForPreferenceSet:(id)arg1;
- (void)deletePreferenceSet:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)duplicatePreferenceSet:(id)arg1 error:(id *)arg2;
- (void)renamePreferenceSet:(id)arg1 toName:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)editableUserPreferenceSetForPreferenceSet:(id)arg1;
- (id)_createUserPreferenceSetWithBaseName:(id)arg1 basedOn:(id)arg2;
- (id)_nameForDuplicateOfPreferenceSet:(id)arg1;
- (id)_availablePreferenceSetWithLocalizedName:(id)arg1;
@property(readonly) id <DVTCustomDataStoring> userPreferenceSetsDataStore;
- (id)preferenceSetForName:(id)arg1;
@property(readonly, copy) NSArray *builtInPreferenceSets;
@property(retain) id <DVTPreferenceSet> currentPreferenceSet;
- (void)_rebuildAvailableandUserSetsList;
- (void)dealloc;
- (id)initWithPreferenceSetClass:(Class)arg1;

// Remaining properties
@property(copy) NSArray *availablePreferenceSets; // @dynamic availablePreferenceSets;
@property(readonly, copy) NSMutableArray *mutableAvailablePreferenceSets; // @dynamic mutableAvailablePreferenceSets;
@property(readonly, copy) NSMutableArray *mutableUserPreferenceSets; // @dynamic mutableUserPreferenceSets;
@property(copy) NSArray *userPreferenceSets; // @dynamic userPreferenceSets;

@end

@interface DVTAbstractColorPicker : NSView <DVTWindowActivationStateObserver, NSMenuDelegate, NSDraggingSource>
{
    NSMenu *_colorsMenu;
    id _colorValueBindingController;
    NSString *_colorValueBindingKeyPath;
    DVTObservingToken *_colorListBindingObservation;
    DVTObservingToken *_colorValueBindingObservation;
    DVTObservingToken *_supportsNilColorBindingObservation;
    id <DVTCancellable> _windowActivationObservation;
    BOOL _supportsNilColor;
    BOOL _showingMultipleValues;
    BOOL _enabled;
    BOOL _active;
    BOOL _highlighted;
    int _defaultColorMode;
    NSColor *_color;
    DVTMutableOrderedDictionary *_suggestedColors;
    NSColor *_defaultColor;
    id _target;
    SEL _action;
    unsigned long long _controlSize;
}

@property(nonatomic, getter=isHighlighted) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) unsigned long long controlSize; // @synthesize controlSize=_controlSize;
@property SEL action; // @synthesize action=_action;
@property __weak id target; // @synthesize target=_target;
@property(getter=isShowingMultipleValues) BOOL showingMultipleValues; // @synthesize showingMultipleValues=_showingMultipleValues;
@property BOOL supportsNilColor; // @synthesize supportsNilColor=_supportsNilColor;
@property(nonatomic) int defaultColorMode; // @synthesize defaultColorMode=_defaultColorMode;
@property(retain, nonatomic) NSColor *defaultColor; // @synthesize defaultColor=_defaultColor;
@property(retain) DVTMutableOrderedDictionary *suggestedColors; // @synthesize suggestedColors=_suggestedColors;
@property(retain, nonatomic) NSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)observedColorValueDidChangeToValue:(id)arg1;
- (void)displayColorPanel:(id)arg1;
- (void)takeDrawnColorFrom:(id)arg1;
- (void)takeDrawnColorFromPopUpMenu:(id)arg1;
- (void)sendAction;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)beginColorDragForEvent:(id)arg1;
- (id)imageForDraggedColor:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)colorPanelColorChanged:(id)arg1;
- (void)colorPanelWillClose:(id)arg1;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)colorPickerDidBecomeActive:(id)arg1;
- (void)colorChosenFromColorChooser:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)displayColorPanel;
- (BOOL)canBecomeKeyView;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)showColorsMenu;
- (double)minimumPopUpMenuWidth;
- (struct CGPoint)popUpMenuLocation;
- (id)effectiveSwatchFillColor;
- (void)putIntoMultipleValuesState;
- (void)populateColorsMenu;
- (double)swatchHeight;
- (id)swatchImageForColor:(id)arg1 withSize:(struct CGSize)arg2;
- (id)effectiveSwatchBorderColor;
- (id)effectiveTextColor;
- (BOOL)isShowingTitle;
- (BOOL)isShowingDefaultColor;
- (BOOL)isShowingNamedColor;
- (BOOL)supportsDefaultColor;
- (double)noColorStrokeWidth;
- (id)titleFont;
- (void)setSuggestedColorsUsingColorList:(id)arg1;
- (id)nameForColor:(id)arg1;
- (BOOL)containsColor:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 colorList:(id)arg2 defaultColor:(id)arg3 defaultColorMode:(int)arg4;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTWindowActivationNotifier : NSObject
{
    DVTMapTable *_activationStateObservers;
    long long _nextKey;
    DVTWeakInterposer *_window_dvtWeakInterposer;
}

- (void).cxx_destruct;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)notifyObserversOfStateChange:(long long)arg1;
- (id)registerActivationStateObserver:(id)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;
@property __weak NSWindow *window;

@end

@interface DVTTokenizedEditingUndoHelper : NSObject
{
    NSUndoTextOperation *_undoTextOperation;
    DVTMutableRangeArray *_affectedRanges;
    DVTMutableRangeArray *_replacementRanges;
    unsigned long long _editedTokenIndex;
}

@property(readonly) NSArray *replacementRanges; // @synthesize replacementRanges=_replacementRanges;
@property(readonly) NSArray *affectedRanges; // @synthesize affectedRanges=_affectedRanges;
- (void).cxx_destruct;
- (void)didUndoRedo:(id)arg1;
- (void)willUndoRedo:(id)arg1;
- (void)didCoalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (void)willCoalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (id)initWithUndoTextOperation:(id)arg1 affectedRange:(struct _NSRange)arg2 layoutManager:(id)arg3 undoManager:(id)arg4 replacementRange:(struct _NSRange)arg5;

@end

@interface DVTUndoReplaceCharacters : NSUndoReplaceCharacters
{
    DVTTokenizedEditingUndoHelper *_tokenizedEditingUndoHelper;
}

- (void).cxx_destruct;
- (void)undoRedo:(id)arg1;
- (id)description;
- (id)replacementRanges;
- (id)affectedRanges;
- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;

@end

@interface DVTUndoTyping : NSUndoTyping
{
    DVTTokenizedEditingUndoHelper *_tokenizedEditingUndoHelper;
}

- (void).cxx_destruct;
- (void)undoRedo:(id)arg1;
- (id)description;
- (BOOL)coalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (id)replacementRanges;
- (id)affectedRanges;
- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;

@end

@interface DVTTextLibraryDetailController : DVTLibraryDetailController
{
    DVTAssetDetailTextView *_textView;
    struct {
        unsigned int delegateImplementsTextForAsset:1;
        unsigned int _reserved:7;
    } _flags;
}

@property(readonly) DVTAssetDetailTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)sizeToFitSuggestedSize:(struct CGSize)arg1 forAsset:(id)arg2;
- (void)refreshWithAsset:(id)arg1 representedObject:(id)arg2;
- (void)viewDidInstall;
- (void)setDelegate:(id)arg1;

@end

@interface DVTTextCompletionStrategy : NSObject
{
}

+ (CDUnknownBlockType)priorityComparator;
- (id)bestMatchForPrefix:(id)arg1 inCompletionItems:(id)arg2 withContext:(id)arg3;
- (id)additionalCompletionItemsForDocumentLocation:(id)arg1 context:(id)arg2;
- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 highlyLikelyCompletionItems:(id *)arg3 areDefinitive:(char *)arg4;
- (void)prepareForDocumentLocation:(id)arg1 context:(id)arg2;

@end

@interface DVTColorPickerPopUpButton : DVTAbstractColorPicker
{
    struct CGRect popUpButtonArrowsRect;
    struct CGRect colorWellViewRect;
    struct CGRect colorLabelRect;
    struct CGRect swatchRect;
    struct CGRect colorLabelTitleRect;
    NSDictionary *imageStateDictionary;
}

+ (id)imageStateDictionaryForControlSize:(unsigned long long)arg1;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (BOOL)isMouseEventInColorWellRect:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawColorLabel;
- (void)drawColorWell;
- (void)drawPopUpButtonArrows;
- (void)drawDebuggingRects;
- (void)drawFocusRing;
- (id)effectiveAttributedTitle;
- (id)attributedTitleForTitle:(id)arg1;
- (id)titleAttributes;
- (double)swatchHeight;
- (id)effectiveImageForControlPart:(int)arg1;
- (id)effectivePopUpButtonArrowsRightCapImage;
- (id)effectiveTextColor;
- (struct CGPoint)popUpMenuLocation;
- (double)horizontalMenuOffset;
- (double)verticalMenuOffset;
- (void)sizeRectsForDrawing;
- (double)verticalTitleOffset;
- (double)baseline;
- (double)heightThatFits;
- (double)widthForPopUpButton;
- (CDStruct_bf6d4a14)shadowInset;
- (BOOL)isShowingTitle;
- (struct CGRect)insetRectForSwatchRect:(struct CGRect)arg1;
- (struct CGRect)swatchRectForColorWellRect:(struct CGRect)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (id)imageStateDictionary;
- (void)invalidateImageStateDictionary;

@end

@interface DVTImagePopUpButton : NSPopUpButton
{
    BOOL _trackingRectUpdatePending;
    long long _trackingRectTag;
    BOOL _showsMenuIndcatorOnlyWhileMouseInside;
    BOOL _redrawOnMouseEnteredAndExited;
    BOOL _mouseIsOver;
}

+ (id)keyPathsForValuesAffectingArrowImage;
+ (id)keyPathsForValuesAffectingIconSize;
+ (id)keyPathsForValuesAffectingIconImage;
+ (id)keyPathsForValuesAffectingUsedInToolbar;
+ (id)keyPathsForValuesAffectingImmediatelyShowsMenu;
+ (id)keyPathsForValuesAffectingShowsMenuOnlyForMultipleItems;
+ (Class)cellClass;
@property BOOL mouseIsOver; // @synthesize mouseIsOver=_mouseIsOver;
@property BOOL redrawOnMouseEnteredAndExited; // @synthesize redrawOnMouseEnteredAndExited=_redrawOnMouseEnteredAndExited;
@property(nonatomic) BOOL showsMenuIndcatorOnlyWhileMouseInside; // @synthesize showsMenuIndcatorOnlyWhileMouseInside=_showsMenuIndcatorOnlyWhileMouseInside;
- (void)rightMouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseEnteredOrExited:(BOOL)arg1;
- (void)updateMouseIsOver:(int)arg1;
- (void)updateTrackingRect;
- (void)_removeTrackingRect;
- (void)_updateTrackingRectSoon;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
@property(copy) NSImage *arrowImage;
@property struct CGSize iconSize;
@property(copy) NSImage *iconImage;
@property BOOL usedInToolbar;
@property BOOL immediatelyShowsMenu;
@property BOOL showsMenuOnlyForMultipleItems;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;

@end

@interface DVTThemeEditorWindowController : NSWindowController
{
    BOOL _isCGColor;
    NSString *_propertyName;
    DVTTheme *_theme;
    NSTextField *_label;
    NSColorWell *_colorWell;
    NSTextField *_numberField;
    NSColorWell *_gradientFirstColor;
    NSColorWell *_gradientSecondColor;
    NSTabView *_typeSelectorTabView;
    unsigned long long _type;
}

+ (id)numberThemeEditorForProperty:(id)arg1 theme:(id)arg2;
+ (id)gradientThemeEditorForProperty:(id)arg1 theme:(id)arg2;
+ (id)colorThemeEditorForProperty:(id)arg1 theme:(id)arg2;
+ (id)themeEditorForProperty:(id)arg1 theme:(id)arg2;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property __weak NSTabView *typeSelectorTabView; // @synthesize typeSelectorTabView=_typeSelectorTabView;
@property BOOL isCGColor; // @synthesize isCGColor=_isCGColor;
@property __weak NSColorWell *gradientSecondColor; // @synthesize gradientSecondColor=_gradientSecondColor;
@property __weak NSColorWell *gradientFirstColor; // @synthesize gradientFirstColor=_gradientFirstColor;
@property __weak NSTextField *numberField; // @synthesize numberField=_numberField;
@property __weak NSColorWell *colorWell; // @synthesize colorWell=_colorWell;
@property __weak NSTextField *label; // @synthesize label=_label;
@property __weak DVTTheme *theme; // @synthesize theme=_theme;
@property(copy) NSString *propertyName; // @synthesize propertyName=_propertyName;
- (void).cxx_destruct;
- (void)windowDidLoad;
- (void)_setupNumber;
- (void)_setupGradient;
- (void)_setupColor;
- (void)changePropertyNumber:(id)arg1;
- (void)changePropertyGradient:(id)arg1;
- (void)changePropertyColor:(id)arg1;

@end

@interface DVTSourceTextScrollView : NSScrollView
{
    id <DVTSourceTextScrollViewDelegate> _delegate;
    DVTComparisonSplitView *_comparisonSplitView;
    BOOL _scrollingHorizontally;
}

+ (BOOL)isCompatibleWithResponsiveScrolling;
@property(retain) DVTComparisonSplitView *comparisonSplitView; // @synthesize comparisonSplitView=_comparisonSplitView;
@property(retain) id <DVTSourceTextScrollViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_pointInVisibleScroller:(struct CGPoint)arg1;
- (void)reflectScrolledClipView:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (BOOL)accessibilityIsIgnored;

@end

@interface DVTDiffContextThreeWay : DVTDiffContext
{
    DVTDiffDataSource *_ancestorDataSource;
    DVTObservingToken *_ancestorDataSourceObserver;
}

- (void).cxx_destruct;
- (id)tmpModifiedDescriptorIndexes;
- (id)modifiedDescriptorIndexes;
- (id)commonDescriptorIndexes;
- (id)description;
- (void)_buildDiffDescriptors;
- (id)_diffDescriptorsByAddingUnmodified:(id)arg1;
- (id)_diffContextForComparing:(id)arg1 with:(id)arg2;
- (void)setIgnoresCommon:(BOOL)arg1;
- (void)setIgnoresLineEnds:(BOOL)arg1;
- (void)setIgnoresTrailingSpaces:(BOOL)arg1;
- (void)setIgnoresSpacesInRuns:(BOOL)arg1;
- (void)setIgnoresLeadingSpaces:(BOOL)arg1;
- (void)setIgnoresCase:(BOOL)arg1;
- (id)ancestorDataSource;
- (void)setAncestorDataSource:(id)arg1;
- (BOOL)_setAncestorDataSource:(id)arg1;
- (void)primitiveInvalidate;
- (id)init;
- (id)initWithOriginalDataSource:(id)arg1 modifiedDataSource:(id)arg2 ancestorDataSource:(id)arg3;

// Remaining properties
@property(retain) NSOperationQueue *diffQueue; // @dynamic diffQueue;
@property(readonly, copy) NSMutableArray *mutableDiffDescriptors; // @dynamic mutableDiffDescriptors;
@property(retain) NSNumber *timestamp; // @dynamic timestamp;
@property(retain) NSMutableArray *tmpDiffDescriptors; // @dynamic tmpDiffDescriptors;

@end

@interface DVTPlistViewController : DVTViewController <DVTPlistViewControllerProtocol, DVTPlistOutlineViewDelegate, NSOutlineViewDataSource, NSUserInterfaceValidations>
{
    NSScrollView *scrollView;
    DVTPlistOutlineView *outlineView;
    NSTableHeaderView *headerView;
    NSPopUpButtonCell *_classPopUpCell;
    NSPopUpButtonCell *_rootClassPopUpCell;
    DVTPlistDataFormatter *_dataFormatter;
    NSDateFormatter *_dateFormatter;
    DVTNonLossyASCIIFormatter *_nonLossyASCIIFormatter;
    DVTPlistComboBoxCell *_comboBoxCell;
    DVTPlistTitledPopupCell *_popupCell;
    NSButtonCell *_checkBoxCell;
    NSDictionary *_statusButtonCells;
    DVTPlistTextFieldCell *_textCell;
    DVTPlistTextFieldCell *_rootCell;
    NSArray *_foundLocations;
    DVTPlistSelection *_currentFoundLocation;
    DVTPlistNode *_selectedNode;
    NSArray *draggedItems;
    id _editingObj;
    id _editingValue;
    NSDocument<DVTPlistDocumentProtocol> *document;
    NSMutableSet *_expandedItems;
    struct __pecFlags {
        unsigned int showsRootPlist:1;
        unsigned int initedOutlineView:1;
        unsigned int nonLossyASCIIStrings:1;
        unsigned int editRawKeysAndValues:1;
        unsigned int reserved:28;
    } _pecFlags;
    BOOL _editingError;
    BOOL _duplicateKeySheetIsActive;
    BOOL _restoringState;
    DVTNotificationToken *_frameChangeToken;
    id <DVTPlistViewControllerDelegate> _delegate;
}

@property(retain) id <DVTPlistViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) DVTPlistNode *selectedNode; // @synthesize selectedNode=_selectedNode;
- (void).cxx_destruct;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)createPlistTypeMenuWithTitle:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)selectDocumentLocations:(id)arg1;
- (struct _NSRange)foundRangeForItem:(id)arg1 inColumn:(id)arg2;
- (void)setCurrentFoundLocation:(id)arg1;
- (void)setFoundLocations:(id)arg1;
- (struct CGRect)currentSelectionFrame;
- (void)setSelection:(id)arg1 edit:(BOOL)arg2;
- (id)currentSelection;
- (BOOL)commitEdits;
- (BOOL)editInProgress;
- (void)revealNode:(id)arg1;
- (void)expandParent:(id)arg1;
- (void)textDidEndEditingColumn:(long long)arg1 row:(long long)arg2 withMovement:(long long)arg3;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)restoreExpandedItemKeyPaths:(id)arg1;
- (id)expandedItemKeyPaths;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)_outlineViewFrameChanged:(id)arg1;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (void)invalidEntryAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)sameNameAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)delayedEditItem:(id)arg1;
- (void)delayedDeletePlist:(id)arg1;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)setPlistTypeDate:(id)arg1;
- (void)setPlistTypeData:(id)arg1;
- (void)setPlistTypeBoolean:(id)arg1;
- (void)setPlistTypeNumber:(id)arg1;
- (void)setPlistTypeString:(id)arg1;
- (void)setPlistTypeDictionary:(id)arg1;
- (void)setPlistTypeArray:(id)arg1;
- (void)setPlistClass:(Class)arg1;
- (void)shiftRowRight:(id)arg1;
- (void)shiftRowLeft:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)addAction:(id)arg1;
- (void)editNewItem:(id)arg1;
- (void)DVTPlist_unfoldAll:(id)arg1;
- (void)DVTPlist_unfold:(id)arg1;
- (void)DVTPlist_foldAll:(id)arg1;
- (void)DVTPlist_fold:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)cancel:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteItem:(id)arg1 withKey:(id)arg2 intoParent:(id)arg3 atIndex:(long long)arg4;
- (void)copy:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)outlineView:(id)arg1 handleTabKey:(unsigned short)arg2;
- (BOOL)outlineView:(id)arg1 handleReturnKey:(unsigned short)arg2;
- (void)toggleEditRawKeysAndValues:(id)arg1;
- (void)toggleShowsStringsAsNonLossyASCII:(id)arg1;
@property BOOL editRawKeysAndValues;
@property BOOL showsStringsAsNonLossyASCII;
@property BOOL showsRootPlist;
- (void)expandPlist:(id)arg1;
- (void)propertyListChanged:(id)arg1;
- (id)model;
- (id)draggedItems;
- (id)outlineView;
- (id)scrollView;
@property(retain) NSDocument<DVTPlistDocumentProtocol> *document;
- (BOOL)outlineView:(id)arg1 shouldMouseHoverForTableColumn:(id)arg2 row:(long long)arg3;
- (void)loadView;
- (id)statusButtonCells;
- (void)primitiveInvalidate;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTTextCompletionWordsInFileStrategy : DVTTextCompletionStrategy
{
}

- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 highlyLikelyCompletionItems:(id *)arg3 areDefinitive:(char *)arg4;

@end

@interface DVTTabBarEnclosureView : NSView
{
}

+ (double)collapsedHeightInBaseCoordinates;
+ (double)collapsedHeight;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTLineOffsetAwareStringWrapper : NSObject <NSSecureCoding>
{
    struct _DVTTextLineOffsetTable _lineOffsets;
    NSString *_string;
}

+ (BOOL)supportsSecureCoding;
@property(readonly, copy) NSString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (void)dealloc;
- (struct _NSRange)characterRangeFromDocumentLocation:(id)arg1;
- (id)convertLocationToUTF8EncodedLocation:(id)arg1;
- (id)convertLocationToNativeNSStringEncodedLocation:(id)arg1;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithString:(id)arg1;

@end

@interface DVTDelayedMenuGradientImageButton : DVTGradientImageButton <DVTInvalidation>
{
    struct CGSize _menuOffset;
    id _menuSource;
    SEL _menuSelector;
}

+ (void)initialize;
+ (Class)cellClass;
@property struct CGSize menuOffset; // @synthesize menuOffset=_menuOffset;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)showMenu:(id)arg1;
- (void)_runPopUp;
- (void)setMenuSource:(id)arg1 selector:(SEL)arg2;
@property float popUpDelay;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTDelayedMenuGradientImageButtonCell : DVTGradientImageButtonCell
{
    float _popUpDelay;
}

@property float popUpDelay; // @synthesize popUpDelay=_popUpDelay;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

@end

@interface _DVTKitPrivateClassForFindingBundle : NSObject
{
}

@end

@interface DVTGenericButtonViewController : DVTToolbarViewController
{
    NSMenuItem *_menuItem;
    CDUnknownBlockType _actionBlock;
    CDUnknownBlockType _setupTeardownBlock;
}

@property(copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menuFormRepresentation;
- (void)_buttonAction:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithButton:(id)arg1 actionBlock:(CDUnknownBlockType)arg2 setupTeardownBlock:(CDUnknownBlockType)arg3 itemIdentifier:(id)arg4 window:(id)arg5;

@end

@interface DVTPlistOutlineView : DVTOutlineView
{
    struct CGRect lastOutlineRect;
    BOOL adjustRowRect;
    BOOL adjustBounds;
    BOOL isEditing;
    BOOL fitToSuperview;
}

@property BOOL fitToSuperview; // @synthesize fitToSuperview;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)drawContextMenuHighlightForRow:(long long)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGSize)_adjustFrameSizeToFitSuperview:(struct CGSize)arg1;
- (void)_highlightRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)_drawDropHighlightBetweenUpperRow:(long long)arg1 andLowerRow:(long long)arg2 onRow:(long long)arg3 atOffset:(double)arg4;
- (void)_drawDropHighlightOutlineForRow:(long long)arg1;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (struct CGRect)rectOfRow:(long long)arg1;
- (struct CGRect)bounds;
- (id)_highlightColorForCell:(id)arg1;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawSelectedOutlineRowsForRect:(struct CGRect)arg1;
- (void)invalidateFrameRectOfRect:(struct CGRect)arg1;
- (long long)lastRowForItem:(id)arg1;
- (BOOL)selectionShouldUsePrimaryColor;
- (struct CGRect)rectOfExistingRowsAndColumnsLessOne;
- (BOOL)abortEditing;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)isEditing;
- (id)menuForEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;

// Remaining properties
@property BOOL skipGridLinesOnLastRow;

@end

@interface DVTPlistTableColumn : NSTableColumn
{
}

- (void)setWidth:(double)arg1;

@end

@interface DVTPlistScrollView : NSScrollView
{
}

- (void)tile;

@end

@interface DVTPlistOutlineHeaderView : NSTableHeaderView
{
    BOOL _hideEndSeparator;
}

@property BOOL hideEndSeparator; // @synthesize hideEndSeparator=_hideEndSeparator;
- (BOOL)_drawingEndSeparator;

@end

@interface DVTPlistOutlineHeaderCell : NSTableHeaderCell
{
}

@end

@interface DVTPlistInvisibleOutlineHeaderCell : NSTableHeaderCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface _DVTPlistStatusItemProxy : NSObject
{
    id _parent;
    NSCell *_buttonCell;
    struct CGRect _frame;
    NSString *_title;
}

+ (id)statusItemProxyWithButtonCell:(id)arg1 parent:(id)arg2 frame:(struct CGRect)arg3 title:(id)arg4;
@property(readonly) struct CGRect frame; // @synthesize frame=_frame;
@property(readonly) NSCell *buttonCell; // @synthesize buttonCell=_buttonCell;
@property(readonly) id parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (id)initWithButtonCell:(id)arg1 parent:(id)arg2 frame:(struct CGRect)arg3 title:(id)arg4;

@end

@interface DVTPlistComboBoxCell : NSComboBoxCell
{
    BOOL _showsStatusItems;
    NSArray *_statusCategoryNames;
    NSDictionary *_statusCellsByCategoryName;
}

@property(copy) NSArray *statusCategoryNames; // @synthesize statusCategoryNames=_statusCategoryNames;
@property BOOL showsStatusItems; // @synthesize showsStatusItems=_showsStatusItems;
- (void).cxx_destruct;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawThemeComboBoxButtonWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)_createStatusItemProxyItemsForRowAtPoint:(struct CGPoint)arg1;
- (void)drawStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)comboBoxRectForBounds:(struct CGRect)arg1;
- (struct CGRect)statusRectForBounds:(struct CGRect)arg1;
- (id)statusItemCellsForCategory:(id)arg1;
- (void)setStatusItemCells:(id)arg1 forCategory:(id)arg2;
- (id)_statusCellsByCategoryName;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTPlistTextFieldCell : NSTextFieldCell
{
    BOOL _showsStatusItems;
    NSArray *_statusCategoryNames;
    NSDictionary *_statusCellsByCategoryName;
}

@property(copy) NSArray *statusCategoryNames; // @synthesize statusCategoryNames=_statusCategoryNames;
@property BOOL showsStatusItems; // @synthesize showsStatusItems=_showsStatusItems;
- (void).cxx_destruct;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)_createStatusItemProxyItemsForRowAtPoint:(struct CGPoint)arg1;
- (void)drawStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)textFieldRectForBounds:(struct CGRect)arg1;
- (struct CGRect)statusRectForBounds:(struct CGRect)arg1;
- (id)statusItemCellsForCategory:(id)arg1;
- (void)setStatusItemCells:(id)arg1 forCategory:(id)arg2;
- (id)_statusCellsByCategoryName;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTPlistPopupCell : DVTPopUpButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_drawIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (long long)interiorBackgroundStyle;

@end

@interface DVTPlistTitledPopupCell : DVTPlistPopupCell
{
    NSString *plistTitle;
}

@property(copy) NSString *plistTitle; // @synthesize plistTitle;
- (void).cxx_destruct;
- (BOOL)pullsDown;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTPlistInvisibleOutlineCell : NSTextFieldCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface DVTSizeViewController : NSViewController
{
    BOOL _showsBorder;
    DVTBorderedView *_borderedView;
    DVTSizeView *_sizeView;
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    NSTextField *_widthLabel;
    NSTextField *_heightLabel;
    struct CGSize _size;
}

@property __weak NSTextField *heightLabel; // @synthesize heightLabel=_heightLabel;
@property __weak NSTextField *widthLabel; // @synthesize widthLabel=_widthLabel;
@property __weak NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property __weak NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
@property __weak DVTSizeView *sizeView; // @synthesize sizeView=_sizeView;
@property __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(nonatomic) BOOL showsBorder; // @synthesize showsBorder=_showsBorder;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (void).cxx_destruct;
- (void)_updateBorder;
- (void)_updateFromSize;
- (void)loadView;
- (id)initWithDefaultNibName;

@end

@interface DVTSizeView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
@property(readonly) double spaceBetweenBars;
@property(readonly) struct CGSize minSize;

@end

@interface DVTFontTextFieldCell : DVTButtonTextFieldCell <NSCoding>
{
    NSFont *_fontValue;
    id _fontRepresentation;
    NSString *_fontName;
    NSString *_fontSize;
    NSString *_placeholder;
    NSArray *_placeholderFonts;
    DVTObservingToken *_fontValueBindingObservation;
    NSString *_fontValueBindingKeyPath;
    id _fontValueBindingController;
    id <DVTFontTextFieldDataSource> _dataSource;
    BOOL _previewFont;
    DVTFontPopUpViewController *_popoverContentController;
    NSPopover *_popover;
    id <DVTFontTextFieldCellDelegate> _fontCellDelegate;
}

+ (void)activateFontCellInTableView:(id)arg1;
+ (id)keyPathsForValuesAffectingPointSize;
+ (id)defaultImage;
+ (void)initialize;
@property(retain) id <DVTFontTextFieldCellDelegate> fontCellDelegate; // @synthesize fontCellDelegate=_fontCellDelegate;
@property(readonly) NSArray *placeholderFonts; // @synthesize placeholderFonts=_placeholderFonts;
@property(retain, nonatomic) id <DVTFontTextFieldDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property BOOL previewFont; // @synthesize previewFont=_previewFont;
@property(retain, nonatomic) id fontRepresentation; // @synthesize fontRepresentation=_fontRepresentation;
@property(retain, nonatomic) NSFont *fontValue; // @synthesize fontValue=_fontValue;
- (void).cxx_destruct;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)observedPointSizeDidChange:(id)arg1 options:(id)arg2;
- (void)observedFontValueDidChange:(id)arg1 options:(id)arg2;
- (void)refreshStateFromSingleValue:(id)arg1 multipleValues:(id)arg2 marker:(id)arg3 options:(id)arg4;
- (void)refreshStateFromSingleValue:(id)arg1 multipleValues:(id)arg2 marker:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGSize)cellSize;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)setHighlighted:(BOOL)arg1;
- (void)performEmbeddingButtonAction:(id)arg1;
- (void)orderFrontFontPopUp:(id)arg1;
- (void)orderFrontFontPanel:(id)arg1;
- (void)dvt_setValueFromController:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)dvt_updateViaBindingsForFont:(id)arg1;
- (void)dvt_updateViaTableDataSourceForFont:(id)arg1;
- (id)dvt_tableColumn;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (void)transformFontViaBlock:(CDUnknownBlockType)arg1;
@property double pointSize;
- (void)dvt_setFontRepresentation:(id)arg1;
- (void)dvt_setFontValue:(id)arg1;
- (id)multipleValues;
- (id)controlView;
- (void)enumerateMultipleValues:(CDUnknownBlockType)arg1;
- (void)dvt_sendAction;
- (void)dvt_resignFirstResponder;
- (void)dvt_becomeFirstResponder;
- (void)dvt_updateFontDisplay;
- (void)dvt_updateFontRepresentationDisplay;
- (void)dvt_updateFocusWithControlView:(id)arg1;
- (void)dvt_updateSelectedFontInConrolView:(id)arg1;
- (BOOL)dvt_inResponderChain;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;
- (void)dvt_commonInit;

@end

@interface DVTDisclosureView : DVTLayoutView_ML <DVTDisclosureHeaderViewDelegate, DVTDraggableView, DVTIssueDisplayingView>
{
    NSView *contentView;
    DVTDisclosureHeaderView *_headerView;
    NSColor *_bottomBorderColor;
    NSColor *_backgroundColor;
    NSString *_disclosureStatePersistenceDefaultsKey;
    CDStruct_bf6d4a14 _contentMargins;
    BOOL _shouldAlwaysDrawBottomBorder;
}

+ (id)keyPathsForValuesAffectingDisclosed;
+ (void)initialize;
@property BOOL shouldAlwaysDrawBottomBorder; // @synthesize shouldAlwaysDrawBottomBorder=_shouldAlwaysDrawBottomBorder;
- (void).cxx_destruct;
@property(copy) NSDictionary *issueInfoDictionary;
- (struct CGRect)draggingRect;
- (void)disclosureHeaderView:(id)arg1 didChangeDisclosedState:(BOOL)arg2;
@property(copy) NSString *disclosureStatePersistenceDefaultsKey; // @dynamic disclosureStatePersistenceDefaultsKey;
@property(getter=isDisclosed) BOOL disclosed;
@property(copy) NSColor *backgroundColor;
@property(copy) NSColor *bottomBorderColor;
@property CDStruct_bf6d4a14 contentMargins;
@property(retain) NSView *contentView;
- (void)reflectDefaultsDisclosureState;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)bottomBorderRect;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (BOOL)shouldDrawBottomBorder;
- (BOOL)isFlipped;
@property(retain) DVTDisclosureHeaderView *headerView; // @dynamic headerView;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTViewController : NSViewController <DVTControllerContentViewViewControllerAdditions, DVTEditor, DVTInvalidation>
{
    BOOL _didCallViewWillUninstall;
    void *_keepSelfAliveUntilCancellationRef;
    BOOL _isViewLoaded;
    DVTExtension *_representedExtension;
}

+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
+ (void)initialize;
@property(retain, nonatomic) DVTExtension *representedExtension; // @synthesize representedExtension=_representedExtension;
@property BOOL isViewLoaded; // @synthesize isViewLoaded=_isViewLoaded;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)invalidate;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)_willUninstallContentView:(id)arg1;
- (void)_didInstallContentView:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
@property(retain) DVTControllerContentView *view;
- (void)separateKeyViewLoops;
- (BOOL)delegateFirstResponder;
- (id)supplementalMainViewController;
@property(readonly, copy) NSString *description;
- (BOOL)becomeFirstResponder;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initUsingDefaultNib;
- (void)dvtViewController_commonInit;
@property(readonly) BOOL canBecomeMainViewController;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTInvalidatableViewController : DVTViewController
{
}

@end

@interface DVTClippedTabsIndicator : DVTMainStatusAwareButton <NSMenuDelegate>
{
    id _delegate;
    NSMenu *_menu;
    struct OpaqueWindowPtr *_menuWindow;
    struct OpaqueEventHandlerRef *_controlOwningWindowChangedHandler;
}

- (void).cxx_destruct;
- (void)_popUpMenu;
- (void)menuWillOpen:(id)arg1;
- (void)_setMenuWindow:(struct OpaqueWindowPtr *)arg1;
- (void)_drawOverlayInContext:(struct CGContext *)arg1;
- (double)_convertYFromMenuViewToRootView:(double)arg1;
- (void)_updateImages;
- (void)mouseDown:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)performClick:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPlistNode : NSObject <NSCopying>
{
    DVTPlistNode *_parent;
}

+ (id)plistfromPropertyList:(id)arg1 withParent:(id)arg2;
@property DVTPlistNode *parent; // @synthesize parent=_parent;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 startingAt:(id)arg3 document:(id)arg4;
- (id)stringForSearch;
- (id)keyPath;
- (id)keyForChild:(id)arg1;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (void)setValueFromPlist:(id)arg1;
@property(retain) id value;
- (BOOL)isPlistCommentNode;
- (unsigned long long)indexOfKey:(id)arg1;
- (unsigned long long)indexOfChild:(id)arg1;
- (id)valueAtIndex:(unsigned long long)arg1;
- (id)keyAtIndex:(unsigned long long)arg1;
- (id)children;
- (unsigned long long)numberOfChildren;
@property(readonly, getter=isLeaf) BOOL leaf;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParentNode:(id)arg1;

@end

@interface DVTSourceLandmarkItem : NSObject
{
    DVTSourceLandmarkItem *_parent;
    NSMutableArray *_children;
    NSString *_name;
    int _type;
    struct _NSRange _range;
    struct _NSRange _nameRange;
    NSString *_typeName;
    long long _nestingLevel;
    long long _indentLevel;
    double _timestamp;
    DVTStackBacktrace *_pendingUpdateBacktrace;
    id <DVTSourceLandmarkItemDelegate> _delegate;
    void *_itemRef;
}

+ (int)sourceLandmarkItemTypeForNodeType:(long long)arg1;
@property long long indentLevel; // @synthesize indentLevel=_indentLevel;
@property long long nestingLevel; // @synthesize nestingLevel=_nestingLevel;
@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) struct _NSRange nameRange; // @synthesize nameRange=_nameRange;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly) int type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property DVTSourceLandmarkItem *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
@property(readonly) BOOL needsUpdate;
- (void)markForUpdate;
- (long long)compareWithLandmarkItem:(id)arg1;
- (BOOL)isDeclaration;
- (void)removeChildAtIndex:(long long)arg1;
- (void)insertChild:(id)arg1 atIndex:(long long)arg2;
- (void)removeObjectFromChildrenAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildrenAtIndex:(unsigned long long)arg2;
@property(readonly) long long numberOfChildren;
@property(readonly) NSMutableArray *_children;
@property(readonly) NSArray *children;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
@property(readonly, copy, nonatomic) NSString *typeName; // @synthesize typeName=_typeName;
- (void)_evaluateTypeName;
- (void)_evaluateNameAndRange;
- (id)initWithItemReference:(void *)arg1 type:(int)arg2 delegate:(id)arg3;
- (id)initWithName:(id)arg1 type:(int)arg2;

@end

@interface _DVTMarkerMenuItem : NSMenuItem
{
}

@end

@interface _DVTActionPullDownButton : NSPopUpButton
{
}

- (void)sizeToFit;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;
- (void)setMenu:(id)arg1;

@end

@interface DVTDisclosureHeaderView : DVTBorderedView <DVTIssueDisplayingView>
{
    NSButton *_disclosureButton;
    NSTextField *_titleField;
    NSPopUpButton *_actionMenuButton;
    NSButton *_closeButton;
    NSImageView *_iconView;
    NSButton *_issueIconButton;
    NSDictionary *_issueInfoDictionary;
    double _lastHeightForBackgroundLayer;
    struct CGLayer *_backgroundLayer;
    double _distanceFromLeftEdgeToDisclosureButton;
    CDUnknownBlockType _closeClickHandler;
    double _rightEdgeInset;
    unsigned long long _disclosureButtonPosition;
    BOOL _drawsBackground;
    BOOL _disclosed;
    BOOL _disclosable;
    BOOL _draggable;
    long long _extendedDisclosureHitArea;
    double _preferredHeight;
    id <DVTDisclosureHeaderViewDelegate> _delegate;
}

@property __weak id <DVTDisclosureHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property double preferredHeight; // @synthesize preferredHeight=_preferredHeight;
@property(nonatomic) long long extendedDisclosureHitArea; // @synthesize extendedDisclosureHitArea=_extendedDisclosureHitArea;
@property(readonly) NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic, getter=isDisclosed) BOOL disclosed; // @synthesize disclosed=_disclosed;
@property(getter=isDraggable) BOOL draggable; // @synthesize draggable=_draggable;
@property(nonatomic, getter=isDisclosable) BOOL disclosable; // @synthesize disclosable=_disclosable;
@property double rightEdgeInset; // @synthesize rightEdgeInset=_rightEdgeInset;
@property(nonatomic) BOOL drawsBackground; // @synthesize drawsBackground=_drawsBackground;
@property(copy) NSDictionary *issueInfoDictionary; // @synthesize issueInfoDictionary=_issueInfoDictionary;
@property(nonatomic) unsigned long long disclosureButtonPosition; // @synthesize disclosureButtonPosition=_disclosureButtonPosition;
@property double distanceFromLeftEdgeToDisclosureButton; // @synthesize distanceFromLeftEdgeToDisclosureButton=_distanceFromLeftEdgeToDisclosureButton;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGLayer *)_createBackgroundLayerForCurrentHeight;
- (struct CGRect)backgroundRect;
@property BOOL drawsBottomBorder;
- (void)layoutBottomUp;
- (void)layoutTopDown;
@property(copy) NSImage *icon;
- (void)fireIssueIconButtonHandlerBlock:(id)arg1;
@property(readonly) struct CGRect grabRect;
@property(retain) NSMenu *actionMenu;
@property(retain) NSTextField *titleField;
@property(copy) NSString *title;
- (void)userToggledDisclosureState:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)insertCloseButtonWithAccessibilityDescription:(id)arg1 withClickHandler:(CDUnknownBlockType)arg2;
- (void)insertCloseButtonWithClickHandler:(CDUnknownBlockType)arg1;
- (void)closeButtonWasClicked:(id)arg1;
- (void)insertCloseButtonWithTarget:(id)arg1 action:(SEL)arg2 withAccessibilityDescription:(id)arg3;
- (void)insertCloseButtonWithTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;
- (void)_configureIssueIconButton;
- (void)_configureIconView;
- (id)defaultTitleField;
- (id)defaultCloseButton;
- (void)_configureActionButton;
@property(retain) NSButton *disclosureButton;
- (id)defaultDisclosureButton;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTHUDPopUpWindow : NSWindow
{
    BOOL canBecomeKey;
}

@property BOOL canBecomeKey; // @synthesize canBecomeKey;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;

@end

@interface DVTHUDPopUpController : NSWindowController <NSWindowDelegate>
{
    CDUnknownBlockType _doneButtonClickHandlerBlock;
    DVTHUDPopUpContentViewController *_viewController;
    DVTDelayedInvocation *_layoutInvocation;
    struct CGSize _lastLayoutContentSize;
    DVTHUDPopUpView *_popupView;
    NSButton *_doneButton;
    NSButton *_alternateButton;
    struct CGPoint _targetPoint;
    struct CGSize _contentSize;
    struct CGRect _visibleArea;
    BOOL _isOpen;
    BOOL _hostWindowCanBecomeKey;
    BOOL _hidesArrow;
    DVTNotificationToken *_frameChangeToken;
}

@property(nonatomic) BOOL hidesArrow; // @synthesize hidesArrow=_hidesArrow;
@property(copy) CDUnknownBlockType doneButtonClickHandlerBlock; // @synthesize doneButtonClickHandlerBlock=_doneButtonClickHandlerBlock;
@property(nonatomic) BOOL hostWindowCanBecomeKey; // @synthesize hostWindowCanBecomeKey=_hostWindowCanBecomeKey;
@property(readonly) NSButton *doneButton; // @synthesize doneButton=_doneButton;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property struct CGRect visibleArea; // @synthesize visibleArea=_visibleArea;
@property(readonly) DVTHUDPopUpContentViewController *popupContentViewController; // @synthesize popupContentViewController=_viewController;
- (void).cxx_destruct;
- (void)insertText:(id)arg1;
- (void)cancel:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)closeForCancelling;
- (BOOL)spaceBarClosesPopUp;
- (BOOL)escapeClosesPopUp;
- (void)keyDown:(id)arg1;
- (void)_contentViewFrameChangedNotification:(id)arg1;
- (void)clickedDoneButton:(id)arg1;
- (void)close:(id)arg1;
- (void)close;
- (BOOL)windowShouldClose:(id)arg1;
- (void)fadeOutAndCloseWindow;
- (void)closeWindowAndEnd;
- (void)_closeWindowAndEnd;
- (void)showWindowPointingAtLocation:(struct CGPoint)arg1 orientation:(unsigned long long)arg2;
- (void)showWindowPointingAtLocation:(struct CGPoint)arg1 orientation:(unsigned long long)arg2 arrowLocation:(double)arg3;
- (void)positionWindow;
- (struct CGPoint)targetOrigin;
- (void)setWindowOrigin:(struct CGPoint)arg1 clipToScreen:(BOOL)arg2;
- (void)setArrowPointWithTargetPointHidingIfInvalid:(struct CGPoint)arg1;
- (void)layout;
- (void)addSubviews;
- (void)applyContentSize;
- (id)windowNibName;
- (void)setArrowEdge:(unsigned long long)arg1;
@property double arrowHeight;
- (void)validateLayout;
- (void)invalidateLayout;
- (void)loadWindow;
- (id)initWithViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPathView : NSView
{
    double *_rawLineDashPattern;
    unsigned long long _rawLineDashPatternCount;
    struct CGPath *_cgPath;
    BOOL _usesEvenOddFillRule;
    int _lineCapStyle;
    int _lineJoinStyle;
    double _lineWidth;
    double _miterLimit;
    double _flatness;
    NSArray *_lineDashPattern;
    double _lineDashPhase;
}

@property double lineDashPhase; // @synthesize lineDashPhase=_lineDashPhase;
@property(copy, nonatomic) NSArray *lineDashPattern; // @synthesize lineDashPattern=_lineDashPattern;
@property BOOL usesEvenOddFillRule; // @synthesize usesEvenOddFillRule=_usesEvenOddFillRule;
@property double flatness; // @synthesize flatness=_flatness;
@property double miterLimit; // @synthesize miterLimit=_miterLimit;
@property int lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;
@property int lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(retain, nonatomic) struct CGPath *cgPath; // @synthesize cgPath=_cgPath;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGPath *)_newScaledCGPath;
- (void)deriveSettingsFromPath:(id)arg1;
- (void)updateConstraints;
- (void)dealloc;

@end

@interface DVTPlistDataFormatter : NSFormatter
{
}

- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;

@end

@interface DVTClickAvoidingLayer : CALayer
{
}

- (BOOL)containsPoint:(struct CGPoint)arg1;

@end

@interface DVTGradientHorizontalSeparatorGrooved : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTGradientHorizontalSeparatorTapered : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTRolloverTrackingButton : DVTMainStatusAwareButton
{
    long long _trackingRectTag;
    BOOL _mouseOver;
    BOOL _trackingMouseDown;
    BOOL _trackingRectUpdatePending;
    BOOL _redrawOnMouseEnteredAndExited;
    BOOL _shouldUseRolloverAppearance;
}

@property(nonatomic) BOOL shouldUseRolloverAppearance; // @synthesize shouldUseRolloverAppearance=_shouldUseRolloverAppearance;
@property(nonatomic) BOOL redrawOnMouseEnteredAndExited; // @synthesize redrawOnMouseEnteredAndExited=_redrawOnMouseEnteredAndExited;
- (void)rightMouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_updateTrackingRectSoon;
- (void)updateTrackingRect;
- (void)_removeTrackingRect;
- (void)updateMouseIsOver:(int)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseEnteredOrExited:(BOOL)arg1;
- (BOOL)mouseIsOver;
- (void)awakeFromNib;
- (void)setBoundsRotation:(double)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (void)setFrameRotation:(double)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_initTrackingRect;

@end

@interface DVTDevicesWindowContentAreaViewController : DVTViewController
{
    DVTReplacementView *_replacementView;
}

@property(retain) DVTReplacementView *replacementView; // @synthesize replacementView=_replacementView;
- (void).cxx_destruct;
- (void)primitiveInvalidate;

@end

@interface DVTDeviceTableCellView : NSTableCellView
{
    DVTGradientImageButton *_connectButton;
    DVTGradientImageButton *_ignoreButton;
    NSTextField *_subtitleLabel;
}

@property(retain) NSTextField *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain) DVTGradientImageButton *ignoreButton; // @synthesize ignoreButton=_ignoreButton;
@property(retain) DVTGradientImageButton *connectButton; // @synthesize connectButton=_connectButton;
- (void).cxx_destruct;
- (void)setBackgroundStyle:(long long)arg1;

@end

@interface DVTFilePathFieldCell : NSTextFieldCell
{
    NSButtonCell *_chooseButtonCell;
    NSButtonCell *_linkButtonCell;
    BOOL _alwaysShowChooser;
    BOOL _showLinkButton;
    BOOL _chooseFile;
    BOOL _chooseDir;
    BOOL _showChooserButton;
    NSString *_choosePathDefaultFilePath;
    NSString *_choosePathMessage;
    NSArray *_absoluteLinkPaths;
    id _delegate;
    unsigned long long _linkButtonBehavior;
}

@property unsigned long long linkButtonBehavior; // @synthesize linkButtonBehavior=_linkButtonBehavior;
@property BOOL showChooserButton; // @synthesize showChooserButton=_showChooserButton;
@property BOOL chooseDir; // @synthesize chooseDir=_chooseDir;
@property BOOL chooseFile; // @synthesize chooseFile=_chooseFile;
@property BOOL showLinkButton; // @synthesize showLinkButton=_showLinkButton;
@property BOOL alwaysShowChooser; // @synthesize alwaysShowChooser=_alwaysShowChooser;
@property(retain) id delegate; // @synthesize delegate=_delegate;
@property(copy) NSArray *absoluteLinkPaths; // @synthesize absoluteLinkPaths=_absoluteLinkPaths;
@property(copy) NSString *choosePathMessage; // @synthesize choosePathMessage=_choosePathMessage;
@property(copy) NSString *choosePathDefaultFilePath; // @synthesize choosePathDefaultFilePath=_choosePathDefaultFilePath;
- (void).cxx_destruct;
- (BOOL)eventIsInSubCellArea:(id)arg1 ofView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)resetCursorRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setEnabled:(BOOL)arg1;
- (void)_configureSubCells;
- (void)_refreshEnabledStates;
- (struct CGRect)_linkButtonFrameForCellFrame:(struct CGRect)arg1;
- (struct CGRect)_chooserButtonFrameForCellFrame:(struct CGRect)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textBoundingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_maximumTextBoundsForBounds:(struct CGRect)arg1;
- (double)_claimedWidthForBounds:(struct CGRect)arg1;
- (BOOL)reserveSpaceForLinkButton;
- (BOOL)effectiveShowLinkButton;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)init;
- (void)linkAction:(id)arg1;
- (void)chooseAction:(id)arg1;
- (BOOL)effectiveShowChooserButton;
- (void)_commonInitForFilePathCell;

@end

@interface DVTTextCompletionListIconCell : NSImageCell
{
    NSShadow *_iconShadow;
}

@property(retain) NSShadow *iconShadow; // @synthesize iconShadow=_iconShadow;
- (void).cxx_destruct;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (void)_dvt_commonInit;

@end

@interface DVTGradientImagePopUpButton : NSPopUpButton <DVTGradientStyleButton>
{
}

+ (Class)cellClass;
- (void)setHighlightSides:(int)arg1;
- (int)highlightSides;
@property int borderSides;
@property int gradientStyle;
- (void)_doInit;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTGradientImagePopUpButtonCell : NSPopUpButtonCell
{
    int _gradientStyle;
    int _borderSides;
    int _highlightSides;
    NSImage *_imageBlueOnImageDerivedFrom;
    NSImage *_blueOnImage;
}

@property int highlightSides; // @synthesize highlightSides=_highlightSides;
@property int borderSides; // @synthesize borderSides=_borderSides;
@property int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
- (void).cxx_destruct;
- (BOOL)_shouldUseColorPunchOutStyleForGradientStyle;
- (void)_updateImageIfNecessary;
- (struct NSEdgeInsets)_popupBezelInsets;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface DVTPlistStringNode : DVTPlistNode
{
    NSString *_value;
}

- (void).cxx_destruct;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (void)setValueFromPlist:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTAnnotatingTypesetter : DVTFoldingTypesetter
{
    NSTextContainer *_annotationTextContainer;
    DVTLayoutManager *_annotationLayoutManager;
    DVTTextStorage *_annotationTextStorage;
    double _mostRecentWrappedLineIndentation;
}

- (void).cxx_destruct;
- (double)paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (void)setLocation:(struct CGPoint)arg1 withAdvancements:(const double *)arg2 forStartOfGlyphRange:(struct _NSRange)arg3;
- (void)willSetLineFragmentRect:(struct CGRect *)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect *)arg3 baselineOffset:(double *)arg4;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 remainingRect:(struct CGRect *)arg3 forStartingGlyphAtIndex:(unsigned long long)arg4 proposedRect:(struct CGRect)arg5 lineSpacing:(double)arg6 paragraphSpacingBefore:(double)arg7 paragraphSpacingAfter:(double)arg8;
- (id)_annotationTextStorageForChracterRange:(struct _NSRange)arg1 availableWidth:(double)arg2;
- (id)layoutManager;
- (id)init;

@end

@interface DVTSplitView : NSSplitView <NSSplitViewDelegate, NSAnimationDelegate, DVTStatefulObject, DVTInvalidation>
{
    double _dividerThickness;
    unsigned long long _indexOfViewForResizing;
    long long _lastEventNumber;
    id _dvtDelegate;
    id _splitViewItems;
    NSImage *_dividerKnobImage;
    NSImage *_dividerImage;
    NSColor *_dividerColor;
    DVTStateToken *_stateToken;
    NSMutableDictionary *_additionalEffectiveRects;
    struct {
        unsigned int _delegateRespondsToCanCollapseSubview:1;
        unsigned int _delegateRespondsToShouldCollapseAtIndex:1;
        unsigned int _delegateRespondsToConstrainMinCoordinate:1;
        unsigned int _delegateRespondsToConstrainMaxCoordinate:1;
        unsigned int _delegateRespondsToConstrainSplitPosition:1;
        unsigned int _delegateRespondsToShouldHideDivider:1;
        unsigned int _delegateRespondsToResizeSubviews:1;
        unsigned int _delegateRespondsToEffectiveRect:1;
        unsigned int _delegateRespondsToAdditionalEffectiveRect:1;
        unsigned int _delegateRespondsToAdditionalEffectiveRects:1;
        unsigned int _delegateRespondsToWillResizeSubviews:1;
        unsigned int _delegateRespondsToDidResizeSubviews:1;
        unsigned int _delegateRespondsToSplitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:1;
        unsigned int _delegateRespondsToNeedsRectanglesForViewsWithStateForSize:1;
        unsigned int _delegateRespondsToWillStartLiveResize:1;
        unsigned int _delegateRespondsToDidEndLiveResize:1;
        unsigned int _needsAdjust:1;
        unsigned int _doingAnimationReplaceSubview:1;
        unsigned int _reserved:15;
    } _dvtSplitViewFlags;
    BOOL _isAnimating;
    BOOL _suppressFrameWarnings;
    BOOL _revertingState;
    BOOL _suppressAdditionalRects;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (void)initialize;
@property BOOL suppressFrameWarnings; // @synthesize suppressFrameWarnings=_suppressFrameWarnings;
@property(retain, nonatomic) DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property unsigned long long indexOfViewForResizing; // @synthesize indexOfViewForResizing=_indexOfViewForResizing;
- (void).cxx_destruct;
- (void)resetCursorRects;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)dvt_isValidGrabHit:(struct CGPoint)arg1;
- (BOOL)_validateSubviewFrames;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)viewWillDraw;
- (void)willRemoveSubview:(id)arg1;
- (void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)addSubview:(id)arg1;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)dvt_removeSubview:(id)arg1;
- (void)dvt_addSubview:(id)arg1;
- (void)dvt_replaceSubview:(id)arg1 with:(id)arg2;
- (void)setSubviews:(id)arg1;
- (id)_splitViewItemForSubview:(id)arg1;
- (id)splitViewItemWithIdentifier:(id)arg1;
- (void)removeSplitViewItem:(id)arg1;
- (void)insertSplitViewItem:(id)arg1 atIndex:(long long)arg2;
- (void)addSplitViewItem:(id)arg1;
- (id)splitViewItems;
- (id)_splitViewItems;
- (void)_updateSplitViewItemsBasedOnSubviews;
- (void)_indicateStateChangedIfNeccessary;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_setSplitViewItemInfo:(id)arg1;
- (id)_splitViewItemInfo;
- (void)toggleVisibilityOfItemUsingAnimation:(id)arg1;
@property(copy) NSColor *dividerColor;
@property double dividerThickness;
- (void)drawDividerInRect:(struct CGRect)arg1;
@property(copy) NSImage *dividerImage;
@property(copy) NSImage *dividerKnobImage;
- (void)primitiveInvalidate;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (id)dvt_delegate;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dvtSplitViewCommonInit;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTColorSwatchWithComponentsView : NSView
{
    DVTColorSwatchView *_colorSwatch;
    NSView *_colorComponentsView;
    NSNumberFormatter *_numberFormatter;
}

+ (id)colorComponentNamesForColor:(struct CGColor *)arg1;
- (void).cxx_destruct;
- (id)_createLabel:(id)arg1 bold:(BOOL)arg2 selectable:(BOOL)arg3;
- (void)updateToRepresentColor:(struct CGColor *)arg1;
- (void)updateToRepresentPatternColor;
- (void)_dvtColorSwatchWithComponentsView_commonInit;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTButtonTextFieldCell : NSTextFieldCell <NSCoding, NSCopying>
{
    struct CGRect _cellFrame;
    BOOL _inButton;
    NSImage *_image;
    BOOL _alwaysShowButton;
    BOOL _useMetricsForAutolayout;
    NSImage *_alternateImage;
    NSImage *_highlightImage;
    id _buttonTarget;
    SEL _buttonAction;
    unsigned long long _imagePosition;
}

+ (BOOL)prefersTrackingUntilMouseUp;
@property BOOL useMetricsForAutolayout; // @synthesize useMetricsForAutolayout=_useMetricsForAutolayout;
@property unsigned long long imagePosition; // @synthesize imagePosition=_imagePosition;
@property SEL buttonAction; // @synthesize buttonAction=_buttonAction;
@property __weak id buttonTarget; // @synthesize buttonTarget=_buttonTarget;
@property(retain, nonatomic) NSImage *highlightImage; // @synthesize highlightImage=_highlightImage;
@property(retain, nonatomic) NSImage *alternateImage; // @synthesize alternateImage=_alternateImage;
@property BOOL alwaysShowButton; // @synthesize alwaysShowButton=_alwaysShowButton;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (void)_sendButtonAction;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)_isPointInButton:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (id)_attributedStringValue;
- (struct CGSize)imageSize;
@property(retain, nonatomic) NSImage *image;
- (id)_templateImageFromImage:(id)arg1 withColor:(id)arg2;

@end

@interface DVTComparisonScroller : DVTMarkedScroller
{
}

+ (BOOL)isCompatibleWithOverlayScrollers;
- (void)scrollWheel:(id)arg1;

@end

@interface DVTPlistDictionaryNode : DVTPlistArrayNode
{
    NSMutableDictionary *_dict;
}

- (void).cxx_destruct;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 startingAt:(id)arg3 document:(id)arg4;
- (id)_findStringInKey:(id)arg1 matchingDescriptor:(id)arg2 backwards:(BOOL)arg3 startingAt:(id)arg4 document:(id)arg5;
- (id)keyForChild:(id)arg1;
- (unsigned long long)indexOfKey:(id)arg1;
- (unsigned long long)indexOfChild:(id)arg1;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (id)keyForNewChild;
- (id)keyByUniquingKey:(id)arg1;
- (void)setValueFromPlist:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceKeyAtIndex:(unsigned long long)arg1 withKey:(id)arg2;
- (void)replaceValue:(id)arg1 forKey:(id)arg2;
- (void)removeValueForKey:(id)arg1;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValue:(id)arg1 forKey:(id)arg2;
- (void)insertValue:(id)arg1 forKey:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)valueForKey:(id)arg1;
- (id)valueAtIndex:(unsigned long long)arg1;
- (id)keyAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfChildren;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParentNode:(id)arg1;

@end

@interface DVTURLifier : NSObject
{
}

+ (id)urlMatchesForString:(id)arg1;

@end

@interface DVTURLMatch : NSObject
{
    struct _NSRange _range;
    NSString *_url;
}

@property(copy) NSString *url; // @synthesize url=_url;
@property struct _NSRange range; // @synthesize range=_range;
- (void).cxx_destruct;
- (id)description;
- (id)init;
- (id)initWithRange:(struct _NSRange)arg1 url:(id)arg2;

@end

@interface DVTButtonImageTitleCell : NSButtonCell
{
    NSImage *_titleImage;
}

@property(copy) NSImage *titleImage; // @synthesize titleImage=_titleImage;
- (void).cxx_destruct;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_calculateRectsForTitleImage:(struct CGRect *)arg1 titleText:(struct CGRect *)arg2 padding:(double *)arg3 forBounds:(struct CGRect)arg4;

@end

@interface DVTTextSidebarView : NSRulerView
{
    double _sidebarWidth;
    double _foldbarWidth;
    NSColor *_sidebarBackgroundColor;
    NSColor *_sidebarEdgeColor;
    NSColor *_foldbarBackgroundColor;
    NSFont *_lineNumberFont;
    NSColor *_lineNumberTextColor;
    DVTTextAnnotation *_clickedAnnotation;
    DVTTextAnnotation *_currentlyRolledOverAnnotation;
    unsigned long long _origLineNumberOfAnnotationBeingDragged;
    NSTimer *_foldingHoverTimer;
    struct CGPoint _mouseLocationForContextualMenu;
    unsigned long long _hitLineNumberForContextualMenu;
    unsigned short _lineNumberDigitGlyphs[10];
    struct CGSize _lineNumberDigitGlyphAdvancements[10];
    NSTrackingArea *_trackingArea;
    unsigned long long _currentLineNumberReported;
    BOOL _showsSidebar;
    BOOL _showsFoldbar;
    BOOL _drawsLineNumbers;
    BOOL _clickedAnnotationHasTraveled;
}

@property(readonly) unsigned long long lastLineNumberControlClicked; // @synthesize lastLineNumberControlClicked=_hitLineNumberForContextualMenu;
@property(readonly) struct CGPoint lastPointControlClicked; // @synthesize lastPointControlClicked=_mouseLocationForContextualMenu;
@property(copy, nonatomic) NSColor *foldbarBackgroundColor; // @synthesize foldbarBackgroundColor=_foldbarBackgroundColor;
@property(copy, nonatomic) NSColor *sidebarEdgeColor; // @synthesize sidebarEdgeColor=_sidebarEdgeColor;
@property(copy, nonatomic) NSColor *sidebarBackgroundColor; // @synthesize sidebarBackgroundColor=_sidebarBackgroundColor;
@property(copy, nonatomic) NSColor *lineNumberTextColor; // @synthesize lineNumberTextColor=_lineNumberTextColor;
@property(retain, nonatomic) NSFont *lineNumberFont; // @synthesize lineNumberFont=_lineNumberFont;
@property(nonatomic) BOOL drawsLineNumbers; // @synthesize drawsLineNumbers=_drawsLineNumbers;
@property(nonatomic) double sidebarWidth; // @synthesize sidebarWidth=_sidebarWidth;
@property(nonatomic) BOOL showsFoldbar; // @synthesize showsFoldbar=_showsFoldbar;
@property(nonatomic) BOOL showsSidebar; // @synthesize showsSidebar=_showsSidebar;
- (void).cxx_destruct;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)_clickedAnnotation:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (BOOL)mouseUpOnAnnotationSidebarMarkerAtPoint:(struct CGPoint)arg1 bounds:(struct CGRect)arg2 event:(id)arg3;
- (BOOL)dragAnnotationSidebarMarkerAtPoint:(struct CGPoint)arg1 draggableBounds:(struct CGRect)arg2 flipped:(BOOL)arg3 event:(id)arg4;
- (void)mouseDownOnAnnotation:(id)arg1;
- (void)_foldingHovered;
- (void)viewDidMoveToWindow;
- (void)_updateCurrentMouseLineOver:(BOOL)arg1 withEvent:(id)arg2;
- (void)didRemoveAnnotation:(id)arg1;
- (void)_updateCurrentAnnotationRolloverStatusWithEvent:(id)arg1;
- (void)_beginRolloverOnAnnotation:(id)arg1 event:(id)arg2;
- (void)_endRolloverOnAnnotation:(id)arg1 event:(id)arg2;
- (void)getParagraphRect:(struct CGRect *)arg1 firstLineRect:(struct CGRect *)arg2 forLineNumber:(unsigned long long)arg3;
- (id)lastMarkerControlClicked;
- (id)menuForEvent:(id)arg1;
- (id)annotationAtSidebarPoint:(struct CGPoint)arg1;
- (unsigned long long)lineNumberForPoint:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)prepareContentInRect:(struct CGRect)arg1;
- (void)_scrollToMatchContentView;
- (void)_drawLineNumbersInSidebarRect:(struct CGRect)arg1 foldedIndexes:(unsigned long long *)arg2 count:(unsigned long long)arg3 linesToInvert:(id)arg4 linesToReplace:(id)arg5 getParaRectBlock:(CDUnknownBlockType)arg6;
- (void)_drawSidebarMarkersForAnnotations:(id)arg1 atIndexes:(id)arg2 textView:(id)arg3 getParaRectBlock:(CDUnknownBlockType)arg4;
- (unsigned long long)_drawFoldingRibbonForLine:(unsigned long long)arg1 foldbarRect:(struct CGRect)arg2 paraRect:(struct CGRect)arg3 lineNumberFontSize:(double)arg4 textView:(id)arg5;
- (struct CGRect)foldbarRect;
- (struct CGRect)sidebarRect;
@property(readonly) NSCursor *sidebarCursor;
- (void)setLineNumberFont:(id)arg1 size:(double)arg2;
@property double foldbarWidth; // @synthesize foldbarWidth=_foldbarWidth;
- (void)recalculateSidebarWidthToFit;
- (void)_updateRulerThickness;
- (BOOL)displaysTooltips;
- (BOOL)acceptsFirstResponder;
- (void)updateTrackingAreas;
- (void)setOrientation:(unsigned long long)arg1;
- (void)_fontAndColorSourceTextSettingsChanged:(id)arg1;
- (void)dealloc;
- (id)initWithScrollView:(id)arg1 orientation:(unsigned long long)arg2;
- (void)_reloadColors;

@end

@interface DVTMorphingDragImageView : NSView
{
    NSImage *_startImage;
    NSImage *_endImage;
    double _progress;
}

@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSImage *endImage; // @synthesize endImage=_endImage;
@property(retain, nonatomic) NSImage *startImage; // @synthesize startImage=_startImage;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTDraggingContext : NSObject <DVTDraggingInfo>
{
    NSWindow *_draggingDestinationWindow;
    struct CGPoint _draggingLocation;
    struct CGPoint _draggedImageLocation;
    NSImage *_draggedImage;
    NSPasteboard *_draggingPasteboard;
    id _draggingSource;
    NSDictionary *_draggingSourceContext;
    long long _draggingSequenceNumber;
    DVTDraggedImageState *_draggedImageState;
    struct CGSize _draggingStickiness;
    NSMutableArray *_invalidationPool;
    unsigned long long _draggingSourceOperationMask;
    unsigned long long _lastDragDestinationOperationMask;
    BOOL _draggedImageStateNeedsUpdate;
    long long _draggingFormation;
    long long _numberOfValidItemsForDrop;
    BOOL _animatesToDestination;
}

@property long long draggingFormation; // @synthesize draggingFormation=_draggingFormation;
@property long long numberOfValidItemsForDrop; // @synthesize numberOfValidItemsForDrop=_numberOfValidItemsForDrop;
@property BOOL animatesToDestination; // @synthesize animatesToDestination=_animatesToDestination;
@property struct CGSize draggingStickiness; // @synthesize draggingStickiness=_draggingStickiness;
@property BOOL draggedImageStateNeedsUpdate; // @synthesize draggedImageStateNeedsUpdate=_draggedImageStateNeedsUpdate;
@property unsigned long long lastDragDestinationOperationMask; // @synthesize lastDragDestinationOperationMask=_lastDragDestinationOperationMask;
@property(retain) NSDictionary *draggingSourceContext; // @synthesize draggingSourceContext=_draggingSourceContext;
@property(readonly) NSPasteboard *draggingPasteboard; // @synthesize draggingPasteboard=_draggingPasteboard;
@property(retain) NSImage *draggedImage; // @synthesize draggedImage=_draggedImage;
@property struct CGPoint draggedImageLocation; // @synthesize draggedImageLocation=_draggedImageLocation;
@property(retain) id draggingSource; // @synthesize draggingSource=_draggingSource;
@property struct CGPoint draggingLocation; // @synthesize draggingLocation=_draggingLocation;
@property unsigned long long draggingSourceOperationMask; // @synthesize draggingSourceOperationMask=_draggingSourceOperationMask;
@property(retain) NSWindow *draggingDestinationWindow; // @synthesize draggingDestinationWindow=_draggingDestinationWindow;
@property(retain) DVTDraggedImageState *draggedImageState; // @synthesize draggedImageState=_draggedImageState;
@property long long draggingSequenceNumber; // @synthesize draggingSequenceNumber=_draggingSequenceNumber;
- (void).cxx_destruct;
- (void)enumerateDraggingItemsWithOptions:(unsigned long long)arg1 forView:(id)arg2 classes:(id)arg3 searchOptions:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)invalidatePooledObjects;
- (void)invalidateObjectAtEndOfDragLoop:(id)arg1;
- (struct CGPoint)draggingLocationOnScreen;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (void)_setOnDemandSpringLoadingEnabled:(BOOL)arg1;
- (BOOL)_isOnDemandSpringLoadingActivated;
- (unsigned long long)_lastDragDestinationOperation;
@property(readonly, copy) NSString *description;
- (id)initWithSource:(id)arg1 andPasteboard:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPlistDataNode : DVTPlistNode
{
    NSData *_value;
}

- (void).cxx_destruct;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)base64EncodedString;
- (id)stringForSearch;
- (id)plistStringWithIndent:(id)arg1;
- (void)setValueFromPlist:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTBezelAlertView : NSView
{
    NSImage *_icon;
    NSString *_message;
    NSDictionary *_messageAttributes;
    NSColor *_backgroundColor;
    struct CGRect _iconRect;
    struct CGRect _messageRect;
}

@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)tile;
- (id)initWithIcon:(id)arg1 message:(id)arg2;

@end

@interface DVTMessageBubbleView : NSView
{
    NSMutableArray *_annotations;
    NSMutableArray *_visibleAnnotations;
    NSDictionary *_cachedMessageTextAttributes;
    NSDictionary *_cachedExpandButtonTextAttributes;
    NSMutableDictionary *_messageWidths;
    NSFont *_messageFont;
    NSTrackingArea *_expandButtonTrackingArea;
    double _arrowheadWidth;
    NSMutableIndexSet *_annotsNeedTooltip;
    double _collapsedHeight;
    struct CGSize _preferredSize;
    int _position;
    struct {
        unsigned int _mouseInExpandButton:1;
        unsigned int _mouseIsDown:1;
    } _flags;
    BOOL _expanded;
    BOOL _needsParagraphSpacing;
    BOOL _wantsFlatStyle;
    struct CGSize _cachedAvailableSize;
}

+ (struct CGRect)adjustedExpandButtonRect:(struct CGRect)arg1 withFont:(id)arg2 padding:(double)arg3;
+ (struct CGRect)adjustedIconRect:(struct CGRect)arg1 withFont:(id)arg2 padding:(double)arg3;
+ (double)_defaultMessageFontSize;
+ (id)defaultAnimationForKey:(id)arg1;
@property BOOL wantsFlatStyle; // @synthesize wantsFlatStyle=_wantsFlatStyle;
@property(nonatomic) double collapsedHeight; // @synthesize collapsedHeight=_collapsedHeight;
@property BOOL needsParagraphSpacing; // @synthesize needsParagraphSpacing=_needsParagraphSpacing;
@property int position; // @synthesize position=_position;
@property(nonatomic, getter=isExpanded) BOOL expanded; // @synthesize expanded=_expanded;
- (void).cxx_destruct;
- (id)_collapseButtonTrianglePathInRect:(struct CGRect)arg1;
- (id)_backgroundBezierPathInRect:(struct CGRect)arg1;
- (void)noticeFontAndColorsChanged;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawExpandButton;
- (void)_drawAnnotationMessages;
- (void)_drawBackground;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)resetCursorRects;
- (id)_cachedExpandButtonTextAttributes;
- (id)_cachedMessageTextAttributes;
- (struct CGRect)_expandButtonArea;
- (double)_expandButtonWidth;
- (double)_messageWidthForString:(id)arg1;
- (struct CGRect)_annotationIconRectAtIndex:(unsigned long long)arg1;
- (double)_iconMaxWidth;
- (id)_themeForMainAnnotation;
- (struct CGRect)_rectForAnnotationAtIndex:(unsigned long long)arg1;
- (double)_preferredHeight;
- (struct CGSize)preferredSizeForAvailableSize:(struct CGSize)arg1;
@property(readonly) BOOL wantsPreferredBubbleSizeAndPosition;
- (unsigned long long)annotationIndexAtPoint:(struct CGPoint)arg1;
- (void)_resetVisibleAnnotations;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotation:(id)arg1;
@property(readonly) NSArray *annotations;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTPlistXMLParser : NSObject <NSXMLParserDelegate>
{
    DVTPlistNode *rootNode;
    DVTPlistNode *currentNode;
    NSString *currentKey;
    NSString *currentString;
    NSXMLParser *parser;
    BOOL interestedInCharacters;
    NSString *_errorFoundByDelegate;
}

- (void).cxx_destruct;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)addToParent:(id)arg1;
- (id)errorFoundByDelegate;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parseError:(id)arg1;
- (id)error;
- (id)parse;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPlistDateNode : DVTPlistNode
{
    NSDate *_value;
}

- (void).cxx_destruct;
- (id)stringForSearch;
- (id)rawPlist;
- (id)xmlStringWithIndent:(id)arg1;
- (id)plistStringWithIndent:(id)arg1;
- (id)encodedString;
- (void)setValueFromPlist:(id)arg1;
- (id)_dateFormatter;
- (id)value;
- (void)setValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DVTDraggedObjectsImageState : DVTDraggedImageState
{
    NSMutableDictionary *_places;
    NSMutableDictionary *_views;
    NSMutableDictionary *_images;
    NSMutableArray *_identifiers;
    NSImage *_image;
    NSString *_name;
    struct CGPoint _frameOffset;
    BOOL _forcesImageScaling;
}

+ (id)draggedObjectStateWithIdentifiers:(id)arg1 views:(id)arg2 name:(id)arg3;
+ (id)draggedObjectStateWithIdentifiers:(id)arg1 images:(id)arg2 frames:(id)arg3 name:(id)arg4;
+ (id)draggedObjectStateWithImage:(id)arg1;
+ (id)draggedObjectStateWithIdentifier:(id)arg1 view:(id)arg2 name:(id)arg3;
+ (id)draggedObjectStateWithIdentifier:(id)arg1 image:(id)arg2 name:(id)arg3;
@property BOOL forcesImageScaling; // @synthesize forcesImageScaling=_forcesImageScaling;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSArray *identifiers; // @synthesize identifiers=_identifiers;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)synthesizedAnchorPoint:(struct CGPoint *)arg1 forSubiquentState:(id)arg2;
- (id)identifierForPoint:(struct CGPoint)arg1;
- (BOOL)containsIdentifier:(id)arg1;
- (id)image;
- (id)views;
- (id)imageForIdentifier:(id)arg1;
- (id)viewForIdentifier:(id)arg1;
- (struct CGRect)frameForIdentifier:(id)arg1;
- (struct CGRect)originalFrameForIdentifier:(id)arg1;
- (void)remapIdentifiers:(id)arg1;
- (id)initWithIdentifiers:(id)arg1 views:(id)arg2 name:(id)arg3;
- (id)initWithIdentifiers:(id)arg1 images:(id)arg2 frames:(id)arg3 name:(id)arg4;

@end

@interface _DVTLibraryDetailControllerChoice : NSObject
{
    DVTExtension *_extension;
    id _representedObject;
}

@property(readonly, nonatomic) id representedObject; // @synthesize representedObject=_representedObject;
@property(readonly, nonatomic) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
- (id)initWithExtension:(id)arg1 representedObject:(id)arg2;

@end

@interface DVTLibraryDetailPopUpContentController : DVTHUDPopUpContentViewController <DVTAssetDetailViewDelegate>
{
    DVTLibraryDetailEditorController *_currentEditorViewController;
    id <DVTInvalidation> _assetDetailViewAssetToken;
    id <DVTLibraryDetailPopUpContentControllerDelegate> _delegate;
    DVTLibraryDetailPopUpController *_popUpController;
    DVTDelayedInvocation *_replacementViewInvocation;
    DVTChoice *_selectedDetailControllerChoice;
    DVTLibraryController *_libraryController;
    NSArray *_detailControllerChoices;
    struct {
        unsigned int isOpen:1;
        unsigned int synchronizingDetailViewContentViewWithAsset:1;
        unsigned char editingSelectedAsset;
        unsigned char canEditSelectedAsset;
        unsigned int _reserved:4;
    } _flags;
    DVTLibraryAsset *_assetDetailViewAsset;
    DVTAssetDetailView *_assetDetailView;
}

+ (id)synchronizedAssetKeyPathsForDetailView;
@property(retain, nonatomic) NSArray *detailControllerChoices; // @synthesize detailControllerChoices=_detailControllerChoices;
@property(retain) DVTAssetDetailView *assetDetailView; // @synthesize assetDetailView=_assetDetailView;
@property(readonly) DVTLibraryAsset *assetDetailViewAsset; // @synthesize assetDetailViewAsset=_assetDetailViewAsset;
@property(readonly) DVTLibraryController *libraryController; // @synthesize libraryController=_libraryController;
@property(retain, nonatomic) DVTChoice *selectedDetailControllerChoice; // @synthesize selectedDetailControllerChoice=_selectedDetailControllerChoice;
@property(retain, nonatomic) DVTLibraryDetailPopUpController *popUpController; // @synthesize popUpController=_popUpController;
@property(retain) id <DVTLibraryDetailPopUpContentControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)stopEditingSelectedAsset;
- (void)startEditingSelectedAsset;
- (void)synchronizeCurrentDetailControllerWithCurrentEditorController:(id)arg1;
- (void)makeSureCurrentEditorControllerHasFirstResponder;
- (void)scrollTopOfAssetDetailViewIntoView;
- (void)assetDetailView:(id)arg1 beginDraggingWithMouseDownEvent:(id)arg2 andMouseDraggedEvent:(id)arg3;
- (void)refreshDetailController:(id)arg1 withAsset:(id)arg2;
- (void)sizeDetailController:(id)arg1 toFitSuggestedSize:(struct CGSize)arg2 forAsset:(id)arg3;
- (void)assetDetailView:(id)arg1 didInstallDetailController:(id)arg2;
- (void)assetDetailView:(id)arg1 sizeViewController:(id)arg2 toFitSuggestedSize:(struct CGSize)arg3;
- (void)assetDetailView:(id)arg1 wasDoubleClickedInHeader:(id)arg2;
- (void)refreshDetailView;
@property(readonly) DVTLibraryDetailController *currentDetailController;
- (void)assetDetailView:(id)arg1 userDidSelectTab:(id)arg2;
- (void)detailControllerIdentifiersDidChangeForAsset:(id)arg1;
- (void)refreshDetailControllerTabChooserForAsset:(id)arg1;
- (id)detailControllerIdentifiersForAsset:(id)arg1;
- (void)synchronizeDetailViewContentViewWithAsset;
- (void)setAssetDetailViewAsset:(id)arg1;
- (void)assetDetailViewAsset:(id)arg1 didChangeValueForKeyPath:(id)arg2;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)selectedAsset;
@property BOOL canEditSelectedAsset;
@property(getter=isEditingSelectedAsset) BOOL editingSelectedAsset;
- (BOOL)firstResponderHasSelectedAsset:(id)arg1;
- (id)library;
- (void)primitiveInvalidate;
- (id)initWithLibraryController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTLibraryAssetView : NSView
{
    struct {
        unsigned int drawsWithSelectionHighlight:1;
        unsigned int drawsWithAdjacentSelectionHighlight:1;
        unsigned int showsFirstResponder:1;
        unsigned int showingGridLines:1;
        unsigned int drawsWithClickFrame:1;
        unsigned int _reserved:3;
    } _flags;
    NSAttributedString *_text;
    long long _style;
    NSString *_summary;
    NSString *_title;
    NSImage *_image;
    NSString *_badgeString;
    id _delegate;
}

+ (struct CGSize)maximumSizeForStyle:(long long)arg1;
+ (struct CGSize)minimumSizeForStyle:(long long)arg1;
+ (struct CGSize)maximumIconSize;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *badgeString; // @synthesize badgeString=_badgeString;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)drawRect:(struct CGRect)arg1;
- (id)effectiveGridColor;
- (void)viewWillDraw;
- (BOOL)isOpaque;
- (id)effectiveSelectionFillColor;
- (id)effectiveSelectionStrokeColor;
- (id)gridColor;
- (id)clickedBorderColor;
- (id)normalBorderColor;
- (id)secondarySelectedBorderColor;
- (id)primarySelectedBorderColor;
- (id)normalBackgroundColor;
- (id)secondarySelectedBackgroundColor;
- (id)primarySelectedBackgroundColor;
- (id)text;
- (id)badgeStringAttributes;
- (BOOL)shouldBandSelectWithMouseDownEvent:(id)arg1;
- (struct CGRect)textAreaBounds;
- (struct CGRect)badgeStringBounds;
- (struct CGRect)badgeAreaBounds;
- (struct CGRect)imageRect;
- (struct CGRect)imageAreaBounds;
- (struct CGRect)contentAreaBounds;
- (struct CGRect)selectionAreaBounds;
- (BOOL)isFlipped;
@property(nonatomic, getter=isShowingGridLines) BOOL showingGridLines;
- (BOOL)shouldDrawWithClickFrame;
@property(nonatomic) BOOL drawsWithClickFrame;
@property(nonatomic) BOOL drawsWithAdjacentSelectionHighlight;
@property(nonatomic) BOOL drawsWithSelectionHighlight;
@property(nonatomic) BOOL showsFirstResponder;
- (void)setNilValueForKey:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTTextCompletionWindow : NSWindow
{
    NSBezierPath *_clippingPath;
    double _cornerRadius;
    DVTTextCompletionSession *_session;
}

@property(retain) DVTTextCompletionSession *session; // @synthesize session=_session;
@property double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(readonly) NSBezierPath *clippingPath; // @synthesize clippingPath=_clippingPath;
- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;

@end

@interface DVTCapacitySegment : NSObject
{
    double _value;
    NSColor *_color;
    NSString *_label;
}

@property(retain) NSString *label; // @synthesize label=_label;
@property(retain) NSColor *color; // @synthesize color=_color;
@property double value; // @synthesize value=_value;
- (void).cxx_destruct;
- (id)initWithValue:(double)arg1 color:(id)arg2 label:(id)arg3;

@end

@interface DVTScrollableTabBarClipView : NSClipView
{
    BOOL _shouldChangeNextScrollFromVerticalToHorizontal;
}

@property(nonatomic) BOOL shouldChangeNextScrollFromVerticalToHorizontal; // @synthesize shouldChangeNextScrollFromVerticalToHorizontal=_shouldChangeNextScrollFromVerticalToHorizontal;
- (BOOL)_scrollTo:(const struct CGPoint *)arg1 animateScroll:(long long)arg2 flashScrollerKnobs:(unsigned long long)arg3;

@end

@interface DVTDeviceCategoryToTextColorValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface DVTSourceExpression : NSObject
{
    DVTTextDocumentLocation *_location;
    DVTTextDocumentLocation *_textSelectionLocation;
    NSString *_expressionString;
    struct _NSRange _expressionRange;
    NSString *_symbolString;
    NSString *_textSelectionString;
    NSDictionary *_symbolDescription;
    id _context;
}

@property(readonly) id context; // @synthesize context=_context;
@property(readonly) struct _NSRange expressionRange; // @synthesize expressionRange=_expressionRange;
@property(readonly, copy) NSDictionary *symbolDescription; // @synthesize symbolDescription=_symbolDescription;
@property(readonly) DVTTextDocumentLocation *textSelectionLocation; // @synthesize textSelectionLocation=_textSelectionLocation;
@property(readonly, copy) NSString *textSelectionString; // @synthesize textSelectionString=_textSelectionString;
@property(readonly, copy) NSString *symbolString; // @synthesize symbolString=_symbolString;
@property(readonly, copy) NSString *expressionString; // @synthesize expressionString=_expressionString;
@property(readonly) DVTTextDocumentLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)description;
- (id)initWithExpressionString:(id)arg1 symbolString:(id)arg2 location:(id)arg3 symbolDescription:(id)arg4 andContext:(id)arg5;
- (id)initWithExpressionString:(id)arg1 range:(struct _NSRange)arg2 symbolString:(id)arg3 location:(id)arg4 textSelectionString:(id)arg5 textSelectionLocation:(id)arg6 symbolDescription:(id)arg7 andContext:(id)arg8;

@end

@interface DVTTextAnnotation : DVTAnnotation
{
    NSMutableArray *_layoutManagers;
    NSMutableDictionary *_themesByState;
    id <DVTTextAnnotationDelegate> _delegate;
    DVTTextDocumentLocation *_location;
    NSArray *_secondaryLocations;
    DVTMutableRangeArray *_highlightedRanges;
    struct _NSRange _paragraphRange;
    unsigned long long _paragraphHash;
    NSImage *_sidebarMarkerImage;
    double _sidebarMarkerVerticalPadding;
    double _sidebarMarkerHorizontalOffset;
    double _sidebarMarkerOpacity;
    unsigned long long _highlightSidebarStyle;
    unsigned long long _severity;
    struct {
        unsigned int sidebarMarkerAlignment:4;
        unsigned int wantsDisplayOverLineNumber:1;
        unsigned int wantsReplaceLineNumber:1;
        unsigned int wantsInvertedLineNumber:1;
        unsigned int shouldDrawTemplateInverted:1;
        unsigned int lineHighlightVisible:1;
        unsigned int highlightedRangesVisible:1;
        unsigned int userDraggable:1;
        unsigned int userRemovable:1;
        unsigned int isParagraphEdited:1;
        unsigned int usesFirstLineFragmentMode:1;
    } _taFlags;
    BOOL _lazyInvalidation;
    int _annotationStackPolicy;
    unsigned long long _scrollbarMarkerType;
}

+ (void)drawLineHighlightForAnnotations:(id)arg1 highlightRanges:(BOOL)arg2 textView:(id)arg3 getParaRectBlock:(CDUnknownBlockType)arg4;
+ (void)sortAndFilterSupressedAnnotationsInArray:(id)arg1 usingComparisonSelector:(SEL)arg2;
+ (id)logAspect;
+ (void)initialize;
@property BOOL lazyInvalidation; // @synthesize lazyInvalidation=_lazyInvalidation;
@property unsigned long long scrollbarMarkerType; // @synthesize scrollbarMarkerType=_scrollbarMarkerType;
@property(nonatomic) unsigned long long highlightSidebarStyle; // @synthesize highlightSidebarStyle=_highlightSidebarStyle;
@property(nonatomic) double sidebarMarkerOpacity; // @synthesize sidebarMarkerOpacity=_sidebarMarkerOpacity;
@property(nonatomic) double sidebarMarkerHorizontalOffset; // @synthesize sidebarMarkerHorizontalOffset=_sidebarMarkerHorizontalOffset;
@property double sidebarMarkerVerticalPadding; // @synthesize sidebarMarkerVerticalPadding=_sidebarMarkerVerticalPadding;
@property(retain, nonatomic) NSImage *sidebarMarkerImage; // @synthesize sidebarMarkerImage=_sidebarMarkerImage;
@property(retain) id <DVTTextAnnotationDelegate> delegate; // @synthesize delegate=_delegate;
@property int annotationStackPolicy; // @synthesize annotationStackPolicy=_annotationStackPolicy;
@property unsigned long long severity; // @synthesize severity=_severity;
@property(readonly) struct _NSRange paragraphRange; // @synthesize paragraphRange=_paragraphRange;
@property(retain, nonatomic) DVTTextDocumentLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)annotationDisplayDescription;
- (BOOL)isFocusedInTextView:(id)arg1;
- (void)adjustParagraphIndexBy:(long long)arg1 lengthBy:(long long)arg2;
- (id)description;
- (void)fontAndColorThemeChanged:(id)arg1;
- (void)invalidateDisplayAndLayoutIfNeeded:(BOOL)arg1;
- (void)setNeedsInvalidate;
- (long long)comparePrecedenceAndLayering:(id)arg1;
- (struct CGRect)sidebarMarkerRectForFirstLineRect:(struct CGRect)arg1;
- (id)currentStateInTextView:(id)arg1;
- (void)drawHighlightedRangesInRect:(struct CGRect)arg1 textView:(id)arg2;
- (BOOL)drawsHighlightedRanges;
- (void)drawLineHighlightInRect:(struct CGRect)arg1 textView:(id)arg2;
- (BOOL)drawsLineHighlight;
- (void)drawSidebarMarkerIconInRect:(struct CGRect)arg1 textView:(id)arg2;
- (void)annotationWillDrawInTextView:(id)arg1;
@property(getter=isUserRemovable) BOOL userRemovable;
@property(getter=isUserDraggable) BOOL userDraggable;
- (void)synchronizeHighlightedRangesWithLocationsForTextStorage:(id)arg1;
- (void)removeAllHighlightedRanges;
- (void)removeHighlightedRange:(struct _NSRange)arg1;
- (void)removeHighlightedRangeAtIndex:(long long)arg1;
- (void)insertHighlightedRange:(struct _NSRange)arg1 atIndex:(long long)arg2;
- (void)addHighlightedRange:(struct _NSRange)arg1;
- (void)removeObjectFromHighlightedRangesAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inHighlightedRangesAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *highlightedRanges;
@property(getter=isHighlightedRangesVisible) BOOL highlightedRangesVisible;
- (id)_highlightedRanges;
@property(getter=isLineHighlightVisible) BOOL lineHighlightVisible;
@property(readonly) DVTSourceLandmarkItem *enclosingLandmarkItem;
@property BOOL shouldDrawTemplateInverted;
@property BOOL wantsInvertedLineNumber;
@property BOOL wantsReplaceLineNumber;
@property BOOL wantsDisplayOverLineNumber;
- (void)setSidebarMarkerTopMargin:(double)arg1;
@property unsigned long long sidebarMarkerAlignment;
- (void)setVisible:(BOOL)arg1;
- (void)setTheme:(id)arg1 forState:(id)arg2;
- (id)themeForState:(id)arg1;
- (void)resolveLocationIfNeededForLayoutManager:(id)arg1;
@property(readonly) BOOL wantsMergeAnnotations;
@property BOOL usesFirstLineFragmentMode;
@property(getter=isParagraphEdited) BOOL paragraphEdited;
@property(copy) NSArray *secondaryLocations;
- (void)removeLayoutManager:(id)arg1;
- (void)addLayoutManager:(id)arg1;
@property(readonly) NSArray *layoutManagers;
- (void)dealloc;
- (id)init;

@end

@interface DVTTextAnnotationAccessibilityProxyItem : NSObject
{
    DVTTextSidebarView *_parent;
    DVTTextAnnotation *_annotation;
}

+ (id)textAnnotationProxyItemWithAnnotation:(id)arg1 parent:(id)arg2;
@property(readonly) DVTTextSidebarView *parent; // @synthesize parent=_parent;
@property(readonly) DVTTextAnnotation *annotation; // @synthesize annotation=_annotation;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (struct CGRect)_getAnnotationBounds:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)initWithAnnotation:(id)arg1 parent:(id)arg2;

@end

@interface DVTStepperTextFieldCell : NSTextFieldCell
{
    DVTStepperTextFieldFormatter *_stepperFieldFormatter;
    NSButtonCell *_minusButtonCell;
    NSButtonCell *_plusButtonCell;
}

+ (id)_textFieldPathForFrame:(struct CGRect)arg1;
@property(readonly) NSCell *plusButtonCell; // @synthesize plusButtonCell=_plusButtonCell;
@property(readonly) NSCell *minusButtonCell; // @synthesize minusButtonCell=_minusButtonCell;
- (void).cxx_destruct;
- (struct CGRect)_accessibilityTextFieldCellBounds;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)_plusButtonCellAttribute;
- (id)_minusButtonCellAttribute;
- (id)accessibilityChildrenAttribute;
- (void)_trackButton:(id)arg1 forEvent:(id)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawBackgroundForFlatStyleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)plusButtonRectForBounds:(struct CGRect)arg1;
- (struct CGRect)minusButtonRectForBounds:(struct CGRect)arg1;
@property(retain) NSString *suffix;
@property(retain) NSString *prefix;
- (void)setFormatter:(id)arg1;
@property(readonly) DVTStepperTextFieldFormatter *stepperFieldFormatter;
- (void)setEnabled:(BOOL)arg1;
- (id)_createButtonCell;
- (void)_dvtStepperFieldCell_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface DVTCodeLibraryDetailController : DVTLibraryDetailController <DVTSourceTextViewDelegate, DVTTextStorageDelegate>
{
    DVTSourceTextView *_sourceTextView;
    DVTTextStorage *_sourceTextStorage;
    struct {
        unsigned int delegateImplementsLanguageForCodeDetailController:1;
        unsigned int delegateImplementsSourceLanguageServiceContextForCodeDetailController:1;
        unsigned int _reserved:7;
    } _flags;
    NSDictionary *_sourceLanguageServiceContext;
}

@property(retain, nonatomic) NSDictionary *sourceLanguageServiceContext; // @synthesize sourceLanguageServiceContext=_sourceLanguageServiceContext;
@property(readonly) DVTTextStorage *sourceTextStorage; // @synthesize sourceTextStorage=_sourceTextStorage;
@property(readonly) DVTSourceTextView *sourceTextView; // @synthesize sourceTextView=_sourceTextView;
- (void).cxx_destruct;
- (void)sizeToFitSuggestedSize:(struct CGSize)arg1 forAsset:(id)arg2;
- (void)refreshWithAsset:(id)arg1 representedObject:(id)arg2;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)setDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTVerticalCapacityViewController : DVTCapacityViewController
{
}

@end

@interface DVTVerticalCapacityView : DVTCapacityView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTGroupedTileView : DVTTileView
{
    long long _groupDragTargetIndex;
    long long _groupLocalDragTargetIndex;
    NSArray *_groupCounts;
    NSArray *_groups;
    DVTGroupedAssetHighlightView *_overlayView;
    BOOL _dragInsertAfterInitialTarget;
    BOOL _dropOnGroup;
    BOOL _showingHeaders;
}

+ (BOOL)eventWouldToggleSelection:(id)arg1;
+ (BOOL)eventWouldExtendSelection:(id)arg1;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1 inDecoratedView:(id)arg2;
- (id)dropHighlightColor;
- (void)copy:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)insertNewline:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldTrackSelectionWithMouseDownEvent:(id)arg1;
- (void)selectItemWithEvent:(id)arg1;
- (void)dropGroup:(id *)arg1 andItemInsertionIndex:(long long *)arg2 atPoint:(struct CGPoint)arg3;
- (void)dropGroup:(id *)arg1 andItemInsertionIndex:(long long *)arg2 after:(char *)arg3 atPoint:(struct CGPoint)arg4;
- (unsigned long long)indexOfGroupAtPoint:(struct CGPoint)arg1;
- (id)contentObjectAtPoint:(struct CGPoint)arg1;
- (id)tileViewItemAtPoint:(struct CGPoint)arg1;
- (struct CGRect)headerRectForGroupWithIndex:(long long)arg1;
- (id)headerRects;
- (struct CGRect)titleRectForHeaderRect:(struct CGRect)arg1;
- (struct CGRect)titleBackgroundRectForHeaderRect:(struct CGRect)arg1;
- (id)_mutableIndexSetInAppliedGridForRect:(struct CGRect)arg1;
- (unsigned long long)_indexInAppliedGridForPoint:(struct CGPoint)arg1;
- (void)getGlobalIndex:(long long *)arg1 groupIndex:(long long *)arg2 andLocalIndex:(long long *)arg3 atPoint:(struct CGPoint)arg4;
- (void)_getRow:(unsigned long long *)arg1 column:(unsigned long long *)arg2 forPoint:(struct CGPoint)arg3;
- (void)computeTargetGridGeometry;
- (struct CGSize)recalculateTargetFrameSize;
- (id)attributedTitleForGroup:(id)arg1;
- (struct CGRect)rectForTileViewItemAtIndex:(long long)arg1;
- (struct CGRect)_frameRectForIndexInGrid:(unsigned long long)arg1 gridSize:(struct CGSize)arg2;
- (BOOL)isGroupLocalIndex:(long long)arg1 theFirstItemInAnyRowInGroupWithIndex:(long long)arg2;
- (BOOL)isGroupLocalIndex:(long long)arg1 theLastItemInAnyRowInGroupWithIndex:(long long)arg2;
- (long long)appliedColumnsInRow:(long long)arg1 ofGroup:(long long)arg2;
- (long long)appliedRowsInGroupWithIndex:(long long)arg1;
- (long long)targetRowsInGroupWithIndex:(long long)arg1;
- (double)headerHeight;
- (double)headerPostpadHeight;
- (double)headerPrepadHeight;
- (double)headerTitleHeight;
- (long long)numberOfColumns;
- (long long)localIndexForGlobalIndex:(unsigned long long)arg1;
- (long long)groupIndexForGlobalIndex:(unsigned long long)arg1;
- (long long)globalIndexForLocalIndex:(long long)arg1 inGroupWithIndex:(long long)arg2;
- (void)setDragInsertionPoint:(struct CGPoint)arg1;
- (void)setDropGroup:(id)arg1;
- (void)setDropGroup:(id)arg1 dropChildIndex:(long long)arg2 after:(BOOL)arg3 on:(BOOL)arg4;
- (void)clearDragInsertionPoint;
- (struct CGRect)dragInsertionRect;
- (id)dragInsertionPath;
- (id)bezierPathWithLineFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 andCapRadius:(double)arg3;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)orderOutOverlayView;
- (void)orderInOverlayView;
- (id)overlayView;
- (id)draggedImageState:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (id)newLayoutItemForRepresentedObject:(id)arg1;
- (void)setSelectedContentObjects:(id)arg1;
- (id)indexesForContentObjects:(id)arg1;
- (void)setContent:(id)arg1;
@property(copy) DVTMutableOrderedDictionary *groups;
@property(getter=isShowingHeaders) BOOL showingHeaders;
@property(retain) id <DVTGroupedTileViewDelegate> delegate;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTGroupedAssetHighlightView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTScopeBarView : DVTBorderedView
{
    DVTMapTable *_viewsToLeftSpacing;
}

+ (id)createButtonSeparator;
+ (id)createButton;
- (void).cxx_destruct;
- (void)verticallyCenterView:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)removeView:(id)arg1;
- (id)viewsOnLeft;
- (void)addViewOnRight:(id)arg1 verticalAlignment:(int)arg2 withLeftPadding:(double)arg3;
- (void)addViewOnRight:(id)arg1 verticalAlignment:(int)arg2;
- (void)addViewOnRight:(id)arg1;
- (void)addViewOnLeft:(id)arg1 verticalAlignment:(int)arg2 withLeftPadding:(double)arg3;
- (void)addViewOnLeft:(id)arg1 verticalAlignment:(int)arg2;
- (void)addViewOnLeft:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTTextCompletionTableView : NSTableView
{
}

- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (id)window;

@end

@interface DVTLineGraphLayer : DVTAbstractGraphLayer
{
    id <DVTLineGraphLayerDataSource> _lineDataProvider;
    DVTNotificationToken *_layerStyleToken;
    unsigned long long _indexOfSelectedPoint;
    BOOL _avoidDrawingPointsAtSameX;
    DVTLineGraphLayerStyle *_lineGraphLayerStyle;
}

@property BOOL avoidDrawingPointsAtSameX; // @synthesize avoidDrawingPointsAtSameX=_avoidDrawingPointsAtSameX;
@property(readonly) DVTLineGraphLayerStyle *lineGraphLayerStyle; // @synthesize lineGraphLayerStyle=_lineGraphLayerStyle;
- (void).cxx_destruct;
- (void)_updateSelectionDetailsUsingSelectedPoint:(struct CGPoint)arg1;
- (void)clearSelection;
- (BOOL)selectNext;
- (BOOL)selectPrevious;
- (void)selectDataAtIndex:(unsigned long long)arg1;
- (BOOL)selectDataAtPoint:(struct CGPoint)arg1;
- (void)drawLayerWithVisibleBounds:(struct _DVTGraphBounds)arg1;
- (void)dealloc;
- (id)initWithGraph:(id)arg1 dataSource:(id)arg2;

@end

@interface DVTCapacityView : NSView
{
    double _maxCapacity;
    NSArray *_segments;
}

@property(copy, nonatomic) NSArray *segments; // @synthesize segments=_segments;
@property(nonatomic) double maxCapacity; // @synthesize maxCapacity=_maxCapacity;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DVTTextViewWithPlaceholder : NSTextView
{
    NSString *_centeredPlaceholderString;
    BOOL _didDrawPlaceholder;
}

@property(copy) NSString *centeredPlaceholderString; // @synthesize centeredPlaceholderString=_centeredPlaceholderString;
- (void).cxx_destruct;
- (void)didChangeText;
- (void)drawViewBackgroundInRect:(struct CGRect)arg1;

@end

@interface DVTCapacityViewController : DVTViewController
{
    NSMutableArray *_segmentValueObservers;
    NSMutableArray *_swatchValueLabels;
    double _maxCapacity;
    DVTCapacitySegment *_unusedCapacitySegment;
    NSArray *_segments;
    NSFormatter *_valueFormatter;
    DVTCapacityView *_capacityView;
    NSView *_leftLabelContainer;
    NSView *_rightLabelContainer;
}

@property __weak NSView *rightLabelContainer; // @synthesize rightLabelContainer=_rightLabelContainer;
@property __weak NSView *leftLabelContainer; // @synthesize leftLabelContainer=_leftLabelContainer;
@property __weak DVTCapacityView *capacityView; // @synthesize capacityView=_capacityView;
@property(retain) NSFormatter *valueFormatter; // @synthesize valueFormatter=_valueFormatter;
@property(copy, nonatomic) NSArray *segments; // @synthesize segments=_segments;
@property(retain, nonatomic) DVTCapacitySegment *unusedCapacitySegment; // @synthesize unusedCapacitySegment=_unusedCapacitySegment;
@property(nonatomic) double maxCapacity; // @synthesize maxCapacity=_maxCapacity;
- (void).cxx_destruct;
- (void)setUnusedCapacitySegmentLabel:(id)arg1;
- (id)createSwatchLabelForSegment:(id)arg1;
- (void)_recreateAndAddLabelsForSegments;
- (void)_addSegments:(id)arg1 startIndex:(long long)arg2 endIndex:(long long)arg3 toLabelContainer:(id)arg4 setWidth:(BOOL)arg5 determineHeight:(BOOL)arg6;
- (void)resetAllSwatchLabels;
- (void)_handleSegmentValueChanged;
- (void)_createSegmentValueObservers;
- (void)_setCapacityViewSegments:(id)arg1;
- (void)_cancelSegmentValueObservers;
- (void)primitiveInvalidate;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface DVTInfoPlistValueCell : NSTextFieldCell
{
    id <DVTInfoPlistValueCellDelegate> _delegate;
    NSMutableArray *_tokens;
}

@property(copy, nonatomic) NSArray *_tokens; // @synthesize _tokens;
@property(retain) id <DVTInfoPlistValueCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (id)_tokenContainingCharacterLocation:(unsigned long long)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)setObjectValue:(id)arg1;
@property(copy) NSString *unexpandedStringValue;

@end

@interface _DVTInfoPlistValueCellToken : NSObject
{
    NSString *_displayString;
    NSString *_representedString;
    BOOL _editable;
    struct _NSRange _range;
}

@property(readonly, getter=isEditable) BOOL editable; // @synthesize editable=_editable;
@property struct _NSRange range; // @synthesize range=_range;
@property(copy) NSString *displayString; // @synthesize displayString=_displayString;
@property(copy) NSString *representedString; // @synthesize representedString=_representedString;
- (void).cxx_destruct;
- (id)description;
- (id)initWithRepresentedString:(id)arg1 displayString:(id)arg2 range:(struct _NSRange)arg3 editable:(BOOL)arg4;

@end

@interface DVTLinkView : NSView
{
    id <DVTLinkViewDelegate> _delegate;
    NSView *_contentView;
}

@property(retain, nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) __weak id <DVTLinkViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)mouseUp:(id)arg1;
- (void)resetCursorRects;

@end

@interface DVTTextCompletionKeywordsStrategy : DVTTextCompletionStrategy
{
}

- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 highlyLikelyCompletionItems:(id *)arg3 areDefinitive:(char *)arg4;
- (void)prepareForDocumentLocation:(id)arg1 context:(id)arg2;
- (id)_cachedKeywordCompletionsForLangSpecId:(id)arg1;
- (id)_keywordCompletionsForLangSpecId:(id)arg1;
- (id)_stringCompletionItemsForStringArray:(id)arg1;

@end

@interface DVTDynamicTableRowView : DVTBorderedView <DVTDynamicTableRowViewSupport, DVTInvalidation>
{
    DVTComparisonSplitView *_splitView;
    NSView *_leftContentView;
    NSView *_rightContentView;
    NSViewAnimation *_viewAnimation;
    CDUnknownBlockType _populationBlock;
    NSObject<OS_dispatch_queue> *_popQ;
    BOOL _removed;
}

+ (void)initialize;
+ (id)dynamicTableRowViewUsingSplitViewStyle:(int)arg1;
+ (id)keyPathsForValuesAffectingSelected;
@property(getter=isRemoved) BOOL removed; // @synthesize removed=_removed;
@property(retain) NSObject<OS_dispatch_queue> *popQ; // @synthesize popQ=_popQ;
@property(copy) CDUnknownBlockType populationBlock; // @synthesize populationBlock=_populationBlock;
@property(retain) NSViewAnimation *viewAnimation; // @synthesize viewAnimation=_viewAnimation;
@property(retain) NSView *rightContentView; // @synthesize rightContentView=_rightContentView;
@property(retain) NSView *leftContentView; // @synthesize leftContentView=_leftContentView;
@property(retain) DVTComparisonSplitView *splitView; // @synthesize splitView=_splitView;
- (void).cxx_destruct;
- (void)populateLeftContentSubview:(id)arg1 rightContentSubview:(id)arg2 withAnimation:(BOOL)arg3;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)showPlaceholderWithPopulationBlock:(CDUnknownBlockType)arg1 usingQueue:(id)arg2;
- (void)primitiveInvalidate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTLibraryDetailPopUpController : DVTHUDPopUpController
{
    NSButton *_editButton;
}

- (void).cxx_destruct;
- (void)addSubviews;
@property(readonly) NSButton *editButton; // @synthesize editButton=_editButton;

@end

@interface DVTTextLayer : CATextLayer
{
}

- (void)drawInContext:(struct CGContext *)arg1;

@end

@interface DVTCompletingTextView : DVTTextView <DVTLayoutManagerDelegate>
{
    DVTTextCompletionController *_completionController;
    DVTTextCompletionDataSource *_completionsDataSource;
    NSColor *_secondarySelectedTextBackgroundColor;
    double _accessoryAnnotationWidth;
    unsigned long long _modifierFlagsAtLastSingleMouseDown;
    BOOL _tabSelectsNextPlaceholder;
}

+ (id)readableTextPasteboardTypes;
+ (long long)scrollerKnobStyleForBackgroundColor:(id)arg1;
+ (id)_operatorChars;
+ (id)identifierChars;
+ (id)_identifierCharsForImportStatements;
+ (BOOL)appSupportsActionMonitoring;
@property(copy, nonatomic) NSColor *secondarySelectedTextBackgroundColor; // @synthesize secondarySelectedTextBackgroundColor=_secondarySelectedTextBackgroundColor;
@property BOOL tabSelectsNextPlaceholder; // @synthesize tabSelectsNextPlaceholder=_tabSelectsNextPlaceholder;
@property(readonly) DVTTextCompletionController *completionController; // @synthesize completionController=_completionController;
@property unsigned long long modifierFlagsAtLastSingleMouseDown; // @synthesize modifierFlagsAtLastSingleMouseDown=_modifierFlagsAtLastSingleMouseDown;
@property double accessoryAnnotationWidth; // @synthesize accessoryAnnotationWidth=_accessoryAnnotationWidth;
- (void).cxx_destruct;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)becomeMainWindow;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_invalidateDisplayForViewStatusChange;
- (void)setBackgroundColor:(id)arg1;
- (void)updateScrollerKnobStyle;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (id)attributedStringForCompletionPlaceholderCell:(id)arg1 atCharacterIndex:(unsigned long long)arg2 withDefaultAttributes:(id)arg3;
- (void)doubleClickedOnCell:(id)arg1 inRect:(struct CGRect)arg2 atIndexInToken:(unsigned long long)arg3;
- (void)clickedOnCell:(id)arg1 inRect:(struct CGRect)arg2 atIndexInToken:(unsigned long long)arg3;
- (BOOL)isThereOnlyATokenAttachmentAtUserTextChange;
- (void)replaceSelectedTokenWithTokenText;
- (void)useSelectionForFind:(id)arg1;
- (struct _NSRange)_characterRangeForRect:(struct CGRect)arg1;
- (struct _NSRange)clipViewBoundsCharacterRange;
- (struct _NSRange)visibleCharacterRange;
- (void)mouseDown:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(BOOL)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (void)_drawOverlayRect:(struct CGRect)arg1;
- (void)setSelectedRange:(struct _NSRange)arg1;
- (void)setSelectedRanges:(id)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (void)_replaceFoldWithContents:(id)arg1;
- (void)textStorage:(id)arg1 didEndEditRange:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)textStorage:(id)arg1 willEndEditRange:(struct _NSRange)arg2 changeInLength:(long long)arg3;
@property(readonly) DVTTextStorage *textStorage;
@property(readonly) DVTLayoutManager *layoutManager;
- (void)didInsertCompletionTextAtRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForRange:(struct _NSRange)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)paste:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)removeFromSuperview;
- (void)_mouseInside:(id)arg1;
- (void)debugDumpCompletionState:(id)arg1;
- (void)selectPreviousPlaceholder:(id)arg1;
- (void)selectNextPlaceholder:(id)arg1;
- (BOOL)handleInsertBackTab;
- (BOOL)handleInsertTab;
- (id)menuForEvent:(id)arg1;
- (BOOL)handleCancel;
- (void)previousCompletion:(id)arg1;
- (void)nextCompletion:(id)arg1;
- (void)complete:(id)arg1;
- (BOOL)shouldChangeTextInRanges:(id)arg1 replacementStrings:(id)arg2;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)foldingLayoutManagerFoldsChanged:(id)arg1;
- (id)layoutManager:(id)arg1 shouldUseTextBackgroundColor:(id)arg2 rectArray:(struct CGRect *)arg3 count:(unsigned long long)arg4 forCharacterRange:(struct _NSRange)arg5;
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)showMatchingBraceAtLocation:(id)arg1;
- (void)autoHighlightMatchingBracketAtLocationIfNecessary:(unsigned long long)arg1;
- (BOOL)shouldTryToCompleteOpeningBracketForStringOrAttributedStringToInsert:(id)arg1;
- (BOOL)shouldTryToCompleteOpeningBracketForStringToInsert:(id)arg1;
- (BOOL)shouldTryToCompleteOpeningBracketForStringToInsert:(id)arg1 usingLanguage:(id)arg2;
- (BOOL)_moveToNextPlaceholderFromCharacterIndex:(unsigned long long)arg1 forward:(BOOL)arg2 onlyIfNearby:(BOOL)arg3;
- (struct _NSRange)_findString:(id)arg1 inString:(id)arg2 fromRange:(struct _NSRange)arg3 limitRange:(struct _NSRange)arg4 forward:(BOOL)arg5 wrap:(BOOL)arg6;
- (struct _NSRange)rangeOfPlaceholderFromCharacterIndex:(unsigned long long)arg1 forward:(BOOL)arg2 wrap:(BOOL)arg3 limit:(unsigned long long)arg4;
- (BOOL)selectFirstPlaceholderInCharacterRange:(struct _NSRange)arg1;
- (BOOL)handleSelectPreviousPlaceholder;
- (BOOL)handleSelectNextPlaceholder;
- (id)ghostComplementTextColor;
- (BOOL)shouldAutoCompleteAtLocation:(unsigned long long)arg1;
- (BOOL)shouldSuppressTextCompletion;
@property(readonly, copy) NSCharacterSet *autoCompleteChars;
@property(readonly) double autoCompletionDelay;
- (id)contextForCompletionStrategiesAtWordStartLocation:(unsigned long long)arg1;
@property(readonly) DVTTextCompletionDataSource *completionsDataSource;
- (struct _NSRange)wordRangeAtLocation:(unsigned long long)arg1;
@property(readonly) DVTSourceCodeLanguage *language;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (void)_dvtCommonInit;
- (id)currentTheme;
@property(readonly) DVTFoldingManager *foldingManager;
@property(readonly) DVTFoldingLayoutManager *foldingLayoutManager;
- (BOOL)removeMenusNotInWhiteList:(id)arg1 fromMenu:(id)arg2 removeSeparators:(BOOL)arg3;
- (void)dvt_shouldDeallocate;
- (id)cell;
- (id)selectedCell;
- (id)accessibilityAttributeValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(retain) id <DVTCompletingTextViewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTChooserView : DVTBorderedView
{
    NSMatrix *_buttonMatrix;
    NSIndexSet *_selectionIndexes;
    NSMutableArray *_choices;
    id <DVTChooserViewDelegate> _delegate;
    int _justification;
    int _gradientStyle;
    BOOL _allowsMultipleSelection;
    BOOL _allowsEmptySelection;
    BOOL _choicesFillWidth;
    NSNumber *_explicitImageScaling;
}

+ (id)keyPathsForValuesAffectingSelectedChoices;
+ (id)keyPathsForValuesAffectingSelectedChoice;
+ (id)keyPathsForValuesAffectingSelectedIndex;
+ (struct CGSize)defaultMinimumButtonSize;
+ (struct CGSize)defaultButtonSize;
+ (void)initialize;
@property(copy, nonatomic) NSNumber *explicitImageScaling; // @synthesize explicitImageScaling=_explicitImageScaling;
@property(retain) id <DVTChooserViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
@property(nonatomic) BOOL choicesFillWidth; // @synthesize choicesFillWidth=_choicesFillWidth;
@property(nonatomic) BOOL allowsEmptySelection; // @synthesize allowsEmptySelection=_allowsEmptySelection;
@property(nonatomic) BOOL allowsMultipleSelection; // @synthesize allowsMultipleSelection=_allowsMultipleSelection;
@property(nonatomic) int justification; // @synthesize justification=_justification;
@property(retain) NSMatrix *_buttonMatrix; // @synthesize _buttonMatrix;
- (void).cxx_destruct;
@property(readonly) NSArray *grabRects;
@property(readonly) struct CGRect grabRect;
@property(readonly, copy) NSMutableArray *mutableChoices;
- (void)updateBoundContent;
@property(copy) NSArray *choices;
- (void)updateBoundSelectedObjects;
- (void)updateBoundSelectionIndexes;
@property(copy) NSArray *selectedChoices;
@property(retain) DVTChoice *selectedChoice;
@property unsigned long long selectedIndex;
@property(copy) NSIndexSet *selectionIndexes; // @synthesize selectionIndexes=_selectionIndexes;
- (void)setBackgroundColor:(id)arg1;
- (void)setBorderSides:(int)arg1;
- (void)layoutTopDown;
- (void)_chooserButtonClicked:(id)arg1;
- (void)drawBorderInRect:(struct CGRect)arg1;
- (struct CGRect)_exposedRectLeft;
- (struct CGRect)_exposedRect;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)dvtExtraBindings;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;
- (void)_configureButtonMatrix;

@end

@interface DVTChoice : NSObject
{
    NSString *_title;
    NSString *_toolTip;
    NSImage *_image;
    NSString *_identifier;
    id _representedObject;
    BOOL _enabled;
    NSImage *_alternateImage;
}

@property(retain) NSImage *alternateImage; // @synthesize alternateImage=_alternateImage;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly) id representedObject; // @synthesize representedObject=_representedObject;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSImage *image; // @synthesize image=_image;
@property(readonly, copy) NSString *toolTip; // @synthesize toolTip=_toolTip;
@property(readonly, copy) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTitle:(id)arg1 toolTip:(id)arg2 image:(id)arg3 representedObject:(id)arg4;

@end

@interface DVTLibrary : NSObject <DVTInvalidation>
{
    NSMutableDictionary *_librarySourceGroupsByLibrarySourceID;
    NSMutableArray *_orderedLibrarySourceIdentifiers;
    NSMutableDictionary *_identifiedAssets;
    NSString *_identifier;
    DVTExtension *_representedExtension;
    NSArray *_detailControllerIdentifiers;
    CDUnknownBlockType _groupComparator;
    DVTLibraryController *_libraryController;
    DVTAbstractLibraryGroup *_rootGroup;
    DVTAbstractLibraryGroup *_everythingGroup;
}

+ (void)initialize;
@property(readonly) DVTAbstractLibraryGroup *everythingGroup; // @synthesize everythingGroup=_everythingGroup;
@property(readonly) DVTAbstractLibraryGroup *rootGroup; // @synthesize rootGroup=_rootGroup;
@property(readonly) NSDictionary *identifiedAssets; // @synthesize identifiedAssets=_identifiedAssets;
@property(retain) DVTLibraryController *libraryController; // @synthesize libraryController=_libraryController;
@property(retain, nonatomic) NSArray *orderedLibrarySourceIdentifiers; // @synthesize orderedLibrarySourceIdentifiers=_orderedLibrarySourceIdentifiers;
@property(copy, nonatomic) CDUnknownBlockType groupComparator; // @synthesize groupComparator=_groupComparator;
@property(copy, nonatomic) NSArray *detailControllerIdentifiers; // @synthesize detailControllerIdentifiers=_detailControllerIdentifiers;
@property(readonly) DVTExtension *representedExtension; // @synthesize representedExtension=_representedExtension;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)removeAllAssets;
- (void)removeAsset:(id)arg1;
- (void)addAsset:(id)arg1 toLibrarySourceWithIdentifier:(id)arg2 subpath:(id)arg3;
- (id)assetWithIdentifier:(id)arg1;
- (BOOL)containsAssetWithIdentifier:(id)arg1;
- (id)assets;
- (id)groupWithDisplayPath:(id)arg1 fromGroup:(id)arg2 create:(BOOL)arg3;
- (void)setImage:(id)arg1 forLibrarySourceWithIdentifier:(id)arg2 subpath:(id)arg3;
- (void)setTitle:(id)arg1 forLibrarySourceWithIdentifier:(id)arg2;
- (void)removeSubpath:(id)arg1 fromLibrarySourceWithIdentifier:(id)arg2;
- (void)removeLibrarySourceWithIdentifier:(id)arg1;
- (void)addLibrarySourceWithIdentifier:(id)arg1 andTitle:(id)arg2;
- (void)insertLibrarySourceWithIdentifier:(id)arg1 andTitle:(id)arg2 atIndex:(long long)arg3;
- (BOOL)containsLibrarySourceWithIdentifier:(id)arg1;
- (id)libraryGroupForLibrarySourceWithIdentifier:(id)arg1;
@property(copy) NSString *title;
@property(retain) NSImage *image;
- (void)loadDetailControllerIdentifiersFromExtension;
- (void)loadAssetsFromExtension;
- (id)effectiveSubpathsForAsset:(id)arg1;
- (id)effectiveLibrarySourceIdentifierForAsset:(id)arg1;
- (void)loadLibrarySourcesFromExtension;
- (id)assetExtensionsForLibrary;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)primitiveInvalidate;
- (id)initWithExtension:(id)arg1 andLibraryController:(id)arg2;
- (id)initWithIdentifier:(id)arg1 andTitle:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTFindBarTextFieldCell : NSTextFieldCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface DVTOutlineView : NSOutlineView <DVTProgressIndicatorProvidingView>
{
    NSTextField *_emptyContentLabel;
    NSTextField *_emptyContentSublabel;
    DVTMapTable *_progressIndicatorsByItem;
    long long _maxAlternatingRowBackgroundLevelInGroupRow;
    id <DVTCancellable> _mouseHoverDelayToken;
    id <DVTCancellable> _mouseMovedDelayToken;
    NSTrackingArea *_mouseHoverTrackingArea;
    NSTextFieldCell *_dataCellForGroupRow;
    NSString *_delegateClassName;
    int _dvt_groupRowStyle;
    int _indentationStyle;
    struct {
        unsigned int breaksCyclicSortDescriptors:1;
        unsigned int delegateRespondsToShouldMouseHover:1;
        unsigned int hasSetCustomNonLocalDraggingSourceOperationMask:1;
        unsigned int hasSetCustomLocalDraggingSourceOperationMask:1;
        unsigned int revealsOutlineCellUnderHoveredMouseAfterDelay:1;
        unsigned int allowsSizingShorterThanClipView:1;
        unsigned int reserved:2;
    } _dvtOVFlags;
    BOOL _groupRowBreaksAlternatingRowBackgroundCycle;
    unsigned long long _gridLineStyleBeforeEmptyContentStringShown;
    BOOL _skipGridLinesOnLastRow;
    BOOL _skipGridLinesOnCollapsedGroupRows;
    BOOL _drawsGridLinesForEmptyContent;
    int _emptyContentStringStyle;
    NSString *_emptyContentString;
    NSString *_emptyContentSubtitle;
    NSIndexSet *_draggedRows;
    double _gridLineInset;
    NSEvent *_event;
    long long _rowUnderHoveredMouse;
}

@property long long rowUnderHoveredMouse; // @synthesize rowUnderHoveredMouse=_rowUnderHoveredMouse;
@property(retain) NSEvent *event; // @synthesize event=_event;
@property double gridLineInset; // @synthesize gridLineInset=_gridLineInset;
@property BOOL drawsGridLinesForEmptyContent; // @synthesize drawsGridLinesForEmptyContent=_drawsGridLinesForEmptyContent;
@property BOOL skipGridLinesOnCollapsedGroupRows; // @synthesize skipGridLinesOnCollapsedGroupRows=_skipGridLinesOnCollapsedGroupRows;
@property BOOL skipGridLinesOnLastRow; // @synthesize skipGridLinesOnLastRow=_skipGridLinesOnLastRow;
@property int indentationStyle; // @synthesize indentationStyle=_indentationStyle;
@property int dvt_groupRowStyle; // @synthesize dvt_groupRowStyle=_dvt_groupRowStyle;
@property(nonatomic) long long maxAlternatingRowBackgroundLevelInGroupRow; // @synthesize maxAlternatingRowBackgroundLevelInGroupRow=_maxAlternatingRowBackgroundLevelInGroupRow;
@property(nonatomic) BOOL groupRowBreaksAlternatingRowBackgroundCycle; // @synthesize groupRowBreaksAlternatingRowBackgroundCycle=_groupRowBreaksAlternatingRowBackgroundCycle;
@property(copy) NSIndexSet *draggedRows; // @synthesize draggedRows=_draggedRows;
@property int emptyContentStringStyle; // @synthesize emptyContentStringStyle=_emptyContentStringStyle;
@property(copy, nonatomic) NSString *emptyContentSubtitle; // @synthesize emptyContentSubtitle=_emptyContentSubtitle;
@property(copy, nonatomic) NSString *emptyContentString; // @synthesize emptyContentString=_emptyContentString;
- (void).cxx_destruct;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)_processMouseMovedEvent:(id)arg1;
- (void)_updateDisplayOfItemUnderMouse;
- (void)_clearMouseActivityDelayTokens;
- (id)itemUnderHoveredMouse;
- (void)setRowUnderHoveredMouseAndMarkForRedisplay:(long long)arg1;
- (void)updateTrackingAreas;
@property BOOL revealsOutlineCellUnderHoveredMouseAfterDelay;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)keyDown:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)_cleanupWork;
- (void)viewWillDraw;
- (BOOL)_shouldRemoveProgressIndicator:(id)arg1 forItem:(id)arg2 andVisibleRect:(struct CGRect)arg3;
- (void)_showEmptyContentSublabel;
- (void)_hideEmptyContentSublabel;
- (void)_showEmptyContentLabel;
- (void)_hideEmptyContentLabel;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (Class)groupRowCellClassForDataCell:(id)arg1;
- (id)_dataCellForGroupRowWithClass:(Class)arg1;
- (id)groupRowFont;
- (void)_drawRowHeaderSeparatorInClipRect:(struct CGRect)arg1;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)_drawBackgroundForGroupRow:(long long)arg1 clipRect:(struct CGRect)arg2 isButtedUpRow:(BOOL)arg3;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
@property(readonly) NSArray *contextMenuSelectedItems;
@property(retain) NSArray *selectedItems;
- (id)itemsAtIndexes:(id)arg1;
@property(readonly) NSIndexSet *contextMenuSelectedRowIndexes;
@property(readonly) NSIndexSet *clickedRowIndexes;
- (void)setSortDescriptors:(id)arg1;
- (struct CGSize)_adjustFrameSizeToFitSuperview:(struct CGSize)arg1;
@property BOOL allowsSizingShorterThanClipView;
@property BOOL breaksCyclicSortDescriptors;
- (id)progressIndicatorForItem:(id)arg1 createIfNecessary:(BOOL)arg2 progressIndicatorStyle:(unsigned long long)arg3;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dvt_commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTScaleInWindowAnimator : NSObject
{
    NSWindow *_windowToScaleIn;
    struct CGPoint _pointToScaleFrom;
    double _finalAlpha;
    NSWindow *_animationWindow;
}

+ (void)scaleInWindow:(id)arg1 fromPoint:(struct CGPoint)arg2 finalAlpha:(double)arg3;
+ (void)scaleInWindow:(id)arg1 fromPoint:(struct CGPoint)arg2;
- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (id)_createFadeInAnimation;
- (id)_createScaleInAnimation;
- (id)_createScaleInAndFadeInAnimation;
- (void)_scaleInWindow;
- (struct CATransform3D)_transformForScale:(double)arg1;
- (id)_initWithWindow:(id)arg1 point:(struct CGPoint)arg2 finalAlpha:(double)arg3;

@end

@interface DVTNewTabButton : DVTRolloverTrackingButton
{
    int _rolloverStyle;
}

- (void)setRolloverStyle:(int)arg1;
- (int)rolloverStyle;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTColorSwatchView : NSView
{
    BOOL _useProportionalBorderWidth;
    NSColor *_color;
    double _proportionalInset;
}

@property(nonatomic) double proportionalInset; // @synthesize proportionalInset=_proportionalInset;
@property(nonatomic) BOOL useProportionalBorderWidth; // @synthesize useProportionalBorderWidth=_useProportionalBorderWidth;
@property(retain, nonatomic) NSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTFindBarOptionsCtrl : DVTViewController <NSPopoverDelegate>
{
    unsigned long long _findType;
    int _matchStyle;
    BOOL _supportsRegex;
    BOOL _supportsWordMatching;
    BOOL _supportsCaseInsensitiveMatching;
    BOOL _findIgnoresCase;
    BOOL _findWraps;
    BOOL _invalidateAfterClose;
    NSPopover *_popover;
    DVTStackView_AppKitAutolayout *_stackView;
    NSView *_matchingStyleView;
    NSView *_hitsMustContainView;
    NSView *_matchCaseView;
    NSView *_wrapView;
}

+ (void)initialize;
+ (void)setDefaultFindType:(unsigned long long)arg1;
+ (long long)defaultFindType;
+ (void)setDefaultWrapText:(BOOL)arg1;
+ (BOOL)defaultWrapText;
+ (void)setDefaultIgnoresCase:(BOOL)arg1;
+ (BOOL)defaultIgnoresCase;
+ (void)setDefaultMatchStyle:(int)arg1;
+ (int)defaultMatchStyle;
@property __weak NSView *wrapView; // @synthesize wrapView=_wrapView;
@property __weak NSView *matchCaseView; // @synthesize matchCaseView=_matchCaseView;
@property __weak NSView *hitsMustContainView; // @synthesize hitsMustContainView=_hitsMustContainView;
@property __weak NSView *matchingStyleView; // @synthesize matchingStyleView=_matchingStyleView;
@property __weak DVTStackView_AppKitAutolayout *stackView; // @synthesize stackView=_stackView;
@property __weak NSPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) int matchStyle; // @synthesize matchStyle=_matchStyle;
@property(nonatomic) BOOL findWraps; // @synthesize findWraps=_findWraps;
@property(nonatomic) BOOL findIgnoresCase; // @synthesize findIgnoresCase=_findIgnoresCase;
@property(nonatomic) unsigned long long findType; // @synthesize findType=_findType;
- (void).cxx_destruct;
- (void)popoverDidClose:(id)arg1;
- (void)_removeFromSuperviewAndInvalidate;
- (void)closePopoverAndInvalidate;
- (void)_sendChangeNotificiation;
- (void)setOptionsFromFindDescriptor:(id)arg1;
- (id)descriptionForDescriptor:(id)arg1;
- (id)findDescriptorForAttributedString:(id)arg1 error:(id *)arg2;
- (void)loadView;
- (id)initWithSupportForRegex:(BOOL)arg1 andSupportForWordMatching:(BOOL)arg2 supportsCaseInsensitiveMatching:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTDeviceProvisioningProfilesSheetController : DVTPagingSheetWindowController
{
    DVTDevice *_device;
    DVTTableView *_profileTable;
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_removeButton;
    DVTBorderedView *_tableBorder;
    DVTBorderedView *_buttonBorder;
    NSArrayController *_profilesArrayController;
    NSArray *_provisioningProfiles;
}

@property(retain) NSArray *provisioningProfiles; // @synthesize provisioningProfiles=_provisioningProfiles;
@property(retain) NSArrayController *profilesArrayController; // @synthesize profilesArrayController=_profilesArrayController;
@property(retain) DVTBorderedView *buttonBorder; // @synthesize buttonBorder=_buttonBorder;
@property(retain) DVTBorderedView *tableBorder; // @synthesize tableBorder=_tableBorder;
@property(retain) DVTGradientImageButton *removeButton; // @synthesize removeButton=_removeButton;
@property(retain) DVTGradientImageButton *addButton; // @synthesize addButton=_addButton;
@property(retain) DVTTableView *profileTable; // @synthesize profileTable=_profileTable;
@property(readonly) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)removeProfile:(id)arg1;
- (void)addProfile:(id)arg1;
- (void)done:(id)arg1;
- (void)windowDidLoad;
- (id)initWithDevice:(id)arg1;

@end

@interface DVTCircularCapacityViewController : DVTCapacityViewController
{
}

- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface DVTCircularCapacityView : DVTCapacityView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface DVTGradientImageButton : NSButton <DVTGradientStyleButton>
{
}

+ (Class)cellClass;
@property int highlightSides;
@property int borderSides;
@property int gradientStyle;
@property BOOL showsState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTGradientImageButtonCell : NSButtonCell
{
    NSShadow *_imageShadow;
    int _gradientStyle;
    int _borderSides;
    int _highlightSides;
    BOOL _showsState;
    BOOL _suppressLeftBorderForTabStyles;
    BOOL _enableGradientStylBorderSuppression;
    BOOL _useButtonImageCenteringHack;
    BOOL _usedAsRadioButton;
    BOOL _alwaysShowColorPunchOut;
}

@property BOOL alwaysShowColorPunchOut; // @synthesize alwaysShowColorPunchOut=_alwaysShowColorPunchOut;
@property BOOL usedAsRadioButton; // @synthesize usedAsRadioButton=_usedAsRadioButton;
@property BOOL useButtonImageCenteringHack; // @synthesize useButtonImageCenteringHack=_useButtonImageCenteringHack;
@property BOOL enableGradientStylBorderSuppression; // @synthesize enableGradientStylBorderSuppression=_enableGradientStylBorderSuppression;
@property BOOL suppressLeftBorderForTabStyles; // @synthesize suppressLeftBorderForTabStyles=_suppressLeftBorderForTabStyles;
@property(nonatomic) BOOL showsState; // @synthesize showsState=_showsState;
@property(copy) NSShadow *imageShadow; // @synthesize imageShadow=_imageShadow;
@property int highlightSides; // @synthesize highlightSides=_highlightSides;
@property int borderSides; // @synthesize borderSides=_borderSides;
@property(nonatomic) int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
- (void).cxx_destruct;
- (BOOL)_isTabStyleCell;
- (BOOL)_shouldUseColorPunchOutStyleForGradientStyle;
- (void)_setGradientStyle:(int)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)setTitle:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithGradientStyle:(int)arg1 borderSides:(int)arg2;
- (void)dvt_commonInitWithGradientStyle:(int)arg1 borderSides:(int)arg2;
- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface DVTToolbarButtonImageFactory : NSObject
{
    struct CGSize _sizeWithoutHighlight;
    NSImage *_templateImageForButton;
    struct CGSize _size;
}

+ (id)imageFactoryWithToolbarSize:(struct CGSize)arg1;
@property(retain, nonatomic) NSImage *templateImageForButton; // @synthesize templateImageForButton=_templateImageForButton;
@property(readonly) struct CGSize size; // @synthesize size=_size;
- (void).cxx_destruct;
- (id)_buttonImageWithRect:(struct CGRect)arg1 gradient:(id)arg2 innerShadow:(id)arg3;
- (void)_drawButtonImageInRect:(struct CGRect)arg1 withGradient:(id)arg2 innerShadow:(id)arg3;
- (id)_inactiveOrDisabledInnerShadow;
- (id)_activeAlternateInnerShadow;
- (id)_activeInnerShadow;
- (id)imageInsetDisabled;
- (id)imageAlternatePressed;
- (id)imageAlternate;
- (id)_pressedImageForImage:(id)arg1 tintAlpha:(double)arg2;
- (id)imagePressed;
- (id)imageNatural;
- (struct CGSize)sizeWithoutHighlight;
- (struct CGRect)rectWithHighlight;
- (struct CGRect)naturalRect;
- (id)initWithSize:(struct CGSize)arg1;

@end

@interface DVTToolbarButtonImageRun : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;
- (struct CGSize)sizeWithoutHighlight;

@end

@interface DVTToolbarButtonImagePause : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;

@end

@interface DVTToolbarButtonImageAnalyze : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;
- (struct CGSize)sizeWithoutHighlight;

@end

@interface DVTToolbarButtonImageTest : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;
- (struct CGSize)sizeWithoutHighlight;

@end

@interface DVTToolbarButtonImageProfile : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;
- (struct CGSize)sizeWithoutHighlight;

@end

@interface DVTToolbarButtonImageBuild : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;

@end

@interface DVTToolbarButtonImageStop : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;

@end

@interface DVTClickableLayer : CALayer <DVTClickableLayer>
{
    CDUnknownBlockType _clickHandlerBlock;
    BOOL _disableClickHandler;
    BOOL _showsClickedState;
}

@property BOOL disableClickHandler; // @synthesize disableClickHandler=_disableClickHandler;
@property BOOL showsClickedState; // @synthesize showsClickedState=_showsClickedState;
@property(copy) CDUnknownBlockType clickHandlerBlock; // @synthesize clickHandlerBlock=_clickHandlerBlock;
- (void).cxx_destruct;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)fireClickHandler;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTClickableTextLayer : DVTTextLayer <DVTClickableLayer>
{
    CDUnknownBlockType _clickHandlerBlock;
    BOOL _disableClickHandler;
    BOOL _showsClickedState;
}

- (void).cxx_destruct;
@property(copy) CDUnknownBlockType clickHandlerBlock; // @synthesize clickHandlerBlock=_clickHandlerBlock;
@property BOOL showsClickedState; // @synthesize showsClickedState=_showsClickedState;
@property BOOL disableClickHandler; // @synthesize disableClickHandler=_disableClickHandler;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)fireClickHandler;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTAbstractLibraryGroup : NSObject <DVTInvalidation>
{
    DVTMutableOrderedSet *_childGroups;
    BOOL _titleIsEditable;
    NSMutableArray *_libraryGroupObservers;
    DVTLibrary *_library;
    NSImage *_image;
    NSString *_title;
    DVTAbstractLibraryGroup *_parentGroup;
    CDUnknownBlockType _groupComparator;
}

+ (void)initialize;
+ (id)defaultImage;
@property BOOL titleIsEditable; // @synthesize titleIsEditable=_titleIsEditable;
@property(copy, nonatomic) CDUnknownBlockType groupComparator; // @synthesize groupComparator=_groupComparator;
@property(retain, nonatomic) DVTAbstractLibraryGroup *parentGroup; // @synthesize parentGroup=_parentGroup;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(readonly) DVTLibrary *library; // @synthesize library=_library;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)describeInto:(id)arg1 withDepth:(long long)arg2;
- (BOOL)containsAsset:(id)arg1;
- (void)removeAllAssets;
- (void)removeAsset:(id)arg1;
- (void)addAsset:(id)arg1;
- (void)insertAsset:(id)arg1 atIndex:(long long)arg2;
- (id)assets;
- (long long)numberOfAssets;
- (BOOL)assetsAreEditable;
- (id)firstChildGroupWithTitle:(id)arg1;
- (id)deepChildGroups;
- (long long)depth;
- (id)ancestors;
- (id)lineage;
- (id)titlePath;
- (id)indexPath;
- (BOOL)isLeafGroup;
@property(readonly) long long numberOfChildGroups;
@property(retain) NSArray *childGroups;
- (id)childGroupsEnumerator;
- (long long)indexOfGroup:(id)arg1;
- (void)removeAllGroups;
- (void)removeChildGroup:(id)arg1;
- (void)addChildGroup:(id)arg1;
- (void)insertChildGroup:(id)arg1 atIndex:(long long)arg2;
- (BOOL)groupsAreEditable;
- (void)notifyObserversOfChangedGroupsAndAssets;
- (void)notifyObserversOfChangedAssets;
- (id)addLibraryGroupObserver:(id)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)primitiveInvalidate;
- (id)initWithTitle:(id)arg1 andLibrary:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DVTDevicesWindowController : NSWindowController <DVTSplitViewDelegate, NSTableViewDataSource, NSTableViewDelegate, NSMenuDelegate, NSWindowDelegate>
{
    DVTObservingToken *_devicesObserver;
    NSMutableDictionary *_deviceObservationTokens;
    NSMutableDictionary *_wirelessEnablingFutures;
    DVTDelayedInvocation *_delayedDevicesDisplayUpdateInvocation;
    BOOL _updatingDevicesForDisplay;
    DVTLozengeTextField *_emptyContentView;
    DVTDeviceProvisioningProfilesSheetController *_provisioningProfilesSheet;
    BOOL _consoleVisible;
    BOOL _consoleSplitVisible;
    NSMutableSet *_devices;
    NSArray *_devicesForDisplay;
    NSIndexSet *_devicesTableSelectionIndexes;
    NSString *_filterString;
    DVTTableView *_devicesTable;
    NSArrayController *_devicesArrayController;
    DVTBorderedView *_mainBorderedView;
    DVTSplitView *_mainSplitView;
    DVTSplitView *_contentSplitView;
    DVTBorderedView *_pocketFooterBorderedView;
    DVTBorderedView *_consoleHeaderBorderedView;
    DVTBorderedView *_consoleFooterView;
    DVTBorderedView *_contentBorderedView;
    DVTStackView_ML *_consoleAreaStack;
    DVTGradientImageButton *_addSimulatorButton;
    DVTGradientImagePopUpButton *_gearButton;
    DVTGradientImageButton *_consoleButton;
    NSButton *_consoleClearButton;
    NSButton *_consoleSaveButton;
    DVTSearchField *_searchField;
    NSMenuItem *_ignoreMenuItem;
    NSMenuItem *_unpairMenuItem;
    NSMenuItem *_enableWirelessMenuItem;
    NSMenuItem *_deleteSimMenuItem;
    DVTDevicesWindowContentAreaViewController *_contentAreaViewController;
    DVTScrollView *_scrollView;
    DVTViewController<DVTDevicesWindowConsoleViewController> *_consoleViewController;
}

+ (id)sharedDevicesWindowController;
@property(retain) DVTViewController<DVTDevicesWindowConsoleViewController> *consoleViewController; // @synthesize consoleViewController=_consoleViewController;
@property __weak DVTScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain) DVTDevicesWindowContentAreaViewController *contentAreaViewController; // @synthesize contentAreaViewController=_contentAreaViewController;
@property(retain) NSMenuItem *deleteSimMenuItem; // @synthesize deleteSimMenuItem=_deleteSimMenuItem;
@property(retain) NSMenuItem *enableWirelessMenuItem; // @synthesize enableWirelessMenuItem=_enableWirelessMenuItem;
@property(retain) NSMenuItem *unpairMenuItem; // @synthesize unpairMenuItem=_unpairMenuItem;
@property(retain) NSMenuItem *ignoreMenuItem; // @synthesize ignoreMenuItem=_ignoreMenuItem;
@property(retain) DVTSearchField *searchField; // @synthesize searchField=_searchField;
@property(retain) NSButton *consoleSaveButton; // @synthesize consoleSaveButton=_consoleSaveButton;
@property(retain) NSButton *consoleClearButton; // @synthesize consoleClearButton=_consoleClearButton;
@property(retain) DVTGradientImageButton *consoleButton; // @synthesize consoleButton=_consoleButton;
@property(retain) DVTGradientImagePopUpButton *gearButton; // @synthesize gearButton=_gearButton;
@property(retain) DVTGradientImageButton *addSimulatorButton; // @synthesize addSimulatorButton=_addSimulatorButton;
@property(retain) DVTStackView_ML *consoleAreaStack; // @synthesize consoleAreaStack=_consoleAreaStack;
@property(retain) DVTBorderedView *contentBorderedView; // @synthesize contentBorderedView=_contentBorderedView;
@property(retain) DVTBorderedView *consoleFooterView; // @synthesize consoleFooterView=_consoleFooterView;
@property(retain) DVTBorderedView *consoleHeaderBorderedView; // @synthesize consoleHeaderBorderedView=_consoleHeaderBorderedView;
@property(retain) DVTBorderedView *pocketFooterBorderedView; // @synthesize pocketFooterBorderedView=_pocketFooterBorderedView;
@property(retain) DVTSplitView *contentSplitView; // @synthesize contentSplitView=_contentSplitView;
@property(retain) DVTSplitView *mainSplitView; // @synthesize mainSplitView=_mainSplitView;
@property(retain) DVTBorderedView *mainBorderedView; // @synthesize mainBorderedView=_mainBorderedView;
@property(retain) NSArrayController *devicesArrayController; // @synthesize devicesArrayController=_devicesArrayController;
@property(retain) DVTTableView *devicesTable; // @synthesize devicesTable=_devicesTable;
@property(nonatomic, getter=isConsoleSplitVisible) BOOL consoleSplitVisible; // @synthesize consoleSplitVisible=_consoleSplitVisible;
@property(nonatomic, getter=isConsoleVisible) BOOL consoleVisible; // @synthesize consoleVisible=_consoleVisible;
@property(copy, nonatomic) NSString *filterString; // @synthesize filterString=_filterString;
@property(retain, nonatomic) NSIndexSet *devicesTableSelectionIndexes; // @synthesize devicesTableSelectionIndexes=_devicesTableSelectionIndexes;
@property(retain) NSArray *devicesForDisplay; // @synthesize devicesForDisplay=_devicesForDisplay;
@property(retain) NSMutableSet *devices; // @synthesize devices=_devices;
- (void).cxx_destruct;
- (void)menuWillOpen:(id)arg1;
- (void)splitViewDidEndLiveResize:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)_coordinateOfContentSplitViewDividerWithConsoleVisibile:(BOOL)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)_purportedSelectedDeviceWithSelectionIndexes:(id)arg1;
- (void)deleteSimulator:(id)arg1;
- (void)showProvisioningProfiles:(id)arg1;
- (void)toggleEnableWireless:(id)arg1;
- (void)unpairDevice:(id)arg1;
- (void)toggleDeviceIgnored:(id)arg1;
- (void)renameDevice:(id)arg1;
- (void)saveConsole:(id)arg1;
- (void)clearConsole:(id)arg1;
- (void)toggleConsole:(id)arg1;
- (void)addSimulator:(id)arg1;
- (id)_simulatorLocator;
@property(readonly) NSSet *supportedFileDataTypeIdentifiers;
- (id)_provisioningProfileTypeIdentifers;
- (BOOL)validateMenuItem:(id)arg1;
- (void)restoreConsoleState;
- (void)restoreConsoleDividerPositionState;
- (void)restoreConsoleVisibleState;
- (void)saveConsoleDividerPositionState;
- (void)saveConsoleVisibleState;
- (void)_hideEmptySelectionView;
- (void)_showEmptySelectionView;
- (id)_borderColor;
- (id)_detailViewControllerInfoDictionaryForDevice:(id)arg1;
@property(copy, nonatomic) NSString *selectedDeviceIdentifier;
- (id)_contextuallySelectedDevice;
- (id)_selectedDevice;
- (void)_syncSelectionToDeviceIdentifier:(id)arg1;
- (id)_deviceWithIdentifier:(id)arg1;
- (void)_selectDeviceWithIdentifierInDevicesTable:(id)arg1;
- (void)_removeDevices:(id)arg1 updateDisplay:(BOOL)arg2;
- (void)_addDevices:(id)arg1;
- (void)_updateDevices;
- (void)_updateDeviceDisplayWithDelay:(BOOL)arg1;
- (void)_stopObservingDeviceAvailabilty;
- (void)_startObservingDeviceAvailabilty;
- (BOOL)openFileURL:(id)arg1 withFileType:(id)arg2 error:(id *)arg3;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)windowWillClose:(id)arg1;
- (void)_verticallyCenterView:(id)arg1;
- (void)_adjustButtonStyling:(id)arg1;
- (void)windowDidLoad;
- (void)showWindow:(id)arg1;
- (id)initWithWindowNibName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTMainStatusAwareButton : NSButton
{
    BOOL _ignoresFirstMouse;
    BOOL _superviewIsFocusRingClipAncestor;
    NSImage *_pressedImage;
    NSImage *_pressedAlternateImage;
    NSImage *_imageForNonMainWindow;
    NSImage *_alternateImageForNonMainWindow;
    unsigned long long _lastMouseDownModifierFlags;
}

@property(nonatomic) BOOL superviewIsFocusRingClipAncestor; // @synthesize superviewIsFocusRingClipAncestor=_superviewIsFocusRingClipAncestor;
@property(nonatomic) unsigned long long lastMouseDownModifierFlags; // @synthesize lastMouseDownModifierFlags=_lastMouseDownModifierFlags;
@property(copy, nonatomic) NSImage *alternateImageForNonMainWindow; // @synthesize alternateImageForNonMainWindow=_alternateImageForNonMainWindow;
@property(copy, nonatomic) NSImage *imageForNonMainWindow; // @synthesize imageForNonMainWindow=_imageForNonMainWindow;
@property(copy, nonatomic) NSImage *pressedAlternateImage; // @synthesize pressedAlternateImage=_pressedAlternateImage;
@property(copy, nonatomic) NSImage *pressedImage; // @synthesize pressedImage=_pressedImage;
- (void).cxx_destruct;
- (id)_focusRingClipAncestor;
- (void)drawRect:(struct CGRect)arg1;
- (void)setAcceptsFirstMouse:(BOOL)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface DVTScriptSourceTextView : DVTSourceTextView
{
    DVTTextSidebarView *_sidebarView;
    BOOL _showingPlaceholder;
}

+ (id)placeholder;
@property(readonly, getter=isShowingPlaceholder) BOOL showingPlaceholder; // @synthesize showingPlaceholder=_showingPlaceholder;
- (void).cxx_destruct;
@property(readonly) unsigned long long lineCount;
- (BOOL)becomeFirstResponder;
- (void)showPlaceholder;
- (void)installSidebarViewIfNeeded;
@property(readonly) DVTTextSidebarView *sidebarView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (void)_commonInitDVTScriptSourceTextView;

@end

@interface DVTTextCompletionListCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (void)_dvt_commonInit;

@end

@interface DVTHorizontalTilingPainter : NSObject <DVTPainter>
{
    NSImage *_centerActiveImageToTile;
    NSImage *_centerInactiveImageToTile;
}

- (void).cxx_destruct;
- (void)drawInRect:(struct CGRect)arg1 forView:(id)arg2;
- (id)initWithHorizontalActiveImageTile:(id)arg1 inactiveImage:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTPlistDocumentLocation : DVTDocumentLocation
{
    DVTPlistModel *_model;
    DVTPlistSelection *_selection;
    BOOL _pointsBackwards;
}

@property BOOL pointsBackwards; // @synthesize pointsBackwards=_pointsBackwards;
@property(readonly) DVTPlistModel *model; // @synthesize model=_model;
@property(readonly) DVTPlistSelection *selection; // @synthesize selection=_selection;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 model:(id)arg3 selection:(id)arg4;

@end

@interface DVTFilteringMenu : NSMenu <DVTFilteringMenuSearchViewDelegate, NSMenuDelegate, NSTextFieldDelegate>
{
    id _dvtDelegate;
    DVTFilteringMenuSearchView *_newSearchView;
    BOOL _initiallyShowsSearch;
    struct OpaqueMenuRef *_carbonMenu;
    struct {
        unsigned int _delegateRespondsToFilterItemsInMenuForSearchString:1;
        unsigned int _delegateRespondsToMenuHasKeyEquivalentForEventTargetAction:1;
        unsigned int _delegateRespondsToMenuUpdateItemAtIndexShouldCancel:1;
        unsigned int _delegateRespondsToConfinementRectForMenuOnScreen:1;
        unsigned int _delegateRespondsToMenuWillHighlightItem:1;
        unsigned int _delegateRespondsToMenuWillOpen:1;
        unsigned int _delegateRespondsToMenuDidClose:1;
        unsigned int _delegateRespondsToNumberOfItemsInMenu:1;
        unsigned int _delegateRespondsToMenuNeedsUpdate:1;
    } _dvtFilteringMenuFlags;
}

@property(readonly) BOOL initiallyShowsSearch; // @synthesize initiallyShowsSearch=_initiallyShowsSearch;
- (void).cxx_destruct;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)menuNeedsUpdate:(id)arg1;
- (long long)numberOfItemsInMenu:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)filteringSearchView:(id)arg1 makeSearchFieldKey:(id)arg2;
- (void)performSearchWithString:(id)arg1 inMenu:(id)arg2;
- (BOOL)searchFieldShouldTakeFocus:(id)arg1;
- (void)setUpSearchFieldInMenu:(id)arg1 withString:(id)arg2;
- (BOOL)_isSearchScrolledOutOfView:(id)arg1;
- (void)_selectSearchItem:(id)arg1;
- (id)_newSearchMenuItem;
- (struct OpaqueMenuRef *)dvt_menuRef;
- (id)dvt_delegate;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)initWithTitle:(id)arg1 initiallyShowsSearch:(BOOL)arg2;
- (id)initWithTitle:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTScrollableTabBarViewAnimation : NSAnimation
{
    NSMapTable *_viewsToAnimationParameters;
    NSMapTable *_layersToAnimationParameters;
    DVTScrollableTabBarView *_scrollableTabBarView;
}

@property(nonatomic) __weak DVTScrollableTabBarView *scrollableTabBarView; // @synthesize scrollableTabBarView=_scrollableTabBarView;
- (void).cxx_destruct;
- (void)_updateLayer:(id)arg1 withProgress:(double)arg2;
- (void)_updateView:(id)arg1 withProgress:(double)arg2;
- (struct CGRect)_frameForAnimationParameters:(id)arg1 withProgress:(double)arg2;
- (void)setCurrentProgress:(float)arg1;
- (void)stopAnimation;
- (void)setFrame:(struct CGRect)arg1 forLayer:(id)arg2;
- (struct CGRect)endFrameForLayer:(id)arg1;
- (void)setFrame:(struct CGRect)arg1 forView:(id)arg2;
- (struct CGRect)endFrameForView:(id)arg1;
- (id)initWithDuration:(double)arg1 animationCurve:(unsigned long long)arg2;
- (id)runLoopModesForAnimating;

@end

@interface AnimationParameters : NSObject
{
    struct CGRect _startFrame;
    struct CGRect _endFrame;
}

@property(nonatomic) struct CGRect endFrame; // @synthesize endFrame=_endFrame;
@property(nonatomic) struct CGRect startFrame; // @synthesize startFrame=_startFrame;
- (id)initWithStartFrame:(struct CGRect)arg1 endFrame:(struct CGRect)arg2;

@end

@interface DVTFoldingGlyphGenerator : NSGlyphGenerator
{
    DVTFoldingLayoutManager *_layoutManager;
    NSGlyphGenerator *_underlyingGlyphGenerator;
}

@property(readonly) NSGlyphGenerator *underlyingGlyphGenerator; // @synthesize underlyingGlyphGenerator=_underlyingGlyphGenerator;
- (void).cxx_destruct;
- (void)generateGlyphsForGlyphStorage:(id)arg1 desiredNumberOfCharacters:(unsigned long long)arg2 glyphIndex:(unsigned long long *)arg3 characterIndex:(unsigned long long *)arg4;
- (void)_fillFoldedGlyphsForRange:(struct _NSRange)arg1 glyphStorage:(id)arg2 glyphIndex:(unsigned long long *)arg3;
- (id)initWithUnderlyingGlyphGenerator:(id)arg1 layoutManager:(id)arg2;

@end

@interface DVTFlatPopUpButtonCell : NSPopUpButtonCell
{
}

+ (id)emptyFlatPopUpButton;
- (id)_controlPathForFrame:(struct CGRect)arg1;
- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawFocusRingMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_dvt_FlatPopUpButtonCellCommonInit;
- (void)awakeFromNib;
- (id)initTextCell:(id)arg1 pullsDown:(BOOL)arg2;

@end

@interface DVTImageAndTextCell : NSTextFieldCell
{
    DVTBindingHelper *_bindingHelper;
    NSArray *_statusCategoryNames;
    NSColor *_subtitleTextColor;
    NSColor *_inactiveTitleTextColor;
    NSDictionary *_statusCellsByCategoryName;
    NSFont *_subtitleFont;
    NSImage *_image;
    NSProgressIndicator *_progressIndicator;
    unsigned long long _progressIndicatorStyle;
    NSString *_subtitle;
    id _attributedStringValue;
    long long _leftEdgeSpacing;
    long long _subtitleSpacing;
    struct CGSize _baseImageSize;
    double _layoutHeight;
    long long _titleAndSubTitleLeftEdgeSpacing;
    long long _progressValue;
    int _emphasizeMarkerStyle;
    unsigned long long _imageScaling;
    int _subtitleLayout;
    BOOL _drawsEmphasizeMarker;
    BOOL _showsStatusItems;
    BOOL _alwaysReserveSpaceForStatusItems;
    BOOL _showSecondarySelection;
    int _secondarySelectionStyle;
    double _statusItemEdgeMargin;
}

+ (void)initialize;
@property(nonatomic) int secondarySelectionStyle; // @synthesize secondarySelectionStyle=_secondarySelectionStyle;
@property(nonatomic) BOOL showSecondarySelection; // @synthesize showSecondarySelection=_showSecondarySelection;
@property double statusItemEdgeMargin; // @synthesize statusItemEdgeMargin=_statusItemEdgeMargin;
@property BOOL alwaysReserveSpaceForStatusItems; // @synthesize alwaysReserveSpaceForStatusItems=_alwaysReserveSpaceForStatusItems;
@property long long titleAndSubTitleLeftEdgeSpacing; // @synthesize titleAndSubTitleLeftEdgeSpacing=_titleAndSubTitleLeftEdgeSpacing;
@property int subtitleLayout; // @synthesize subtitleLayout=_subtitleLayout;
@property int emphasizeMarkerStyle; // @synthesize emphasizeMarkerStyle=_emphasizeMarkerStyle;
@property BOOL drawsEmphasizeMarker; // @synthesize drawsEmphasizeMarker=_drawsEmphasizeMarker;
@property long long subtitleSpacing; // @synthesize subtitleSpacing=_subtitleSpacing;
@property(copy, nonatomic) NSColor *inactiveTitleTextColor; // @synthesize inactiveTitleTextColor=_inactiveTitleTextColor;
@property(copy, nonatomic) NSColor *subtitleTextColor; // @synthesize subtitleTextColor=_subtitleTextColor;
@property(copy, nonatomic) NSFont *subtitleFont; // @synthesize subtitleFont=_subtitleFont;
@property(copy) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy) NSArray *statusCategoryNames; // @synthesize statusCategoryNames=_statusCategoryNames;
@property BOOL showsStatusItems; // @synthesize showsStatusItems=_showsStatusItems;
@property long long progressValue; // @synthesize progressValue=_progressValue;
@property unsigned long long progressIndicatorStyle; // @synthesize progressIndicatorStyle=_progressIndicatorStyle;
@property(retain) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property double layoutHeight; // @synthesize layoutHeight=_layoutHeight;
@property long long leftEdgeSpacing; // @synthesize leftEdgeSpacing=_leftEdgeSpacing;
@property unsigned long long imageScaling; // @synthesize imageScaling=_imageScaling;
@property struct CGSize baseImageSize; // @synthesize baseImageSize=_baseImageSize;
@property(retain) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSecondarySelectionInCellFrame:(struct CGRect)arg1;
- (void)drawSubtitleWithCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawEmphasizeMarkerWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawProgressIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_setupProgressIndicatorInView:(id)arg1;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)subtitleAttributedStringValue;
- (void)invalidateAttributedStringValue;
- (void)setAttributedStringValue:(id)arg1;
- (id)attributedStringValue;
- (id)_attributedStringWithString:(id)arg1 font:(id)arg2 foregroundColor:(id)arg3;
- (struct CGSize)cellSize;
- (struct CGRect)statusRectForBounds:(struct CGRect)arg1;
- (id)statusCellsRectsForBounds:(struct CGRect)arg1;
- (struct CGRect)_statusCellsRectsForBounds:(struct CGRect)arg1 rects:(id)arg2;
- (struct CGRect)progressIndicatorRectForBounds:(struct CGRect)arg1;
- (struct CGRect)subtitleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)subtitleBoundingRectWithSize:(struct CGSize)arg1 options:(unsigned long long)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)fullLineTitleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)_attributedStringValueSize;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGSize)_imageSizeForLayoutFrame:(struct CGRect)arg1;
- (struct CGSize)_scaledImageSize:(struct CGSize)arg1 forTargetHeight:(double)arg2;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_textFrameForSelectingOrEditingWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_layoutFrameForCellFrame:(struct CGRect)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)_checkStatusCellHitForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 withAction:(CDUnknownBlockType)arg4;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)setBackgroundStyle:(long long)arg1;
- (id)statusItemCellsForCategory:(id)arg1;
- (void)setStatusItemCells:(id)arg1 forCategory:(id)arg2;
- (id)_statusCellsByCategoryName;
- (id)titleDropShadow;
- (void)setProgress:(id)arg1;
- (void)updateBoundTitle;
@property(copy) NSString *title; // @dynamic title;
- (void)setHighlighted:(BOOL)arg1;
@property(readonly, copy) NSColor *titleTextColor;
- (BOOL)_controlViewHasFocusOrIsSourceList;
- (void)setFont:(id)arg1;
- (id)dvtExtraBindings;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)init;
- (void)_dvt_commonInit;

@end

@interface DTDKSelectionDialogController : NSWindowController
{
    NSDictionary *_choices;
    NSString *_message;
    NSString *_informativeText;
    NSString *_defaultButtonTitle;
    NSString *_cancelButtonTitle;
}

+ (id)dialogController;
@property(copy) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property(copy) NSString *defaultButtonTitle; // @synthesize defaultButtonTitle=_defaultButtonTitle;
@property(copy) NSString *informativeText; // @synthesize informativeText=_informativeText;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSDictionary *choices; // @synthesize choices=_choices;
- (void).cxx_destruct;
@property(readonly, copy) NSSet *selectedIdentifiers;
- (void)cancelButtonAction:(id)arg1;
- (void)okButtonAction:(id)arg1;
- (void)beginSheetModalForWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

@interface DTDKSingleSelectionDialogController : DTDKSelectionDialogController
{
    DVTObservingToken *_observingToken;
    NSArray *_menuContents;
    NSArrayController *_arrayController;
}

+ (id)dialogController;
@property(retain) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
- (void).cxx_destruct;
- (id)selectedIdentifiers;
@property(copy) NSArray *menuContents; // @synthesize menuContents=_menuContents;
- (void)setChoices:(id)arg1;
- (void)loadWindow;
- (void)dealloc;

@end

@interface DTDKMultipleSelectionDialogController : DTDKSelectionDialogController
{
    DVTObservingToken *_observingToken;
    NSArray *_tableContents;
    NSSet *_selectedIdentifiers;
    NSArrayController *_arrayController;
}

+ (id)keyPathsForValuesAffectingCanProceed;
+ (id)keyPathsForValuesAffectingTableContents;
+ (id)dialogController;
@property(retain) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(copy, nonatomic) NSSet *selectedIdentifiers; // @synthesize selectedIdentifiers=_selectedIdentifiers;
@property(copy, nonatomic) NSArray *tableContents; // @synthesize tableContents=_tableContents;
- (void).cxx_destruct;
@property(readonly) _Bool canProceed;
- (void)setChoices:(id)arg1;
- (void)loadWindow;
- (void)dealloc;

@end

@interface DVTStringTextCompletionItem : NSObject <DVTTextCompletionItem>
{
    NSString *_name;
    NSString *_localizedName;
    NSImage *_icon;
    double _priority;
    long long _priorityBucket;
    unsigned long long _priorityComparatorKind;
}

@property unsigned long long priorityComparatorKind; // @synthesize priorityComparatorKind=_priorityComparatorKind;
@property long long priorityBucket; // @synthesize priorityBucket=_priorityBucket;
@property(retain) NSImage *icon; // @synthesize icon=_icon;
@property double priority; // @synthesize priority=_priority;
@property(copy) NSString *localizedName; // @synthesize localizedName=_localizedName;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly) BOOL notRecommended;
@property(readonly, copy) NSAttributedString *descriptionText;
@property(readonly, copy) NSString *completionText;
@property(readonly, copy) NSString *parentText;
@property(readonly, copy) NSString *displayType;
@property(readonly, copy) NSString *displayText;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSArray *additionalCompletions;
@property(readonly) int completionItemStyle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) NSImage *highlightedStatusIcon;
@property(readonly) NSImage *statusIcon;
@property(readonly) Class superclass;

@end

@interface DVTDeveloperPortalDatabase (UIExtensions)
+ (id)chooseTeamOperationForToken:(id)arg1 andPlatform:(id)arg2 allowMultiple:(_Bool)arg3;
@end

@interface DVTCollectCertificateFailuresOperation (UIExtensions)
+ (id)_UIOperationWithToken:(id)arg1;
@end

@interface NSNumber (PListEditor)
- (id)numberValue;
- (BOOL)isFloat;
- (BOOL)isBoolean;
@end

@interface NSString (PlistNumberExtensions)
- (id)stringValue;
- (id)numberValue;
@end

@interface NSFont (DVTPrivate)
- (BOOL)dvt_isStyledFont;
- (BOOL)dvt_isBoldSystemFont;
- (BOOL)dvt_isSystemFont;
- (BOOL)dvt_isAnySystemFont;
- (unsigned long long)metaFontType;
@end

@interface NSButton (DVTToolbarViewControllerAdditions)
+ (id)dvt_toolbarButtonWithImage:(id)arg1 buttonType:(unsigned long long)arg2;
@end

@interface NSPopUpButton (DVTToolbarViewControllerAdditions)
+ (id)dvt_toolbarPopUpButtonWithMenu:(id)arg1 buttonType:(unsigned long long)arg2;
@end

@interface NSError (DVTNSErrorAppKitAdditions)
+ (id)dvt_errorWithDomain:(id)arg1 errorCode:(long long)arg2 message:(id)arg3 recoverySuggestion:(id)arg4 recoveryOptions:(id)arg5 andErrorPanelProvider:(CDUnknownBlockType)arg6;
- (id)dvt_errorByAddingErrorPanelProvider:(CDUnknownBlockType)arg1;
@end

@interface NSImage (DVTThemeAdditions)
+ (id)dvt_tabIcon;
+ (id)dvt_groupEveryingIcon;
+ (id)dvt_groupDefaultAssetIcon;
+ (id)dvt_groupLibrarySourceIcon;
+ (id)dvt_navPluginIcon;
+ (id)dvt_downloadArrowDarkIcon;
+ (id)dvt_downloadArrowIcon;
+ (id)dvt_archiveIcon;
+ (id)dvt_navSubmoduleIcon;
+ (id)dvt_navModuleIcon;
+ (id)dvt_navToolIcon;
+ (id)dvt_navSDKIcon;
+ (id)dvt_navAppExtensionIcon;
+ (id)dvt_navXPCServiceIcon;
+ (id)dvt_navApplicationIcon;
+ (id)dvt_navFrameworkIcon;
+ (id)dvt_navGroupIcon;
+ (id)_dvt_navGroupIconName;
+ (id)dvt_questionMarkIcon;
+ (id)dvt_blankDocumentIcon;
+ (id)dvt_unknownFSObjectIcon;
@end

@interface NSResponder (DVTNSResponderAdditions)
+ (BOOL)dvt_areAnyResponders:(id)arg1 anAncestorOfResponder:(id)arg2;
- (id)dvt_findTargetForAction:(SEL)arg1 sender:(id)arg2 inResponderChainOfResponder:(id)arg3;
- (BOOL)dvt_isAncestorOfResponder:(id)arg1;
@end

@interface NSUndoManager (DVTNSUndoManagerAdditions)
+ (void)dvt_applyUndoBlock:(CDUnknownBlockType)arg1;
- (void)dvt_registerUndoBlock:(CDUnknownBlockType)arg1;
@end

@interface DVTDiffDescriptor (FileMergeCompat_ReallyInternal)
@property(readonly) int fmc_operation;
- (struct CGRect)fmc_displayRect:(id)arg1 forSide:(int)arg2 ensureLayout:(BOOL)arg3;
@property(readonly) _DVTFileMergeDiffVitalStats *fmc_vitals;
@end

@interface DVTDiffDescriptor (FileMergeCompat)
@property(readonly) long long fmc_numAddLines;
@property(readonly) long long fmc_numLines;
- (long long)fmc_rightDelta;
- (double)fmc_verticalSpan:(id)arg1 forSide:(int)arg2 ensureLayout:(BOOL)arg3;
- (double)fmc_endCoordinate:(id)arg1 forSide:(int)arg2 ensureLayout:(BOOL)arg3;
- (double)fmc_startCoordinate:(id)arg1 forSide:(int)arg2 ensureLayout:(BOOL)arg3;
- (void)fmc_invalidateVitals;
@end

@interface NSUserDefaults (DVTNSUserDefaultsAdditions)
- (void)dvt_setInteger:(long long)arg1 forKey:(id)arg2 defaultValue:(long long)arg3;
- (void)dvt_setBool:(BOOL)arg1 forKey:(id)arg2 defaultValue:(BOOL)arg3;
- (id)dvt_fontForKey:(id)arg1;
- (void)dvt_setFont:(id)arg1 forKey:(id)arg2;
- (id)dvt_colorForKey:(id)arg1;
- (void)dvt_setColor:(id)arg1 forKey:(id)arg2;
@end

@interface NSClipView (DVTNSClipViewAdditions)
- (BOOL)dvt_autoscrollWithExternalDragEvent:(id)arg1 animate:(BOOL)arg2;
- (struct CGSize)dvt_effectiveAutoscrollDelta;
- (void)setDvt_autoscrollDelta:(id)arg1;
- (id)dvt_autoscrollDelta;
- (struct CGSize)dvt_defaultAutoscrollDelta;
@end

@interface NSObject (DVTBindingHelperAccess)
- (void)dvt_clearBindingHelper;
@property(readonly) DVTBindingHelper *bindingHelper;
@end

@interface NSObject (DVTBindingUtilities)
+ (void)dvtSubstituteBindingMachinery;
- (id)dvt_bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)dvt2_bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)updateBoundValueForBinding:(id)arg1;
- (id)dvtExtraBindings;
@end

@interface NSEvent (DVTNSEventAdditions)
- (struct CGPoint)dvt_locationInWindowRelativeToView:(id)arg1;
- (BOOL)dvt_isLeftMouseButtonUp;
- (BOOL)dvt_isLeftMouseButtonDown;
- (struct CGPoint)dvt_flooredLocationInWindow;
- (struct CGPoint)dvt_flooredLocationInView:(id)arg1;
- (BOOL)dvt_isDragEventAnIntentialLeftDragWithRespectToMouseDown:(id)arg1;
- (BOOL)dvt_isRevealGesture;
- (BOOL)dvt_isControlKeyDown;
- (BOOL)dvt_isCommandKeyDown;
- (BOOL)dvt_isShiftKeyDown;
- (BOOL)dvt_isOptionKeyDown;
- (BOOL)dvt_isEscapeKeyDown;
- (struct CGPoint)dvt_locationOnScreen;
- (struct CGPoint)dvt_locationInWindow:(id)arg1;
- (struct CGPoint)dvt_locationInView:(id)arg1;
@end

@interface DVTLocalProcessInformation (DVTLocalProcessInformationAdditions)
+ (id)imageForNonUIExecutable;
+ (id)applicationImageForPID:(int)arg1;
@property(readonly) BOOL isApplication;
@property(readonly) NSImage *applicationImage;
@end

@interface NSString (DVTPlistComment)
- (BOOL)isPlistCommentNode;
@end

@interface DVTDevice (DVTDevicesWindowAdditions)
+ (id)keyPathsForValuesAffectingDvt_hideBusyIndicator;
+ (id)keyPathsForValuesAffectingDvt_hideStatusImage;
+ (id)keyPathsForValuesAffectingDvt_statusImage;
@property(readonly) _Bool dvt_deviceIsSimulator;
@property(readonly) _Bool dvt_hideBusyIndicator;
@property(readonly) _Bool dvt_hideStatusImage;
@property(readonly) NSImage *dvt_statusImage;
@property(readonly) _Bool deviceIsBusy;
@property(readonly) NSArray *deviceSummaryPropertyDictionaries;
@property(readonly) int deviceWindowCategory;

// Remaining properties
@property(readonly) _Bool isWireless;
@end

@interface DVTLocalComputer (DVTDevicesWindowAdditions)
- (id)deviceSummaryPropertyDictionaries;
@end

@interface NSBezierPath (DVTNSBezierPathAdditions)
+ (id)dvt_bezierPathWithRoundRectInRect:(struct CGRect)arg1 topLeftRadius:(double)arg2 topRightRadius:(double)arg3 bottomRightRadius:(double)arg4 bottomLeftRadius:(double)arg5;
+ (id)dvt_bezierPathWithRoundRectInRect:(struct CGRect)arg1 radius:(double)arg2;
+ (id)dvt_bezierPathWithLineFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (BOOL)_isPointValid:(struct CGPoint)arg1;
- (struct CGPath *)dvt_cgPathShouldEnsurePathIsClosed:(BOOL)arg1;
- (struct CGPath *)dvt_cgPath;
- (void)dvt_fillWithInnerShadow:(id)arg1;
- (id)dvt_bezierPathFromStrokedPath;
- (BOOL)dvt_isStrokeHitByPoint:(struct CGPoint)arg1;
- (void)dvt_applyPathToContext:(struct CGContext *)arg1;
- (void)dvt_fillWithLinearGradientFromPoint:(struct CGPoint)arg1 withColor:(id)arg2 toPoint:(struct CGPoint)arg3 withColor:(id)arg4;
- (void)dvt_fillWithLinearGradientFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 withColors:(id)arg3 atStops:(id)arg4;
@end

@interface NSAlert (DVTNSAlertAdditions)
- (void)dvt_beginAlertModalForWindow:(id)arg1 allowSheetOverSheet:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dvt_beginAlertModalForWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dvt_alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
@end

@interface NSCarbonMenuImpl (DVTSwizzle)
- (int)__swizzle_carbonTargetItemEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
@end

@interface NSMenuItem (DVTNSMenuItemAdditions)
- (void)dvt_setShowsKeyEquivalent:(BOOL)arg1;
- (id)_dvt_actualKeyEquivalent;
- (void)_dvt_clearSavedKeyEquivalent;
- (id)_dvt_savedKeyEquivalent;
- (void)_dvt_saveKeyEquivalent:(id)arg1;

// Remaining properties
@property(nonatomic, getter=isEnabled) BOOL enabled;
@property(nonatomic, getter=isHidden) BOOL hidden;
@property(readonly, nonatomic, getter=isHighlighted) BOOL highlighted;
@end

@interface NSView (DVTSlidingExtras)
- (void)setFrameWithRedraw:(struct CGRect)arg1;
- (void)setSlidingFrame:(struct CGRect)arg1;
- (struct CGRect)slidingFrame;
@end

@interface NSTableView (DragAndDropEnhancements)
- (id)draggedImageState:(id)arg1;
@end

@interface NSOutlineView (DragAndDropEnhancements)
- (id)draggedImageState:(id)arg1;
@end

@interface NSWindow (DVTHacks)
- (id)draggedImageState:(id)arg1;
- (id)registeredDraggedTypes;
@end

@interface NSObject (DVTAssertionModelObjectAdditions)
- (id)annotation_uniqueObjectLifetimeIdentifier;
@end

@interface NSEvent (DVTMorphingDragImageControllerExtras)
- (BOOL)_DVTMorphingDragImageController_isEscapeKeyEvent;
- (BOOL)_DVTMorphingDragImageController_isKeyEvent:(unsigned short)arg1;
@end

@interface NSWindow (DVTMorphingDragImageControllerExtras)
- (id)_DVTMorphingDragImageController_displayIfNeeded;
@end

@interface NSDocument (DVTNSDocumentAdditions)
- (BOOL)dvt_hasBeenEditedSinceLastUserInitiatedSave;
@end

@interface DVTFilePath (DVTFileIconAdditions)
- (id)dvt_fileIconUndecorated;
- (id)dvt_fileIcon;
@end

@interface NSString (DVTFileIconAdditions)
- (id)dvt_fileTypeIcon;
@end

@interface NSBezierPath (DVTComparisonBezierPathAdditions)
+ (id)dvtComparison_bezierPathWithRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
@end

@interface NSColorList (DVTNSColorListAdditions)
+ (id)defaultSystemColorList;
@end

@interface NSWindow (DVTMainViewControllerMonitorAdditions)
+ (BOOL)automaticallyNotifiesObserversOfDvt_mainViewControllerMonitor;
+ (BOOL)automaticallyNotifiesObserversOfDvt_mainViewController;
- (void)setDvt_mainViewControllerMonitor:(id)arg1;
- (id)dvt_mainViewControllerMonitor;
- (void)dvt_viewControllerWillUninstall:(id)arg1;
- (void)dvt_updateMainViewControllerUsingResponderChain;
- (void)setDvt_mainViewController:(id)arg1;
@property(readonly) DVTViewController *dvt_mainViewController;
@end

@interface NSString (DVTPlistEditingAdditions)
- (id)dvt_stringByEscapingForXML;
@end

@interface NSView (LayoutOrder)
- (id)subviewsOrderedForLayout;
@end

@interface NSScrollView (LayoutOrder)
- (id)subviewsOrderedForLayout;
@end

@interface NSSegmentedControl (DVTNSSegmentedControlAdditions)
- (long long)dvt_segmentWithTag:(long long)arg1;
- (void)dvt_setAccessibilityDescription:(id)arg1 forSegment:(unsigned long long)arg2;
@end

@interface NSImage (DVTNSImageAdditions)
+ (id)dvt_imageWithSize:(struct CGSize)arg1 scaleFactors:(id)arg2 flipped:(BOOL)arg3 fromCommands:(CDUnknownBlockType)arg4;
+ (id)dvt_imageWithSize:(struct CGSize)arg1 flipped:(BOOL)arg2 forRenderingIntoContext:(id)arg3 fromCommands:(CDUnknownBlockType)arg4;
+ (id)dvt_imageWithSize:(struct CGSize)arg1 scaleFactors:(id)arg2 flipped:(BOOL)arg3 forRenderingIntoContext:(id)arg4 fromCommands:(CDUnknownBlockType)arg5;
+ (id)dvt_imageWithSize:(struct CGSize)arg1 fromCommands:(CDUnknownBlockType)arg2;
+ (id)dvt_imageWithSize:(struct CGSize)arg1 flipped:(BOOL)arg2 fromCommands:(CDUnknownBlockType)arg3;
+ (id)dvt_imageWithPDFDrawingWithSize:(struct CGSize)arg1 andCommands:(CDUnknownBlockType)arg2;
+ (id)dvt_cachedImageForApplicationBundleIdentifier:(id)arg1;
+ (BOOL)dvt_isTemplateName:(id)arg1;
+ (id)dvt_cachedImageByReferencingFilePath:(id)arg1;
+ (id)dvt_cachedImageForFilePath:(id)arg1 variant:(id)arg2 creatingIfNecessary:(CDUnknownBlockType)arg3;
+ (id)dvt_cachedImageNamed:(id)arg1 fromBundleForExtension:(id)arg2;
+ (id)dvt_cachedImageNamed:(id)arg1 fromBundleForClass:(Class)arg2;
+ (id)dvt_cachedImageNamed:(id)arg1 fromBundle:(id)arg2;
+ (id)dvt_cachedImageNamed:(id)arg1 isTemplate:(BOOL)arg2 fromBundle:(id)arg3;
+ (id)dvt_cachedImageNamed:(id)arg1 ofSquareSize:(double)arg2 fromBundle:(id)arg3;
+ (id)dvt_cachedImageNamed:(id)arg1 ofSquareSize:(double)arg2 isTemplate:(BOOL)arg3 fromBundle:(id)arg4;
+ (id)dvt_cachedImageNamed:(id)arg1 ofSize:(struct CGSize)arg2 fromBundle:(id)arg3;
+ (id)dvt_cachedImageNamed:(id)arg1 ofSize:(struct CGSize)arg2 isTemplate:(BOOL)arg3 fromBundle:(id)arg4;
+ (id)_dvt_cachedImageNamed:(id)arg1 ofSize:(struct CGSize)arg2 isTemplate:(BOOL)arg3 fromBundle:(id)arg4;
+ (id)_dvt_cachedImageNamed:(id)arg1 isTemplate:(BOOL)arg2 withFallback:(id)arg3 checkingNamedNSImages:(BOOL)arg4 fromBundle:(id)arg5;
+ (id)dvt_cachedImageWithKey:(id)arg1 creationBlock:(CDUnknownBlockType)arg2;
- (void)dvt_associateCopiedAlternateImageWithOriginal:(id)arg1;
- (id)dvt_nonPDFImage_workaroundForProblem14522929;
- (id)dvt_cachedVariantForKey:(id)arg1 variantImageGenerator:(CDUnknownBlockType)arg2;
- (id)dvt_deriveSubsidiaryImageOfSize:(struct CGSize)arg1;
- (id)dvt_cachedWhiteImageFromTemplate;
- (id)dvt_deriveWhiteImageFromTemplate;
- (id)dvt_cachedInactiveAlternateImageFromTemplate;
- (id)_dvt_deriveInactiveAlternateImageFromTemplate;
- (id)dvt_cachedAlternateImageFromTemplate;
- (id)_dvt_deriveAlternateImageFromTemplate;
- (void)dvt_drawInnerShadow:(id)arg1 inRect:(struct CGRect)arg2;
- (void)dvt_drawInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3 unflip:(BOOL)arg4;
- (id)dvt_copyReferencingCachedOriginal;
- (void)_dvt_associateOriginal:(id)arg1;
- (id)_dvt_cachedOriginal;
- (id)_debugAnnotation;
@end

@interface DVTDevice (KitSupport)
@property(readonly) NSImage *image;
@end

@interface DVTLocalComputer (KitSupport)
- (id)image;
@end

@interface NSEvent (DVTNSEventExtras)
+ (BOOL)dvt_mouseButtonIsDown;
- (BOOL)dvt_isVerticalWheelEvent;
- (BOOL)dvt_isWheelEvent;
- (BOOL)dvt_isEscapeKeyEvent;
- (BOOL)dvt_isMiddleButtonEvent;
- (BOOL)_dvt_isKeyEvent:(unsigned short)arg1;
@end

@interface NSImage (DVTNSImageExtras)
+ (id)dvt_PNGNamed:(id)arg1;
- (id)dvt_flatImageWithColor:(id)arg1;
- (id)dvt_imageByScalingToSize:(struct CGSize)arg1 withImageInterpolation:(unsigned long long)arg2;
- (id)dvt_imageByApplyingShadowForDragging;
@end

@interface NSMenu (DVTNSMenuExtras)
- (void)removeUselessMenuItemSeparators;
- (void)dvt_popUpInRect:(struct CGRect)arg1 ofView:(id)arg2 didInsertInitialSeparator:(char *)arg3;
@end

@interface NSMutableArray (DVTNSArrayExtras)
- (BOOL)removeUselessMenuItemSeparators;
@end

@interface NSScreen (DVTNSScreenExtras)
+ (struct CGPoint)coreGraphicsScreenPointForAppKitScreenPoint:(struct CGPoint)arg1;
+ (id)screenForMouseLocation;
@end

@interface NSString (DVTNSStringExtras)
- (void)_dvt_drawAtPoint:(struct CGPoint)arg1 font:(id)arg2 textColor:(id)arg3;
- (double)_dvt_widthWithFont:(id)arg1;
- (void)drawDoubledInRect:(struct CGRect)arg1 withTopColor:(id)arg2 bottomColor:(id)arg3 font:(id)arg4 centered:(BOOL)arg5 flipped:(BOOL)arg6 topColorInFront:(BOOL)arg7;
@end

@interface NSView (DVTNSViewExtras)
- (void)dvt_sortSubviewsUsingComparator:(CDUnknownBlockType)arg1;
- (struct CGSize)currentEventOffsetFromEvent:(id)arg1;
- (BOOL)_dvt_dragShouldBeginFromMouseDown:(id)arg1 withExpiration:(id)arg2 xHysteresis:(float)arg3 yHysteresis:(float)arg4;
- (struct CGSize)roundSizeInWindowCoordinates:(struct CGSize)arg1;
@end

@interface NSWindow (DVTNSWindowExtras)
+ (BOOL)_dvt_shouldZoomOnDoubleClick;
- (id)dvt_toolbarBottomEdgeLowerColor;
- (id)dvt_toolbarBottomEdgeUpperColor;
- (id)dvt_contentInsetColor;
- (id)dvt_contentSeparatorColor;
- (id)dvt_imageForRect:(struct CGRect)arg1;
- (BOOL)_dvt_hasActiveAppearanceIgnoringKeyFocus;
- (BOOL)dvt_makeNonDeferred;
- (struct CGImage *)_dvt_createCGImageForRect:(struct CGRect)arg1 excludingChildWindows:(id)arg2;
- (struct CGPoint)dvt_convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)dvt_convertPointToScreen:(struct CGPoint)arg1;
@end

@interface DVTDeviceLocator (KitAdditions)
- (void)beginDeviceCreationAssistantWithWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@end

@interface NSSplitView (DVTNSSplitViewAdditions) <DVTDelegateValidator>
- (void)dvt_validateDelegate;
- (void)_dvt_setDelegate:(id)arg1;
- (void)_dvt_mouseDown:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface CATransaction (DVTCATransactionAdditions)
+ (void)dvt_preserveTransactionPropertyStateDuring:(CDUnknownBlockType)arg1;
@end

@interface NSTimer (DVTNSTimerAdditions)
+ (id)dvt_scheduledTimerWithTimeInterval:(double)arg1 repeats:(BOOL)arg2 handler:(CDUnknownBlockType)arg3;
@end

@interface NSCursor (DVTSourceTextViewExtras)
+ (id)IBeamCursor;
@end

@interface DVTTextPreferences (DVTSourceTextViewAdditions)
- (void)unregisterObserversWithSourceTextView:(id)arg1 sidebarView:(id)arg2;
- (void)registerObserversWithSourceTextView:(id)arg1 sidebarView:(id)arg2;
@end

@interface DVTSourceCodeSymbolKind (DVTSourceCodeSymbolKindKitAdditions)
@property(readonly, copy) NSImage *largeIcon;
@property(readonly, copy) NSImage *icon;
@property(readonly, copy) NSString *iconPath;
@end

@interface NSNib (DVTNSNibAdditions)
- (id)dvt_instantiateWithOwner:(id)arg1;
@end

@interface NSWindow (DVTNSWindowAdditions)
+ (id)dvt_visibleWindowsFromFrontToBack;
@property(readonly) BOOL dvt_isTitleModeNSWindowTitleModeAlwaysHidden;
- (struct CGPoint)dvt_convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)dvt_convertPointToScreen:(struct CGPoint)arg1;
- (void)dvt_beginSheetModalForWindow:(id)arg1 allowSheetOverSheet:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dvt_beginSheetModalForWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dvt_sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)dvt_registerActivationStateObserver:(id)arg1;
- (id)dvt_windowActivationNotifier;
- (void)dvt_centerOnMainWindowScreen;
- (void)dvt_centerOnMainMenuScreen;
- (void)_dvt_centerOnScreen:(id)arg1;
@property(retain) NSString *dvt_frameAsString;
@property(readonly) BOOL dvt_inFullScreenMode;
@end

@interface NSUndoTextOperation (DVTUndoTextOperation)
+ (id)_uniquedAttributedStringWithAttributedString:(id)arg1;
@property(copy) NSAttributedString *attributedString;
@property(readonly) NSLayoutManager *layoutManager;
@property(readonly) NSUndoManager *undoManager;
@property struct _NSRange replacementRange;
@property struct _NSRange affectedRange;
@end

@interface NSUndoReplaceCharacters (DVTUndoReplaceCharacters)
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)attributedString;
- (void)setAttributedString:(id)arg1;
- (struct _NSRange)replacementRange;
- (void)setReplacementRange:(struct _NSRange)arg1;
@end

@interface NSUndoTyping (DVTUndoTyping)
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)attributedString;
- (void)setAttributedString:(id)arg1;
- (struct _NSRange)replacementRange;
- (void)setReplacementRange:(struct _NSRange)arg1;
@end

@interface NSTextFieldCell (DVTNSTextFieldCellAdditions)
- (id)dvt_baselinesForFrame:(struct CGRect)arg1;
@end

@interface NSColor (DVTNSColorAdditions)
+ (id)dvt_colorFromRGBAString:(id)arg1;
- (id)dvt_colorByMultiplyingSaturation:(double)arg1 andBrightness:(double)arg2;
- (id)dvt_colorByMultiplyingSaturation:(double)arg1;
- (id)dvt_colorByMultiplyingBrightness:(double)arg1;
- (id)dvt_colorByShiftingHue:(double)arg1;
- (id)dvt_complementaryColor;
- (id)dvt_RGBAStringRepresentation;
@end

@interface NSBundle (DVTKitBundleAdditions)
- (id)dvt_instantiateNibNibNamed:(id)arg1 owner:(id)arg2;
@end

@interface NSView (DVTNSViewAdditions)
- (BOOL)dvt_viewShouldDrawActive;
- (void)dvt_invalidateCursorRects;
- (void)dvt_scrollRectToVisible:(struct CGRect)arg1 animated:(BOOL)arg2;
- (void)dvt_viewDidEndLiveAnimation;
- (void)dvt_viewWillBeginLiveAnimation;
- (void)dvt_setFrameHeight:(double)arg1;
- (void)dvt_setFrameWidth:(double)arg1;
- (void)dvt_drawBubbledPlaceholderMessage:(id)arg1;
- (BOOL)dvt_autoscrollWithExternalDragEvent:(id)arg1 animate:(BOOL)arg2;
- (struct CGRect)dvt_convertRectFromScreen:(struct CGRect)arg1;
- (struct CGRect)dvt_convertRectToScreen:(struct CGRect)arg1;
- (struct CGPoint)dvt_convertPointToScreen:(struct CGPoint)arg1;
- (struct CGPoint)dvt_convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)dvt_integralPointInBase:(struct CGPoint)arg1;
- (struct CGRect)dvt_integralRectInBase:(struct CGRect)arg1;

// Remaining properties
@property(nonatomic, getter=isHidden) BOOL hidden;
@end

@interface NSControl (DVTNSControlAdditions)
- (double)dvt_alphaDrawingValueBasedOnState;

// Remaining properties
@property(nonatomic, getter=isEnabled) BOOL enabled;
@end

@interface NSTableView (DVTNSTableViewAdditions)
- (void)dvt_scrollRowToVisibleCentered:(long long)arg1;
- (BOOL)dvt_autoscrollWithExternalDragEvent:(id)arg1 animate:(BOOL)arg2;
@end

@interface NSTextView (DVTNSTextViewAdditions)
- (void)dvt_changeZoomFocusToRange:(struct _NSRange)arg1;
- (struct CGRect)dvt_frameForRange:(struct _NSRange)arg1;
@end

@interface NSValue (DVTAdditions)
+ (id)dvt_valueWithEdgeInsets:(struct NSEdgeInsets)arg1;
- (struct NSEdgeInsets)dvt_edgeInsetsValue;
@end

@interface NSTreeNode (DVTTreeNodeUtilities)
- (id)dvt_representedObjectLineage;
@end

@interface NSEvent (DVTRolloverTrackingButtonAdditions)
+ (BOOL)mouseButtonIsDown;
@end

@interface DVTProcessInformation (DVTProcessInformationAdditions)
@property(readonly) BOOL isApplication;
@property(readonly) NSImage *applicationImage;
@end

@interface NSString (plistAdditions)
- (id)plistStringWithIndent:(id)arg1;
- (id)plistString;
@end

@interface NSAffineTransform (DVTNSAffineTransformAdditions)
- (struct CGRect)dvt_transformRect:(struct CGRect)arg1;
@end

@interface NSAttributedString (FindPatternAdditions)
+ (id)dvt_attributedStringFromPasteboardPropertyList:(id)arg1 inField:(id)arg2;
- (id)dvt_stringByDeletingPatterns;
- (id)dvt_replacementExpression;
- (id)dvt_regularExpressionWithRange:(struct _NSRange)arg1 escapingStrings:(BOOL)arg2 usingBackreferences:(BOOL)arg3;
- (id)dvt_regularExpression;
- (id)dvt_findPatternArrayWithRange:(struct _NSRange)arg1 includingStrings:(BOOL)arg2;
- (id)dvt_findPatternArray;
- (BOOL)dvt_isEqualFindPatternAttributedString:(id)arg1;
- (BOOL)dvt_hasValidFindPattern;
- (BOOL)dvt_hasFindPattern;
- (id)dvt_pasteboardPropertyListFromRange:(struct _NSRange)arg1;
@end

@interface NSMutableAttributedString (FindPatternAdditions)
+ (id)dvt_mutableAttributedStringFromPatternArray:(id)arg1 inField:(id)arg2 excludingPatterns:(BOOL)arg3;
- (void)dvt_replaceFindPatternAttachmentsWithAttributes:(id)arg1 negationAttributes:(id)arg2;
- (void)dvt_setFindPatternAttachmentFont:(id)arg1;
@end

@interface NSAttributedString (DVTNSAttributedStringAdditions)
- (id)dvt_attributedStringByApplyingFallbackAttributes:(id)arg1;
- (struct CGSize)dvt_sizeConstrainedToWidth:(double)arg1;
- (void)dvt_drawInRectByVerticallyCenteringAndTruncating:(struct CGRect)arg1;
- (id)dvt_stringByTruncatingMultilineTextToFitSize:(struct CGSize)arg1;
- (unsigned long long)dvt_nextSubwordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (unsigned long long)dvt_nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
@end

@interface NSMutableAttributedString (DVTNSAttributedStringAdditions)
- (void)dvt_urlifyAttributedString;
@end

@interface NSFontDescriptor (DVTNSFontDescriptorAdditions)
+ (id)fontDescriptorWithFamilyName:(id)arg1;
@end

@interface NSData (PlistDataExtensions)
- (id)stringValue;
@end

@interface NSDate (PlistDateExtensions)
- (id)stringValue;
@end

@interface NSParagraphStyle (DVTNSParagraphStyleAdditions)
+ (id)dvt_paragraphStyleWithAlignment:(unsigned long long)arg1 andLineBreakMode:(unsigned long long)arg2;
+ (id)dvt_paragraphStyleWithAlignment:(unsigned long long)arg1;
+ (id)dvt_paragraphStyleWithLineBreakMode:(unsigned long long)arg1;
@end

@interface NSString (DVTSizeAdditions)
- (struct CGSize)dvt_sizeWithAttributes:(id)arg1 maxWidth:(double)arg2;
@end

@interface NSTreeNode (DVTNSTreeControllerAdditions)
- (void)_addIndexPathsOfObjects:(id)arg1 toArray:(id)arg2;
@end

@interface NSTreeController (DVTNSTreeControllerAdditions)
- (id)dvt_indexPathsForObjects:(id)arg1;
@end

@interface NSScreen (DVTNSScreenAdditions)
+ (double)dvt_maximumBackingScaleFactor;
+ (id)dvt_backingScaleFactors;
+ (id)dvt_commonScaleFactors;
+ (struct CGPoint)dvt_coreGraphicsScreenPointForAppKitScreenPoint:(struct CGPoint)arg1;
+ (id)dvt_screenContainingPoint:(struct CGPoint)arg1;
- (struct CGRect)dvt_visibleFrame;
@end

@interface NSGraphicsContext (DVTNSGraphicsContextAdditions)
+ (void)dvt_drawInBitmap:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)dvt_drawInContext:(struct CGContext *)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)dvt_temporarilyMakeCurrentAndDoOperationPerservingState:(CDUnknownBlockType)arg1;
- (void)dvt_drawBlockByPreservingState:(CDUnknownBlockType)arg1;
@end

@interface NSATSTypesetter (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSColorSpace (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSFont (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSFontManager (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSFontPanel (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSParagraphStyle (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSTextTab (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface NSTextView (DVTARCAdditions)
- (BOOL)dvt_requiresWeakIntercession;
@end

@interface CALayer (DVTCALayerAdditions)
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)addSublayerAndUpdateContentsScale:(id)arg1;
- (void)recursivelyUpdateScaleFactor;
- (void)recursivelyUpdateContentsScale:(double)arg1 fromWindow:(id)arg2;
- (void)dvt_setPositionAndMakePixelAligned:(struct CGPoint)arg1;
- (struct CGRect)convertRectToScreen:(struct CGRect)arg1;
- (struct CGRect)convertRectFromScreen:(struct CGRect)arg1;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
- (struct CGPoint)convertPointToScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
@property(readonly) NSArray *sublayersExcludingHiddenLayers;
@property(readonly) NSView *view;
@property(readonly) NSWindow *window;
@property(readonly) CALayer *rootLayer;
@end

@interface CATextLayer (DVTCALayerAdditions)
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSArray (DVTDevicesWindowAdditions)
- (id)dvt_firstNonWirelessDeviceObject;
- (id)dvt_firstDeviceObject;
@end

@interface NSOutlineView (DVTAdditions)
- (void)dvt_enumerateExpandedItemsUsingBlock:(CDUnknownBlockType)arg1;
@end

